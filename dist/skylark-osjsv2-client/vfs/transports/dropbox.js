/**
 * skylark-osjsv2-client - A version of osjs-client that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-osjsv2-client/
 * @license MIT
 */
define(["../transport","../../utils/preloader","../../core/config","../file","../../utils/misc","../../core/locales","../../utils/fs"],function(t,e,r,i,a,n,o){"use strict";return class extends t{constructor(){super(...arguments),this.loaded=!1,this.authed=!1,this.dbx=null}_loadDependencies(){return this.loaded?Promise.resolve(!0):new Promise((t,r)=>{e.preload(["https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js"]).then(()=>window.Dropbox?(this.loaded=!0,t(!0)):r(new Error(n._("ERR_DROPBOX_API")))).catch(t=>(this.loaded=!0,r(t)))})}_createClient(t){return this.authed?Promise.resolve(!0):new Promise((e,r)=>{let i,o;this.dbx=new window.Dropbox({clientId:t});const s=window.location.href.replace(/\/?$/,"/")+"dropbox-oauth.html";window.__osjs__dropbox_callback__=(t=>{if(clearTimeout(o),i)return;const s=a.urlparams(t,!0);s.access_token?(this.authed=!0,this.dbx=new window.Dropbox({accessToken:s.access_token}),e(!0)):r(new Error(n._("ERR_DROPBOX_AUTH")))});const h=this.dbx.getAuthenticationUrl(s);o=setTimeout(()=>{i=!0,r(new Error(n._("ERR_DROPBOX_AUTH")))},3e4),window.open(h)})}_init(){const t=r.getConfig("DropboxAPI.ClientKey");return t?new Promise((e,r)=>{this._loadDependencies().then(()=>this._createClient(t).then(e).catch(r)).catch(r)}):Promise.reject(new Error(n._("ERR_DROPBOX_KEY")))}request(t,e,r,i){const a=arguments;return new Promise((t,e)=>{this._init().then(()=>super.request(...a).then(t).catch(t=>"string"!=typeof t&&!(t instanceof Error)&&t.status&&t.response&&t.error?e(new Error(t.error.error_summary)):e(t))).catch(e)})}_createMetadata(t,e){return{id:e.id,filename:e.name,path:o.pathJoin(t,e.path_display),type:"folder"===e[".tag"]?"dir":"file",size:e.size||0}}find(t,e,r,i){const a=o.getPathFromVirtual(t.path);return new Promise((t,r)=>{this.dbx.filesSearch({path:"/"===a?"":a,query:e.query,max_results:100,mode:{".tag":"filename"}}).then(e=>t(e.matches.map(t=>this._createMetadata(i.option("root"),t.metadata)))).catch(r)})}scandir(t,e,r){const i=o.getPathFromVirtual(t.path);let a=[];const n=t=>new Promise((e,o)=>{const s=t?"filesListFolderContinue":"filesListFolder",h=t?{cursor:t}:{path:"/"===i?"":i};this.dbx[s](h).then(t=>{const i=(t.entries||[]).map(t=>this._createMetadata(r.option("root"),t));return a=a.concat(i),t.has_more&&t.cursor?n(t.cursor).then(e).catch(o):e(a)}).catch(o)});return n(null)}read(t,e,r){return new Promise((e,r)=>{this.url(t,{dl:0}).then(t=>{this.dbx.sharingGetSharedLinkFile({url:t}).then(t=>e(t.fileBlob)).catch(r)}).catch(r)})}write(t,e){return new Promise((r,i)=>{this.dbx.filesUpload({path:o.getPathFromVirtual(t.path),mode:{".tag":"overwrite"},contents:e}).then(()=>r(!0)).catch(i)})}copy(t,e){return new Promise((r,i)=>{this.dbx.filesCopy({from_path:o.getPathFromVirtual(t.path),to_path:o.getPathFromVirtual(e.path)}).then(()=>r(!0)).catch(i)})}move(t,e){return new Promise((r,i)=>{this.dbx.filesMove({from_path:o.getPathFromVirtual(t.path),to_path:o.getPathFromVirtual(e.path)}).then(()=>r(!0)).catch(i)})}exists(t){return new Promise((e,r)=>{this.fileinfo(t).then(()=>e(!0)).catch(()=>e(!1))})}fileinfo(t){return this.dbx.filesGetMetadata({path:o.getPathFromVirtual(t.path)})}url(t,e){const r=()=>new Promise((r,i)=>{this.dbx.sharingGetSharedLinks({path:o.getPathFromVirtual(t.path)}).then(t=>{if(t.links.length){const i=t.links.find(t=>"public"===t.visibility[".tag"]),a=void 0===e.dl?1:e.dl;if(i)return r(i.url.replace("dl=0","dl="+String(a)))}return r(!1)}).catch(i)}),i=()=>new Promise((e,r)=>{this.dbx.sharingCreateSharedLinkWithSettings({path:o.getPathFromVirtual(t.path),settings:{requested_visibility:"public"}}).then(t=>e(t.url)).catch(r)});return new Promise((t,e)=>{r().then(r=>r?(console.warn("ALREADY HAS URL",r),t(r)):(console.warn("CREATING NEW URL"),i().then(t).catch(e))).catch(e)})}mkdir(t){return new Promise((e,r)=>{this.dbx.filesCreateFolder({path:o.getPathFromVirtual(t.path)}).then(()=>e(!0)).catch(r)})}upload(t,e){const r=new i({filename:e.name,path:o.pathJoin(t.path,e.name),mime:e.type,size:e.size});return this.write(r,e)}freeSpace(t){return new Promise((t,e)=>{this.dbx.usersGetSpaceUsage().then(e=>{try{if(e.allocation&&void 0!==e.allocation.individual)return t(e.allocation.individual.allocated)}catch(t){console.warn(t)}return t(-1)}).catch(e)})}unlink(t){return new Promise((e,r)=>{this.dbx.filesDelete({path:o.getPathFromVirtual(t.path)}).then(()=>e(!0)).catch(r)})}}});
//# sourceMappingURL=../../sourcemaps/vfs/transports/dropbox.js.map
