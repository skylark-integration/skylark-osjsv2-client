/**
 * skylark-osjsv2-client - A version of osjs-client that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-osjsv2-client/
 * @license MIT
 */
define(["../../utils/dom","../../utils/gui","../../utils/clipboard","../../utils/events","../../utils/keycodes","../element","../../core/locales"],function(e,t,i,r,s,a,n){"use strict";let l=0;function u(a,n){const l=a.getAttribute("data-group"),u=a.getAttribute("data-placeholder"),d="true"===String(a.getAttribute("data-disabled")),c=a.childNodes.length?a.childNodes[0].nodeValue:null;e.$empty(a);const o=document.createElement("textarea"===n?"textarea":"input"),p={value:null,type:n,tabindex:-1,placeholder:u,disabled:d?"disabled":null,name:l?l+"[]":null};["autocomplete","autocorrect","autocapitalize","spellcheck"].forEach(e=>{p[e]=a.getAttribute("data-"+e)||"false"}),function(){["range","slider"].indexOf(n)>=0?(p.min=a.getAttribute("data-min"),p.max=a.getAttribute("data-max"),p.step=a.getAttribute("data-step")):["radio","checkbox"].indexOf(n)>=0?"true"===a.getAttribute("data-value")&&(p.checked="checked"):["text","password","textarea"].indexOf(n)>=0&&(p.value=c||""),Object.keys(p).forEach(e=>{null!==p[e]&&("value"===e?o.value=p[e]:o.setAttribute(e,p[e]))}),"text"!==n&&"password"!==n&&"textarea"!==n||r.$bind(o,"keydown",e=>{e.keyCode===s.ENTER?o.dispatchEvent(new CustomEvent("_enter",{detail:o.value})):e.keyCode===s.C&&e.ctrlKey&&i.setClipboard(o.value),"textarea"===n&&e.keyCode===s.TAB&&(e.preventDefault(),o.value+="\t")},!1),t.createInputLabel(a,n,o);const e={TEXTAREA:()=>"textbox",INPUT:e=>({range:"slider",text:"textbox",password:"textbox"})[e.type]||e.type};e[a.tagName]&&o.setAttribute("role",e[a.tagName](o)),o.setAttribute("aria-label",a.getAttribute("title")||""),a.setAttribute("role","region"),a.setAttribute("aria-disabled",String(d)),r.$bind(o,"change",e=>{let t=o.value;"radio"!==n&&"checkbox"!==n||(t=o.checked),o.dispatchEvent(new CustomEvent("_change",{detail:t}))},!1)}()}function d(t,i,r){!0!==t?(i.removeAttribute("checked"),e.$removeClass(r,"gui-active"),r.innerHTML="0"):(i.setAttribute("checked","checked"),e.$addClass(r,"gui-active"),r.innerHTML="1")}class c extends a{on(e,t,i){"enter"===e?e="_enter":"change"===e&&(e="_change");const s=this.$element.querySelector("textarea, input, select");return r.$bind(s,e,t.bind(this),i),this}}class o extends c{add(e){return function(e,t){const i=e.querySelector("select");t instanceof Array||(t=[t]),t.forEach(e=>{const t=document.createElement("option");t.setAttribute("role","option"),t.setAttribute("value",e.value),t.appendChild(document.createTextNode(e.label)),i.appendChild(t)})}(this.$element,e),this}remove(t){var i,r;return i=this.$element,r=t,i.querySelector("select").querySelectorAll("option").forEach(t=>String(t.value)!==String(r)||(e.$remove(t),!1)),this}clear(){const t=this.$element.querySelector("select");return e.$empty(t),this}build(){const e=this.$element;return function(e,t){const i=null!==e.getAttribute("data-disabled"),s=e.getAttribute("data-selected"),a=document.createElement("select");t&&(a.setAttribute("size",e.getAttribute("data-size")||2),t="true"===e.getAttribute("data-multiple")),t&&a.setAttribute("multiple","multiple"),i&&a.setAttribute("disabled","disabled"),null!==s&&(a.selectedIndex=s),e.querySelectorAll("gui-select-option").forEach(e=>{const t=e.getAttribute("data-value")||"",i=e.childNodes.length?e.childNodes[0].nodeValue:"",r=document.createElement("option");r.setAttribute("role","option"),r.setAttribute("value",t),r.appendChild(document.createTextNode(i)),e.getAttribute("selected")&&r.setAttribute("selected","selected"),a.appendChild(r),e.parentNode.removeChild(e)}),r.$bind(a,"change",e=>{a.dispatchEvent(new CustomEvent("_change",{detail:a.value}))},!1),a.setAttribute("role","listbox"),a.setAttribute("aria-label",e.getAttribute("title")||""),e.setAttribute("aria-disabled",String(i)),e.setAttribute("role","region"),e.appendChild(a)}(e,"gui-select-list"===e.tagName.toLowerCase()),this}}return{GUILabel:class extends a{static register(){return super.register({tagName:"gui-label"},this)}set(t,i,r){const s=this.$element;if("value"===t||"label"===t){s.setAttribute("data-label",String(i));const t=s.querySelector("label");return e.$empty(t),r?t.innerHTML=i:t.appendChild(document.createTextNode(i)),this}return super.set(...arguments)}build(){const e=this.$element,i=t.getValueLabel(e,!0),r=document.createElement("label");return r.appendChild(document.createTextNode(i)),e.setAttribute("role","heading"),e.setAttribute("data-label",String(i)),e.appendChild(r),this}},GUITextarea:class extends c{static register(){return super.register({tagName:"gui-textarea",type:"input"},this)}build(){return u(this.$element,"textarea"),this}set(e,t){const i=this.$element;return i&&"scrollTop"===e?("number"!=typeof t&&(t=i.firstChild.scrollHeight),i.firstChild.scrollTop=t,this):super.set(...arguments)}},GUIText:class extends c{static register(){return super.register({tagName:"gui-text",type:"input"},this)}build(){return u(this.$element,"text"),this}},GUIPassword:class extends c{static register(){return super.register({tagName:"gui-password",type:"input"},this)}build(){return u(this.$element,"password"),this}},GUIFileUpload:class extends c{static register(){return super.register({tagName:"gui-file-upload",type:"input"},this)}build(){const e=document.createElement("input");return e.setAttribute("role","button"),e.setAttribute("type","file"),e.onchange=(t=>{e.dispatchEvent(new CustomEvent("_change",{detail:e.files[0]}))}),this.$element.appendChild(e),this}},GUIRadio:class extends c{static register(){return super.register({tagName:"gui-radio",type:"input"},this)}build(){return u(this.$element,"radio"),this}},GUICheckbox:class extends c{static register(){return super.register({tagName:"gui-checkbox",type:"input"},this)}build(){return u(this.$element,"checkbox"),this}},GUISwitch:class extends c{static register(){return super.register({tagName:"gui-switch",type:"input"},this)}set(e,t){return"value"===e?(d(t,this.$element.querySelector("input"),this.$element.querySelector("button")),this):super.set(...arguments)}build(){const e=this.$element,i=document.createElement("input");i.type="checkbox",e.appendChild(i);const s=document.createElement("div"),a=document.createElement("button");function n(e){let t=!1;d(t=void 0===e?!(t=!!i.checked):e,i,a)}return s.appendChild(a),t.createInputLabel(e,"switch",s),r.$bind(s,"pointerup",t=>{t.preventDefault(),null!==e.getAttribute("data-disabled")||n()},!1),n(!1),this}},GUIButton:class extends a{static register(){return super.register({tagName:"gui-button",type:"input"},this)}set(t,i,r){if("value"===t||"label"===t){const t=this.$element.querySelector("button");return e.$empty(t),r?t.innerHTML=i:t.appendChild(document.createTextNode(i)),t.setAttribute("aria-label",i),this}return super.set(...arguments)}create(e){const i=e.label;e.label&&delete e.label;const r=t.createElement("gui-button",e);return i&&r.appendChild(document.createTextNode(i)),r}on(e,t,i){const s=this.$element.querySelector("button");return r.$bind(s,e,t.bind(this),i),this}build(){const i=this.$element,s=i.getAttribute("data-icon"),a=null!==i.getAttribute("data-disabled"),u=i.getAttribute("data-group"),d=t.getValueLabel(i),c=document.createElement("button");var o;return a&&c.setAttribute("disabled","disabled"),d&&e.$addClass(i,"gui-has-label"),c.appendChild(document.createTextNode(d)),c.setAttribute("aria-label",d),function(){if(s&&"null"!==s){const t=n._(i.getAttribute("data-tooltip")||""),r=document.createElement("img");r.src=s,r.alt=t,r.title=t,c.firstChild?c.insertBefore(r,c.firstChild):c.appendChild(r),e.$addClass(i,"gui-has-image")}}(),(o=u)&&(c.setAttribute("name",o+"["+l+"]"),r.$bind(c,"pointerup",()=>{let t=i;for(;t.parentNode&&"application-window-content"!==t.tagName.toLowerCase();)t=t.parentNode;e.$addClass(c,"gui-active"),t.querySelectorAll('gui-button[data-group="'+o+'"] > button').forEach(t=>{t.name!==c.name&&e.$removeClass(t,"gui-active")})})),l++,i.setAttribute("role","navigation"),i.appendChild(c),this}},GUISelect:class extends o{static register(){return super.register({tagName:"gui-select",type:"input"},this)}},GUISelectList:class extends o{static register(){return super.register({tagName:"gui-select-list",type:"input"},this)}},GUISlider:class extends c{static register(){return super.register({tagName:"gui-slider",type:"input"},this)}get(e){const t=a.getProperty(this.$element,e);return"value"===e?parseInt(t,10):t}build(){return u(this.$element,"range"),this}},GUIInputModal:class extends a{static register(){return super.register({tagName:"gui-input-modal",type:"input"},this)}on(e,t,i){return"open"===e&&(e="_open"),r.$bind(this.$element,e,t.bind(this),i),this}get(e){return"value"===e?this.$element.querySelector("input").value:super.get(...arguments)}set(e,t){if("value"===e){const e=this.$element.querySelector("input");return e.removeAttribute("disabled"),e.value=t,e.setAttribute("disabled","disabled"),e.setAttribute("aria-disabled","true"),this}return super.set(...arguments)}build(){const e=this.$element,t=document.createElement("div"),i=document.createElement("input");i.type="text",i.setAttribute("disabled","disabled");const s=document.createElement("button");return s.innerHTML="...",r.$bind(s,"pointerup",t=>{e.dispatchEvent(new CustomEvent("_open",{detail:i.value}))},!1),t.appendChild(i),t.appendChild(s),e.appendChild(t),this}}}});
//# sourceMappingURL=../../sourcemaps/gui/elements/inputs.js.map
