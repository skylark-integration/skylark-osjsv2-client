/**
 * skylark-osjsv2-client - A version of osjs-client that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-osjsv2-client/
 * @license MIT
 */
define(["../../utils/gui","../../utils/events","../element"],function(e,t,r){"use strict";function i(e,t){return void 0===t&&(t=!(t="false"!==e.getAttribute("data-expanded"))),e.setAttribute("aria-expanded",String(t)),e.setAttribute("data-expanded",String(t)),t}return{GUIPanedView:class extends r{static register(){return super.register({tagName:"gui-paned-view",type:"container",allowedChildren:["gui-paned-view-container"]},this)}on(e,r,i){const n=this.$element;return"resize"===e&&(e="_"+e),t.$bind(n,e,r.bind(this),i),this}build(){const t=this.$element,r=t.getAttribute("data-orientation")||"horizontal";return t.querySelectorAll("gui-paned-view-container").forEach((i,n)=>{if(n%2){const s=document.createElement("gui-paned-view-handle");s.setAttribute("role","separator"),i.parentNode.insertBefore(s,i),function(i,n,s){const a=i.previousElementSibling;if(!a)return;let o=a.offsetWidth,l=a.offsetHeight,d=16,u=Number.MAX_VALUE;e.createDrag(i,e=>{if(o=a.offsetWidth,l=a.offsetHeight,d=parseInt(s.getAttribute("data-min-size"),10)||d,!parseInt(s.getAttribute("data-max-size"),10)){const e=i.parentNode["horizontal"===r?"offsetWidth":"offsetHeight"],t=i.parentNode.querySelectorAll("gui-paned-view-container").length,n=i.parentNode.querySelectorAll("gui-paned-view-handle").length;u=e-16*t-8*n}},(e,t)=>{const i=o+t.x,n=l+t.y;let s;"horizontal"===r?!isNaN(i)&&i>0&&i>=d&&i<=u&&(s=i.toString()+"px"):!isNaN(n)&&n>0&&n>=d&&n<=u&&(s=n.toString()+"px"),s&&(a.style.webkitFlexBasis=s,a.style.mozFflexBasis=s,a.style.msFflexBasis=s,a.style.oFlexBasis=s,a.style.flexBasis=s)},e=>{t.dispatchEvent(new CustomEvent("_resize",{detail:{index:n}}))})}(s,n,i)}}),this}},GUIPanedViewContainer:class extends r{static register(){return super.register({tagName:"gui-paned-view-container",type:"container",allowedParents:["gui-paned-view"]},this)}build(){return e.setFlexbox(this.$element),this}},GUIButtonBar:class extends r{static register(){return super.register({tagName:"gui-button-bar",type:"container"},this)}build(){return this.$element.setAttribute("role","toolbar"),this}},GUIToolBar:class extends r{static register(){return super.register({tagName:"gui-toolbar",type:"container"},this)}build(){return this.$element.setAttribute("role","toolbar"),this}},GUIGrid:class extends r{static register(){return super.register({tagName:"gui-grid",type:"container",allowedChildren:["gui-grid-row"]},this)}build(){const e=this.$element.querySelectorAll("gui-grid-row"),t=100/e.length;return e.forEach(e=>{e.style.height=String(t)+"%"}),this}},GUIGridRow:class extends r{static register(){return super.register({tagName:"gui-grid-row",type:"container",allowedChildren:["gui-grid-entry"],allowedParents:["gui-grid-row"]},this)}},GUIGridEntry:class extends r{static register(){return super.register({tagName:"gui-grid-entry",type:"container",allowedParents:["gui-grid-row"]},this)}},GUIVBox:class extends r{static register(){return super.register({tagName:"gui-vbox",type:"container",allowedChildren:["gui-vbox-container"]},this)}},GUIVBoxContainer:class extends r{static register(){return super.register({tagName:"gui-vbox-container",type:"container",allowedParents:["gui-vbox"]},this)}build(){return e.setFlexbox(this.$element),this}},GUIHBox:class extends r{static register(){return super.register({tagName:"gui-hbox",type:"container",allowedChildren:["gui-hbox-container"]},this)}},GUIHBoxContainer:class extends r{static register(){return super.register({tagName:"gui-hbox-container",type:"container",allowedParents:["gui-hbox"]},this)}build(){return e.setFlexbox(this.$element),this}},GUIExpander:class extends r{static register(){return super.register({tagName:"gui-expander",type:"container"},this)}set(e,t){return"expanded"===e?i(this.$element,!0===t):super.set(...arguments)}on(e,r,i){return-1!==["change"].indexOf(e)&&(e="_"+e),t.$bind(this.$element,e,r.bind(this),i),this}build(){const e=this.$element,r=e.getAttribute("data-label")||"",n=document.createElement("gui-expander-label");return t.$bind(n,"pointerdown",t=>{e.dispatchEvent(new CustomEvent("_change",{detail:{expanded:i(e)}}))},!1),n.appendChild(document.createTextNode(r)),e.setAttribute("role","toolbar"),e.setAttribute("aria-expanded","true"),e.setAttribute("data-expanded","true"),e.children.length?e.insertBefore(n,e.children[0]):e.appendChild(n),this}}}});
//# sourceMappingURL=../../sourcemaps/gui/elements/containers.js.map
