/**
 * skylark-osjsv2-client - A version of osjs-client that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-osjsv2-client/
 * @license MIT
 */
define(["../utils/gui","../utils/dom","../utils/events","../utils/clipboard","../utils/keycodes","../vfs/file","./element"],function(e,t,n,i,r,l,s){"use strict";const a={"gui-list-view":"gui-list-view-row"};function o(e){"string"!=typeof e&&(e=e.tagName.toLowerCase());let t=a[e];return t||(t=e+"-entry"),t}function c(e,t){const n=e.target,i=n.tagName.toLowerCase();return i.match(/(view|textarea|body)$/)?null:"gui-list-view-column"!==i||t?n:n.parentNode}function u(e,t){return(t=t||c(e))&&"GUI-LIST-VIEW-HEAD"===t.parentNode.tagName}function d(e,n,i,r,l,s,a){if(s=s||n.parentNode,u(null,n))return a?[]:null;if(-1===i)s.querySelectorAll(o(s)).forEach(function(e){t.$removeClass(e,"gui-active")}),l=[];else{a&&e.shiftKey||(s.querySelectorAll(r).forEach(function(e){t.$removeClass(e,"gui-active")}),l=[]);const o=l.indexOf(i);o>=0?(l.splice(o,1),t.$removeClass(n,"gui-active")):(l.push(i),t.$addClass(n,"gui-active"))}return l.sort(function(e,t){return e-t}),l}function f(e){const t=e.getAttribute("data-value");try{return JSON.parse(t)}catch(e){}return t}function h(e,t,n,i){const r=e.getAttribute("data-value");if(!(n||t!==i&&t!==r))return e;try{const i=JSON.parse(r);if("object"==typeof i[n]?i[n]===t:String(i[n])===String(t))return e}catch(e){}return!1}return class a extends s{clear(e){const i=this.$element;return arguments.length||(e=i),i.querySelectorAll(o(i)).forEach(e=>{n.$unbind(e)}),t.$empty(e),e.scrollTop=0,i._selected=[],this}add(e,t){return t=t||function(){},e instanceof Array||(e=[e]),e.forEach(e=>{t(this,e)}),this}patch(e,n,i,r,l){let s=!1;e instanceof Array||(e=[e],s=!0);let o={};return i.querySelectorAll(n).forEach(e=>{const t=e.getAttribute("data-id");null!==t&&(o[t]=e)}),e.forEach(e=>{let s;if(void 0!==e.id&&null!==e.id){o[e.id]&&(s=o[e.id],delete o[e.id]);const c=r(this,e);c&&(s?(t.$hasClass(s,"gui-active")&&t.$addClass(c,"gui-active"),i.insertBefore(c,s),a.prototype.remove.call(this,null,n,s,i)):i.appendChild(c),l(this,c))}}),s||Object.keys(o).forEach(e=>{a.prototype.remove.call(this,null,n,o[e])}),o={},this.updateActiveSelection(n),this}remove(e,n,i,r){if(e=e||[],r=r||this.$element,i)t.$remove(i);else if(void 0===e[1]&&"number"==typeof e[0])t.$remove(r.querySelectorAll(n)[e[0]]);else{const i=e[0],l="data-"+(e[1]||"id")+'="'+i+'"';r.querySelectorAll(n+"["+l+"]").forEach(t.$remove)}return this.updateActiveSelection(n),this}updateActiveSelection(e){const n=[];this.$element.querySelectorAll(e+".gui-active").forEach(e=>{n.push(t.$index(e))}),this.$element._active=n}scrollIntoView(e){const n=this.$element,i=t.$position(e,n);let r=0;if("gui-list-view"===n.tagName.toLowerCase()){const e=n.querySelector("gui-list-view-head");e&&(r=e.offsetHeight)}const l=n.scrollTop+n.offsetHeight-r,s=n.scrollTop+r,a=i.top-r;return null!==i&&(a>l||a<s)&&(n.scrollTop=a,!0)}bindEntryEvents(t,n){const i=this.$element;i.dispatchEvent(new CustomEvent("_render",{detail:{element:t,data:e.getViewNodeValue(t)}})),"true"===i.getAttribute("data-draggable")&&function(){let n=t.getAttribute("data-value");if(null!==n)try{n=JSON.parse(n)}catch(e){}let r=t.getAttribute("data-draggable-source");null===r&&null!==(r=e.getWindowId(i))&&(r={wid:r}),e.createDraggable(t,{type:i.getAttribute("data-draggable-type")||t.getAttribute("data-draggable-type"),source:r,data:n});let l=t.getAttribute("data-tooltip");l&&!t.getAttribute("title")&&t.setAttribute("title",l)}()}getSelected(n){const i=[];return n.forEach((n,r)=>{t.$hasClass(n,"gui-active")&&i.push({index:r,data:e.getViewNodeValue(n)})}),i}getEntry(e,t,n,i){if(t){let r=null;return e.forEach((e,i)=>{!r&&h(e,t,n,i)&&(r=e)}),i&&r?f(r):r}if(i&&e)try{return e.map(e=>f(e))}catch(e){console.warn(e)}return e}setSelected(e,n,i,r,l){const s=[],a=this.$element;let o=!1;"object"==typeof l&&(o=!0===l.scroll);const c=(e,n)=>{s.push(n),t.$addClass(e,"gui-active"),o&&this.scrollIntoView(e)};n.forEach((e,n)=>{t.$removeClass(e,"gui-active"),h(e,i,r,n)&&c(e,n)}),a._selected=s}build(e){const s=this.$element;s._selected=[],s.scrollTop=0,t.$addClass(s,"gui-data-view");const a="true"===s.getAttribute("data-single-click");let f,h=!1,g=s.getAttribute("data-multiple");g=null===g||"true"===g;const v=e=>{if(f||h)return!1;const n=c(e);if(!n)return!1;const i=n.tagName.toLowerCase();if(u(null,n)){const t=c(e,!0);if(t){let e=t.getAttribute("data-sortby");if(e){let n=t.getAttribute("data-sortdir"),i="desc"===n;n="asc"===n?"desc":i?null:"asc",e=i?null:e,t.setAttribute("data-sortdir",n),s.setAttribute("data-sortby",e||""),s.setAttribute("data-sortdir",n||""),s.dispatchEvent(new CustomEvent("_sort",{detail:{sortDir:n,sortBy:e}}))}}return!1}if("gui-tree-view-expander"===i)return this.expand({ev:e,entry:n.parentNode}),!0;const r=t.$index(n);return s._selected=d(e,n,r,i,s._selected,s,g),s.dispatchEvent(new CustomEvent("_select",{detail:{entries:this.values()}})),!0},p=e=>{if(!f&&!u(e)){if(a){if(!1===v(e))return}else if(!c(e))return;s.dispatchEvent(new CustomEvent("_activate",{detail:{entries:this.values()}}))}},m=e=>{u(e)||(v(e),s.dispatchEvent(new CustomEvent("_contextmenu",{detail:{entries:this.values(),x:e.clientX,y:e.clientY}})))};if(!s.querySelector("textarea.gui-focus-element")&&!s.getAttribute("no-selection")){const e=document.createElement("textarea");e.setAttribute("aria-label",""),e.setAttribute("aria-hidden","true"),e.setAttribute("readonly","true"),e.className="gui-focus-element",n.$bind(e,"focus",e=>{e.preventDefault(),t.$addClass(s,"gui-element-focused")}),n.$bind(e,"blur",e=>{e.preventDefault(),t.$removeClass(s,"gui-element-focused")}),n.$bind(e,"keydown",e=>{e.preventDefault(),function(e,t,n){const s={},a=n.keyCode,c=t.tagName.toLowerCase(),u=o(c),f=t.querySelector(c+"-body"),h=f.querySelectorAll(u),g=h.length;if(!g)return;if(a===r.ENTER)return void t.dispatchEvent(new CustomEvent("_activate",{detail:{entries:e.values()}}));s[r.C]=function(t){if(t.ctrlKey){const t=e.values();if(t&&t.length){const e=[];t.forEach(function(t){t&&t.data&&e.push(new l(t.data.path,t.data.mime))}),i.setClipboard(e)}}};const v=t._selected.concat()||[],p=v.length?v[0]:0,m=v.length>1?v[v.length-1]:p;let b=0;function y(){const i=h[b];i&&(t._selected=d(n,i,b,u,v,f,n.shiftKey),e.scrollIntoView(i))}function $(){let e=0,t=-1;return h.forEach(function(n){return-1===t&&(t=n.offsetTop),t===n.offsetTop&&(t=n.offsetTop,e++,!0)}),e}!function(){function e(){b=Math.min(m+1,g),y()}function t(){b=Math.max(0,p-1),y()}"gui-tree-view"===c||"gui-list-view"===c?(s[r.UP]=t,s[r.DOWN]=e):(s[r.UP]=function(){b=Math.max(0,p-$()),y()},s[r.DOWN]=function(){b=Math.max(m,m+$()),y()},s[r.LEFT]=t,s[r.RIGHT]=e),s[a]&&s[a](n)}()}(this,s,e)}),n.$bind(e,"keypress",e=>{e.preventDefault()}),n.$bind(s,"pointerdown,touchstart",e=>{f=!1;const t=e.target;h=t&&"GUI-LIST-VIEW-COLUMN-RESIZER"===t.tagName},!0),n.$bind(s,"touchmove",e=>{f=!0},!0),a?n.$bind(s,"click",p,!0):(n.$bind(s,"click",v,!0),n.$bind(s,"dblclick",p,!0)),n.$bind(s,"contextmenu",e=>(e.preventDefault(),m(e),!1),!0),this.on("select",n=>{if(t.$hasClass(s,"gui-element-focused"))return;const i=s.scrollTop;e.focus(),s.scrollTop=i,setTimeout(()=>{s.scrollTop=i},2)},!0),s.appendChild(e)}}focus(){try{this.$element.querySelector(".gui-focus-element").focus()}catch(e){console.warn(e,e.stack)}}blur(){try{this.$element.querySelector(".gui-focus-element").blur()}catch(e){console.warn(e,e.stack)}}values(){return[]}on(e,t,i){return-1!==["activate","select","expand","contextmenu","render","drop","sort"].indexOf(e)&&(e="_"+e),n.$bind(this.$element,e,t.bind(this),i),this}}});
//# sourceMappingURL=../sourcemaps/gui/dataview.js.map
