/**
 * skylark-osjsv2-client - A version of osjs-client that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-osjsv2-client/
 * @license MIT
 */
define(["../utils/dom","../utils/keycodes","./window","./application","./window-manager","../gui/scheme","./locales","../dialogs.html"],function(e,t,o,s,i,n,l,c){"use strict";return class extends o{constructor(e,t,o,s){if(t=t||{},o=o||{},"function"!=typeof(s=s||function(){}))throw new TypeError("DialogWindow expects a callback Function, gave: "+typeof s);console.info("DialogWindow::construct()",e,t,o),super(e,t),this._properties.gravity="center",this._properties.allow_resize=!1,this._properties.allow_minimize=!1,this._properties.allow_maximize=!1,this._properties.allow_windowlist=!1,this._properties.allow_session=!1,this._state.ontop=!0,this._tag="DialogWindow",o.scheme&&o.scheme instanceof n&&(this.scheme=o.scheme,delete o.scheme),this.args=o,this.className=e,this.buttonClicked=!1,this.closeCallback=((e,t,o)=>{this._destroyed||(this.buttonClicked=!0,s.call(this,e,t,o),this._close())})}destroy(){return this.scheme&&(this.scheme=this.scheme.destroy()),super.destroy(...arguments)}init(){const t=super.init(...arguments);t.setAttribute("role","dialog");const o=this.className.replace(/Dialog$/,""),s=["ButtonCancel","ButtonNo"],i={ButtonOK:"ok",ButtonCancel:"cancel",ButtonYes:"yes",ButtonNo:"no"};return this.scheme?this.scheme.render(this,o,t,"application-dialog",t=>{t.querySelectorAll("gui-label").forEach(t=>{if(t.childNodes.length&&3===t.childNodes[0].nodeType&&t.childNodes[0].nodeValue){const o=t.childNodes[0].nodeValue;e.$empty(t),t.appendChild(document.createTextNode(l._(o)))}})}):this._render(o,c),Object.keys(i).filter(e=>this._findDOM(e)).forEach(e=>{const t=this._find(e);t.on("click",t=>{this.onClose(t,i[e])}),s.indexOf(e)>=0&&t.focus()}),e.$addClass(t,"DialogWindow"),t}onClose(e,t){this.closeCallback(e,t,null)}_close(){return this.buttonClicked||this.onClose(null,"cancel",null),super._close(...arguments)}_onKeyEvent(e){super._onKeyEvent(...arguments),e.keyCode===t.ESC&&this.onClose(e,"cancel")}static parseMessage(t){t=e.$escape(t||"").replace(/\*\*(.*)\*\*/g,"<span>$1</span>");let o=document.createElement("div");o.innerHTML=t;const s=document.createDocumentFragment();for(let e=0;e<o.childNodes.length;e++)s.appendChild(o.childNodes[e].cloneNode(!0));return o=null,s}static create(e,t,n,l){n=n||function(){};let c=l=l||{},a=c instanceof o,d=c instanceof s;function r(){if(c){if(a&&c._destroyed)return void console.warn("DialogWindow::create()","INGORED EVENT: Window was destroyed");if(d&&c.__destroyed)return void console.warn("DialogWindow::create()","INGORED EVENT: Process was destroyed")}l.modal&&a&&c._toggleDisabled(!1),n.apply(null,arguments)}!c||a&&d||(c=l.parent,a=c instanceof o,d=c instanceof s);const h="string"==typeof e?new OSjs.Dialogs[e](t,r):e(t,r);if(c)c instanceof o?(h._on("destroy",()=>{c&&c._focus()}),c._addChild(h,!0)):c instanceof s&&c._addWindow(h);else{i.instance.addWindow(h,!0)}return l.modal&&a&&c._toggleDisabled(!0),h._focus(),h}}});
//# sourceMappingURL=../sourcemaps/core/dialog.js.map
