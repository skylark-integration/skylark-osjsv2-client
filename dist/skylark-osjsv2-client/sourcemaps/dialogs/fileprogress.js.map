{"version":3,"sources":["dialogs/fileprogress.js"],"names":["define","DialogWindow","Locales","[object Object]","args","callback","super","title","Object","assign","_","icon","width","height","this","busy","filename","root","init","arguments","message","_find","set","ev","button","closeCallback","p","close","pb","_close","force","_onKeyEvent"],"mappings":";;;;;;;AAAAA,QACI,iBACA,mBACD,SAAUC,EAAcC,GACvB,aACA,qBAAwCD,EACpCE,YAAYC,EAAMC,GAEdC,MAAM,sBACFC,OAFJH,EAAOI,OAAOC,aAAeL,IAEbG,OAASL,EAAQQ,EAAE,6BAC/BC,KAAM,4BACNC,MAAO,IACPC,OAAQ,KACTT,EAAMC,GACTS,KAAKC,OAASX,EAAKY,SAEvBb,OACI,MAAMc,EAAOX,MAAMY,QAAQC,WAI3B,OAHIL,KAAKV,KAAKgB,SACVN,KAAKO,MAAM,WAAWC,IAAI,QAASR,KAAKV,KAAKgB,SAAS,GAEnDH,EAEXd,QAAQoB,EAAIC,GACRV,KAAKW,cAAcF,EAAIC,EAAQ,MAEnCrB,YAAYuB,EAAGC,GAAQ,GACnB,MAAMC,EAAKd,KAAKO,MAAM,YAClBO,GACAA,EAAGN,IAAI,WAAYI,GAEnBC,GAASD,GAAK,KACdZ,KAAKe,QAAO,GAGpB1B,OAAO2B,GACH,SAAKA,GAAShB,KAAKC,OAGZT,MAAMuB,SAEjB1B,YAAYoB,GACHT,KAAKC,MACNT,MAAMyB,eAAeZ","file":"../../dialogs/fileprogress.js","sourcesContent":["define([\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class FileProgressDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('FileProgressDialog', {\n                title: args.title || Locales._('DIALOG_FILEPROGRESS_TITLE'),\n                icon: 'actions/document-send.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n            this.busy = !!args.filename;\n        }\n        init() {\n            const root = super.init(...arguments);\n            if (this.args.message) {\n                this._find('Message').set('value', this.args.message, true);\n            }\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, null);\n        }\n        setProgress(p, close = true) {\n            const pb = this._find('Progress');\n            if (pb) {\n                pb.set('progress', p);\n            }\n            if (close && p >= 100) {\n                this._close(true);\n            }\n        }\n        _close(force) {\n            if (!force && this.busy) {\n                return false;\n            }\n            return super._close();\n        }\n        _onKeyEvent(ev) {\n            if (!this.busy) {\n                super._onKeyEvent(...arguments);\n            }\n        }\n    };\n});"]}