{"version":3,"sources":["dialogs/confirm.js"],"names":["define","DialogWindow","a","[object Object]","args","callback","super","title","Object","assign","buttons","_","icon","width","height","root","init","arguments","msg","parseMessage","this","message","_find","empty","append","buttonMap","yes","no","cancel","hide","forEach","b","indexOf","push"],"mappings":";;;;;;;AAAAA,QACI,iBACA,mBACD,SAAUC,EAAcC,GACvB,aACA,qBAAmCD,EAC/BE,YAAYC,EAAMC,GAQdC,MAAM,iBACFC,OARJH,EAAOI,OAAOC,WACVC,SACI,MACA,KACA,WAELN,IAEaG,OAASL,EAAES,EAAE,wBACzBC,KAAM,6BACNC,MAAO,IACPC,OAAQ,KACTV,EAAMC,GAEbF,OACI,MAAMY,EAAOT,MAAMU,QAAQC,WACrBC,EAAMjB,EAAakB,aAAaC,KAAKhB,KAAKiB,SAChDD,KAAKE,MAAM,WAAWC,QAAQC,OAAON,GACrC,MAAMO,GACFC,IAAK,YACLC,GAAI,WACJC,OAAQ,gBAENC,KAaN,OAXI,MACA,KACA,UACFC,QAAQC,IACFX,KAAKhB,KAAKM,QAAQsB,QAAQD,GAAK,GAC/BF,EAAKI,KAAKF,KAGlBF,EAAKC,QAAQC,IACTX,KAAKE,MAAMG,EAAUM,IAAIF,SAEtBd","file":"../../dialogs/confirm.js","sourcesContent":["define([\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, a) {\n    'use strict';\n    return class ConfirmDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                buttons: [\n                    'yes',\n                    'no',\n                    'cancel'\n                ]\n            }, args);\n            super('ConfirmDialog', {\n                title: args.title || a._('DIALOG_CONFIRM_TITLE'),\n                icon: 'status/dialog-question.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const msg = DialogWindow.parseMessage(this.args.message);\n            this._find('Message').empty().append(msg);\n            const buttonMap = {\n                yes: 'ButtonYes',\n                no: 'ButtonNo',\n                cancel: 'ButtonCancel'\n            };\n            const hide = [];\n            [\n                'yes',\n                'no',\n                'cancel'\n            ].forEach(b => {\n                if (this.args.buttons.indexOf(b) < 0) {\n                    hide.push(b);\n                }\n            });\n            hide.forEach(b => {\n                this._find(buttonMap[b]).hide();\n            });\n            return root;\n        }\n    };\n});"]}