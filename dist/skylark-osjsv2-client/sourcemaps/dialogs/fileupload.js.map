{"version":3,"sources":["dialogs/fileupload.js"],"names":["define","DialogWindow","VFS","Locales","Config","[object Object]","args","callback","Object","assign","dest","getDefaultPath","progress","file","destination","super","title","_","icon","width","height","root","init","arguments","message","this","_find","maxSize","getConfig","set","input","setFile","on","ev","detail","progressDialog","error","msg","OSjs","_close","onClose","fileSize","size","Math","round","toString","desc","name","type","create","filename","mime","button","upload","files","onprogress","lengthComputable","p","loaded","total","setProgress","then","catch","setTimeout","_focus","result","closeCallback"],"mappings":";;;;;;;AAAAA,QACI,iBACA,YACA,kBACA,kBACD,SAAUC,EAAcC,EAAKC,EAASC,GACrC,aACA,qBAAsCH,EAClCI,YAAYC,EAAMC,IACdD,EAAOE,OAAOC,WACVC,KAAMN,EAAOO,iBACbC,YACAC,KAAM,MACPP,IACMQ,cACLR,EAAKI,KAAOJ,EAAKQ,aAEhBR,EAAKI,OACNJ,EAAKI,KAAON,EAAOO,kBAEvBI,MAAM,oBACFC,MAAOV,EAAKU,OAASb,EAAQc,EAAE,uBAC/BC,KAAM,2BACNC,MAAO,IACPC,OAAQ,KACTd,EAAMC,GAEbF,OACI,MAAMgB,EAAON,MAAMO,QAAQC,WACrBC,EAAUC,KAAKC,MAAM,WACrBC,EAAUvB,EAAOwB,UAAU,qBACjCJ,EAAQK,IAAI,QAAS1B,EAAQc,EAAE,qBAAsBQ,KAAKnB,KAAKI,KAAMiB,IAAU,GAC/E,MAAMG,EAAQL,KAAKC,MAAM,QAQzB,OAPID,KAAKnB,KAAKO,KACVY,KAAKM,QAAQN,KAAKnB,KAAKO,KAAMiB,GAE7BA,EAAME,GAAG,SAAUC,IACfR,KAAKM,QAAQE,EAAGC,OAAQJ,KAGzBT,EAEXhB,QAAQQ,EAAMiB,GACV,IAAIK,EACJ,MAAMC,EAAQ,CAACC,EAAKJ,KAChBK,KAAKF,MAAMjC,EAAQc,EAAE,wBAAyBd,EAAQc,EAAE,4BAA6BoB,GAAOlC,EAAQc,EAAE,iCACtGkB,EAAeI,QAAO,GACtBd,KAAKe,QAAQP,EAAI,WAErB,GAAIpB,EAAM,CACN,IAAI4B,EAAW,EAEXA,EADA5B,EAAK6B,KAAO,SACAC,KAAKC,MAAkB,IAAZ/B,EAAK6B,KAAa,SAAiB,KAAKG,WAAa,MAEhEF,KAAKC,MAAkB,IAAZ/B,EAAK6B,KAAa,MAAQ,KAAKG,WAAa,KAEnEf,GACAA,EAAMD,IAAI,YAAY,GAE1BJ,KAAKC,MAAM,gBAAgBG,IAAI,YAAY,GAC3C,MAAMiB,EAAO3C,EAAQc,EAAE,wBAAyBJ,EAAKkC,KAAMlC,EAAKmC,KAAMP,EAAUhB,KAAKnB,KAAKI,MAC1FyB,EAAiBlC,EAAagD,OAAO,gBACjCzB,QAASsB,EACTpC,KAAMe,KAAKnB,KAAKI,KAChBwC,SAAUrC,EAAKkC,KACfI,KAAMtC,EAAKmC,KACXN,KAAMD,GACP,CAACR,EAAImB,OACL3B,MACHvB,EAAImD,QACAC,OAAQzC,GACRC,YAAaW,KAAKnB,KAAKI,OAEvB6C,WAAYtB,IACR,GAAIA,EAAGuB,iBAAkB,CACrB,MAAMC,EAAId,KAAKC,MAAkB,IAAZX,EAAGyB,OAAezB,EAAG0B,OAC1CxB,EAAeyB,YAAYH,OAGpCI,KAAK,KACJ1B,EAAeI,QAAO,GACfd,KAAKe,QAAQ,KAAM,KAAM3B,KACjCiD,MAAM1B,GACT2B,WAAW,KACH5B,GACAA,EAAe6B,UAEpB,MAGX3D,QAAQ4B,EAAImB,EAAQa,GAChBA,EAASA,GAAU,KACnBxC,KAAKyC,cAAcjC,EAAImB,EAAQa","file":"../../dialogs/fileupload.js","sourcesContent":["define([\n    '../core/dialog',\n    '../vfs/fs',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, VFS, Locales, Config) {\n    'use strict';\n    return class FileUploadDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                dest: Config.getDefaultPath(),\n                progress: {},\n                file: null\n            }, args);\n            if (args.destination) {\n                args.dest = args.destination;\n            }\n            if (!args.dest) {\n                args.dest = Config.getDefaultPath();\n            }\n            super('FileUploadDialog', {\n                title: args.title || Locales._('DIALOG_UPLOAD_TITLE'),\n                icon: 'actions/document-new.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const message = this._find('Message');\n            const maxSize = Config.getConfig('VFS.MaxUploadSize');\n            message.set('value', Locales._('DIALOG_UPLOAD_DESC', this.args.dest, maxSize), true);\n            const input = this._find('File');\n            if (this.args.file) {\n                this.setFile(this.args.file, input);\n            } else {\n                input.on('change', ev => {\n                    this.setFile(ev.detail, input);\n                });\n            }\n            return root;\n        }\n        setFile(file, input) {\n            let progressDialog;\n            const error = (msg, ev) => {\n                OSjs.error(Locales._('DIALOG_UPLOAD_FAILED'), Locales._('DIALOG_UPLOAD_FAILED_MSG'), msg || Locales._('DIALOG_UPLOAD_FAILED_UNKNOWN'));\n                progressDialog._close(true);\n                this.onClose(ev, 'cancel');\n            };\n            if (file) {\n                let fileSize = 0;\n                if (file.size > 1024 * 1024) {\n                    fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';\n                } else {\n                    fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';\n                }\n                if (input) {\n                    input.set('disabled', true);\n                }\n                this._find('ButtonCancel').set('disabled', true);\n                const desc = Locales._('DIALOG_UPLOAD_MSG_FMT', file.name, file.type, fileSize, this.args.dest);\n                progressDialog = DialogWindow.create('FileProgress', {\n                    message: desc,\n                    dest: this.args.dest,\n                    filename: file.name,\n                    mime: file.type,\n                    size: fileSize\n                }, (ev, button) => {\n                }, this);\n                VFS.upload({\n                    files: [file],\n                    destination: this.args.dest\n                }, {\n                    onprogress: ev => {\n                        if (ev.lengthComputable) {\n                            const p = Math.round(ev.loaded * 100 / ev.total);\n                            progressDialog.setProgress(p);\n                        }\n                    }\n                }).then(() => {\n                    progressDialog._close(true);\n                    return this.onClose(null, 'ok', file);\n                }).catch(error);\n                setTimeout(() => {\n                    if (progressDialog) {\n                        progressDialog._focus();\n                    }\n                }, 100);\n            }\n        }\n        onClose(ev, button, result) {\n            result = result || null;\n            this.closeCallback(ev, button, result);\n        }\n    };\n});"]}