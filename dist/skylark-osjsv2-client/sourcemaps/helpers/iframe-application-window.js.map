{"version":3,"sources":["helpers/iframe-application-window.js"],"names":["define","Window","IFRAME_COUNT","[object Object]","name","opts","app","super","Object","assign","src","focus","blur","icon","title","width","height","allow_resize","allow_restore","allow_maximize","this","_iwin","_frame","postMessage","destroy","arguments","wmRef","root","init","style","overflow","id","toString","iframe","document","createElement","setAttribute","className","addEventListener","contentWindow","setLocation","_opts","appendChild","e","_blur","_focus","message","_app","console","debug","pid","__pid","wid","_wid","window","location","href","ev","oldbefore","onbeforeunload"],"mappings":";;;;;;;AAAAA,QAAQ,kBAAmB,SAAUC,GACjC,aACA,IAAIC,EAAe,EACnB,qBAA6CD,EACzCE,YAAYC,EAAMC,EAAMC,GAepBC,MAAM,0BAdNF,EAAOG,OAAOC,WACVC,IAAK,cACLC,MAAO,aAEPC,KAAM,aAENC,KAAM,KACNC,MAAO,0BACPC,MAAO,IACPC,OAAQ,IACRC,cAAc,EACdC,eAAe,EACfC,gBAAgB,GACjBd,GACoCC,GACvCc,KAAKC,MAAQ,KACbD,KAAKE,OAAS,KAElBnB,UAEI,OADAiB,KAAKG,YAAY,mBACVhB,MAAMiB,WAAWC,WAE5BtB,KAAKuB,EAAOpB,GACR,MAAMqB,EAAOpB,MAAMqB,QAAQH,WAC3BE,EAAKE,MAAMC,SAAW,UACtB,MAAMC,EAAK,0BAA4B7B,EAAa8B,WAC9CC,EAASC,SAASC,cAAc,UACtCF,EAAOG,aAAa,SAAU,GAC9BH,EAAOF,GAAKA,EACZE,EAAOI,UAAY,yBACnBJ,EAAOK,iBAAiB,OAAQ,KAC5BlB,KAAKC,MAAQY,EAAOM,cACpBnB,KAAKG,YAAY,kBAErBH,KAAKoB,YAAYpB,KAAKqB,MAAM/B,IAAKuB,GACjCN,EAAKe,YAAYT,GACjBb,KAAKE,OAASW,EACd,IACIb,KAAKC,MAAQY,EAAOM,cACtB,MAAOI,IAQT,OANIvB,KAAKC,OACLD,KAAKC,MAAMV,QAEfS,KAAKE,OAAOX,QACZS,KAAKqB,MAAM9B,MAAMS,KAAKE,OAAQF,KAAKC,OACnCnB,IACOyB,EAEXxB,QACI,QAAII,MAAMqC,SAASnB,aACXL,KAAKC,OACLD,KAAKC,MAAMT,OAEXQ,KAAKE,QACLF,KAAKE,OAAOV,OAEhBQ,KAAKqB,MAAM7B,KAAKQ,KAAKE,OAAQF,KAAKC,QAC3B,GAIflB,SACI,QAAII,MAAMsC,UAAUpB,aACZL,KAAKC,OACLD,KAAKC,MAAMV,QAEXS,KAAKE,QACLF,KAAKE,OAAOX,QAEhBS,KAAKqB,MAAM9B,MAAMS,KAAKE,OAAQF,KAAKC,QAC5B,GAIflB,YAAY2C,GACJ1B,KAAKC,OAASD,KAAK2B,OACnBC,QAAQC,MAAM,yCAA0CH,GACxD1B,KAAKC,MAAME,aACPuB,QAASA,EACTI,IAAK9B,KAAK2B,KAAKI,MACfC,IAAKhC,KAAKiC,MACXC,OAAOC,SAASC,OAG3BrD,cAAc2C,EAASW,GACnBT,QAAQC,MAAM,2CAA4CH,GAE9D3C,YAAYO,EAAKuB,GACbA,EAASA,GAAUb,KAAKE,OACxB,MAAMoC,EAAYJ,OAAOK,eACzBL,OAAOK,eAAiB,KACxB1B,EAAOvB,IAAMA,EACb4C,OAAOK,eAAiBD","file":"../../helpers/iframe-application-window.js","sourcesContent":["define(['../core/window'], function (Window) {\n    'use strict';\n    let IFRAME_COUNT = 0;\n    return class IFrameApplicationWindow extends Window {\n        constructor(name, opts, app) {\n            opts = Object.assign({}, {\n                src: 'about:blank',\n                focus: function () {\n                },\n                blur: function () {\n                },\n                icon: null,\n                title: 'IframeApplicationWindow',\n                width: 320,\n                height: 240,\n                allow_resize: false,\n                allow_restore: false,\n                allow_maximize: false\n            }, opts);\n            super('IFrameApplicationWindow', opts, app);\n            this._iwin = null;\n            this._frame = null;\n        }\n        destroy() {\n            this.postMessage('Window::destroy');\n            return super.destroy(...arguments);\n        }\n        init(wmRef, app) {\n            const root = super.init(...arguments);\n            root.style.overflow = 'visible';\n            const id = 'IframeApplicationWindow' + IFRAME_COUNT.toString();\n            const iframe = document.createElement('iframe');\n            iframe.setAttribute('border', 0);\n            iframe.id = id;\n            iframe.className = 'IframeApplicationFrame';\n            iframe.addEventListener('load', () => {\n                this._iwin = iframe.contentWindow;\n                this.postMessage('Window::init');\n            });\n            this.setLocation(this._opts.src, iframe);\n            root.appendChild(iframe);\n            this._frame = iframe;\n            try {\n                this._iwin = iframe.contentWindow;\n            } catch (e) {\n            }\n            if (this._iwin) {\n                this._iwin.focus();\n            }\n            this._frame.focus();\n            this._opts.focus(this._frame, this._iwin);\n            IFRAME_COUNT++;\n            return root;\n        }\n        _blur() {\n            if (super._blur(...arguments)) {\n                if (this._iwin) {\n                    this._iwin.blur();\n                }\n                if (this._frame) {\n                    this._frame.blur();\n                }\n                this._opts.blur(this._frame, this._iwin);\n                return true;\n            }\n            return false;\n        }\n        _focus() {\n            if (super._focus(...arguments)) {\n                if (this._iwin) {\n                    this._iwin.focus();\n                }\n                if (this._frame) {\n                    this._frame.focus();\n                }\n                this._opts.focus(this._frame, this._iwin);\n                return true;\n            }\n            return false;\n        }\n        postMessage(message) {\n            if (this._iwin && this._app) {\n                console.debug('IFrameApplicationWindow::postMessage()', message);\n                this._iwin.postMessage({\n                    message: message,\n                    pid: this._app.__pid,\n                    wid: this._wid\n                }, window.location.href);\n            }\n        }\n        onPostMessage(message, ev) {\n            console.debug('IFrameApplicationWindow::onPostMessage()', message);\n        }\n        setLocation(src, iframe) {\n            iframe = iframe || this._frame;\n            const oldbefore = window.onbeforeunload;\n            window.onbeforeunload = null;\n            iframe.src = src;\n            window.onbeforeunload = oldbefore;\n        }\n    };\n});"]}