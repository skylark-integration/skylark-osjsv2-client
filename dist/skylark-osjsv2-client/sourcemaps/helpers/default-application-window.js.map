{"version":3,"sources":["helpers/default-application-window.js"],"names":["define","FileMetadata","Window","DialogWindow","a","[object Object]","name","args","app","file","super","arguments","this","hasClosingDialog","currentFile","hasChanged","destroy","wm","init","result","prototype","_inited","apply","_app","menuMap","MenuNew","newDialog","MenuSave","saveDialog","MenuSaveAs","MenuOpen","openDialog","MenuClose","_close","_find","on","ev","detail","id","set","openFile","type","item","_onDndEvent","data","mime","checkHasChanged","discard","cb","create","buttons","message","_","button","parent","modal","content","updateFile","_scheme","_setTitle","filename","shortcut","_onKeyEvent"],"mappings":";;;;;;;AAAAA,QACI,cACA,iBACA,iBACA,mBACD,SAAUC,EAAcC,EAAQC,EAAcC,GAC7C,aACA,qBAA8CF,EAC1CG,YAAYC,EAAMC,EAAMC,EAAKC,GACzBC,SAASC,WACTC,KAAKC,kBAAmB,EACxBD,KAAKE,YAAcL,EAAO,IAAIR,EAAaQ,GAAQ,KACnDG,KAAKG,YAAa,EAEtBV,UACIK,MAAMM,WAAWL,WACjBC,KAAKE,YAAc,KAEvBT,KAAKY,EAAIT,GAEL,OADaE,MAAMQ,QAAQP,WAG/BN,UACI,MAAMc,EAASjB,EAAOkB,UAAUC,QAAQC,MAAMV,KAAMD,WAC9CH,EAAMI,KAAKW,KACXC,GACFC,QAAS,KACLjB,EAAIkB,UAAUd,KAAKE,YAAaF,OAEpCe,SAAU,KACNnB,EAAIoB,WAAWhB,KAAKE,YAAaF,OAErCiB,WAAY,KACRrB,EAAIoB,WAAWhB,KAAKE,YAAaF,MAAM,IAE3CkB,SAAU,KACNtB,EAAIuB,WAAWnB,KAAKE,YAAaF,OAErCoB,UAAW,KACPpB,KAAKqB,WAcb,OAXArB,KAAKsB,MAAM,eAAeC,GAAG,SAAUC,IAC/BZ,EAAQY,EAAGC,OAAOC,KAClBd,EAAQY,EAAGC,OAAOC,QAG1B1B,KAAKsB,MAAM,YAAYK,IAAI,YAAY,GACnC3B,KAAKE,cACAF,KAAKW,KAAKiB,SAAS5B,KAAKE,YAAaF,QACtCA,KAAKE,YAAc,OAGpBK,EAEXd,YAAY+B,EAAIK,EAAMC,EAAMnC,GACxB,GAAKL,EAAOkB,UAAUuB,YAAYrB,MAAMV,KAAMD,YAGjC,aAAT8B,GAAuBC,EAAM,CAC7B,MAAME,EAAOF,EAAKE,KACdA,GAAsB,SAAdA,EAAKH,MAAmBG,EAAKC,MACrCjC,KAAKW,KAAKiB,SAAS,IAAIvC,EAAa2C,GAAOhC,OAIvDP,SACI,IAAIO,KAAKC,iBAGT,OAAID,KAAKG,YACLH,KAAKC,kBAAmB,OACxBD,KAAKkC,gBAAgBC,IACjBnC,KAAKC,kBAAmB,EACpBkC,IACAnC,KAAKG,YAAa,EAClBH,KAAKqB,kBAKjB/B,EAAOkB,UAAUa,OAAOX,MAAMV,KAAMD,WAExCN,gBAAgB2C,GACRpC,KAAKG,WACLZ,EAAa8C,OAAO,WAChBC,SACI,MACA,MAEJC,QAAS/C,EAAEgD,EAAE,4BACd,SAAUhB,EAAIiB,GACbL,EAAc,OAAXK,GAA8B,QAAXA,KAEtBC,OAAQ1C,KACR2C,OAAO,IAIfP,GAAG,GAEP3C,SAASI,EAAM+C,GACX5C,KAAK6C,WAAWhD,GAEpBJ,WAAWI,GACPG,KAAKE,YAAcL,GAAQ,KAC3BG,KAAKG,YAAa,EACdH,KAAK8C,SACL9C,KAAKsB,MAAM,YAAYK,IAAI,YAAa9B,GAExCA,EACAG,KAAK+C,UAAUlD,EAAKmD,UAAU,GAE9BhD,KAAK+C,YAGbtD,cACI,OAAO,KAEXA,YAAY+B,EAAIK,EAAMoB,GAClB,MAAiB,SAAbA,GACAjD,KAAKW,KAAKK,WAAWhB,KAAKE,YAAaF,MAAOA,KAAKE,cAC5C,GACa,WAAb+C,GACPjD,KAAKW,KAAKK,WAAWhB,KAAKE,YAAaF,MAAM,IACtC,GACa,SAAbiD,GACPjD,KAAKW,KAAKQ,WAAWnB,KAAKE,YAAaF,OAChC,GAEJV,EAAOkB,UAAU0C,YAAYxC,MAAMV,KAAMD","file":"../../helpers/default-application-window.js","sourcesContent":["define([\n    '../vfs/file',\n    '../core/window',\n    '../core/dialog',\n    '../core/locales'\n], function (FileMetadata, Window, DialogWindow, a) {\n    'use strict';\n    return class DefaultApplicationWindow extends Window {\n        constructor(name, args, app, file) {\n            super(...arguments);\n            this.hasClosingDialog = false;\n            this.currentFile = file ? new FileMetadata(file) : null;\n            this.hasChanged = false;\n        }\n        destroy() {\n            super.destroy(...arguments);\n            this.currentFile = null;\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            return root;\n        }\n        _inited() {\n            const result = Window.prototype._inited.apply(this, arguments);\n            const app = this._app;\n            const menuMap = {\n                MenuNew: () => {\n                    app.newDialog(this.currentFile, this);\n                },\n                MenuSave: () => {\n                    app.saveDialog(this.currentFile, this);\n                },\n                MenuSaveAs: () => {\n                    app.saveDialog(this.currentFile, this, true);\n                },\n                MenuOpen: () => {\n                    app.openDialog(this.currentFile, this);\n                },\n                MenuClose: () => {\n                    this._close();\n                }\n            };\n            this._find('SubmenuFile').on('select', ev => {\n                if (menuMap[ev.detail.id]) {\n                    menuMap[ev.detail.id]();\n                }\n            });\n            this._find('MenuSave').set('disabled', true);\n            if (this.currentFile) {\n                if (!this._app.openFile(this.currentFile, this)) {\n                    this.currentFile = null;\n                }\n            }\n            return result;\n        }\n        _onDndEvent(ev, type, item, args) {\n            if (!Window.prototype._onDndEvent.apply(this, arguments)) {\n                return;\n            }\n            if (type === 'itemDrop' && item) {\n                const data = item.data;\n                if (data && data.type === 'file' && data.mime) {\n                    this._app.openFile(new FileMetadata(data), this);\n                }\n            }\n        }\n        _close() {\n            if (this.hasClosingDialog) {\n                return;\n            }\n            if (this.hasChanged) {\n                this.hasClosingDialog = true;\n                this.checkHasChanged(discard => {\n                    this.hasClosingDialog = false;\n                    if (discard) {\n                        this.hasChanged = false;\n                        this._close();\n                    }\n                });\n                return;\n            }\n            Window.prototype._close.apply(this, arguments);\n        }\n        checkHasChanged(cb) {\n            if (this.hasChanged) {\n                DialogWindow.create('Confirm', {\n                    buttons: [\n                        'yes',\n                        'no'\n                    ],\n                    message: a._('MSG_GENERIC_APP_DISCARD')\n                }, function (ev, button) {\n                    cb(button === 'ok' || button === 'yes');\n                }, {\n                    parent: this,\n                    modal: true\n                });\n                return;\n            }\n            cb(true);\n        }\n        showFile(file, content) {\n            this.updateFile(file);\n        }\n        updateFile(file) {\n            this.currentFile = file || null;\n            this.hasChanged = false;\n            if (this._scheme) {\n                this._find('MenuSave').set('disabled', !file);\n            }\n            if (file) {\n                this._setTitle(file.filename, true);\n            } else {\n                this._setTitle();\n            }\n        }\n        getFileData() {\n            return null;\n        }\n        _onKeyEvent(ev, type, shortcut) {\n            if (shortcut === 'SAVE') {\n                this._app.saveDialog(this.currentFile, this, !this.currentFile);\n                return false;\n            } else if (shortcut === 'SAVEAS') {\n                this._app.saveDialog(this.currentFile, this, true);\n                return false;\n            } else if (shortcut === 'OPEN') {\n                this._app.openDialog(this.currentFile, this);\n                return false;\n            }\n            return Window.prototype._onKeyEvent.apply(this, arguments);\n        }\n    };\n});"]}