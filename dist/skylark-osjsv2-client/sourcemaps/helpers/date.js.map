{"version":3,"sources":["helpers/date.js"],"names":["define","ExtendedDate","[object Object]","date","Date","this","config","defaultFormat","dayNames","monthNames","fmt","format","getFirstDayInMonth","getLastDayInMonth","getDaysInMonth","getWeekNumber","from","to","isWithinMonth","getDayOfTheYear","now","current","getMonth","getFullYear","getDate","y","m","_y","_now","_m","setFullYear","parseInt","d","setHours","setDate","getDay","Math","ceil","index","shrt","filter","idx","diff","floor","toindex","list","i","length","push","utc","pad","val","len","String","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","map","s","j","D","getUTCDay","getUTCDate","l","w","z","S","W","F","getUTCMonth","n","M","t","Y","getUTCFullYear","slice","a","G","A","toUpperCase","g","getUTCHours","getHours","h","H","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","O","tzo","getTimezoneOffset","ppad","num","norm","abs","T","match","pop","replace","U","getTime","result","split","forEach","join","formatDate","prototype","apply","arguments"],"mappings":"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","file":"../../helpers/date.js","sourcesContent":["define(function () {\n    'use strict';\n    class ExtendedDate {\n        constructor(date) {\n            if (date) {\n                if (date instanceof Date) {\n                    this.date = date;\n                } else if (date instanceof ExtendedDate) {\n                    this.date = date.date;\n                } else if (typeof date === 'string') {\n                    this.date = new Date(date);\n                }\n            }\n            if (!this.date) {\n                this.date = new Date();\n            }\n        }\n        static get config() {\n            return { defaultFormat: 'isoDateTime' };\n        }\n        static get dayNames() {\n            return [\n                'Sun',\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thu',\n                'Fri',\n                'Sat',\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Saturday'\n            ];\n        }\n        static get monthNames() {\n            return [\n                'Jan',\n                'Feb',\n                'Mar',\n                'Apr',\n                'May',\n                'Jun',\n                'Jul',\n                'Aug',\n                'Sep',\n                'Oct',\n                'Nov',\n                'Dec',\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December'\n            ];\n        }\n        get() {\n            return this.date;\n        }\n        format(fmt) {\n            return ExtendedDate.format(this, fmt);\n        }\n        getFirstDayInMonth(fmt) {\n            return ExtendedDate.getFirstDayInMonth(fmt, null, null, this);\n        }\n        getLastDayInMonth(fmt) {\n            return ExtendedDate.getLastDayInMonth(fmt, null, null, this);\n        }\n        getDaysInMonth() {\n            return ExtendedDate.getDaysInMonth(null, null, this);\n        }\n        getWeekNumber() {\n            return ExtendedDate.getWeekNumber(this);\n        }\n        isWithinMonth(from, to) {\n            return ExtendedDate.isWithinMonth(this, from, to);\n        }\n        getDayOfTheYear() {\n            return ExtendedDate.getDayOfTheYear();\n        }\n        static format(date, fmt) {\n            return format(fmt, date);\n        }\n        static getPreviousMonth(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            let current;\n            if (now.getMonth() === 0) {\n                current = new Date(now.getFullYear() - 1, 11, now.getDate());\n            } else {\n                current = new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n            }\n            return new ExtendedDate(current);\n        }\n        static getNextMonth(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            let current;\n            if (now.getMonth() === 11) {\n                current = new Date(now.getFullYear() + 1, 0, now.getDate());\n            } else {\n                current = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n            }\n            return new ExtendedDate(current);\n        }\n        static getFirstDayInMonth(fmt, y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 1);\n            if (fmt === true) {\n                return date.getDate();\n            }\n            return fmt ? format(fmt, date) : new ExtendedDate(date);\n        }\n        static getLastDayInMonth(fmt, y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 0);\n            if (fmt === true) {\n                return date.getDate();\n            }\n            return fmt ? format(fmt, date) : new ExtendedDate(date);\n        }\n        static getDaysInMonth(y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 0);\n            return parseInt(date.getDate(), 10);\n        }\n        static getWeekNumber(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            const d = new Date(+now);\n            d.setHours(0, 0, 0);\n            d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n            return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 86400000 + 1) / 7);\n        }\n        static getDayName(index, shrt) {\n            if (index < 0 || index === null || typeof index === 'undefined') {\n                return filter(ExtendedDate.dayNames, index, shrt, 7);\n            }\n            shrt = shrt ? 0 : 1;\n            const idx = index + (shrt + 7);\n            return ExtendedDate.dayNames[idx];\n        }\n        static getMonthName(index, shrt) {\n            if (index < 0 || index === null || typeof index === 'undefined') {\n                return filter(ExtendedDate.monthNames, index, shrt, 12);\n            }\n            shrt = shrt ? 0 : 1;\n            const idx = index + (shrt + 12);\n            return ExtendedDate.monthNames[idx];\n        }\n        static isWithinMonth(now, from, to) {\n            if (now.getFullYear() >= from.getFullYear() && now.getMonth() >= from.getMonth()) {\n                if (now.getFullYear() <= to.getFullYear() && now.getMonth() <= to.getMonth()) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        static getDayOfTheYear() {\n            const now = new Date();\n            const start = new Date(now.getFullYear(), 0, 0);\n            const diff = now - start;\n            const oneDay = 1000 * 60 * 60 * 24;\n            return Math.floor(diff / oneDay);\n        }\n    };\n    const methods = [\n        'UTC',\n        'toString',\n        'now',\n        'parse',\n        'getDate',\n        'getDay',\n        'getFullYear',\n        'getHours',\n        'getMilliseconds',\n        'getMinutes',\n        'getMonth',\n        'getSeconds',\n        'getTime',\n        'getTimezoneOffset',\n        'getUTCDate',\n        'getUTCDay',\n        'getUTCFullYear',\n        'getUTCHours',\n        'getUTCMilliseconds',\n        'getUTCMinutes',\n        'getUTCMonth',\n        'getUTCSeconds',\n        'getYear',\n        'setDate',\n        'setFullYear',\n        'setHours',\n        'setMilliseconds',\n        'setMinutes',\n        'setMonth',\n        'setSeconds',\n        'setTime',\n        'setUTCDate',\n        'setUTCFullYear',\n        'setUTCHours',\n        'setUTCMilliseconds',\n        'setUTCMinutes',\n        'setUTCMonth',\n        'setUTCSeconds',\n        'setYear',\n        'toDateString',\n        'toGMTString',\n        'toISOString',\n        'toJSON',\n        'toLocaleDateString',\n        'toLocaleFormat',\n        'toLocaleString',\n        'toLocaleTimeString',\n        'toSource',\n        'toString',\n        'toTimeString',\n        'toUTCString',\n        'valueOf'\n    ];\n    methods.forEach(function (m) {\n        ExtendedDate.prototype[m] = function () {\n            return this.date[m].apply(this.date, arguments);\n        };\n    });\n    function formatDate(date, format, utc) {\n        utc = utc === true;\n        function pad(val, len) {\n            val = String(val);\n            len = len || 2;\n            while (val.length < len) {\n                val = '0' + val;\n            }\n            return val;\n        }\n        const defaultFormats = {\n            'default': 'Y-m-d H:i:s',\n            shortDate: 'm/d/y',\n            mediumDate: 'M d, Y',\n            longDate: 'F d, Y',\n            fullDate: 'l, F d, Y',\n            shortTime: 'h:i A',\n            mediumTime: 'h:i:s A',\n            longTime: 'h:i:s A T',\n            isoDate: 'Y-m-d',\n            isoTime: 'H:i:s',\n            isoDateTime: 'Y-m-d H:i:s'\n        };\n        format = defaultFormats[format] || format;\n        if (!(date instanceof ExtendedDate)) {\n            date = new ExtendedDate(date);\n        }\n        const map = {\n            d: function (s) {\n                return pad(map.j(s));\n            },\n            D: function (s) {\n                return ExtendedDate.dayNames[utc ? date.getUTCDay() : date.getDay()];\n            },\n            j: function (s) {\n                return utc ? date.getUTCDate() : date.getDate();\n            },\n            l: function (s) {\n                return ExtendedDate.dayNames[(utc ? date.getUTCDay() : date.getDay()) + 7];\n            },\n            w: function (s) {\n                return utc ? date.getUTCDay() : date.getDay();\n            },\n            z: function (s) {\n                return date.getDayOfTheYear();\n            },\n            S: function (s) {\n                const d = utc ? date.getUTCDate() : date.getDate();\n                return [\n                    'th',\n                    'st',\n                    'nd',\n                    'rd'\n                ][d % 10 > 3 ? 0 : (d % 100 - d % 10 !== 10) * d % 10];\n            },\n            W: function (s) {\n                return date.getWeekNumber();\n            },\n            F: function (s) {\n                return ExtendedDate.monthNames[(utc ? date.getUTCMonth() : date.getMonth()) + 12];\n            },\n            m: function (s) {\n                return pad(map.n(s));\n            },\n            M: function (s) {\n                return ExtendedDate.monthNames[utc ? date.getUTCMonth() : date.getMonth()];\n            },\n            n: function (s) {\n                return (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n            },\n            t: function (s) {\n                return date.getDaysInMonth();\n            },\n            Y: function (s) {\n                return utc ? date.getUTCFullYear() : date.getFullYear();\n            },\n            y: function (s) {\n                return String(map.Y(s)).slice(2);\n            },\n            a: function (s) {\n                return map.G(s) < 12 ? 'am' : 'pm';\n            },\n            A: function (s) {\n                return map.a(s).toUpperCase();\n            },\n            g: function (s) {\n                return map.G(s) % 12 || 12;\n            },\n            G: function (s) {\n                return utc ? date.getUTCHours() : date.getHours();\n            },\n            h: function (s) {\n                return pad(map.g(s));\n            },\n            H: function (s) {\n                return pad(map.G(s));\n            },\n            i: function (s) {\n                return pad(utc ? date.getUTCMinutes() : date.getMinutes());\n            },\n            s: function (s) {\n                return pad(utc ? date.getUTCSeconds() : date.getSeconds());\n            },\n            O: function (s) {\n                const tzo = -date.getTimezoneOffset();\n                const dif = tzo >= 0 ? '+' : '-';\n                function ppad(num) {\n                    const norm = Math.abs(Math.floor(num));\n                    return (norm < 10 ? '0' : '') + norm;\n                }\n                const str = dif + ppad(tzo / 60) + ':' + ppad(tzo % 60);\n                return str;\n            },\n            T: function (s) {\n                if (utc) {\n                    return 'UTC';\n                }\n                const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n                const zones = String(date.date).match(timezone) || [''];\n                return zones.pop().replace(/(\\+|\\-)[0-9]+$/, '');\n            },\n            U: function (s) {\n                return date.getTime();\n            }\n        };\n        const result = [];\n        format.split('').forEach(function (s) {\n            result.push(map[s] ? map[s]() : s);\n        });\n        return result.join('');\n    }\n\n    function filter(from, index, shrt, toindex) {\n        const list = [];\n        for (let i = shrt ? 0 : toindex; i < from.length; i++) {\n            list.push(from[i]);\n        }\n        return list;\n    }\n    function format(fmt, date) {\n        let utc;\n        if (typeof fmt === 'undefined' || !fmt) {\n            fmt = ExtendedDate.config.defaultFormat;\n        } else {\n            if (typeof fmt !== 'string') {\n                utc = fmt.utc;\n                fmt = fmt.format;\n            } else {\n                utc = ExtendedDate.config.utc;\n            }\n        }\n        return formatDate(date, fmt, utc);\n    }\n    function _now(now) {\n        return now ? now instanceof ExtendedDate ? now.date : now : new Date();\n    }\n    function _y(y, now) {\n        return typeof y === 'undefined' || y === null || y < 0 ? now.getFullYear() : y;\n    }\n    function _m(m, now) {\n        return typeof m === 'undefined' || m === null || m < 0 ? now.getMonth() : m;\n    }\n    return ExtendedDate;\n});"]}