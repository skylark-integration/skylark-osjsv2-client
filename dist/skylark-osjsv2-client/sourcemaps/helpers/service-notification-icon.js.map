{"version":3,"sources":["helpers/service-notification-icon.js"],"names":["define","Notification","Theme","Menu","a","[object Object]","this","entries","size","notif","show","ev","displayMenu","createIcon","image","getIcon","onContextMenu","onClick","onInited","el","img","_updateIcon","destroyIcon","$container","style","display","setTitle","_","toString","menu","Object","keys","forEach","name","push","title","create"],"mappings":";;;;;;;AAAAA,QACI,sBACA,gBACA,cACA,mBACD,SAAUC,EAAcC,EAAOC,EAAMC,GACpC,aA8DA,OAAO,UA5DHC,cACIC,KAAKC,WACLD,KAAKE,KAAO,EACZF,KAAKG,MAAQ,KAEjBJ,OACI,MAAMK,EAAOC,IACTL,KAAKM,YAAYD,IACV,GAEXL,KAAKG,MAAQR,EAAaY,WAAW,2BACjCC,MAAOZ,EAAMa,QAAQ,8BACrBC,cAAeN,EACfO,QAASP,EACTQ,SAAU,CAACC,EAAIC,KACXd,KAAKe,iBAGbf,KAAKe,cAEThB,UACIJ,EAAaqB,YAAY,2BACzBhB,KAAKE,KAAO,EACZF,KAAKC,WACLD,KAAKG,MAAQ,KAEjBJ,cACQC,KAAKG,QACDH,KAAKG,MAAMc,aACXjB,KAAKG,MAAMc,WAAWC,MAAMC,QAAUnB,KAAKE,KAAO,eAAiB,QAEvEF,KAAKG,MAAMiB,SAAStB,EAAEuB,EAAE,8BAA+BrB,KAAKE,KAAKoB,cAGzEvB,YAAYM,GACR,MAAMkB,KACAtB,EAAUD,KAAKC,QACrBuB,OAAOC,KAAKxB,GAASyB,QAAQC,IACzBJ,EAAKK,MACDC,MAAOF,EACPJ,KAAMtB,EAAQ0B,OAGtB9B,EAAKiC,OAAOP,EAAMlB,GAEtBN,IAAI4B,EAAMJ,GACDvB,KAAKC,QAAQ0B,KACd3B,KAAKC,QAAQ0B,GAAQJ,EACrBvB,KAAKE,OACLF,KAAKe,eAGbhB,OAAO4B,GACC3B,KAAKC,QAAQ0B,YACN3B,KAAKC,QAAQ0B,GACpB3B,KAAKE,OACLF,KAAKe","file":"../../helpers/service-notification-icon.js","sourcesContent":["define([\n    '../gui/notification',\n    '../core/theme',\n    '../gui/menu',\n    '../core/locales'\n], function (Notification, Theme, Menu, a) {\n    'use strict';\n    class ServiceNotificationIcon {\n        constructor() {\n            this.entries = {};\n            this.size = 0;\n            this.notif = null;\n        }\n        init() {\n            const show = ev => {\n                this.displayMenu(ev);\n                return false;\n            };\n            this.notif = Notification.createIcon('ServiceNotificationIcon', {\n                image: Theme.getIcon('status/dialog-password.png'),\n                onContextMenu: show,\n                onClick: show,\n                onInited: (el, img) => {\n                    this._updateIcon();\n                }\n            });\n            this._updateIcon();\n        }\n        destroy() {\n            Notification.destroyIcon('ServiceNotificationIcon');\n            this.size = 0;\n            this.entries = {};\n            this.notif = null;\n        }\n        _updateIcon() {\n            if (this.notif) {\n                if (this.notif.$container) {\n                    this.notif.$container.style.display = this.size ? 'inline-block' : 'none';\n                }\n                this.notif.setTitle(a._('SERVICENOTIFICATION_TOOLTIP', this.size.toString()));\n            }\n        }\n        displayMenu(ev) {\n            const menu = [];\n            const entries = this.entries;\n            Object.keys(entries).forEach(name => {\n                menu.push({\n                    title: name,\n                    menu: entries[name]\n                });\n            });\n            Menu.create(menu, ev);\n        }\n        add(name, menu) {\n            if (!this.entries[name]) {\n                this.entries[name] = menu;\n                this.size++;\n                this._updateIcon();\n            }\n        }\n        remove(name) {\n            if (this.entries[name]) {\n                delete this.entries[name];\n                this.size--;\n                this._updateIcon();\n            }\n        }\n    }\n    return new ServiceNotificationIcon();\n});"]}