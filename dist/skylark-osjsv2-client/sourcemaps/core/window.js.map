{"version":3,"sources":["core/window.js"],"names":["define","FileMetadata","WindowManager","Element","GUIScheme","EventHandler","Theme","DOM","GUI","Events","Compability","Keycodes","Menu","locales","getNextZindex","_lzindex","_ltzindex","ontop","getWindowSpace","wm","instance","top","left","width","document","body","offsetWidth","height","offsetHeight","waitForAnimation","win","cb","getSetting","_animationCallback","createMediaQueries","queries","result","qs","getDefaultSetting","Object","keys","forEach","k","w","h","ref","_createQueries","_WID","_NAMES","[object Object]","name","opts","appRef","indexOf","Error","_","str","properties","dimension","assign","icon","getIcon","title","tag","auto_size","console","group","arguments","this","_$element","_$root","_$top","_$winicon","_$loading","_$disabled","_$resize","_$warning","_opts","_app","_destroyed","_restored","_loaded","_initialized","_disabled","_loading","_wid","_icon","_name","_title","_tag","_position","x","y","_dimension","_children","_parent","_origtitle","_lastDimension","_lastPosition","_sound","_soundVolume","_scheme","_properties","gravity","allow_move","allow_resize","allow_minimize","allow_maximize","allow_close","allow_windowlist","allow_drop","allow_iconmenu","allow_ontop","allow_hotkeys","allow_session","key_capture","start_focused","min_width","min_height","max_width","max_height","media_queries","_state","focused","modal","minimized","maximized","onbottom","_queryTimer","_evHandler","replace","g","toUpperCase","position","np","getWindowPosition","__args","__windows__","restore","info","restored","grav","window","innerHeight","innerWidth","space","match","debug","groupEnd","_wm","$create","className","n","t","classNames","$safeName","push","join","style","zIndex","data","window_id","aria","role","live","hidden","createElement","i","setAttribute","appendChild","windowTitle","preventTimeout","_onanimationend","ev","clearTimeout","setTimeout","$bind","_focus","target","tagName","_onWindowButtonClick","getAttribute","_onWindowIconClick","_maximize","main","compability","dnd","createDroppable","onOver","el","args","onLeave","onDrop","onItemDropped","item","_onDndEvent","onFilesDropped","files","getCompability","createTextNode","action","label","_onChange","_toggleLoading","_toggleDisabled","_setIcon","_updateMarkup","playSound","_emit","_onResize","_minimize","maxWidth","maxHeight","traverseTree","children","sel","Math","max","length","_resize","inittimeout","shutdown","_removeDOM","_setWarning","$remove","fn","animatetimeout","display","_animateClose","querySelectorAll","iter","$unbind","_removeChild","_removeChildren","_destroyDOM","removeWindow","curWin","getCurrentWindow","setCurrentWindow","lastWin","getLastWindow","setLastWindow","_destroyWin","_onMessage","destroy","_args","id","root","q","_findByQuery","scheme","_getRoot","translator","undefined","fromString","render","warn","querySelector","params","parentNode","applyArgs","createInto","query","all","Node","map","createFromNode","emit","func","on","idx","off","wmAdd","wmFocus","addWindow","found","child","value","key","_getChildren","filter","c","_getChild","_blur","force","_restore","s","_getMaximizedSize","min","_move","restoreMaximized","restoreMinimized","_toggleAttentionBlink","_blurGUI","blur","dw","dh","limit","move","container","dx","dy","cpos","$position","parseInt","cx","cy","newW","newH","newX","newY","_limitTo","_moveTo","_resizeFinished","p","getNewSize","isNaN","pos","ui","d","f","String","dmax","dmin","dclose","dres","stat","$addClass","$removeClass","_blink","nextElement","getNextElement","shiftKey","activeElement","$hasClass","focus","e","type","keyCode","TAB","_nextTabIndex","ctrlKey","altKey","hasOwnProperty","checkMediaQueries","list","onClick","_close","create","btn","close","minimize","maximize","call","byUser","eventWindow","topMargin","borderSize","theme","getStyleTheme","margin","border","freeze","append","delimiter","tel","getElementsByTagName","text","$empty","backgroundImage","message","innerHTML","msg","v"],"mappings":"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","file":"../../core/window.js","sourcesContent":["define([\n    '../vfs/file',\n//    './application',\n    './window-manager',\n    '../gui/element',\n    '../gui/scheme',\n    '../helpers/event-handler',\n    './theme',\n    '../utils/dom',\n    '../utils/gui',\n    '../utils/events',\n    '../utils/compability',\n    '../utils/keycodes',\n    '../gui/menu',\n    './locales',\n//    './init'\n], function (FileMetadata, WindowManager, Element, GUIScheme, EventHandler, Theme, DOM, GUI, Events, Compability, Keycodes, Menu, locales) {\n    'use strict';\n    function camelCased(str) {\n        return str.replace(/_([a-z])/g, function (g) {\n            return g[1].toUpperCase();\n        });\n    }\n    const getNextZindex = function () {\n        let _lzindex = 1;\n        let _ltzindex = 100000;\n        return function (ontop) {\n            if (typeof ontop !== 'undefined' && ontop === true) {\n                return _ltzindex += 2;\n            }\n            return _lzindex += 2;\n        };\n    }();\n    function getWindowSpace() {\n        const wm = WindowManager.instance;\n        if (wm) {\n            return wm.getWindowSpace();\n        }\n        return {\n            top: 0,\n            left: 0,\n            width: document.body.offsetWidth,\n            height: document.body.offsetHeight\n        };\n    }\n    function waitForAnimation(win, cb) {\n        const wm = WindowManager.instance;\n        const anim = wm ? wm.getSetting('animations') : false;\n        if (anim) {\n            win._animationCallback = cb;\n        } else {\n            cb();\n        }\n    }\n    const createMediaQueries = function () {\n        let queries;\n        function _createQueries() {\n            let result = {};\n            const wm = WindowManager.instance;\n            if (wm) {\n                const qs = wm.getDefaultSetting('mediaQueries') || {};\n                Object.keys(qs).forEach(function (k) {\n                    if (qs[k]) {\n                        result[k] = function (w, h, ref) {\n                            return w <= qs[k];\n                        };\n                    }\n                });\n            }\n            return result;\n        }\n        return function () {\n            if (!queries) {\n                queries = _createQueries();\n            }\n            return queries;\n        };\n    }();\n    function checkMediaQueries(win) {\n        const wm = WindowManager.instance;\n        if (!win._$element || !wm) {\n            return;\n        }\n        let n = '';\n        let k;\n        const qs = win._properties.media_queries || {};\n        const w = win._$element.offsetWidth;\n        const h = win._$element.offsetHeight;\n        for (k in qs) {\n            if (qs.hasOwnProperty(k)) {\n                if (qs[k](w, h, win)) {\n                    n = k;\n                    break;\n                }\n            }\n        }\n        win._$element.setAttribute('data-media', n);\n    }\n    let _WID = 0;\n    let _DEFAULT_WIDTH = 200;\n    let _DEFAULT_HEIGHT = 200;\n    let _DEFAULT_MIN_HEIGHT = 150;\n    let _DEFAULT_MIN_WIDTH = 150;\n    let _DEFAULT_SND_VOLUME = 1;\n    let _NAMES = [];\n    return class Window {\n        constructor(name, opts, appRef) {\n            if (_NAMES.indexOf(name) >= 0) {\n                throw new Error(locales._('ERR_WIN_DUPLICATE_FMT', name));\n            }\n            //if (appRef && !(appRef instanceof Application)) { // modifed by lwf\n            //    throw new TypeError('appRef given was not instance of Application');\n            //}\n            opts = Object.assign({}, {\n                icon: Theme.getIcon('apps/preferences-system-windows.png'),\n                width: _DEFAULT_WIDTH,\n                height: _DEFAULT_HEIGHT,\n                title: name,\n                tag: name,\n                auto_size: false\n            }, opts);\n            console.group('Window::constructor()', _WID, arguments);\n            this._$element = null;\n            this._$root = null;\n            this._$top = null;\n            this._$winicon = null;\n            this._$loading = null;\n            this._$disabled = null;\n            this._$resize = null;\n            this._$warning = null;\n            this._opts = opts;\n            this._app = appRef || null;\n            this._destroyed = false;\n            this._restored = false;\n            this._loaded = false;\n            this._initialized = false;\n            this._disabled = true;\n            this._loading = false;\n            this._wid = _WID;\n            this._icon = opts.icon;\n            this._name = name;\n            this._title = opts.title;\n            this._tag = opts.tag;\n            this._position = {\n                x: opts.x,\n                y: opts.y\n            };\n            this._dimension = {\n                w: opts.width,\n                h: opts.height\n            };\n            this._children = [];\n            this._parent = null;\n            this._origtitle = this._title;\n            this._lastDimension = this._dimension;\n            this._lastPosition = this._position;\n            this._sound = null;\n            this._soundVolume = _DEFAULT_SND_VOLUME;\n            this._scheme = null;\n            this._properties = {\n                gravity: null,\n                allow_move: true,\n                allow_resize: true,\n                allow_minimize: true,\n                allow_maximize: true,\n                allow_close: true,\n                allow_windowlist: true,\n                allow_drop: false,\n                allow_iconmenu: true,\n                allow_ontop: true,\n                allow_hotkeys: true,\n                allow_session: true,\n                key_capture: false,\n                start_focused: true,\n                min_width: _DEFAULT_MIN_HEIGHT,\n                min_height: _DEFAULT_MIN_WIDTH,\n                max_width: null,\n                max_height: null,\n                media_queries: createMediaQueries()\n            };\n            this._state = {\n                focused: false,\n                modal: false,\n                minimized: false,\n                maximized: false,\n                ontop: false,\n                onbottom: false\n            };\n            this._animationCallback = null;\n            this._queryTimer = null;\n            this._evHandler = new EventHandler(name, [\n                'focus',\n                'blur',\n                'destroy',\n                'maximize',\n                'minimize',\n                'restore',\n                'move',\n                'moved',\n                'resize',\n                'resized',\n                'keydown',\n                'keyup',\n                'keypress',\n                'drop',\n                'drop:upload',\n                'drop:file'\n            ]);\n            Object.keys(opts).forEach(k => {\n                if (typeof this._properties[k] !== 'undefined') {\n                    this._properties[k] = opts[k];\n                } else if (typeof this._state[k] !== 'undefined' && k !== 'focused') {\n                    this._state[k] = opts[k];\n                } else if (('sound', 'sound_volume').indexOf(k) !== -1) {\n                    this['_' + camelCased(k)] = opts[k];\n                }\n            });\n            ((properties, position) => {\n                if (!properties.gravity && typeof position.x === 'undefined' || typeof position.y === 'undefined') {\n                    const wm = WindowManager.instance;\n                    const np = wm ? wm.getWindowPosition() : {\n                        x: 0,\n                        y: 0\n                    };\n                    position.x = np.x;\n                    position.y = np.y;\n                }\n            })(this._properties, this._position);\n            ((properties, dimension) => {\n                if (properties.min_height && dimension.h < properties.min_height) {\n                    dimension.h = properties.min_height;\n                }\n                if (properties.max_width && dimension.w < properties.max_width) {\n                    dimension.w = properties.max_width;\n                }\n                if (properties.max_height && dimension.h > properties.max_height) {\n                    dimension.h = properties.max_height;\n                }\n                if (properties.max_width && dimension.w > properties.max_width) {\n                    dimension.w = properties.max_width;\n                }\n            })(this._properties, this._dimension);\n            ((position, dimension) => {\n                if (appRef && appRef.__args && appRef.__args.__windows__) {\n                    appRef.__args.__windows__.forEach(restore => {\n                        if (!this._restored && restore.name && restore.name === this._name) {\n                            position.x = restore.position.x;\n                            position.y = restore.position.y;\n                            if (this._properties.allow_resize) {\n                                dimension.w = restore.dimension.w;\n                                dimension.h = restore.dimension.h;\n                            }\n                            console.info('RESTORED FROM SESSION', restore);\n                            this._restored = true;\n                        }\n                    });\n                }\n            })(this._position, this._dimension);\n            ((properties, position, dimension, restored) => {\n                const grav = properties.gravity;\n                if (grav && !restored) {\n                    if (grav === 'center') {\n                        position.y = window.innerHeight / 2 - this._dimension.h / 2;\n                        position.x = window.innerWidth / 2 - this._dimension.w / 2;\n                    } else {\n                        const space = getWindowSpace();\n                        if (grav.match(/^south/)) {\n                            position.y = space.height - dimension.h;\n                        } else {\n                            position.y = space.top;\n                        }\n                        if (grav.match(/west$/)) {\n                            position.x = space.left;\n                        } else {\n                            position.x = space.width - dimension.w;\n                        }\n                    }\n                }\n            })(this._properties, this._position, this._dimension, this._restored);\n            console.debug('State', this._state);\n            console.debug('Properties', this._properties);\n            console.debug('Position', this._position);\n            console.debug('Dimension', this._dimension);\n            console.groupEnd();\n            _WID++;\n        }\n        init(_wm, _app) {\n            if (this._initialized || this._loaded) {\n                return this._$root;\n            }\n            this._$element = DOM.$create('application-window', {\n                className: ((n, t) => {\n                    const classNames = [\n                        'Window',\n                        DOM.$safeName(n)\n                    ];\n                    if (t && n !== t) {\n                        classNames.push(DOM.$safeName(t));\n                    }\n                    return classNames;\n                })(this._name, this._tag).join(' '),\n                style: {\n                    width: this._dimension.w + 'px',\n                    height: this._dimension.h + 'px',\n                    top: this._position.y + 'px',\n                    left: this._position.x + 'px',\n                    zIndex: getNextZindex(this._state.ontop)\n                },\n                data: {\n                    window_id: this._wid,\n                    allow_resize: this._properties.allow_resize,\n                    allow_minimize: this._properties.allow_minimize,\n                    allow_maximize: this._properties.allow_maximize,\n                    allow_close: this._properties.allow_close\n                },\n                aria: {\n                    role: 'application',\n                    live: 'polite',\n                    hidden: 'false'\n                }\n            });\n            this._$root = document.createElement('application-window-content');\n            this._$resize = document.createElement('application-window-resize');\n            [\n                'nw',\n                'n',\n                'ne',\n                'e',\n                'se',\n                's',\n                'sw',\n                'w'\n            ].forEach(i => {\n                let h = document.createElement('application-window-resize-handle');\n                h.setAttribute('data-direction', i);\n                this._$resize.appendChild(h);\n                h = null;\n            });\n            this._$loading = document.createElement('application-window-loading');\n            this._$disabled = document.createElement('application-window-disabled');\n            this._$top = document.createElement('application-window-top');\n            this._$winicon = document.createElement('application-window-icon');\n            this._$winicon.setAttribute('role', 'button');\n            this._$winicon.setAttribute('aria-haspopup', 'true');\n            this._$winicon.setAttribute('aria-label', 'Window Menu');\n            const windowTitle = document.createElement('application-window-title');\n            windowTitle.setAttribute('role', 'heading');\n            let preventTimeout;\n            const _onanimationend = ev => {\n                if (typeof this._animationCallback === 'function') {\n                    clearTimeout(preventTimeout);\n                    preventTimeout = setTimeout(() => {\n                        this._animationCallback(ev);\n                        this._animationCallback = false;\n                        preventTimeout = clearTimeout(preventTimeout);\n                    }, 10);\n                }\n            };\n            Events.$bind(this._$element, 'transitionend', _onanimationend);\n            Events.$bind(this._$element, 'animationend', _onanimationend);\n            Events.$bind(this._$element, 'click', ev => {\n                this._focus();\n            }, true);\n            Events.$bind(this._$top, 'mouseup', ev => {\n                const t = ev.target;\n                if (t) {\n                    if (t.tagName.match(/^APPLICATION\\-WINDOW\\-BUTTON/)) {\n                        this._onWindowButtonClick(ev, t, t.getAttribute('data-action'));\n                    } else if (t.tagName === 'APPLICATION-WINDOW-ICON') {\n                        this._onWindowIconClick(ev);\n                    }\n                }\n            });\n            Events.$bind(this._$top, 'dblclick', () => {\n                this._maximize();\n            });\n            ((properties, main, compability) => {\n                if (properties.allow_drop && compability.dnd) {\n                    const border = document.createElement('div');\n                    border.className = 'WindowDropRect';\n                    GUI.createDroppable(main, {\n                        onOver: (ev, el, args) => {\n                            main.setAttribute('data-dnd-state', 'true');\n                        },\n                        onLeave: () => {\n                            main.setAttribute('data-dnd-state', 'false');\n                        },\n                        onDrop: () => {\n                            main.setAttribute('data-dnd-state', 'false');\n                        },\n                        onItemDropped: (ev, el, item, args) => {\n                            main.setAttribute('data-dnd-state', 'false');\n                            return this._onDndEvent(ev, 'itemDrop', item, args, el);\n                        },\n                        onFilesDropped: (ev, el, files, args) => {\n                            main.setAttribute('data-dnd-state', 'false');\n                            return this._onDndEvent(ev, 'filesDrop', files, args, el);\n                        }\n                    });\n                }\n            })(this._properties, this._$element, Compability.getCompability());\n            windowTitle.appendChild(document.createTextNode(this._title));\n            this._$top.appendChild(this._$winicon);\n            this._$top.appendChild(windowTitle);\n            this._$top.appendChild(DOM.$create('application-window-button-minimize', {\n                className: 'application-window-button-entry',\n                data: { action: 'minimize' },\n                aria: {\n                    role: 'button',\n                    label: 'Minimize Window'\n                }\n            }));\n            this._$top.appendChild(DOM.$create('application-window-button-maximize', {\n                className: 'application-window-button-entry',\n                data: { action: 'maximize' },\n                aria: {\n                    role: 'button',\n                    label: 'Maximize Window'\n                }\n            }));\n            this._$top.appendChild(DOM.$create('application-window-button-close', {\n                className: 'application-window-button-entry',\n                data: { action: 'close' },\n                aria: {\n                    role: 'button',\n                    label: 'Close Window'\n                }\n            }));\n            this._$loading.appendChild(document.createElement('application-window-loading-indicator'));\n            this._$element.appendChild(this._$top);\n            this._$element.appendChild(this._$root);\n            this._$element.appendChild(this._$resize);\n            this._$element.appendChild(this._$disabled);\n            this._$element.appendChild(this._$loading);\n            document.body.appendChild(this._$element);\n            this._onChange('create');\n            this._toggleLoading(false);\n            this._toggleDisabled(false);\n            this._setIcon(Theme.getIcon(this._icon));\n            this._updateMarkup();\n            if (this._sound) {\n                Theme.playSound(this._sound, this._soundVolume);\n            }\n            this._initialized = true;\n            this._emit('init', [this._$root]);\n            return this._$root;\n        }\n        _inited() {\n            if (this._loaded) {\n                return;\n            }\n            this._loaded = true;\n            this._onResize();\n            if (!this._restored) {\n                if (this._state.maximized) {\n                    this._maximize(true);\n                } else if (this._state.minimized) {\n                    this._minimize(true);\n                } else {\n                    if (this._opts.auto_size) {\n                        let maxWidth = 0;\n                        let maxHeight = 0;\n                        const traverseTree = el => {\n                            el.children.forEach(sel => {\n                                maxWidth = Math.max(maxWidth, sel.offsetWidth);\n                                maxHeight = Math.max(maxHeight, sel.offsetHeight);\n                                if (sel.children.length) {\n                                    traverseTree(sel);\n                                }\n                            });\n                        };\n                        traverseTree(this._$root);\n                        this._resize(maxWidth, maxHeight, true);\n                    }\n                }\n            }\n            let inittimeout = setTimeout(() => {\n                this._emit('inited', []);\n                inittimeout = clearTimeout(inittimeout);\n            }, 10);\n            if (this._app) {\n                this._app._emit('initedWindow', [this]);\n            }\n            console.debug('Window::_inited()', this._name);\n        }\n        destroy(shutdown) {\n            if (this._destroyed) {\n                return false;\n            }\n            this._emit('destroy');\n            this._destroyed = true;\n            const wm = WindowManager.instance;\n            console.group('Window::destroy()');\n            const _removeDOM = () => {\n                this._setWarning(null);\n                this._$root = null;\n                this._$top = null;\n                this._$winicon = null;\n                this._$loading = null;\n                this._$disabled = null;\n                this._$resize = null;\n                this._$warning = null;\n                this._$element = DOM.$remove(this._$element);\n            };\n            const _destroyDOM = () => {\n                if (this._$element) {\n                    this._$element.querySelectorAll('*').forEach(iter => {\n                        if (iter) {\n                            Events.$unbind(iter);\n                        }\n                    });\n                }\n                if (this._parent) {\n                    this._parent._removeChild(this);\n                }\n                this._parent = null;\n                this._removeChildren();\n            };\n            const _destroyWin = () => {\n                if (wm) {\n                    wm.removeWindow(this);\n                }\n                const curWin = wm ? wm.getCurrentWindow() : null;\n                if (curWin && curWin._wid === this._wid) {\n                    wm.setCurrentWindow(null);\n                }\n                const lastWin = wm ? wm.getLastWindow() : null;\n                if (lastWin && lastWin._wid === this._wid) {\n                    wm.setLastWindow(null);\n                }\n            };\n            const _animateClose = fn => {\n                //if (!init.running()) { // modified by lwf\n                //    fn();\n                //} else {\n                    if (this._$element) {\n                        const anim = wm ? wm.getSetting('animations') : false;\n                        if (anim) {\n                            this._$element.setAttribute('data-closing', 'true');\n                            this._animationCallback = fn;\n                            let animatetimeout = setTimeout(() => {\n                                if (this._animationCallback) {\n                                    this._animationCallback();\n                                }\n                                animatetimeout = clearTimeout(animatetimeout);\n                            }, 1000);\n                        } else {\n                            this._$element.style.display = 'none';\n                            fn();\n                        }\n                    }\n                //}\n            };\n            this._onChange('close');\n            _animateClose(() => {\n                _removeDOM();\n            });\n            _destroyDOM();\n            _destroyWin();\n            if (this._app) {\n                this._app._onMessage('destroyWindow', this, {});\n            }\n            if (this._evHandler) {\n                this._evHandler.destroy();\n            }\n            this._app = null;\n            this._evHandler = null;\n            this._args = {};\n            this._queryTimer = clearTimeout(this._queryTimer);\n            this._scheme = this._scheme ? this._scheme.destroy() : null;\n            console.groupEnd();\n            return true;\n        }\n        _find(id, root) {\n            const q = '[data-id=\"' + id + '\"]';\n            return this._findByQuery(q, root);\n        }\n        _render(id, scheme, root, args) {\n            if (scheme) {\n                root = root || this._getRoot();\n                args = args || {};\n                if (typeof this._opts.translator === 'function') {\n                    args.undefined = this._opts.translator;\n                }\n                this._scheme = typeof scheme === 'string' ? GUIScheme.fromString(scheme) : scheme;\n            }\n            if (this._scheme instanceof GUIScheme) {\n                this._scheme.render(this, id, root, null, null, args);\n            } else {\n                console.warn('Got an invalid scheme in window render()', this._scheme);\n            }\n            return this._scheme;\n        }\n        _findDOM(id, root) {\n            root = root || this._getRoot();\n            const q = '[data-id=\"' + id + '\"]';\n            return root.querySelector(q);\n        }\n        _create(tagName, params, parentNode, applyArgs) {\n            parentNode = parentNode || this._getRoot();\n            return Element.createInto(tagName, params, parentNode, applyArgs, this);\n        }\n        _findByQuery(query, root, all) {\n            root = root || this._getRoot();\n            if (!(root instanceof window.Node)) {\n                return all ? [] : null;\n            }\n            if (all) {\n                return root.querySelectorAll(query).map(el => {\n                    return Element.createFromNode(el, query);\n                });\n            }\n            const el = root.querySelector(query);\n            return Element.createFromNode(el, query);\n        }\n        _emit(k, args) {\n            if (!this._destroyed) {\n                if (this._evHandler) {\n                    return this._evHandler.emit(k, args);\n                }\n            }\n            return false;\n        }\n        _on(k, func) {\n            if (this._evHandler) {\n                return this._evHandler.on(k, func, this);\n            }\n            return false;\n        }\n        _off(k, idx) {\n            if (this._evHandler) {\n                return this._evHandler.off(k, idx);\n            }\n            return false;\n        }\n        _addChild(w, wmAdd, wmFocus) {\n            console.debug('Window::_addChild()');\n            w._parent = this;\n            const wm = WindowManager.instance;\n            if (wmAdd && wm) {\n                wm.addWindow(w, wmFocus);\n            }\n            this._children.push(w);\n            return w;\n        }\n        _removeChild(w) {\n            let found = false;\n            this._children.forEach((child, i) => {\n                if (child && child._wid === w._wid) {\n                    console.debug('Window::_removeChild()');\n                    child.destroy();\n                    this._children[i] = null;\n                    found = true;\n                }\n            });\n            return found;\n        }\n        _getChild(value, key) {\n            key = key || 'wid';\n            const found = this._getChildren().filter(c => {\n                return c['_' + key] === value;\n            });\n            return key === 'tag' ? found : found[0];\n        }\n        _getChildById(id) {\n            return this._getChild(id, 'wid');\n        }\n        _getChildByName(name) {\n            return this._getChild(name, 'name');\n        }\n        _getChildrenByTag(tag) {\n            return this._getChild(tag, 'tag');\n        }\n        _getChildren() {\n            return this._children.filter(w => !!w);\n        }\n        _removeChildren() {\n            this._children.forEach((child, i) => {\n                if (child) {\n                    child.destroy();\n                }\n            });\n            this._children = [];\n        }\n        _close() {\n            if (this._disabled || this._destroyed) {\n                return false;\n            }\n            console.debug('Window::_close()');\n            this._blur();\n            this.destroy();\n            return true;\n        }\n        _minimize(force) {\n            if (!this._properties.allow_minimize || this._destroyed) {\n                return false;\n            }\n            if (!force && this._state.minimized) {\n                this._restore(false, true);\n                return true;\n            }\n            console.debug(this._name, '>', 'Window::_minimize()');\n            this._blur();\n            this._state.minimized = true;\n            this._$element.setAttribute('data-minimized', 'true');\n            waitForAnimation(this, () => {\n                this._$element.style.display = 'none';\n                this._emit('minimize');\n            });\n            this._onChange('minimize');\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid === this._wid) {\n                wm.setCurrentWindow(null);\n            }\n            this._updateMarkup();\n            return true;\n        }\n        _maximize(force) {\n            if (!this._properties.allow_maximize || this._destroyed || !this._$element) {\n                return false;\n            }\n            if (!force && this._state.maximized) {\n                this._restore(true, false);\n                return true;\n            }\n            console.debug(this._name, '>', 'Window::_maximize()');\n            this._lastPosition = {\n                x: this._position.x,\n                y: this._position.y\n            };\n            this._lastDimension = {\n                w: this._dimension.w,\n                h: this._dimension.h\n            };\n            this._state.maximized = true;\n            const s = this._getMaximizedSize();\n            this._$element.style.zIndex = getNextZindex(this._state.ontop);\n            this._$element.style.top = s.top + 'px';\n            this._$element.style.left = s.left + 'px';\n            this._$element.style.width = s.width + 'px';\n            this._$element.style.height = s.height + 'px';\n            this._$element.setAttribute('data-maximized', 'true');\n            this._dimension.w = s.width;\n            this._dimension.h = s.height;\n            this._position.x = s.left;\n            this._position.y = s.top;\n            this._focus();\n            waitForAnimation(this, () => {\n                this._emit('maximize');\n            });\n            this._onChange('maximize');\n            this._onResize();\n            this._updateMarkup();\n            return true;\n        }\n        _restore(max, min) {\n            if (!this._$element || this._destroyed) {\n                return;\n            }\n            const restoreMaximized = () => {\n                if (max && this._state.maximized) {\n                    this._move(this._lastPosition.x, this._lastPosition.y);\n                    this._resize(this._lastDimension.w, this._lastDimension.h);\n                    this._state.maximized = false;\n                    this._$element.setAttribute('data-maximized', 'false');\n                }\n            };\n            const restoreMinimized = () => {\n                if (min && this._state.minimized) {\n                    this._$element.style.display = 'block';\n                    this._$element.setAttribute('data-minimized', 'false');\n                    this._state.minimized = false;\n                }\n            };\n            console.debug(this._name, '>', 'Window::_restore()');\n            max = typeof max === 'undefined' ? true : max === true;\n            min = typeof min === 'undefined' ? true : min === true;\n            restoreMaximized();\n            restoreMinimized();\n            waitForAnimation(this, () => {\n                this._emit('restore');\n            });\n            this._onChange('restore');\n            this._onResize();\n            this._focus();\n            this._updateMarkup();\n        }\n        _focus(force) {\n            if (!this._$element || this._destroyed) {\n                return false;\n            }\n            this._toggleAttentionBlink(false);\n            this._$element.style.zIndex = getNextZindex(this._state.ontop);\n            this._$element.setAttribute('data-focused', 'true');\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid !== this._wid) {\n                win._blur();\n            }\n            if (wm) {\n                wm.setCurrentWindow(this);\n                wm.setLastWindow(this);\n            }\n            if (!this._state.focused || force) {\n                this._onChange('focus');\n                this._emit('focus');\n            }\n            this._state.focused = true;\n            this._updateMarkup();\n            return true;\n        }\n        _blur(force) {\n            if (!this._$element || this._destroyed || !force && !this._state.focused) {\n                return false;\n            }\n            this._$element.setAttribute('data-focused', 'false');\n            this._state.focused = false;\n            this._onChange('blur');\n            this._emit('blur');\n            this._blurGUI();\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid === this._wid) {\n                wm.setCurrentWindow(null);\n            }\n            this._updateMarkup();\n            return true;\n        }\n        _blurGUI() {\n            this._$root.querySelectorAll('input, textarea, select, iframe, button').forEach(el => {\n                el.blur();\n            });\n        }\n        _resizeTo(dw, dh, limit, move, container, force) {\n            if (!this._$element || (dw <= 0 || dh <= 0)) {\n                return;\n            }\n            limit = typeof limit === 'undefined' || limit === true;\n            let dx = 0;\n            let dy = 0;\n            if (container) {\n                const cpos = DOM.$position(container, this._$root);\n                dx = parseInt(cpos.left, 10);\n                dy = parseInt(cpos.top, 10);\n            }\n            const space = this._getMaximizedSize();\n            const cx = this._position.x + dx;\n            const cy = this._position.y + dy;\n            let newW = dw;\n            let newH = dh;\n            let newX = null;\n            let newY = null;\n            const _limitTo = () => {\n                if (cx + newW > space.width) {\n                    if (move) {\n                        newW = space.width;\n                        newX = space.left;\n                    } else {\n                        newW = space.width - cx + dx;\n                    }\n                } else {\n                    newW += dx;\n                }\n                if (cy + newH > space.height) {\n                    if (move) {\n                        newH = space.height;\n                        newY = space.top;\n                    } else {\n                        newH = space.height - cy + this._$top.offsetHeight + dy;\n                    }\n                } else {\n                    newH += dy;\n                }\n            };\n            const _moveTo = () => {\n                if (newX !== null) {\n                    this._move(newX, this._position.y);\n                }\n                if (newY !== null) {\n                    this._move(this._position.x, newY);\n                }\n            };\n            const _resizeFinished = () => {\n                const wm = WindowManager.instance;\n                const anim = wm ? wm.getSetting('animations') : false;\n                if (anim) {\n                    this._animationCallback = () => {\n                        this._emit('resized');\n                    };\n                } else {\n                    this._emit('resized');\n                }\n            };\n            if (limit) {\n                _limitTo();\n            }\n            this._resize(newW, newH, force);\n            _moveTo();\n            _resizeFinished();\n        }\n        _resize(w, h, force) {\n            const p = this._properties;\n            if (!this._$element || this._destroyed || !force && !p.allow_resize) {\n                return false;\n            }\n            const getNewSize = (n, min, max) => {\n                if (!isNaN(n) && n) {\n                    n = Math.max(n, min);\n                    if (max !== null) {\n                        n = Math.min(n, max);\n                    }\n                }\n                return n;\n            };\n            w = force ? w : getNewSize(w, p.min_width, p.max_width);\n            if (!isNaN(w) && w) {\n                this._$element.style.width = w + 'px';\n                this._dimension.w = w;\n            }\n            h = force ? h : getNewSize(h, p.min_height, p.max_height);\n            if (!isNaN(h) && h) {\n                this._$element.style.height = h + 'px';\n                this._dimension.h = h;\n            }\n            this._onResize();\n            return true;\n        }\n        _moveTo(pos) {\n            const wm = WindowManager.instance;\n            if (!wm) {\n                return;\n            }\n            const s = wm.getWindowSpace();\n            const cx = this._position.x;\n            const cy = this._position.y;\n            if (pos === 'left') {\n                this._move(s.left, cy);\n            } else if (pos === 'right') {\n                this._move(s.width - this._dimension.w, cy);\n            } else if (pos === 'top') {\n                this._move(cx, s.top);\n            } else if (pos === 'bottom') {\n                this._move(cx, s.height - this._dimension.h);\n            }\n        }\n        _move(x, y) {\n            if (!this._$element || this._destroyed || !this._properties.allow_move) {\n                return false;\n            }\n            if (typeof x === 'undefined' || typeof y === 'undefined') {\n                return false;\n            }\n            this._$element.style.top = y + 'px';\n            this._$element.style.left = x + 'px';\n            this._position.x = x;\n            this._position.y = y;\n            return true;\n        }\n        _toggleDisabled(t) {\n            if (this._$disabled) {\n                this._$disabled.style.display = t ? 'block' : 'none';\n            }\n            this._disabled = t ? true : false;\n            this._updateMarkup();\n        }\n        _toggleLoading(t) {\n            if (this._$loading) {\n                this._$loading.style.display = t ? 'block' : 'none';\n            }\n            this._loading = t ? true : false;\n            this._updateMarkup();\n        }\n        _updateMarkup(ui) {\n            if (!this._$element) {\n                return;\n            }\n            const t = this._loading || this._disabled;\n            const d = this._disabled;\n            const h = this._state.minimized;\n            const f = !this._state.focused;\n            this._$element.setAttribute('aria-busy', String(t));\n            this._$element.setAttribute('aria-hidden', String(h));\n            this._$element.setAttribute('aria-disabled', String(d));\n            this._$root.setAttribute('aria-hidden', String(f));\n            if (!ui) {\n                return;\n            }\n            const dmax = this._properties.allow_maximize === true ? 'inline-block' : 'none';\n            const dmin = this._properties.allow_minimize === true ? 'inline-block' : 'none';\n            const dclose = this._properties.allow_close === true ? 'inline-block' : 'none';\n            this._$top.querySelector('application-window-button-maximize').style.display = dmax;\n            this._$top.querySelector('application-window-button-minimize').style.display = dmin;\n            this._$top.querySelector('application-window-button-close').style.display = dclose;\n            const dres = this._properties.allow_resize === true;\n            this._$element.setAttribute('data-allow-resize', String(dres));\n        }\n        _toggleAttentionBlink(t) {\n            if (!this._$element || this._destroyed || this._state.focused) {\n                return false;\n            }\n            const el = this._$element;\n            const _blink = stat => {\n                if (el) {\n                    if (stat) {\n                        DOM.$addClass(el, 'WindowAttentionBlink');\n                    } else {\n                        DOM.$removeClass(el, 'WindowAttentionBlink');\n                    }\n                }\n                this._onChange(stat ? 'attention_on' : 'attention_off');\n            };\n            _blink(t);\n            return true;\n        }\n        _nextTabIndex(ev) {\n            const nextElement = GUI.getNextElement(ev.shiftKey, document.activeElement, this._$root);\n            if (nextElement) {\n                if (DOM.$hasClass(nextElement, 'gui-data-view')) {\n                    Element.createFromNode(nextElement).focus();\n                } else {\n                    try {\n                        nextElement.focus();\n                    } catch (e) {\n                    }\n                }\n            }\n        }\n        _onDndEvent(ev, type, item, args, el) {\n            if (this._disabled || this._destroyed) {\n                return false;\n            }\n            console.debug('Window::_onDndEvent()', type, item, args);\n            this._emit('drop', [\n                ev,\n                type,\n                item,\n                args,\n                el\n            ]);\n            if (item) {\n                if (type === 'filesDrop') {\n                    this._emit('drop:upload', [\n                        ev,\n                        item,\n                        args,\n                        el\n                    ]);\n                } else if (type === 'itemDrop' && item.type === 'file' && item.data) {\n                    this._emit('drop:file', [\n                        ev,\n                        new FileMetadata(item.data || {}),\n                        args,\n                        el\n                    ]);\n                }\n            }\n            return true;\n        }\n        _onKeyEvent(ev, type) {\n            if (this._destroyed || !this._state.focused) {\n                return false;\n            }\n            if (type === 'keydown' && ev.keyCode === Keycodes.TAB) {\n                this._nextTabIndex(ev);\n            }\n            this._emit(type, [\n                ev,\n                ev.keyCode,\n                ev.shiftKey,\n                ev.ctrlKey,\n                ev.altKey\n            ]);\n            return true;\n        }\n        _onResize() {\n            clearTimeout(this._queryTimer);\n            this._queryTimer = setTimeout(() => {\n                checkMediaQueries(this);\n                this._queryTimer = clearTimeout(this._queryTimer);\n            }, 20);\n        }\n        _onWindowIconClick(ev) {\n            if (!this._properties.allow_iconmenu || this._destroyed) {\n                return;\n            }\n            console.debug(this._name, '>', 'Window::_onWindowIconClick()');\n            const control = [\n                [\n                    this._properties.allow_minimize,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_MINIMIZE'),\n                            icon: Theme.getIcon('actions/go-up.png'),\n                            onClick: (name, iter) => {\n                                this._minimize();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_maximize,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_MAXIMIZE'),\n                            icon: Theme.getIcon('actions/view-fullscreen.png'),\n                            onClick: (name, iter) => {\n                                this._maximize();\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._state.maximized,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_RESTORE'),\n                            icon: Theme.getIcon('actions/view-restore.png'),\n                            onClick: (name, iter) => {\n                                this._restore();\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_ontop,\n                    () => {\n                        if (this._state.ontop) {\n                            return {\n                                title: locales._('WINDOW_ONTOP_OFF'),\n                                icon: Theme.getIcon('actions/window-new.png'),\n                                onClick: (name, iter) => {\n                                    this._state.ontop = false;\n                                    if (this._$element) {\n                                        this._$element.style.zIndex = getNextZindex(false);\n                                    }\n                                    this._focus();\n                                }\n                            };\n                        }\n                        return {\n                            title: locales._('WINDOW_ONTOP_ON'),\n                            icon: Theme.getIcon('actions/window-new.png'),\n                            onClick: (name, iter) => {\n                                this._state.ontop = true;\n                                if (this._$element) {\n                                    this._$element.style.zIndex = getNextZindex(true);\n                                }\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_close,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_CLOSE'),\n                            icon: Theme.getIcon('actions/window-close.png'),\n                            onClick: (name, iter) => {\n                                this._close();\n                            }\n                        };\n                    }\n                ]\n            ];\n            const list = [];\n            control.forEach(iter => {\n                if (iter[0]) {\n                    list.push(iter[1]());\n                }\n            });\n            this._focus();\n            Menu.create(list, ev);\n        }\n        _onWindowButtonClick(ev, el, btn) {\n            const map = {\n                close: this._close,\n                minimize: this._minimize,\n                maximize: this._maximize\n            };\n            if (map[btn]) {\n                try {\n                    this._blurGUI();\n                } catch (e) {\n                }\n                map[btn].call(this);\n            }\n        }\n        _onChange(ev, byUser) {\n            ev = ev || '';\n            if (ev) {\n                const wm = WindowManager.instance;\n                if (wm) {\n                    wm.eventWindow(ev, this);\n                }\n            }\n        }\n        _getMaximizedSize() {\n            const s = getWindowSpace();\n            if (!this._$element || this._destroyed) {\n                return s;\n            }\n            let topMargin = 23;\n            let borderSize = 0;\n            const theme = Theme.getStyleTheme(true, true);\n            if (theme && theme.style && theme.style.window) {\n                topMargin = theme.style.window.margin;\n                borderSize = theme.style.window.border;\n            }\n            s.left += borderSize;\n            s.top += borderSize;\n            s.width -= borderSize * 2;\n            s.height -= topMargin + borderSize * 2;\n            return Object.freeze(s);\n        }\n        _getViewRect() {\n            return this._$element ? Object.freeze(DOM.$position(this._$element)) : null;\n        }\n        _getRoot() {\n            return this._$root;\n        }\n        _getZindex() {\n            if (this._$element) {\n                return parseInt(this._$element.style.zIndex, 10);\n            }\n            return -1;\n        }\n        _getTitle() {\n            return this._title;\n        }\n        _setTitle(t, append, delimiter) {\n            if (!this._$element || this._destroyed) {\n                return;\n            }\n            delimiter = delimiter || '-';\n            const tel = this._$element.getElementsByTagName('application-window-title')[0];\n            let text = [];\n            if (append) {\n                text = [\n                    this._origtitle,\n                    delimiter,\n                    t\n                ];\n            } else {\n                text = [t || this._origtitle];\n            }\n            this._title = text.join(' ') || this._origtitle;\n            if (tel) {\n                DOM.$empty(tel);\n                tel.appendChild(document.createTextNode(this._title));\n            }\n            this._onChange('title');\n            this._updateMarkup();\n        }\n        _setIcon(i) {\n            if (this._$winicon) {\n                this._$winicon.title = this._title;\n                this._$winicon.style.backgroundImage = 'url(' + i + ')';\n            }\n            this._icon = i;\n            this._onChange('icon');\n        }\n        _setWarning(message) {\n            this._$warning = DOM.$remove(this._$warning);\n            if (this._destroyed || message === null) {\n                return;\n            }\n            message = message || '';\n            let container = document.createElement('application-window-warning');\n            let close = document.createElement('div');\n            close.innerHTML = 'X';\n            Events.$bind(close, 'click', () => {\n                this._setWarning(null);\n            });\n            let msg = document.createElement('div');\n            msg.appendChild(document.createTextNode(message));\n            container.appendChild(close);\n            container.appendChild(msg);\n            this._$warning = container;\n            this._$root.appendChild(this._$warning);\n        }\n        _setProperty(p, v) {\n            if (v === '' || v === null || !this._$element || typeof this._properties[p] === 'undefined') {\n                return;\n            }\n            this._properties[p] = String(v) === 'true';\n            this._updateMarkup(true);\n        }\n    };\n});"]}