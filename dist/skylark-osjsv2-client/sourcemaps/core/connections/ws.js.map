{"version":3,"sources":["core/connections/ws.js"],"names":["define","Config","Locales","VFS","FileMetadata","Connection","[object Object]","super","arguments","port","getConfig","path","url","window","location","protocol","replace","host","match","this","ws","wsurl","wsqueue","destroying","close","destroy","apply","Promise","resolve","reject","_connect","err","res","Error","reconnect","callback","console","info","connected","WebSocket","onopen","ev","setTimeout","onmessage","debug","data","JSON","parse","idx","_index","_onmessage","onerror","error","onclose","code","_onclose","_","message","reconnecting","onOffline","onOnline","action","triggerWatch","args","event","file","_evHandler","emit","method","options","indexOf","createRequest","index","base","send","stringify","e"],"mappings":"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","file":"../../../core/connections/ws.js","sourcesContent":["define([\n    '../config',\n    '../locales',\n    '../../vfs/fs',\n    '../../vfs/file',\n    '../connection'\n], function (Config, Locales, VFS, FileMetadata, Connection) {\n    'use strict';\n    return class WSConnection extends Connection {\n        constructor() {\n            super(...arguments);\n            const port = Config.getConfig('Connection.WSPort');\n            const path = Config.getConfig('Connection.WSPath') || '';\n            let url = window.location.protocol.replace('http', 'ws') + '//' + window.location.host;\n            if (port !== 'upgrade') {\n                if (url.match(/:\\d+$/)) {\n                    url = url.replace(/:\\d+$/, '');\n                }\n                url += ':' + port;\n            }\n            url += path;\n            this.ws = null;\n            this.wsurl = url;\n            this.wsqueue = {};\n            this.destroying = false;\n        }\n        destroy() {\n            if (!this.destroying) {\n                if (this.ws) {\n                    this.ws.close();\n                }\n                this.ws = null;\n                this.wsqueue = {};\n            }\n            this.destroying = true;\n            return super.destroy.apply(this, arguments);\n        }\n        init() {\n            this.destroying = false;\n            return new Promise((resolve, reject) => {\n                this._connect(false, (err, res) => {\n                    if (err) {\n                        reject(err instanceof Error ? err : new Error(err));\n                    } else {\n                        resolve(res);\n                    }\n                });\n            });\n        }\n        _connect(reconnect, callback) {\n            if (this.destroying || this.ws && !reconnect) {\n                return;\n            }\n            console.info('Trying WebSocket Connection', this.wsurl);\n            let connected = false;\n            this.ws = new WebSocket(this.wsurl);\n            this.ws.onopen = function (ev) {\n                connected = true;\n                setTimeout(() => callback(false), 0);\n            };\n            this.ws.onmessage = ev => {\n                console.debug('websocket open', ev);\n                const data = JSON.parse(ev.data);\n                const idx = data._index;\n                this._onmessage(idx, data);\n            };\n            this.ws.onerror = ev => {\n                console.error('websocket error', ev);\n            };\n            this.ws.onclose = ev => {\n                console.debug('websocket close', ev);\n                if (!connected && ev.code !== 3001) {\n                    callback(Locales._('CONNECTION_ERROR'));\n                    return;\n                }\n                this._onclose();\n            };\n        }\n        _onmessage(idx, data) {\n            if (typeof idx === 'undefined') {\n                this.message(data);\n            } else {\n                if (this.wsqueue[idx]) {\n                    delete data._index;\n                    this.wsqueue[idx](false, data);\n                    delete this.wsqueue[idx];\n                }\n            }\n        }\n        _onclose(reconnecting) {\n            if (this.destroying) {\n                return;\n            }\n            this.onOffline(reconnecting);\n            this.ws = null;\n            setTimeout(() => {\n                this._connect(true, err => {\n                    if (err) {\n                        this._onclose((reconnecting || 0) + 1);\n                    } else {\n                        this.onOnline();\n                    }\n                });\n            }, reconnecting ? 10000 : 1000);\n        }\n        message(data) {\n            if (data.action === 'vfs:watch') {\n                VFS.triggerWatch(data.args.event, new FileMetadata(data.args.file));\n            }\n            if (this._evHandler) {\n                this._evHandler.emit(data.action, data.args);\n            }\n        }\n        createRequest(method, args, options) {\n            if (!this.ws) {\n                return Promise.reject(new Error('No websocket connection'));\n            }\n            if ([\n                    'FS:upload',\n                    'FS:get',\n                    'logout'\n                ].indexOf(method) !== -1) {\n                return super.createRequest(...arguments);\n            }\n            const idx = this.index++;\n            const base = method.match(/^FS:/) ? '/FS/' : '/API/';\n            try {\n                this.ws.send(JSON.stringify({\n                    _index: idx,\n                    path: base + method.replace(/^FS:/, ''),\n                    args: args\n                }));\n            } catch (e) {\n                return Promise.reject(e);\n            }\n            return new Promise((resolve, reject) => {\n                this.wsqueue[idx] = function (err, res) {\n                    return err ? reject(err) : resolve(res);\n                };\n            });\n        }\n    };\n});"]}