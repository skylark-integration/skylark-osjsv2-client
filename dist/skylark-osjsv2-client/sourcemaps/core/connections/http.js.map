{"version":3,"sources":["core/connections/http.js"],"names":["define","VFS","FileMetadata","Connection","[object Object]","module","method","args","result","appRef","indexOf","arg","source","destination","triggerWatch","super","onVFSRequestCompleted","arguments"],"mappings":";;;;;;;AAAAA,QACI,eACA,iBACA,iBACD,SAAUC,EAAKC,EAAcC,GAC5B,aACA,qBAAoCA,EAChCC,sBAAsBC,OAAQC,EAAQC,EAAMC,EAAQC,GAChD,IAO2B,KANnB,SACA,QACA,QACA,OACA,OACA,UACFC,QAAQJ,GAAgB,CAC1B,MAAMK,EAAiB,SAAXL,GACRM,OAAQL,EAAK,aAAcL,EAAeK,EAAK,GAAK,KACpDM,YAAaN,EAAK,aAAcL,EAAeK,EAAK,GAAK,MACzDA,EAAgB,SAAXD,EAAoB,EAAI,GACjCL,EAAIa,aAAaR,EAAQK,EAAKF,GAElC,OAAOM,MAAMC,yBAAyBC","file":"../../../core/connections/http.js","sourcesContent":["define([\n    '../../vfs/fs',\n    '../../vfs/file',\n    '../connection'\n], function (VFS, FileMetadata, Connection) {\n    'use strict';\n    return class HttpConnection extends Connection {\n        onVFSRequestCompleted(module, method, args, result, appRef) {\n            if ([\n                    'upload',\n                    'write',\n                    'mkdir',\n                    'copy',\n                    'move',\n                    'unlink'\n                ].indexOf(method) !== -1) {\n                const arg = method === 'move' ? {\n                    source: args[0] instanceof FileMetadata ? args[0] : null,\n                    destination: args[1] instanceof FileMetadata ? args[1] : null\n                } : args[method === 'copy' ? 1 : 0];\n                VFS.triggerWatch(method, arg, appRef);\n            }\n            return super.onVFSRequestCompleted(...arguments);\n        }\n    };\n});"]}