{"version":3,"sources":["core/config.js"],"names":["define","SimpleJSON","getConfig","path","defaultValue","config","OSjs","result","getJSON","Array","Object","assign","getDefaultPath","fallback","match","getBrowserPath","app","str","replace","getUserLocale","loc","window","navigator","userLanguage","language","map","nb","es","ru","en","major","split","minor","toUpperCase"],"mappings":";;;;;;;AAAAA,QAAQ,6BAA8B,SAAUC,GAC5C,aACA,SAASC,EAAUC,EAAMC,GACrB,MAAMC,EAASC,KAAKJ,YACpB,IAAKC,EACD,OAAOE,EAEX,MAAME,EAASN,EAAWO,QAAQH,EAAQF,EAAMC,GAChD,MAAyB,iBAAXG,GAAyBA,aAAkBE,MAAqCF,EAA5BG,OAAOC,UAAWJ,GA8BxF,OACIL,UAAWA,EACXU,eA9BJ,SAAwBC,GAIpB,OAHIA,GAAYA,EAASC,MAAM,SAC3BD,EAAW,MAERX,EAAU,aAAeW,GAAYX,EAAU,aA2BtDa,eAzBJ,SAAwBC,GACpB,IAAIC,EAAMf,EAAU,sBAIpB,MAHmB,iBAARc,IACPC,EAAMA,EAAIC,QAAQ,OAAQF,EAAIE,QAAQ,OAAQ,OAE3CD,GAqBPE,cAnBJ,WACI,MAAMC,GAAOC,OAAOC,UAAUC,cAAgBF,OAAOC,UAAUE,UAAY,SAASN,QAAQ,IAAK,KAC3FO,GACFC,GAAM,QACNC,GAAM,QACNC,GAAM,QACNC,GAAM,SAEJC,EAAQV,EAAIW,MAAM,KAAK,IAAM,KAC7BC,EAAQZ,EAAIW,MAAM,KAAK,IAAMD,EAAMG,cACzC,OAAIR,EAAIK,GACGL,EAAIK,GAERA,EAAQ,IAAME","file":"../../core/config.js","sourcesContent":["define(['../helpers/simplejsonconf'], function (SimpleJSON) {\n    'use strict';\n    function getConfig(path, defaultValue) {\n        const config = OSjs.getConfig();\n        if (!path) {\n            return config;\n        }\n        const result = SimpleJSON.getJSON(config, path, defaultValue);\n        return typeof result === 'object' && !(result instanceof Array) ? Object.assign({}, result) : result;\n    }\n    function getDefaultPath(fallback) {\n        if (fallback && fallback.match(/^\\//)) {\n            fallback = null;\n        }\n        return getConfig('VFS.Home') || fallback || getConfig('VFS.Dist');\n    }\n    function getBrowserPath(app) {\n        let str = getConfig('Connection.RootURI');\n        if (typeof app === 'string') {\n            str = str.replace(/\\/?$/, app.replace(/^\\/?/, '/'));\n        }\n        return str;\n    }\n    function getUserLocale() {\n        const loc = (window.navigator.userLanguage || window.navigator.language || 'en-EN').replace('-', '_');\n        const map = {\n            'nb': 'no_NO',\n            'es': 'es_ES',\n            'ru': 'ru_RU',\n            'en': 'en_EN'\n        };\n        const major = loc.split('_')[0] || 'en';\n        const minor = loc.split('_')[1] || major.toUpperCase();\n        if (map[major]) {\n            return map[major];\n        }\n        return major + '_' + minor;\n    }\n    return {\n        getConfig: getConfig,\n        getDefaultPath: getDefaultPath,\n        getBrowserPath: getBrowserPath,\n        getUserLocale: getUserLocale\n    };\n});"]}