{"version":3,"sources":["core/locales.js"],"names":["define","misc","DefaultLocale","CurrentLocale","CurrentRTL","_","userLocale","systemLocale","OSjs","require","e","console","warn","s","arguments","a","length","format","apply","stack","__","l","Array","prototype","slice","call","getLocale","setLocale","locale","major","split","html","document","querySelector","setAttribute","indexOf","info","createLocalizer","locales","args","unshift","init","options","languages","names","Object","keys","RTL","forEach","k","Locales"],"mappings":";;;;;;;AAAAA,QACI,iBACD,SAAUC,GACT,aACA,IAAIC,EAAgB,QAChBC,EAAgB,QAChBC,KACJ,SAASC,IACL,IAAIC,KACAC,KACJ,IACID,EAAaE,KAAKC,QAAQ,WAAaN,GACvCI,EAAeC,KAAKC,QAAQ,WAAaP,GAC3C,MAAOQ,GACLC,QAAQC,KAAK,eAAgBF,GAEjC,MAAMG,EAAIC,UAAU,GACpB,IAAIC,EAAID,UACR,IAMI,OALIR,GAAcA,EAAWO,GACzBE,EAAE,GAAKT,EAAWO,GAElBE,EAAE,GAAKR,EAAaM,IAAMA,EAEvBE,EAAEC,OAAS,EAAIf,EAAKgB,OAAOC,MAAM,KAAMH,GAAKA,EAAE,GACvD,MAAOL,GACLC,QAAQC,KAAKF,EAAES,MAAOT,GAE1B,OAAOG,EAEX,SAASO,IACL,MAAMC,EAAIP,UAAU,GACdD,EAAIC,UAAU,GACpB,IAAIC,EAAIO,MAAMC,UAAUC,MAAMC,KAAKX,UAAW,GAS9C,OARIO,EAAElB,IAAkBkB,EAAElB,GAAeU,GACrCE,EAAE,GAAKM,EAAElB,GAAeU,IAExBE,EAAE,GAAKM,EAAEnB,IAAiBmB,EAAEnB,GAAeW,IAAUA,EACjDE,EAAE,IAAMA,EAAE,KAAOF,IACjBE,EAAE,GAAKV,EAAEa,MAAM,KAAMH,KAGtBA,EAAEC,OAAS,EAAIf,EAAKgB,OAAOC,MAAM,KAAMH,GAAKA,EAAE,GA6CzD,OACIV,EAAGA,EACHe,GAAIA,EACJM,UA9CJ,WACI,OAAOvB,GA8CPwB,UA5CJ,SAAmBN,GACf,IAAIO,EACJ,IACIA,EAASpB,KAAKC,QAAQ,WAAaY,GACrC,MAAOX,GAEL,YADAC,QAAQC,KAAK,uBAAwBF,GAGrCkB,EACAzB,EAAgBkB,GAEhBV,QAAQC,KAAK,uBAAwB,iBAAkBS,EAAG,mBAC1DlB,EAAgBD,GAEpB,MAAM2B,EAAQ1B,EAAc2B,MAAM,KAAK,GACjCC,EAAOC,SAASC,cAAc,QAChCF,IACAA,EAAKG,aAAa,OAAQb,GAC1BU,EAAKG,aAAa,OAAsC,IAA/B9B,EAAW+B,QAAQN,GAAgB,MAAQ,QAExElB,QAAQyB,KAAK,uBAAwBjC,IAyBrCkC,gBAvBJ,SAAyBC,GACrB,OAAO,WACH,IAAIC,EAAOjB,MAAMC,UAAUC,MAAMC,KAAKX,UAAW,GAEjD,OADAyB,EAAKC,QAAQF,GACNlB,KAAMmB,KAoBjBE,KAjBJ,SAAcb,EAAQc,EAASC,GAC3BD,EAAUA,MACV,MAAME,EAAQD,EAAYE,OAAOC,KAAKH,MAClCC,aAAiBtB,QAAoC,IAA3BsB,EAAMT,QAAQP,KACxCzB,EAAgByB,GAEpBxB,EAAasC,EAAQK,QACrBH,EAAMI,QAAQC,IACVzC,KAAK0C,QAAQD,GAAKzC,KAAKC,QAAQ,WAAawC","file":"../../core/locales.js","sourcesContent":["define([\n    '../utils/misc'\n], function (misc) {\n    'use strict';\n    let DefaultLocale = 'en_EN';\n    let CurrentLocale = 'en_EN';\n    let CurrentRTL = [];\n    function _() {\n        let userLocale = {};\n        let systemLocale = {};\n        try {\n            userLocale = OSjs.require('locales/' + CurrentLocale ); // modified by lwf\n            systemLocale = OSjs.require('locales/' + DefaultLocale ); // modified by lwf\n        } catch (e) {\n            console.warn('Locale error', e);\n        }\n        const s = arguments[0];\n        let a = arguments;\n        try {\n            if (userLocale && userLocale[s]) {\n                a[0] = userLocale[s];\n            } else {\n                a[0] = systemLocale[s] || s;\n            }\n            return a.length > 1 ? misc.format.apply(null, a) : a[0];\n        } catch (e) {\n            console.warn(e.stack, e);\n        }\n        return s;\n    }\n    function __() {\n        const l = arguments[0];\n        const s = arguments[1];\n        let a = Array.prototype.slice.call(arguments, 1);\n        if (l[CurrentLocale] && l[CurrentLocale][s]) {\n            a[0] = l[CurrentLocale][s];\n        } else {\n            a[0] = l[DefaultLocale] ? l[DefaultLocale][s] || s : s;\n            if (a[0] && a[0] === s) {\n                a[0] = _.apply(null, a);\n            }\n        }\n        return a.length > 1 ? misc.format.apply(null, a) : a[0];\n    }\n    function getLocale() {\n        return CurrentLocale;\n    }\n    function setLocale(l) {\n        let locale;\n        try {\n            locale = OSjs.require('locales/' + l); // modified by lwf\n        } catch (e) {\n            console.warn('Failed to set locale', e);\n            return;\n        }\n        if (locale) {\n            CurrentLocale = l;\n        } else {\n            console.warn('Locales::setLocale()', 'Invalid locale', l, '(Using default)');\n            CurrentLocale = DefaultLocale;\n        }\n        const major = CurrentLocale.split('_')[0];\n        const html = document.querySelector('html');\n        if (html) {\n            html.setAttribute('lang', l);\n            html.setAttribute('dir', CurrentRTL.indexOf(major) !== -1 ? 'rtl' : 'ltr');\n        }\n        console.info('Locales::setLocale()', CurrentLocale);\n    }\n    function createLocalizer(locales) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            args.unshift(locales);\n            return __(...args);\n        };\n    }\n    function init(locale, options, languages) {\n        options = options || {};\n        const names = languages ? Object.keys(languages) : {};\n        if (names instanceof Array && names.indexOf(locale) !== -1) {\n            CurrentLocale = locale;\n        }\n        CurrentRTL = options.RTL || [];\n        names.forEach(k => {\n            OSjs.Locales[k] = OSjs.require('locales/' + k);//modified by lwf\n        });\n    }\n    return {\n        _: _,\n        __: __,\n        getLocale: getLocale,\n        setLocale: setLocale,\n        createLocalizer: createLocalizer,\n        init: init\n    };\n});"]}