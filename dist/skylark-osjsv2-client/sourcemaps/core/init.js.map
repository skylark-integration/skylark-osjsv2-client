{"version":3,"sources":["core/init.js"],"names":["define","Locales","MountManager","SettingsManager","PackageManager","SearchEngine","Authenticator","WindowManager","DialogWindow","Storage","Process","Theme","Connection","Hooks","Config","SplashScreen","Utils","Menu","Notification","Preloader","AlertDialog","ApplicationChooserDialog","ColorDialog","ConfirmDialog","ErrorDialog","FileInfoDialog","FileDialog","FileProgressDialog","FileUploadDialog","FontDialog","InputDialog","VFS","WebTransport","OsjsTransport","DistTransport","ApplicationTransport","WebdavTransport","GdriveTransport","OnedriveTransport","DropboxTransport","OSJS_DEBUG","loadTransports","web","default","osjs","dist","applications","webdav","google-drive","onedrive","dropbox","Promise","each","arr","fn","Array","isArray","length","resolve","reduce","prev","cur","idx","then","reject","Error","hasBooted","hasShutDown","onError","title","message","error","exception","bugreport","getConfig","blur","match","String","lineNumber","console","window","location","hash","wm","instance","_fullyLoaded","create","e","warn","stack","_dialog","alert","initPreloading","config","flatten","list","a","b","concat","preload","Preloads","result","catch","initHandlers","options","log","authenticator","connection","storage","connectionName","split","indexOf","OSjs","require","iter","init","initVFS","mountPoints","get","res","addList","initSettingsManager","pools","Object","keys","forEach","poolName","debug","initPackageManager","PreloadOnBoot","metadata","getManifest","auth","isStandalone","next","pkg","getPackage","initExtensions","packages","getPackages","preloads","k","type","preloadExtensions","exts","Extensions","entry","yes","no","m","promise","err","launchExtensions","initSearchEngine","initGUI","f","gel","name","register","Dialogs","Alert","ApplicationChooser","Color","Confirm","File","FileInfo","FileProgress","FileUpload","Font","Input","initWindowManager","wmConfig","exec","args","app","setup","_","initMocha","div","document","createElement","id","body","appendChild","style","overflow","backgroundColor","runTests","onMessage","ev","data","pid","proc","getProcess","onPostMessage","_getWindow","win","wid","start","info","testMode","Locale","LocaleOptions","Languages","watermark","show","triggerHook","index","group","update","groupEnd","addEventListener","hide","playSound","AutoStart","checkMap","skipMap","push","getLastSession","adds","refid","ref","mergeObject","createFromArray","initSession","stop","restart","removeEventListener","toggleFullscreen","clear","killAll","destroy","reload","save","lout","cb","logout","saveSession","signOut","user","getUser","btn","running"],"mappings":"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","file":"../../core/init.js","sourcesContent":["define([\n    './locales',\n    './mount-manager',\n    './settings-manager',\n    './package-manager',\n    './search-engine',\n    './authenticator',\n    './window-manager',\n    './dialog',\n    './storage',\n    './process',\n    './theme',\n    './connection',\n    '../helpers/hooks',\n    './config',\n    '../gui/splash',\n    '../utils/misc',\n    '../gui/menu',\n    '../gui/notification',\n    '../utils/preloader',\n    '../dialogs/alert',\n    '../dialogs/applicationchooser',\n    '../dialogs/color',\n    '../dialogs/confirm',\n    '../dialogs/error',\n    '../dialogs/fileinfo',\n    '../dialogs/file',\n    '../dialogs/fileprogress',\n    '../dialogs/fileupload',\n    '../dialogs/font',\n    '../dialogs/input',\n    \"../vfs/fs\",\n    \"../vfs/transports/web\",\n    \"../vfs/transports/osjs\",\n    \"../vfs/transports/dist\",\n    \"../vfs/transports/applications\",\n    \"../vfs/transports/webdav\",\n    \"../vfs/transports/google-drive\",\n    \"../vfs/transports/onedrive\",\n    \"../vfs/transports/dropbox\"\n\n\n], function (\n    Locales, \n    MountManager, \n    SettingsManager, \n    PackageManager, \n    SearchEngine, \n    Authenticator, \n    WindowManager, \n    DialogWindow, \n    Storage, \n    Process, \n    Theme, \n    Connection, \n    Hooks, \n    Config, \n    SplashScreen, \n    Utils, \n    Menu, \n    Notification,\n    Preloader, \n    AlertDialog, \n    ApplicationChooserDialog, \n    ColorDialog, \n    ConfirmDialog, \n    ErrorDialog, \n    FileInfoDialog, \n    FileDialog, \n    FileProgressDialog, \n    FileUploadDialog, \n    FontDialog, \n    InputDialog,\n    VFS,\n    WebTransport,\n    OsjsTransport,\n    DistTransport,\n    ApplicationTransport,\n    WebdavTransport,\n    GdriveTransport,\n    OnedriveTransport,\n    DropboxTransport\n) {\n    'use strict';\n\n   const  OSJS_DEBUG = false;\n\n    Promise.each = function(arr, fn) { // take an array and a function // added by lwf\n      // invalid input\n      if(!Array.isArray(arr)) return Promise.reject(new Error(\"Non array passed to each\"));\n      // empty case\n      if(arr.length === 0) return Promise.resolve(); \n      return arr.reduce(function(prev, cur,idx) { \n        return prev.then(() => fn(cur,idx))\n      }, Promise.resolve());\n    }\n\n    function loadTransports() {\n        const result = {\n            'web' : WebdavTransport.default,\n            'osjs' : OnedriveTransport.default,\n            'dist' : DistTransport.default,\n            'applications' : ApplicationTransport.default,\n            'webdav' : WebdavTransport.default,\n            'google-drive' : GdriveTransport.default,\n            'onedrive' : OnedriveTransport.default,\n            'dropbox' : DropboxTransport.default\n        };\n\n        return result;\n    }\n\n    let hasBooted = false;\n    let hasShutDown = false;\n    function onError(title, message, error, exception, bugreport) {\n        bugreport = (() => {\n            if (Config.getConfig('BugReporting.enabled')) {\n                return typeof bugreport === 'undefined' ? false : bugreport ? true : false;\n            }\n            return false;\n        })();\n        function _dialog() {\n            const wm = WindowManager.instance;\n            if (wm && wm._fullyLoaded) {\n                try {\n                    DialogWindow.create('Error', {\n                        title: title,\n                        message: message,\n                        error: error,\n                        exception: exception,\n                        bugreport: bugreport\n                    });\n                    return true;\n                } catch (e) {\n                    console.warn('An error occured while creating Error Dialog', e);\n                    console.warn('stack', e.stack);\n                }\n            }\n            return false;\n        }\n        Menu.blur();\n        if (exception instanceof Error && (exception.message.match(/^Script Error/i) && String(exception.lineNumber).match(/^0/))) {\n            console.error('VENDOR ERROR', {\n                title: title,\n                message: message,\n                error: error,\n                exception: exception\n            });\n            return;\n        } else {\n            console.error(title, message, error, exception);\n        }\n        const testMode = OSJS_DEBUG && window.location.hash.match(/mocha=true/);\n        if (!testMode) {\n            if (!_dialog()) {\n                window.alert(title + '\\n\\n' + message + '\\n\\n' + error);\n            }\n        }\n    }\n    const initPreloading = config => new Promise((resolve, reject) => {\n        const flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n        Preloader.preload(flatten(config.Preloads)).then(result => {\n            return resolve();\n        }).catch(reject);\n    });\n    const initHandlers = config => new Promise((resolve, reject) => {\n        const options = config.Connection;\n        console.log({\n            authenticator: options.Authenticator,\n            connection: options.Connection,\n            storage: options.Storage\n        });\n        let Authenticator, Connection, Storage;\n        let connectionName = options.Connection.split('+').indexOf('ws') !== -1 ? 'ws' : 'http';\n        try {\n            Authenticator = OSjs.require('core/auth/' + options.Authenticator); // modified by lwf\n            Connection = OSjs.require('core/connections/' + connectionName); // modified by lwf\n            Storage = OSjs.require('core/storage/' + options.Storage ); // modified by lwf\n        } catch (e) {\n            reject(e);\n            return;\n        }\n        const connection = new Connection();\n        const authenticator = new Authenticator();\n        const storage = new Storage();\n        Promise.each([\n            connection,\n            storage,\n            authenticator\n        ], iter => {\n            return iter.init();\n        }).then(resolve).catch(reject);\n    });\n    const initVFS = config => new Promise((resolve, reject) => {\n        const mountPoints = SettingsManager.instance('VFS').get('mounts', []);\n        MountManager.init(loadTransports).then(res => {  // modified by lwf\n            return MountManager.addList(mountPoints).then(res => {\n                return resolve(res);\n            }).catch(e => {\n                console.warn('A module failed to load!', e);\n                resolve();\n            });\n        }).catch(reject);\n    });\n    const initSettingsManager = config => new Promise((resolve, reject) => {\n        const pools = config.SettingsManager || {};\n        Object.keys(pools).forEach(function (poolName) {\n            console.debug('initSettingsManager()', 'initializes pool', poolName, pools[poolName]);\n            SettingsManager.instance(poolName, pools[poolName] || {});\n        });\n        resolve();\n    });\n    const initPackageManager = config => new Promise((resolve, reject) => {\n        const list = config.PreloadOnBoot || [];\n        let metadata = {};\n        try {\n            metadata = OSjs.getManifest();\n        } catch (e) {\n        }\n        const auth = Authenticator.instance;\n        PackageManager.init(Authenticator,VFS,metadata, auth.isStandalone).then(() => { //modified by lwf\n            return Promise.each(list, iter => {\n                return new Promise(next => {\n                    var pkg = PackageManager.getPackage(iter);\n                    if (pkg && pkg.preload) {\n                        Preloader.preload(pkg.preload).then(next).catch(() => next());\n                    } else {\n                        next();\n                    }\n                });\n            }).then(resolve).catch(reject);\n        }).catch(reject);\n    });\n    const initExtensions = config => new Promise((resolve, reject) => {\n        const packages = PackageManager.getPackages(); \n        const preloadExtensions = () => new Promise((resolve, reject) => {\n            let preloads = [];\n            Object.keys(packages).forEach(k => {\n                const iter = packages[k];\n                if (iter.type === 'extension' && iter.preload) {\n                    preloads = preloads.concat(iter.preload);\n                }\n            });\n            if (preloads.length) {\n                Preloader.preload(preloads).then(resolve).catch(() => resolve());\n            } else {\n                resolve();\n            }\n        });\n        const launchExtensions = () => new Promise((resolve, reject) => {\n            const exts = Object.keys(OSjs.Extensions);\n            Promise.each(exts, entry => {\n                return new Promise((yes, no) => {\n                    try {\n                        const m = packages[entry];\n                        let promise = OSjs.Extensions[entry].init(m);\n                        if (!(promise instanceof Promise)) {\n                            promise = Promise.resolve(true);\n                        }\n                        promise.then(yes).catch(err => {\n                            console.error(err);\n                            return yes(false);\n                        });\n                    } catch (e) {\n                        console.warn('Extension init failed', e.stack, e);\n                        yes(false);\n                    }\n                });\n            }).then(resolve).catch(err => {\n                console.warn(err);\n                reject(new Error(err));\n            });\n        });\n        preloadExtensions().then(() => {\n            return launchExtensions().then(resolve).catch(reject);\n        }).catch(() => resolve());\n    });\n    const initSearchEngine = config => new Promise((resolve, reject) => {\n        SearchEngine.init().then(resolve).catch(reject);\n    });\n    const initGUI = config => new Promise((resolve, reject) => {\n        const guiElements = [\n            'containers',\n            'visual',\n            'tabs',\n            'richtext',\n            'misc',\n            'inputs',\n            'treeview',\n            'listview',\n            'iconview',\n            'fileview',\n            'menus'\n        ];\n        guiElements.forEach(f => {\n            const gel = OSjs.require('gui/elements/' + f); // modified by lwf\n            Object.keys(gel).forEach(name => {\n                gel[name].register();\n            });\n        });\n        OSjs.error = onError;\n        OSjs.Dialogs.Alert = AlertDialog;\n        OSjs.Dialogs.ApplicationChooser = ApplicationChooserDialog;\n        OSjs.Dialogs.Color = ColorDialog;\n        OSjs.Dialogs.Confirm = ConfirmDialog;\n        OSjs.Dialogs.Error = ErrorDialog;\n        OSjs.Dialogs.File = FileDialog;\n        OSjs.Dialogs.FileInfo = FileInfoDialog;\n        OSjs.Dialogs.FileProgress = FileProgressDialog;\n        OSjs.Dialogs.FileUpload = FileUploadDialog;\n        OSjs.Dialogs.Font = FontDialog;\n        OSjs.Dialogs.Input = InputDialog;\n        Theme.init(VFS); // modified by lwf\n        resolve();\n    });\n    const initWindowManager = config => new Promise((resolve, reject) => {\n        const wmConfig = config.WindowManager;\n        if (!wmConfig || !wmConfig.exec) {\n            reject(new Error(Locales._('ERR_CORE_INIT_NO_WM')));\n        } else {\n            Process.create(wmConfig.exec, wmConfig.args || {}).then(app => {\n                return app.setup().then(resolve).catch(reject);\n            }).catch(error => {\n                reject(new Error(Locales._('ERR_CORE_INIT_WM_FAILED_FMT', error)));\n            });\n        }\n    });\n    const initMocha = config => new Promise((resolve, reject) => {\n        const div = document.createElement('div');\n        div.id = 'mocha';\n        document.body.appendChild(div);\n        document.body.style.overflow = 'auto';\n        document.body.style.backgroundColor = '#ffffff';\n        Preloader.preload([\n            '/test.css',\n            '/test.js'\n        ]).then(() => {\n            OSjs.runTests();\n        });\n        resolve(true);\n    });\n    function initSession(config) {\n        console.debug('initSession()');\n        var list = [];\n        try {\n            list = config.AutoStart;\n        } catch (e) {\n            console.warn('initSession()->autostart()', 'exception', e, e.stack);\n        }\n        var checkMap = {};\n        var skipMap = [];\n        list.forEach(function (iter, idx) {\n            if (typeof iter === 'string') {\n                iter = list[idx] = { name: iter };\n            }\n            if (skipMap.indexOf(iter.name) === -1) {\n                if (!checkMap[iter.name]) {\n                    checkMap[iter.name] = idx;\n                    skipMap.push(iter.name);\n                }\n            }\n        });\n        return new Promise(resolve => {\n            Storage.instance.getLastSession(SettingsManager).then(adds => {  // modified by lwf\n                adds.forEach(function (iter) {\n                    if (typeof checkMap[iter.name] === 'undefined') {\n                        list.push(iter);\n                    } else {\n                        if (iter.args) {\n                            var refid = checkMap[iter.name];\n                            var ref = list[refid];\n                            if (!ref.args) {\n                                ref.args = {};\n                            }\n                            ref.args = Utils.mergeObject(ref.args, iter.args);\n                        }\n                    }\n                });\n                console.info('initSession()->autostart()', list);\n                return Process.createFromArray(list).then(resolve).catch(resolve);\n            }).catch(err => {\n                console.warn(err);\n                resolve();\n            });\n        });\n    }\n    function onMessage(ev) {\n        if (ev && ev.data && typeof ev.data.message !== 'undefined' && typeof ev.data.pid === 'number') {\n            console.debug('window::message()', ev.data);\n            var proc = Process.getProcess(ev.data.pid);\n            if (proc) {\n                if (typeof proc.onPostMessage === 'function') {\n                    proc.onPostMessage(ev.data.message, ev);\n                }\n                if (typeof proc._getWindow === 'function') {\n                    var win = proc._getWindow(ev.data.wid, 'wid');\n                    if (win) {\n                        win.onPostMessage(ev.data.message, ev);\n                    }\n                }\n            }\n        }\n    }\n    function start() {\n        if (hasBooted || hasShutDown) {\n            return;\n        }\n        hasBooted = true;\n        console.info('Starting OS.js');\n        const config = OSjs.getConfig();\n        const testMode = OSJS_DEBUG && window.location.hash.match(/mocha=true/);\n        const total = 9;\n        Locales.init(config.Locale, config.LocaleOptions, config.Languages);\n        SplashScreen.watermark(config);\n        SplashScreen.show();\n        Hooks.triggerHook('initialize');\n        Promise.each([\n            initPreloading,\n            initHandlers,\n            initVFS,\n            initSettingsManager,\n            initPackageManager,\n            initExtensions,\n            initSearchEngine,\n            initGUI,\n            testMode ? initMocha : initWindowManager\n        ], (fn, index) => {\n            return new Promise((resolve, reject) => {\n                console.group('Initializing', index + 1, 'of', total);\n                SplashScreen.update(index, total);\n                return fn(config).then(res => {\n                    console.groupEnd();\n                    return resolve(res);\n                }).catch(err => {\n                    console.warn(err);\n                    console.groupEnd();\n                    return reject(new Error(err));\n                });\n            });\n        }).then(() => {\n            console.info('Done!');\n            window.addEventListener('message', onMessage, false);\n            Hooks.triggerHook('initialized');\n            SplashScreen.hide();\n            if (!testMode) {\n                Theme.playSound('LOGIN');\n                var wm = WindowManager.instance;\n                if (wm) {\n                    wm._fullyLoaded = true;\n                }\n                initSession(config).then(() => {\n                    return Hooks.triggerHook('sessionLoaded');\n                });\n            }\n            return true;\n        }).catch(err => {\n            const title = Locales._('ERR_CORE_INIT_FAILED');\n            const message = Locales._('ERR_CORE_INIT_FAILED_DESC');\n            alert(title + '\\n\\n' + message);\n            console.error(title, message, err);\n        });\n    }\n    function stop(restart = false) {\n        if (hasShutDown || !hasBooted) {\n            return;\n        }\n        hasShutDown = true;\n        hasBooted = false;\n        window.removeEventListener('message', onMessage, false);\n        const wm = WindowManager.instance;\n        if (wm) {\n            wm.toggleFullscreen();\n        }\n        Preloader.clear();\n        Menu.blur();\n        Process.killAll();\n        SearchEngine.destroy();\n        PackageManager.destroy();\n        Authenticator.instance.destroy();\n        Storage.instance.destroy();\n        Connection.instance.destroy();\n        Hooks.triggerHook('shutdown');\n        console.warn('OS.js was shut down!');\n        if (!restart && Config.getConfig('ReloadOnShutdown') === true) {\n            window.location.reload();\n        }\n    }\n    function restart(save = false) {\n        const lout = cb => Authenticator.instance.logout().then(cb).catch(cb);\n        const saveFunction = save && Storage.instance ? function (cb) {\n            Storage.instance.saveSession().then(() => lout(cb)).catch(() => lout(cb));\n        } : lout;\n        saveFunction(function () {\n            console.clear();\n            stop(true);\n            start();\n        });\n    }\n    function logout() {\n        const storage = Storage.instance;\n        const wm = WindowManager.instance;\n        function signOut(save) {\n            Theme.playSound('LOGOUT');\n            const lout = cb => Authenticator.instance.logout().then(cb).catch(cb);\n            if (save) {\n                storage.saveSession(Process,SettingsManager).then(() => lout(stop)).catch(() => lout(stop)); // modified by lwf\n            } else {\n                lout(stop);\n            }\n        }\n        if (wm) {\n            const user = Authenticator.instance.getUser() || { name: Locales._('LBL_UNKNOWN') };\n            DialogWindow.create('Confirm', {\n                title: Locales._('DIALOG_LOGOUT_TITLE'),\n                message: Locales._('DIALOG_LOGOUT_MSG_FMT', user.name)\n            }, function (ev, btn) {\n                if ([\n                        'no',\n                        'yes'\n                    ].indexOf(btn) !== -1) {\n                    signOut(btn === 'yes');\n                }\n            });\n        } else {\n            signOut(true);\n        }\n    }\n    function running() {\n        return !hasShutDown;\n    }\n    return {\n        start: start,\n        stop: stop,\n        restart: restart,\n        logout: logout,\n        running: running\n    };\n});"]}