{"version":3,"sources":["utils/colors.js"],"names":["define","convertToRGB","hex","rgb","parseInt","replace","val","r","g","b","convertToHEX","Error","toString","Object","keys","forEach","i","length","join","toUpperCase","invertHEX","color","slice"],"mappings":";;;;;;;AAAAA,OAAO,WACH,aAqCA,OACIC,aArCJ,SAAsBC,GAClB,MAAMC,EAAMC,SAASF,EAAIG,QAAQ,IAAK,IAAK,IACrCC,KAIN,OAHAA,EAAIC,GAAKJ,EAAM,KAAO,KAAO,GAC7BG,EAAIE,GAAW,MAANL,IAAmB,EAC5BG,EAAIG,EAAU,IAANN,EACDG,GAgCPI,aA9BJ,SAAsBH,EAAGC,EAAGC,GAMxB,GALiB,iBAANF,IACPC,EAAID,EAAEC,EACNC,EAAIF,EAAEE,EACNF,EAAIA,EAAEA,QAEO,IAANA,QAAkC,IAANC,QAAkC,IAANC,EAC/D,MAAM,IAAIE,MAAM,0CAEpB,MAAMT,GACFE,SAASG,EAAG,IAAIK,SAAS,IACzBR,SAASI,EAAG,IAAII,SAAS,IACzBR,SAASK,EAAG,IAAIG,SAAS,KAO7B,OALAC,OAAOC,KAAKZ,GAAKa,QAAQC,IACC,IAAlBd,EAAIc,GAAGC,SACPf,EAAIc,GAAK,IAAMd,EAAIc,MAGpB,IAAMd,EAAIgB,KAAK,IAAIC,eAY1BC,UAVJ,SAAmBlB,GACf,IAAImB,EAAQjB,SAASF,EAAIG,QAAQ,IAAK,IAAK,IAI3C,MAAO,KADPgB,GAAS,UADTA,GADAA,GAAQ,UACMT,SAAS,MACIU,OAAO","file":"../../utils/colors.js","sourcesContent":["define(function () {\n    'use strict';\n    function convertToRGB(hex) {\n        const rgb = parseInt(hex.replace('#', ''), 16);\n        const val = {};\n        val.r = (rgb & 255 << 16) >> 16;\n        val.g = (rgb & 255 << 8) >> 8;\n        val.b = rgb & 255;\n        return val;\n    }\n    function convertToHEX(r, g, b) {\n        if (typeof r === 'object') {\n            g = r.g;\n            b = r.b;\n            r = r.r;\n        }\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            throw new Error('Invalid RGB supplied to convertToHEX()');\n        }\n        const hex = [\n            parseInt(r, 10).toString(16),\n            parseInt(g, 10).toString(16),\n            parseInt(b, 10).toString(16)\n        ];\n        Object.keys(hex).forEach(i => {\n            if (hex[i].length === 1) {\n                hex[i] = '0' + hex[i];\n            }\n        });\n        return '#' + hex.join('').toUpperCase();\n    }\n    function invertHEX(hex) {\n        let color = parseInt(hex.replace('#', ''), 16);\n        color = 16777215 ^ color;\n        color = color.toString(16);\n        color = ('000000' + color).slice(-6);\n        return '#' + color;\n    }\n    return {\n        convertToRGB: convertToRGB,\n        convertToHEX: convertToHEX,\n        invertHEX: invertHEX\n    };\n});"]}