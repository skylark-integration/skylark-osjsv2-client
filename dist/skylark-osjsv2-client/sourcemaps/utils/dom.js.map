{"version":3,"sources":["utils/dom.js"],"names":["define","$getStyle","oElm","strCssRule","strValue","document","defaultView","getComputedStyle","getPropertyValue","currentStyle","replace","strMatch","p1","toUpperCase","$","id","getElementById","$safeName","str","$remove","node","remove","parentNode","removeChild","$empty","myNode","firstChild","$position","el","parentEl","result","left","top","width","offsetWidth","height","offsetHeight","offsetLeft","offsetTop","offsetParent","getBoundingClientRect","$parent","cb","current","$index","Array","prototype","slice","call","children","indexOf","$selectRange","field","start","end","Error","createTextRange","selRange","collapse","moveStart","moveEnd","select","focus","setSelectionRange","selectionStart","selectionEnd","$addClass","name","split","forEach","n","classList","add","$removeClass","$hasClass","every","contains","$escape","div","createElement","appendChild","createTextNode","innerHTML","$create","tagName","properties","element","_foreach","dict","l","Object","keys","String","style","key","val","aria","setAttribute","data","$createCSS","src","onload","onerror","link","getElementsByTagName","$createJS","onreadystatechange","attrs","res","assign","type","charset","k","$isFormElement","input","types","window","Event","srcElement","target","Element","readOnly","disabled","$css","ink","inv","rep","obj","arguments","length","$path","_path","e","body","ix","siblings","childNodes","i","sibling","nodeType","$fromPath","path","doc","XPathEvaluator","evaluate","documentElement","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","$clean","html"],"mappings":"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","file":"../../utils/dom.js","sourcesContent":["define(function () {\n    'use strict';\n    function $(id) {\n        return document.getElementById(id);\n    }\n    function $safeName(str) {\n        return (str || '').replace(/[^a-zA-Z0-9]/g, '_');\n    }\n    function $remove(node) {\n        if (node) {\n            if (typeof node.remove === 'function') {\n                node.remove();\n            } else if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        }\n    }\n    function $empty(myNode) {\n        if (myNode) {\n            while (myNode.firstChild) {\n                myNode.removeChild(myNode.firstChild);\n            }\n        }\n    }\n    function $getStyle(oElm, strCssRule) {\n        let strValue = '';\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            strValue = document.defaultView.getComputedStyle(oElm, '').getPropertyValue(strCssRule);\n        } else if (oElm.currentStyle) {\n            strCssRule = strCssRule.replace(/\\-(\\w)/g, (strMatch, p1) => {\n                return p1.toUpperCase();\n            });\n            strValue = oElm.currentStyle[strCssRule];\n        }\n        return strValue;\n    }\n    function $position(el, parentEl) {\n        if (el) {\n            if (parentEl) {\n                const result = {\n                    left: 0,\n                    top: 0,\n                    width: el.offsetWidth,\n                    height: el.offsetHeight\n                };\n                while (true) {\n                    result.left += el.offsetLeft;\n                    result.top += el.offsetTop;\n                    if (el.offsetParent === parentEl || el.offsetParent === null) {\n                        break;\n                    }\n                    el = el.offsetParent;\n                }\n                return result;\n            }\n            return el.getBoundingClientRect();\n        }\n        return null;\n    }\n    function $parent(el, cb) {\n        let result = null;\n        if (el && cb) {\n            let current = el;\n            while (current.parentNode) {\n                if (cb(current)) {\n                    result = current;\n                    break;\n                }\n                current = current.parentNode;\n            }\n        }\n        return result;\n    }\n    function $index(el, parentEl) {\n        if (el) {\n            parentEl = parentEl || el.parentNode;\n            if (parentEl) {\n                const nodeList = Array.prototype.slice.call(parentEl.children);\n                const nodeIndex = nodeList.indexOf(el, parentEl);\n                return nodeIndex;\n            }\n        }\n        return -1;\n    }\n    function $selectRange(field, start, end) {\n        if (!field) {\n            throw new Error('Cannot select range: missing element');\n        }\n        if (typeof start === 'undefined' || typeof end === 'undefined') {\n            throw new Error('Cannot select range: mising start/end');\n        }\n        if (field.createTextRange) {\n            const selRange = field.createTextRange();\n            selRange.collapse(true);\n            selRange.moveStart('character', start);\n            selRange.moveEnd('character', end);\n            selRange.select();\n            field.focus();\n        } else if (field.setSelectionRange) {\n            field.focus();\n            field.setSelectionRange(start, end);\n        } else if (typeof field.selectionStart !== 'undefined') {\n            field.selectionStart = start;\n            field.selectionEnd = end;\n            field.focus();\n        }\n    }\n    function $addClass(el, name) {\n        if (el) {\n            name.split(' ').forEach(n => {\n                el.classList.add(n);\n            });\n        }\n    }\n    function $removeClass(el, name) {\n        if (el) {\n            name.split(' ').forEach(n => {\n                el.classList.remove(n);\n            });\n        }\n    }\n    function $hasClass(el, name) {\n        if (el && name) {\n            return name.split(' ').every(n => {\n                return el.classList.contains(n);\n            });\n        }\n        return false;\n    }\n    function $escape(str) {\n        const div = document.createElement('div');\n        div.appendChild(document.createTextNode(str));\n        return div.innerHTML;\n    }\n    function $create(tagName, properties) {\n        const element = document.createElement(tagName);\n        function _foreach(dict, l) {\n            dict = dict || {};\n            Object.keys(dict).forEach(name => {\n                l(name.replace(/_/g, '-'), String(dict[name]));\n            });\n        }\n        _foreach(properties.style, (key, val) => {\n            element.style[key] = val;\n        });\n        _foreach(properties.aria, (key, val) => {\n            if (['role'].indexOf(key) !== -1) {\n                key = 'aria-' + key;\n            }\n            element.setAttribute(key, val);\n        });\n        _foreach(properties.data, (key, val) => {\n            element.setAttribute('data-' + key, val);\n        });\n        _foreach(properties, (key, val) => {\n            if ([\n                    'style',\n                    'aria',\n                    'data'\n                ].indexOf(key) === -1) {\n                element[key] = val;\n            }\n        });\n        return element;\n    }\n    function $createCSS(src, onload, onerror) {\n        const link = document.createElement('link');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.onload = onload || function () {\n        };\n        link.onerror = onerror || function () {\n        };\n        link.setAttribute('href', src);\n        document.getElementsByTagName('head')[0].appendChild(link);\n        return link;\n    }\n    function $createJS(src, onreadystatechange, onload, onerror, attrs) {\n        const res = document.createElement('script');\n        res.onreadystatechange = onreadystatechange || function () {\n        };\n        res.onerror = onerror || function () {\n        };\n        res.onload = onload || function () {\n        };\n        attrs = Object.assign({}, {\n            type: 'text/javascript',\n            charset: 'utf-8',\n            src: src\n        }, attrs || {});\n        Object.keys(attrs).forEach(k => {\n            res[k] = String(attrs[k]);\n        });\n        document.getElementsByTagName('head')[0].appendChild(res);\n        return res;\n    }\n    function $isFormElement(input, types) {\n        types = types || [\n            'TEXTAREA',\n            'INPUT',\n            'SELECT'\n        ];\n        if (input instanceof window.Event) {\n            input = input.srcElement || input.target;\n        }\n        if (input instanceof window.Element) {\n            if (types.indexOf(input.tagName.toUpperCase()) >= 0) {\n                if (!(input.readOnly || input.disabled)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    function $css(el, ink, inv) {\n        function rep(k) {\n            return k.replace(/\\-(\\w)/g, (strMatch, p1) => {\n                return p1.toUpperCase();\n            });\n        }\n        let obj = {};\n        if (arguments.length === 2) {\n            if (typeof ink === 'string') {\n                return el.parentNode ? $getStyle(el, ink) : el.style[rep(ink)];\n            }\n            obj = ink;\n        } else if (arguments.length === 3) {\n            obj[ink] = inv;\n        }\n        Object.keys(obj).forEach(k => {\n            el.style[rep(k)] = String(obj[k]);\n        });\n        return null;\n    }\n    function $path(el) {\n        function _path(e) {\n            if (e === document.body) {\n                return e.tagName;\n            } else if (e === window) {\n                return 'WINDOW';\n            } else if (e === document) {\n                return 'DOCUMENT';\n            }\n            if (e.id !== '') {\n                return 'id(\"' + e.id + '\")';\n            }\n            let ix = 0;\n            const siblings = e.parentNode ? e.parentNode.childNodes : [];\n            for (let i = 0; i < siblings.length; i++) {\n                const sibling = siblings[i];\n                if (sibling === e) {\n                    return _path(e.parentNode) + '/' + e.tagName + '[' + (ix + 1) + ']';\n                }\n                if (sibling.nodeType === 1 && sibling.tagName === e.tagName) {\n                    ix++;\n                }\n            }\n            return null;\n        }\n        return _path(el);\n    }\n    function $fromPath(path, doc) {\n        doc = doc || document;\n        const evaluator = new XPathEvaluator();\n        const result = evaluator.evaluate(path, doc.documentElement, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);\n        return result.singleNodeValue;\n    }\n    function $clean(html) {\n        if (typeof html !== 'string') {\n            html = html.innerHTML;\n        }\n        return (html || '').replace(/\\n/g, '').replace(/[\\t ]+</g, '<').replace(/\\>[\\t ]+</g, '><').replace(/\\>[\\t ]+$/g, '>');\n    }\n    return {\n        $: $,\n        $safeName: $safeName,\n        $remove: $remove,\n        $empty: $empty,\n        $getStyle: $getStyle,\n        $position: $position,\n        $parent: $parent,\n        $index: $index,\n        $selectRange: $selectRange,\n        $addClass: $addClass,\n        $removeClass: $removeClass,\n        $hasClass: $hasClass,\n        $escape: $escape,\n        $create: $create,\n        $createCSS: $createCSS,\n        $createJS: $createJS,\n        $isFormElement: $isFormElement,\n        $css: $css,\n        $path: $path,\n        $fromPath: $fromPath,\n        $clean: $clean\n    };\n});"]}