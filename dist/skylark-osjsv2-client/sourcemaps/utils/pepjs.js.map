{"version":3,"sources":["utils/pepjs.js"],"names":["define","MOUSE_PROPS","MOUSE_DEFAULTS","PointerEvent","inType","inDict","Object","create","e","document","createEvent","initEvent","bubbles","cancelable","p","i","length","buttons","pressure","x","clientX","y","clientY","pointerId","width","height","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","PointerMap","window","Map","prototype","forEach","SparseArrayMap","this","array","size","set","k","v","undefined","delete","has","get","clear","callback","thisArg","call","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","name","source","s","newEvents","events","bind","push","register","element","es","l","unregister","contains","container","contained","ex","down","inEvent","fireEvent","move","up","enter","leave","over","out","cancel","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","type","fn","listen","target","addEvent","unlisten","removeEvent","eventName","addEventListener","boundHandler","removeEventListener","makeEvent","relatedTarget","preventDefault","_target","dispatchEvent","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","parentNode","reverse","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","t","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","se","querySelector","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","nodeType","Node","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","Array","map","toArray","slice","filter","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","add","remove","changed","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","shadowSelector","selector","rule","watchSubtree","observe","enableOnSubtree","readyState","installOnLoad","installNewSubtree","findElements","addElement","querySelectorAll","removeElement","el","elementChanged","oldValue","concatLists","accum","list","concat","isElement","n","ELEMENT_NODE","flattenMutationTree","inNodes","tree","reduce","mutations","mutationHandler","m","addedNodes","removedNodes","attrib2css","selectors","styles","hasNativePE","MSPointerEvent","hasShadowRoot","ShadowDOMPolyfill","head","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","MouseEvent","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","dx","Math","abs","dy","prepareEvent","pd","prepareButtonsForMove","which","mousedown","button","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","a","getAttribute","touchActionToScrollType","_scrollType","elementRemoved","oldSt","scrollTypes","EMITTER","XSCROLLER","YSCROLLER","SCROLLER","touchAction","exec","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","cancelResetClickCount","removePrimaryPointer","inPointer","resetClickCount","clickCount","resetId","setTimeout","clearTimeout","typeToButtons","ret","touchToPointer","cte","currentTouchEvent","id","detail","radiusX","webkitRadiusX","radiusY","webkitRadiusY","force","webkitForce","altKey","ctrlKey","metaKey","shiftKey","self","processTouches","inFunction","tl","changedTouches","shouldScroll","scrollAxis","currentTarget","oa","findTouch","inTL","inId","vacuumTouches","touches","d","value","key","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","indexOf","splice","r","h","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","error","Error","assertConnected","elem","parent","ownerDocument","inActiveButtonState","navigator","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","String","createElement","textContent","appendChild","applyAttributeStyles","tp","msMaxTouchPoints","defineProperty","enumerable","ontouchstart","applyPolyfill","Element","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","targetFinding"],"mappings":"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","file":"../../utils/pepjs.js","sourcesContent":["define([], function () { \r\n  'use strict';\r\n\r\n  /**\r\n   * This is the constructor for new PointerEvents.\r\n   *\r\n   * New Pointer Events must be given a type, and an optional dictionary of\r\n   * initialization properties.\r\n   *\r\n   * Due to certain platform requirements, events returned from the constructor\r\n   * identify as MouseEvents.\r\n   *\r\n   * @constructor\r\n   * @param {String} inType The type of the event to create.\r\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\r\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\r\n   */\r\n  var MOUSE_PROPS = [\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n    'pageX',\r\n    'pageY'\r\n  ];\r\n\r\n  var MOUSE_DEFAULTS = [\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  function PointerEvent(inType, inDict) {\r\n    inDict = inDict || Object.create(null);\r\n\r\n    var e = document.createEvent('Event');\r\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\r\n\r\n    // define inherited MouseEvent properties\r\n    // skip bubbles and cancelable since they're set above in initEvent()\r\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\r\n      p = MOUSE_PROPS[i];\r\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\r\n    }\r\n    e.buttons = inDict.buttons || 0;\r\n\r\n    // Spec requires that pointers without pressure specified use 0.5 for down\r\n    // state and 0 for up state.\r\n    var pressure = 0;\r\n\r\n    if (inDict.pressure && e.buttons) {\r\n      pressure = inDict.pressure;\r\n    } else {\r\n      pressure = e.buttons ? 0.5 : 0;\r\n    }\r\n\r\n    // add x/y properties aliased to clientX/Y\r\n    e.x = e.clientX;\r\n    e.y = e.clientY;\r\n\r\n    // define the properties of the PointerEvent interface\r\n    e.pointerId = inDict.pointerId || 0;\r\n    e.width = inDict.width || 0;\r\n    e.height = inDict.height || 0;\r\n    e.pressure = pressure;\r\n    e.tiltX = inDict.tiltX || 0;\r\n    e.tiltY = inDict.tiltY || 0;\r\n    e.twist = inDict.twist || 0;\r\n    e.tangentialPressure = inDict.tangentialPressure || 0;\r\n    e.pointerType = inDict.pointerType || '';\r\n    e.hwTimestamp = inDict.hwTimestamp || 0;\r\n    e.isPrimary = inDict.isPrimary || false;\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * This module implements a map of pointer states\r\n   */\r\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\r\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\r\n\r\n  function SparseArrayMap() {\r\n    this.array = [];\r\n    this.size = 0;\r\n  }\r\n\r\n  SparseArrayMap.prototype = {\r\n    set: function(k, v) {\r\n      if (v === undefined) {\r\n        return this.delete(k);\r\n      }\r\n      if (!this.has(k)) {\r\n        this.size++;\r\n      }\r\n      this.array[k] = v;\r\n    },\r\n    has: function(k) {\r\n      return this.array[k] !== undefined;\r\n    },\r\n    delete: function(k) {\r\n      if (this.has(k)) {\r\n        delete this.array[k];\r\n        this.size--;\r\n      }\r\n    },\r\n    get: function(k) {\r\n      return this.array[k];\r\n    },\r\n    clear: function() {\r\n      this.array.length = 0;\r\n      this.size = 0;\r\n    },\r\n\r\n    // return value, key, map\r\n    forEach: function(callback, thisArg) {\r\n      return this.array.forEach(function(v, k) {\r\n        callback.call(thisArg, v, k, this);\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  var CLONE_PROPS = [\r\n\r\n    // MouseEvent\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n\r\n    // DOM Level 3\r\n    'buttons',\r\n\r\n    // PointerEvent\r\n    'pointerId',\r\n    'width',\r\n    'height',\r\n    'pressure',\r\n    'tiltX',\r\n    'tiltY',\r\n    'pointerType',\r\n    'hwTimestamp',\r\n    'isPrimary',\r\n\r\n    // event instance\r\n    'type',\r\n    'target',\r\n    'currentTarget',\r\n    'which',\r\n    'pageX',\r\n    'pageY',\r\n    'timeStamp'\r\n  ];\r\n\r\n  var CLONE_DEFAULTS = [\r\n\r\n    // MouseEvent\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n\r\n    // DOM Level 3\r\n    0,\r\n\r\n    // PointerEvent\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    '',\r\n    0,\r\n    false,\r\n\r\n    // event instance\r\n    '',\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  var BOUNDARY_EVENTS = {\r\n    'pointerover': 1,\r\n    'pointerout': 1,\r\n    'pointerenter': 1,\r\n    'pointerleave': 1\r\n  };\r\n\r\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\r\n\r\n  /**\r\n   * This module is for normalizing events. Mouse and Touch events will be\r\n   * collected here, and fire PointerEvents that have the same semantics, no\r\n   * matter the source.\r\n   * Events fired:\r\n   *   - pointerdown: a pointing is added\r\n   *   - pointerup: a pointer is removed\r\n   *   - pointermove: a pointer is moved\r\n   *   - pointerover: a pointer crosses into an element\r\n   *   - pointerout: a pointer leaves an element\r\n   *   - pointercancel: a pointer will no longer generate events\r\n   */\r\n  var dispatcher = {\r\n    pointermap: new PointerMap(),\r\n    eventMap: Object.create(null),\r\n    captureInfo: Object.create(null),\r\n\r\n    // Scope objects for native events.\r\n    // This exists for ease of testing.\r\n    eventSources: Object.create(null),\r\n    eventSourceList: [],\r\n    /**\r\n     * Add a new event source that will generate pointer events.\r\n     *\r\n     * `inSource` must contain an array of event names named `events`, and\r\n     * functions with the names specified in the `events` array.\r\n     * @param {string} name A name for the event source\r\n     * @param {Object} source A new source of platform events.\r\n     */\r\n    registerSource: function(name, source) {\r\n      var s = source;\r\n      var newEvents = s.events;\r\n      if (newEvents) {\r\n        newEvents.forEach(function(e) {\r\n          if (s[e]) {\r\n            this.eventMap[e] = s[e].bind(s);\r\n          }\r\n        }, this);\r\n        this.eventSources[name] = s;\r\n        this.eventSourceList.push(s);\r\n      }\r\n    },\r\n    register: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.register.call(es, element);\r\n      }\r\n    },\r\n    unregister: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.unregister.call(es, element);\r\n      }\r\n    },\r\n    contains: /*scope.external.contains || */function(container, contained) {\r\n      try {\r\n        return container.contains(contained);\r\n      } catch (ex) {\r\n\r\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\r\n        return false;\r\n      }\r\n    },\r\n\r\n    // EVENTS\r\n    down: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerdown', inEvent);\r\n    },\r\n    move: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointermove', inEvent);\r\n    },\r\n    up: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerup', inEvent);\r\n    },\r\n    enter: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerenter', inEvent);\r\n    },\r\n    leave: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerleave', inEvent);\r\n    },\r\n    over: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerover', inEvent);\r\n    },\r\n    out: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerout', inEvent);\r\n    },\r\n    cancel: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointercancel', inEvent);\r\n    },\r\n    leaveOut: function(event) {\r\n      this.out(event);\r\n      this.propagate(event, this.leave, false);\r\n    },\r\n    enterOver: function(event) {\r\n      this.over(event);\r\n      this.propagate(event, this.enter, true);\r\n    },\r\n\r\n    // LISTENER LOGIC\r\n    eventHandler: function(inEvent) {\r\n\r\n      // This is used to prevent multiple dispatch of pointerevents from\r\n      // platform events. This can happen when two elements in different scopes\r\n      // are set up to create pointer events, which is relevant to Shadow DOM.\r\n      if (inEvent._handledByPE) {\r\n        return;\r\n      }\r\n      var type = inEvent.type;\r\n      var fn = this.eventMap && this.eventMap[type];\r\n      if (fn) {\r\n        fn(inEvent);\r\n      }\r\n      inEvent._handledByPE = true;\r\n    },\r\n\r\n    // set up event listeners\r\n    listen: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.addEvent(target, e);\r\n      }, this);\r\n    },\r\n\r\n    // remove event listeners\r\n    unlisten: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.removeEvent(target, e);\r\n      }, this);\r\n    },\r\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\r\n      target.addEventListener(eventName, this.boundHandler);\r\n    },\r\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\r\n      target.removeEventListener(eventName, this.boundHandler);\r\n    },\r\n\r\n    // EVENT CREATION AND TRACKING\r\n    /**\r\n     * Creates a new Event of type `inType`, based on the information in\r\n     * `inEvent`.\r\n     *\r\n     * @param {string} inType A string representing the type of event to create\r\n     * @param {Event} inEvent A platform event with a target\r\n     * @return {Event} A PointerEvent of type `inType`\r\n     */\r\n    makeEvent: function(inType, inEvent) {\r\n\r\n      // relatedTarget must be null if pointer is captured\r\n      if (this.captureInfo[inEvent.pointerId]) {\r\n        inEvent.relatedTarget = null;\r\n      }\r\n      var e = new PointerEvent(inType, inEvent);\r\n      if (inEvent.preventDefault) {\r\n        e.preventDefault = inEvent.preventDefault;\r\n      }\r\n      e._target = e._target || inEvent.target;\r\n      return e;\r\n    },\r\n\r\n    // make and dispatch an event in one call\r\n    fireEvent: function(inType, inEvent) {\r\n      var e = this.makeEvent(inType, inEvent);\r\n      return this.dispatchEvent(e);\r\n    },\r\n    /**\r\n     * Returns a snapshot of inEvent, with writable properties.\r\n     *\r\n     * @param {Event} inEvent An event that contains properties to copy.\r\n     * @return {Object} An object containing shallow copies of `inEvent`'s\r\n     *    properties.\r\n     */\r\n    cloneEvent: function(inEvent) {\r\n      var eventCopy = Object.create(null);\r\n      var p;\r\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\r\n        p = CLONE_PROPS[i];\r\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\r\n\r\n        // Work around SVGInstanceElement shadow tree\r\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\r\n        // This is the behavior implemented by Firefox.\r\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\r\n          if (eventCopy[p] instanceof SVGElementInstance) {\r\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\r\n          }\r\n        }\r\n      }\r\n\r\n      // keep the semantics of preventDefault\r\n      if (inEvent.preventDefault) {\r\n        eventCopy.preventDefault = function() {\r\n          inEvent.preventDefault();\r\n        };\r\n      }\r\n      return eventCopy;\r\n    },\r\n    getTarget: function(inEvent) {\r\n      var capture = this.captureInfo[inEvent.pointerId];\r\n      if (!capture) {\r\n        return inEvent._target;\r\n      }\r\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\r\n        return capture;\r\n      }\r\n    },\r\n    propagate: function(event, fn, propagateDown) {\r\n      var target = event.target;\r\n      var targets = [];\r\n\r\n      // Order of conditions due to document.contains() missing in IE.\r\n      while (target !== document && !target.contains(event.relatedTarget)) {\r\n        targets.push(target);\r\n        target = target.parentNode;\r\n\r\n        // Touch: Do not propagate if node is detached.\r\n        if (!target) {\r\n          return;\r\n        }\r\n      }\r\n      if (propagateDown) {\r\n        targets.reverse();\r\n      }\r\n      targets.forEach(function(target) {\r\n        event.target = target;\r\n        fn.call(this, event);\r\n      }, this);\r\n    },\r\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\r\n      if (this.captureInfo[inPointerId]) {\r\n        this.releaseCapture(inPointerId, skipDispatch);\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = inTarget;\r\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\r\n      document.addEventListener('pointerup', this.implicitRelease);\r\n      document.addEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('gotpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = inTarget;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    releaseCapture: function(inPointerId, skipDispatch) {\r\n      var t = this.captureInfo[inPointerId];\r\n      if (!t) {\r\n        return;\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = undefined;\r\n      document.removeEventListener('pointerup', this.implicitRelease);\r\n      document.removeEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('lostpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = t;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    /**\r\n     * Dispatches the event to its target.\r\n     *\r\n     * @param {Event} inEvent The event to be dispatched.\r\n     * @return {Boolean} True if an event handler returns true, false otherwise.\r\n     */\r\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\r\n      var t = this.getTarget(inEvent);\r\n      if (t) {\r\n        return t.dispatchEvent(inEvent);\r\n      }\r\n    },\r\n    asyncDispatchEvent: function(inEvent) {\r\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\r\n    }\r\n  };\r\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\r\n\r\n  var targeting = {\r\n    shadow: function(inEl) {\r\n      if (inEl) {\r\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\r\n      }\r\n    },\r\n    canTarget: function(shadow) {\r\n      return shadow && Boolean(shadow.elementFromPoint);\r\n    },\r\n    targetingShadow: function(inEl) {\r\n      var s = this.shadow(inEl);\r\n      if (this.canTarget(s)) {\r\n        return s;\r\n      }\r\n    },\r\n    olderShadow: function(shadow) {\r\n      var os = shadow.olderShadowRoot;\r\n      if (!os) {\r\n        var se = shadow.querySelector('shadow');\r\n        if (se) {\r\n          os = se.olderShadowRoot;\r\n        }\r\n      }\r\n      return os;\r\n    },\r\n    allShadows: function(element) {\r\n      var shadows = [];\r\n      var s = this.shadow(element);\r\n      while (s) {\r\n        shadows.push(s);\r\n        s = this.olderShadow(s);\r\n      }\r\n      return shadows;\r\n    },\r\n    searchRoot: function(inRoot, x, y) {\r\n      if (inRoot) {\r\n        var t = inRoot.elementFromPoint(x, y);\r\n        var st, sr;\r\n\r\n        // is element a shadow host?\r\n        sr = this.targetingShadow(t);\r\n        while (sr) {\r\n\r\n          // find the the element inside the shadow root\r\n          st = sr.elementFromPoint(x, y);\r\n          if (!st) {\r\n\r\n            // check for older shadows\r\n            sr = this.olderShadow(sr);\r\n          } else {\r\n\r\n            // shadowed element may contain a shadow root\r\n            var ssr = this.targetingShadow(st);\r\n            return this.searchRoot(ssr, x, y) || st;\r\n          }\r\n        }\r\n\r\n        // light dom element is the target\r\n        return t;\r\n      }\r\n    },\r\n    owner: function(element) {\r\n      var s = element;\r\n\r\n      // walk up until you hit the shadow root or document\r\n      while (s.parentNode) {\r\n        s = s.parentNode;\r\n      }\r\n\r\n      // the owner element is expected to be a Document or ShadowRoot\r\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\r\n        s = document;\r\n      }\r\n      return s;\r\n    },\r\n    findTarget: function(inEvent) {\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n\r\n      // if the listener is in the shadow root, it is much faster to start there\r\n      var s = this.owner(inEvent.target);\r\n\r\n      // if x, y is not in this root, fall back to document search\r\n      if (!s.elementFromPoint(x, y)) {\r\n        s = document;\r\n      }\r\n      return this.searchRoot(s, x, y);\r\n    }\r\n  };\r\n\r\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\r\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\r\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\r\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\r\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\r\n  var SELECTOR = '[touch-action]';\r\n  var OBSERVER_INIT = {\r\n    subtree: true,\r\n    childList: true,\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: ['touch-action']\r\n  };\r\n\r\n  function Installer(add, remove, changed, binder) {\r\n    this.addCallback = add.bind(binder);\r\n    this.removeCallback = remove.bind(binder);\r\n    this.changedCallback = changed.bind(binder);\r\n    if (MO) {\r\n      this.observer = new MO(this.mutationWatcher.bind(this));\r\n    }\r\n  }\r\n\r\n  Installer.prototype = {\r\n    watchSubtree: function(target) {\r\n\r\n      // Only watch scopes that can target find, as these are top-level.\r\n      // Otherwise we can see duplicate additions and removals that add noise.\r\n      //\r\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\r\n      // a removal without an insertion when a node is redistributed among\r\n      // shadows. Since it all ends up correct in the document, watching only\r\n      // the document will yield the correct mutations to watch.\r\n      if (this.observer && targeting.canTarget(target)) {\r\n        this.observer.observe(target, OBSERVER_INIT);\r\n      }\r\n    },\r\n    enableOnSubtree: function(target) {\r\n      this.watchSubtree(target);\r\n      if (target === document && document.readyState !== 'complete') {\r\n        this.installOnLoad();\r\n      } else {\r\n        this.installNewSubtree(target);\r\n      }\r\n    },\r\n    installNewSubtree: function(target) {\r\n      forEach(this.findElements(target), this.addElement, this);\r\n    },\r\n    findElements: function(target) {\r\n      if (target.querySelectorAll) {\r\n        return target.querySelectorAll(SELECTOR);\r\n      }\r\n      return [];\r\n    },\r\n    removeElement: function(el) {\r\n      this.removeCallback(el);\r\n    },\r\n    addElement: function(el) {\r\n      this.addCallback(el);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      this.changedCallback(el, oldValue);\r\n    },\r\n    concatLists: function(accum, list) {\r\n      return accum.concat(toArray(list));\r\n    },\r\n\r\n    // register all touch-action = none nodes on document load\r\n    installOnLoad: function() {\r\n      document.addEventListener('readystatechange', function() {\r\n        if (document.readyState === 'complete') {\r\n          this.installNewSubtree(document);\r\n        }\r\n      }.bind(this));\r\n    },\r\n    isElement: function(n) {\r\n      return n.nodeType === Node.ELEMENT_NODE;\r\n    },\r\n    flattenMutationTree: function(inNodes) {\r\n\r\n      // find children with touch-action\r\n      var tree = map(inNodes, this.findElements, this);\r\n\r\n      // make sure the added nodes are accounted for\r\n      tree.push(filter(inNodes, this.isElement));\r\n\r\n      // flatten the list\r\n      return tree.reduce(this.concatLists, []);\r\n    },\r\n    mutationWatcher: function(mutations) {\r\n      mutations.forEach(this.mutationHandler, this);\r\n    },\r\n    mutationHandler: function(m) {\r\n      if (m.type === 'childList') {\r\n        var added = this.flattenMutationTree(m.addedNodes);\r\n        added.forEach(this.addElement, this);\r\n        var removed = this.flattenMutationTree(m.removedNodes);\r\n        removed.forEach(this.removeElement, this);\r\n      } else if (m.type === 'attributes') {\r\n        this.elementChanged(m.target, m.oldValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  function shadowSelector(v) {\r\n    return 'body /shadow-deep/ ' + selector(v);\r\n  }\r\n  function selector(v) {\r\n    return '[touch-action=\"' + v + '\"]';\r\n  }\r\n  function rule(v) {\r\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\r\n  }\r\n  var attrib2css = [\r\n    'none',\r\n    'auto',\r\n    'pan-x',\r\n    'pan-y',\r\n    {\r\n      rule: 'pan-x pan-y',\r\n      selectors: [\r\n        'pan-x pan-y',\r\n        'pan-y pan-x'\r\n      ]\r\n    }\r\n  ];\r\n  var styles = '';\r\n\r\n  // only install stylesheet if the browser has touch action support\r\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\r\n\r\n  // only add shadow selectors if shadowdom is supported\r\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\r\n\r\n  function applyAttributeStyles() {\r\n    if (hasNativePE) {\r\n      attrib2css.forEach(function(r) {\r\n        if (String(r) === r) {\r\n          styles += selector(r) + rule(r) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += shadowSelector(r) + rule(r) + '\\n';\r\n          }\r\n        } else {\r\n          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\r\n          }\r\n        }\r\n      });\r\n\r\n      var el = document.createElement('style');\r\n      el.textContent = styles;\r\n      document.head.appendChild(el);\r\n    }\r\n  }\r\n\r\n  var pointermap = dispatcher.pointermap;\r\n\r\n  // radius around touchend that swallows mouse events\r\n  var DEDUP_DIST = 25;\r\n\r\n  // left, middle, right, back, forward\r\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\r\n\r\n  var HAS_BUTTONS = false;\r\n  try {\r\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\r\n  } catch (e) {}\r\n\r\n  // handler block for native mouse events\r\n  var mouseEvents = {\r\n    POINTER_ID: 1,\r\n    POINTER_TYPE: 'mouse',\r\n    events: [\r\n      'mousedown',\r\n      'mousemove',\r\n      'mouseup',\r\n      'mouseover',\r\n      'mouseout'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    lastTouches: [],\r\n\r\n    // collide with the global mouse listener\r\n    isEventSimulatedFromTouch: function(inEvent) {\r\n      var lts = this.lastTouches;\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\r\n\r\n        // simulated mouse events will be swallowed near a primary touchend\r\n        var dx = Math.abs(x - t.x);\r\n        var dy = Math.abs(y - t.y);\r\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n    prepareEvent: function(inEvent) {\r\n      var e = dispatcher.cloneEvent(inEvent);\r\n\r\n      // forward mouse preventDefault\r\n      var pd = e.preventDefault;\r\n      e.preventDefault = function() {\r\n        inEvent.preventDefault();\r\n        pd();\r\n      };\r\n      e.pointerId = this.POINTER_ID;\r\n      e.isPrimary = true;\r\n      e.pointerType = this.POINTER_TYPE;\r\n      return e;\r\n    },\r\n    prepareButtonsForMove: function(e, inEvent) {\r\n      var p = pointermap.get(this.POINTER_ID);\r\n\r\n      // Update buttons state after possible out-of-document mouseup.\r\n      if (inEvent.which === 0 || !p) {\r\n        e.buttons = 0;\r\n      } else {\r\n        e.buttons = p.buttons;\r\n      }\r\n      inEvent.buttons = e.buttons;\r\n    },\r\n    mousedown: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\r\n          if (p) { e.buttons |= p.buttons; }\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        if (!p || p.buttons === 0) {\r\n          dispatcher.down(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mousemove: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.move(e);\r\n      }\r\n    },\r\n    mouseup: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          var up = BUTTON_TO_BUTTONS[e.button];\r\n\r\n          // Produces wrong state of buttons in Browsers without `buttons` support\r\n          // when a mouse button that was pressed outside the document is released\r\n          // inside and other buttons are still pressed down.\r\n          e.buttons = p ? p.buttons & ~up : 0;\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n\r\n        // Support: Firefox <=44 only\r\n        // FF Ubuntu includes the lifted button in the `buttons` property on\r\n        // mouseup.\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\r\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\r\n        if (e.buttons === 0) {\r\n          dispatcher.up(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mouseover: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.enterOver(e);\r\n      }\r\n    },\r\n    mouseout: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        dispatcher.leaveOut(e);\r\n      }\r\n    },\r\n    cancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.deactivateMouse();\r\n    },\r\n    deactivateMouse: function() {\r\n      pointermap.delete(this.POINTER_ID);\r\n    }\r\n  };\r\n\r\n  var captureInfo = dispatcher.captureInfo;\r\n  var findTarget = targeting.findTarget.bind(targeting);\r\n  var allShadows = targeting.allShadows.bind(targeting);\r\n  var pointermap$1 = dispatcher.pointermap;\r\n\r\n  // This should be long enough to ignore compat mouse events made by touch\r\n  var DEDUP_TIMEOUT = 2500;\r\n  var CLICK_COUNT_TIMEOUT = 200;\r\n  var ATTRIB = 'touch-action';\r\n  var INSTALLER;\r\n\r\n  // handler block for native touch events\r\n  var touchEvents = {\r\n    events: [\r\n      'touchstart',\r\n      'touchmove',\r\n      'touchend',\r\n      'touchcancel'\r\n    ],\r\n    register: function(target) {\r\n      INSTALLER.enableOnSubtree(target);\r\n    },\r\n    unregister: function() {\r\n\r\n      // TODO(dfreedman): is it worth it to disconnect the MO?\r\n    },\r\n    elementAdded: function(el) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      if (st) {\r\n        el._scrollType = st;\r\n        dispatcher.listen(el, this.events);\r\n\r\n        // set touch-action on shadows as well\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n          dispatcher.listen(s, this.events);\r\n        }, this);\r\n      }\r\n    },\r\n    elementRemoved: function(el) {\r\n      el._scrollType = undefined;\r\n      dispatcher.unlisten(el, this.events);\r\n\r\n      // remove touch-action from shadow\r\n      allShadows(el).forEach(function(s) {\r\n        s._scrollType = undefined;\r\n        dispatcher.unlisten(s, this.events);\r\n      }, this);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      var oldSt = this.touchActionToScrollType(oldValue);\r\n\r\n      // simply update scrollType if listeners are already established\r\n      if (st && oldSt) {\r\n        el._scrollType = st;\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n        }, this);\r\n      } else if (oldSt) {\r\n        this.elementRemoved(el);\r\n      } else if (st) {\r\n        this.elementAdded(el);\r\n      }\r\n    },\r\n    scrollTypes: {\r\n      EMITTER: 'none',\r\n      XSCROLLER: 'pan-x',\r\n      YSCROLLER: 'pan-y',\r\n      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\r\n    },\r\n    touchActionToScrollType: function(touchAction) {\r\n      var t = touchAction;\r\n      var st = this.scrollTypes;\r\n      if (t === 'none') {\r\n        return 'none';\r\n      } else if (t === st.XSCROLLER) {\r\n        return 'X';\r\n      } else if (t === st.YSCROLLER) {\r\n        return 'Y';\r\n      } else if (st.SCROLLER.exec(t)) {\r\n        return 'XY';\r\n      }\r\n    },\r\n    POINTER_TYPE: 'touch',\r\n    firstTouch: null,\r\n    isPrimaryTouch: function(inTouch) {\r\n      return this.firstTouch === inTouch.identifier;\r\n    },\r\n    setPrimaryTouch: function(inTouch) {\r\n\r\n      // set primary touch if there no pointers, or the only pointer is the mouse\r\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\r\n        this.firstTouch = inTouch.identifier;\r\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\r\n        this.scrolling = false;\r\n        this.cancelResetClickCount();\r\n      }\r\n    },\r\n    removePrimaryPointer: function(inPointer) {\r\n      if (inPointer.isPrimary) {\r\n        this.firstTouch = null;\r\n        this.firstXY = null;\r\n        this.resetClickCount();\r\n      }\r\n    },\r\n    clickCount: 0,\r\n    resetId: null,\r\n    resetClickCount: function() {\r\n      var fn = function() {\r\n        this.clickCount = 0;\r\n        this.resetId = null;\r\n      }.bind(this);\r\n      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\r\n    },\r\n    cancelResetClickCount: function() {\r\n      if (this.resetId) {\r\n        clearTimeout(this.resetId);\r\n      }\r\n    },\r\n    typeToButtons: function(type) {\r\n      var ret = 0;\r\n      if (type === 'touchstart' || type === 'touchmove') {\r\n        ret = 1;\r\n      }\r\n      return ret;\r\n    },\r\n    touchToPointer: function(inTouch) {\r\n      var cte = this.currentTouchEvent;\r\n      var e = dispatcher.cloneEvent(inTouch);\r\n\r\n      // We reserve pointerId 1 for Mouse.\r\n      // Touch identifiers can start at 0.\r\n      // Add 2 to the touch identifier for compatibility.\r\n      var id = e.pointerId = inTouch.identifier + 2;\r\n      e.target = captureInfo[id] || findTarget(e);\r\n      e.bubbles = true;\r\n      e.cancelable = true;\r\n      e.detail = this.clickCount;\r\n      e.button = 0;\r\n      e.buttons = this.typeToButtons(cte.type);\r\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\r\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\r\n      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\r\n      e.isPrimary = this.isPrimaryTouch(inTouch);\r\n      e.pointerType = this.POINTER_TYPE;\r\n\r\n      // forward modifier keys\r\n      e.altKey = cte.altKey;\r\n      e.ctrlKey = cte.ctrlKey;\r\n      e.metaKey = cte.metaKey;\r\n      e.shiftKey = cte.shiftKey;\r\n\r\n      // forward touch preventDefaults\r\n      var self = this;\r\n      e.preventDefault = function() {\r\n        self.scrolling = false;\r\n        self.firstXY = null;\r\n        cte.preventDefault();\r\n      };\r\n      return e;\r\n    },\r\n    processTouches: function(inEvent, inFunction) {\r\n      var tl = inEvent.changedTouches;\r\n      this.currentTouchEvent = inEvent;\r\n      for (var i = 0, t; i < tl.length; i++) {\r\n        t = tl[i];\r\n        inFunction.call(this, this.touchToPointer(t));\r\n      }\r\n    },\r\n\r\n    // For single axis scrollers, determines whether the element should emit\r\n    // pointer events or behave as a scroller\r\n    shouldScroll: function(inEvent) {\r\n      if (this.firstXY) {\r\n        var ret;\r\n        var scrollAxis = inEvent.currentTarget._scrollType;\r\n        if (scrollAxis === 'none') {\r\n\r\n          // this element is a touch-action: none, should never scroll\r\n          ret = false;\r\n        } else if (scrollAxis === 'XY') {\r\n\r\n          // this element should always scroll\r\n          ret = true;\r\n        } else {\r\n          var t = inEvent.changedTouches[0];\r\n\r\n          // check the intended scroll axis, and other axis\r\n          var a = scrollAxis;\r\n          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\r\n          var da = Math.abs(t['client' + a] - this.firstXY[a]);\r\n          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\r\n\r\n          // if delta in the scroll axis > delta other axis, scroll instead of\r\n          // making events\r\n          ret = da >= doa;\r\n        }\r\n        this.firstXY = null;\r\n        return ret;\r\n      }\r\n    },\r\n    findTouch: function(inTL, inId) {\r\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\r\n        if (t.identifier === inId) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n\r\n    // In some instances, a touchstart can happen without a touchend. This\r\n    // leaves the pointermap in a broken state.\r\n    // Therefore, on every touchstart, we remove the touches that did not fire a\r\n    // touchend event.\r\n    // To keep state globally consistent, we fire a\r\n    // pointercancel for this \"abandoned\" touch\r\n    vacuumTouches: function(inEvent) {\r\n      var tl = inEvent.touches;\r\n\r\n      // pointermap.size should be < tl.length here, as the touchstart has not\r\n      // been processed yet.\r\n      if (pointermap$1.size >= tl.length) {\r\n        var d = [];\r\n        pointermap$1.forEach(function(value, key) {\r\n\r\n          // Never remove pointerId == 1, which is mouse.\r\n          // Touch identifiers are 2 smaller than their pointerId, which is the\r\n          // index in pointermap.\r\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\r\n            var p = value.out;\r\n            d.push(p);\r\n          }\r\n        }, this);\r\n        d.forEach(this.cancelOut, this);\r\n      }\r\n    },\r\n    touchstart: function(inEvent) {\r\n      this.vacuumTouches(inEvent);\r\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\r\n      this.dedupSynthMouse(inEvent);\r\n      if (!this.scrolling) {\r\n        this.clickCount++;\r\n        this.processTouches(inEvent, this.overDown);\r\n      }\r\n    },\r\n    overDown: function(inPointer) {\r\n      pointermap$1.set(inPointer.pointerId, {\r\n        target: inPointer.target,\r\n        out: inPointer,\r\n        outTarget: inPointer.target\r\n      });\r\n      dispatcher.enterOver(inPointer);\r\n      dispatcher.down(inPointer);\r\n    },\r\n    touchmove: function(inEvent) {\r\n      if (!this.scrolling) {\r\n        if (this.shouldScroll(inEvent)) {\r\n          this.scrolling = true;\r\n          this.touchcancel(inEvent);\r\n        } else {\r\n          inEvent.preventDefault();\r\n          this.processTouches(inEvent, this.moveOverOut);\r\n        }\r\n      }\r\n    },\r\n    moveOverOut: function(inPointer) {\r\n      var event = inPointer;\r\n      var pointer = pointermap$1.get(event.pointerId);\r\n\r\n      // a finger drifted off the screen, ignore it\r\n      if (!pointer) {\r\n        return;\r\n      }\r\n      var outEvent = pointer.out;\r\n      var outTarget = pointer.outTarget;\r\n      dispatcher.move(event);\r\n      if (outEvent && outTarget !== event.target) {\r\n        outEvent.relatedTarget = event.target;\r\n        event.relatedTarget = outTarget;\r\n\r\n        // recover from retargeting by shadow\r\n        outEvent.target = outTarget;\r\n        if (event.target) {\r\n          dispatcher.leaveOut(outEvent);\r\n          dispatcher.enterOver(event);\r\n        } else {\r\n\r\n          // clean up case when finger leaves the screen\r\n          event.target = outTarget;\r\n          event.relatedTarget = null;\r\n          this.cancelOut(event);\r\n        }\r\n      }\r\n      pointer.out = event;\r\n      pointer.outTarget = event.target;\r\n    },\r\n    touchend: function(inEvent) {\r\n      this.dedupSynthMouse(inEvent);\r\n      this.processTouches(inEvent, this.upOut);\r\n    },\r\n    upOut: function(inPointer) {\r\n      if (!this.scrolling) {\r\n        dispatcher.up(inPointer);\r\n        dispatcher.leaveOut(inPointer);\r\n      }\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    touchcancel: function(inEvent) {\r\n      this.processTouches(inEvent, this.cancelOut);\r\n    },\r\n    cancelOut: function(inPointer) {\r\n      dispatcher.cancel(inPointer);\r\n      dispatcher.leaveOut(inPointer);\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    cleanUpPointer: function(inPointer) {\r\n      pointermap$1.delete(inPointer.pointerId);\r\n      this.removePrimaryPointer(inPointer);\r\n    },\r\n\r\n    // prevent synth mouse events from creating pointer events\r\n    dedupSynthMouse: function(inEvent) {\r\n      var lts = mouseEvents.lastTouches;\r\n      var t = inEvent.changedTouches[0];\r\n\r\n      // only the primary finger will synth mouse events\r\n      if (this.isPrimaryTouch(t)) {\r\n\r\n        // remember x/y of last touch\r\n        var lt = { x: t.clientX, y: t.clientY };\r\n        lts.push(lt);\r\n        var fn = (function(lts, lt) {\r\n          var i = lts.indexOf(lt);\r\n          if (i > -1) {\r\n            lts.splice(i, 1);\r\n          }\r\n        }).bind(null, lts, lt);\r\n        setTimeout(fn, DEDUP_TIMEOUT);\r\n      }\r\n    }\r\n  };\r\n\r\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\r\n    touchEvents.elementChanged, touchEvents);\r\n\r\n  var pointermap$2 = dispatcher.pointermap;\r\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\r\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\r\n  var msEvents = {\r\n    events: [\r\n      'MSPointerDown',\r\n      'MSPointerMove',\r\n      'MSPointerUp',\r\n      'MSPointerOut',\r\n      'MSPointerOver',\r\n      'MSPointerCancel',\r\n      'MSGotPointerCapture',\r\n      'MSLostPointerCapture'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    POINTER_TYPES: [\r\n      '',\r\n      'unavailable',\r\n      'touch',\r\n      'pen',\r\n      'mouse'\r\n    ],\r\n    prepareEvent: function(inEvent) {\r\n      var e = inEvent;\r\n      if (HAS_BITMAP_TYPE) {\r\n        e = dispatcher.cloneEvent(inEvent);\r\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\r\n      }\r\n      return e;\r\n    },\r\n    cleanup: function(id) {\r\n      pointermap$2.delete(id);\r\n    },\r\n    MSPointerDown: function(inEvent) {\r\n      pointermap$2.set(inEvent.pointerId, inEvent);\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.down(e);\r\n    },\r\n    MSPointerMove: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.move(e);\r\n    },\r\n    MSPointerUp: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.up(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSPointerOut: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.leaveOut(e);\r\n    },\r\n    MSPointerOver: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.enterOver(e);\r\n    },\r\n    MSPointerCancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSLostPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    },\r\n    MSGotPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    }\r\n  };\r\n\r\n  function applyPolyfill() {\r\n\r\n    // only activate if this platform does not have pointer events\r\n    if (!window.PointerEvent) {\r\n      window.PointerEvent = PointerEvent;\r\n\r\n      if (window.navigator.msPointerEnabled) {\r\n        var tp = window.navigator.msMaxTouchPoints;\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: tp,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('ms', msEvents);\r\n      } else {\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: 0,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('mouse', mouseEvents);\r\n        if (window.ontouchstart !== undefined) {\r\n          dispatcher.registerSource('touch', touchEvents);\r\n        }\r\n      }\r\n\r\n      dispatcher.register(document);\r\n    }\r\n  }\r\n\r\n  var n = window.navigator;\r\n  var s;\r\n  var r;\r\n  var h;\r\n  function assertActive(id) {\r\n    if (!dispatcher.pointermap.has(id)) {\r\n      var error = new Error('InvalidPointerId');\r\n      error.name = 'InvalidPointerId';\r\n      throw error;\r\n    }\r\n  }\r\n  function assertConnected(elem) {\r\n    var parent = elem.parentNode;\r\n    while (parent && parent !== elem.ownerDocument) {\r\n      parent = parent.parentNode;\r\n    }\r\n    if (!parent) {\r\n      var error = new Error('InvalidStateError');\r\n      error.name = 'InvalidStateError';\r\n      throw error;\r\n    }\r\n  }\r\n  function inActiveButtonState(id) {\r\n    var p = dispatcher.pointermap.get(id);\r\n    return p.buttons !== 0;\r\n  }\r\n  if (n.msPointerEnabled) {\r\n    s = function(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this, true);\r\n        this.msSetPointerCapture(pointerId);\r\n      }\r\n    };\r\n    r = function(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId, true);\r\n      this.msReleasePointerCapture(pointerId);\r\n    };\r\n  } else {\r\n    s = function setPointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this);\r\n      }\r\n    };\r\n    r = function releasePointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId);\r\n    };\r\n  }\r\n  h = function hasPointerCapture(pointerId) {\r\n    return !!dispatcher.captureInfo[pointerId];\r\n  };\r\n\r\n  function applyPolyfill$1() {\r\n    if (window.Element && !Element.prototype.setPointerCapture) {\r\n      Object.defineProperties(Element.prototype, {\r\n        'setPointerCapture': {\r\n          value: s\r\n        },\r\n        'releasePointerCapture': {\r\n          value: r\r\n        },\r\n        'hasPointerCapture': {\r\n          value: h\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  applyAttributeStyles();\r\n  applyPolyfill();\r\n  applyPolyfill$1();\r\n\r\n  var pointerevents = {\r\n    dispatcher: dispatcher,\r\n    Installer: Installer,\r\n    PointerEvent: PointerEvent,\r\n    PointerMap: PointerMap,\r\n    targetFinding: targeting\r\n  };\r\n\r\n  return pointerevents;\r\n\r\n});"]}