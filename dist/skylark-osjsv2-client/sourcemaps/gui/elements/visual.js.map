{"version":3,"sources":["gui/elements/visual.js"],"names":["define","Events","GUIElement","createVisualElement","el","nodeType","applyArgs","console","error","img","document","createElement","src","getAttribute","setAttribute","Object","keys","forEach","k","val","replace","$bind","bind","appendChild","GUIAudio","[object Object]","super","register","tagName","this","evName","callback","params","target","$element","querySelector","GUIVideo","GUIImage","GUICanvas","canvas"],"mappings":";;;;;;;AAAAA,QACI,qBACA,cACD,SAAUC,EAAQC,GACjB,aACA,SAASC,EAAoBC,EAAIC,EAAUC,GAEd,iBADzBA,EAAYA,SAERC,QAAQC,MAAM,OAAQ,kCACtBF,MAEJ,MAAMG,EAAMC,SAASC,cAAcN,GAC7BO,EAAMR,EAAGS,aAAa,YACXT,EAAGS,aAAa,kBAE7BJ,EAAIK,aAAa,WAAY,YAEhBV,EAAGS,aAAa,kBAE7BJ,EAAIK,aAAa,WAAY,YAEjCC,OAAOC,KAAKV,GAAWW,QAAQ,SAAUC,GACrC,IAAIC,EAAMb,EAAUY,GACD,mBAARC,GACPD,EAAIA,EAAEE,QAAQ,MAAO,IACH,UAAbf,GAAqC,UAAbA,GAA+B,SAANa,IAClDA,EAAI,kBAERjB,EAAOoB,MAAMZ,EAAKS,EAAGC,EAAIG,KAAKb,IAAM,KAER,kBAAjBH,EAAUY,KACjBC,EAAMA,EAAM,OAAS,SAEzBV,EAAIK,aAAaI,EAAGC,MAG5BV,EAAIG,IAAMA,GAAO,cACjBR,EAAGmB,YAAYd,GA2DnB,OACIe,uBA1DmBtB,EACnBuB,kBACI,OAAOC,MAAMC,UAAWC,QAAS,aAAeC,MAEpDJ,GAAGK,EAAQC,EAAUC,GACjB,MAAMC,EAASJ,KAAKK,SAASC,cAAc,SAE3C,OADAlC,EAAOoB,MAAMY,EAAQH,EAAQC,EAAST,KAAKO,MAAOG,GAC3CH,KAEXJ,MAAMnB,GAEF,OADAH,EAAoB0B,KAAKK,SAAU,QAAS5B,GACrCuB,OAgDXO,uBA7CmBlC,EACnBuB,kBACI,OAAOC,MAAMC,UAAWC,QAAS,aAAeC,MAEpDJ,GAAGK,EAAQC,EAAUC,GACjB,MAAMC,EAASJ,KAAKK,SAASC,cAAc,SAE3C,OADAlC,EAAOoB,MAAMY,EAAQH,EAAQC,EAAST,KAAKO,MAAOG,GAC3CH,KAEXJ,MAAMnB,GAEF,OADAH,EAAoB0B,KAAKK,SAAU,QAAS5B,GACrCuB,OAmCXQ,uBAhCmBnC,EACnBuB,kBACI,OAAOC,MAAMC,UAAWC,QAAS,aAAeC,MAEpDJ,GAAGK,EAAQC,EAAUC,GACjB,MAAMC,EAASJ,KAAKK,SAASC,cAAc,OAE3C,OADAlC,EAAOoB,MAAMY,EAAQH,EAAQC,EAAST,KAAKO,MAAOG,GAC3CH,KAEXJ,MAAMnB,GAEF,OADAH,EAAoB0B,KAAKK,SAAU,MAAO5B,GACnCuB,OAsBXS,wBAnBoBpC,EACpBuB,kBACI,OAAOC,MAAMC,UAAWC,QAAS,cAAgBC,MAErDJ,GAAGK,EAAQC,EAAUC,GACjB,MAAMC,EAASJ,KAAKK,SAASC,cAAc,UAE3C,OADAlC,EAAOoB,MAAMY,EAAQH,EAAQC,EAAST,KAAKO,MAAOG,GAC3CH,KAEXJ,QACI,MAAMc,EAAS7B,SAASC,cAAc,UAEtC,OADAkB,KAAKK,SAASX,YAAYgB,GACnBV","file":"../../../gui/elements/visual.js","sourcesContent":["define([\n    '../../utils/events',\n    '../element'\n], function (Events, GUIElement) {\n    'use strict';\n    function createVisualElement(el, nodeType, applyArgs) {\n        applyArgs = applyArgs || {};\n        if (typeof applyArgs !== 'object') {\n            console.error('Derp', 'applyArgs was not an object ?!');\n            applyArgs = {};\n        }\n        const img = document.createElement(nodeType);\n        const src = el.getAttribute('data-src');\n        const controls = el.getAttribute('data-controls');\n        if (controls) {\n            img.setAttribute('controls', 'controls');\n        }\n        const autoplay = el.getAttribute('data-autoplay');\n        if (autoplay) {\n            img.setAttribute('autoplay', 'autoplay');\n        }\n        Object.keys(applyArgs).forEach(function (k) {\n            let val = applyArgs[k];\n            if (typeof val === 'function') {\n                k = k.replace(/^on/, '');\n                if ((nodeType === 'video' || nodeType === 'audio') && k === 'load') {\n                    k = 'loadedmetadata';\n                }\n                Events.$bind(img, k, val.bind(img), false);\n            } else {\n                if (typeof applyArgs[k] === 'boolean') {\n                    val = val ? 'true' : 'false';\n                }\n                img.setAttribute(k, val);\n            }\n        });\n        img.src = src || 'about:blank';\n        el.appendChild(img);\n    }\n    class GUIAudio extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-audio' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('audio');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'audio', applyArgs);\n            return this;\n        }\n    }\n    class GUIVideo extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-video' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('video');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'video', applyArgs);\n            return this;\n        }\n    }\n    class GUIImage extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-image' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('img');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'img', applyArgs);\n            return this;\n        }\n    }\n    class GUICanvas extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-canvas' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('canvas');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const canvas = document.createElement('canvas');\n            this.$element.appendChild(canvas);\n            return this;\n        }\n    }\n    return {\n        GUIAudio: GUIAudio,\n        GUIVideo: GUIVideo,\n        GUIImage: GUIImage,\n        GUICanvas: GUICanvas\n    };\n});"]}