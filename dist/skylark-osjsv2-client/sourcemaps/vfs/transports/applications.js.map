{"version":3,"sources":["vfs/transports/applications.js"],"names":["define","PackageManager","Transport","FileMetadata","a","[object Object]","method","args","options","indexOf","Promise","reject","Error","_","super","request","arguments","metadata","getPackages","files","Object","keys","forEach","m","iter","type","push","filename","name","path","mime","resolve","item"],"mappings":";;;;;;;AAAAA,QACI,6BACA,eACA,UACA,sBACD,SAAWC,EAAgBC,EAAWC,EAAcC,GACnD,aACA,qBAA0CF,EACtCG,QAAQC,EAAQC,EAAMC,GAClB,OAAqC,KAAhC,WAAWC,QAAQH,GACbI,QAAQC,OAAO,IAAIC,MAAMR,EAAES,EAAE,yBAEjCC,MAAMC,WAAWC,WAE5BX,UACI,MAAMY,EAAWhB,EAAeiB,cAC1BC,KAYN,OAXAC,OAAOC,KAAKJ,GAAUK,QAAQC,IAC1B,MAAMC,EAAOP,EAASM,GACJ,cAAdC,EAAKC,MACLN,EAAMO,KAAK,IAAIvB,GACXwB,SAAUH,EAAKI,KACfH,KAAM,cACNI,KAAM,mBAAqBN,EAC3BO,KAAM,oBACP,uBAGJpB,QAAQqB,QAAQZ,GAE3Bd,IAAI2B,GACA,OAAOtB,QAAQqB,QAAQC,EAAKH","file":"../../../vfs/transports/applications.js","sourcesContent":["define([\n    '../../core/package-manager',\n    '../transport',\n    '../file',\n    '../../core/locales'\n], function ( PackageManager, Transport, FileMetadata, a) {\n    'use strict';\n    return class ApplicationTransport extends Transport {\n        request(method, args, options) {\n            if (['scandir'].indexOf(method) === -1) {\n                return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n            }\n            return super.request(...arguments);\n        }\n        scandir() {\n            const metadata = PackageManager.getPackages(); \n            const files = [];\n            Object.keys(metadata).forEach(m => {\n                const iter = metadata[m];\n                if (iter.type !== 'extension') {\n                    files.push(new FileMetadata({\n                        filename: iter.name,\n                        type: 'application',\n                        path: 'applications:///' + m,\n                        mime: 'osjs/application'\n                    }, 'osjs/application'));\n                }\n            });\n            return Promise.resolve(files);\n        }\n        url(item) {\n            return Promise.resolve(item.path);\n        }\n    };\n});"]}