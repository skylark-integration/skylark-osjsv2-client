/**
 * skylark-osjsv2-client - A version of osjs-client that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-integration/skylark-osjsv2-client/
 * @license MIT
 */
define(["../helpers/promise-limit","../core/config","skylark-axios"],function(e,t,s){"use strict";const r=e=>e.match(/\.js$/i)?"javascript":e.match(/\.css$/i)?"stylesheet":"unknown",c=e=>e&&!e.match(/^(\/|file|https?)/)?t.getBrowserPath(e):e,o={javascript:e=>new Promise((t,s)=>{const r=document.createElement("script");r.onreadystatechange=function(){"complete"!==this.readyState&&"loaded"!==this.readyState||t()},r.onerror=(e=>{let t=new Error;t.name="<script> error",t.message="Failed to load script",s(t)}),r.onload=(()=>t()),r.src=e,document.getElementsByTagName("head")[0].appendChild(r)}),stylesheet:e=>new Promise((t,s)=>{let r;const c=e=>{clearTimeout(r);let t=new Error;t.name="<link> error",t.message=e,s(t)},o=document.createElement("link");o.setAttribute("rel","stylesheet"),o.setAttribute("type","text/css"),o.onload=(()=>t()),o.onerror=(e=>c("Failed to load link")),o.setAttribute("href",e),document.getElementsByTagName("head")[0].appendChild(o),r=setTimeout(()=>{c("Loading stylesheet timed out")},3e4),setTimeout(()=>{(e=>{let t=!1;return(document.styleSheet||[]).forEach((s,r)=>-1===s.href.indexOf(e)||(t=!0,!1)),t})(e)&&(clearTimeout(r),t())},10)}),html:e=>new Promise((t,r)=>{s.get(e).then(e=>t(e.data)).catch(e=>r(e.message))})};return new class{constructor(){this.cache={}}clear(){this.cache={}}preload(t,s){s=s||{},t=t.map(e=>"string"==typeof e?{src:c(e),force:!1,type:r(e)}:(e.src=c(e.src),e.type||(e.type=r(e.src)),e)).filter(e=>!!e.src),console.group("Preloader.load()",t);const a=e(s.max||1),n=t.length,i=[],l=[],h=[],d=(e,t,r)=>(void 0!==t&&h.push({item:e,data:t}),!1!==s.cache&&void 0===this.cache[e.src]&&(this.cache[e.src]=t),l.push(e.src),r()),m=(e,t)=>("function"==typeof s.progress&&s.progress(t,n),o[e.type]?new Promise((t,r)=>{s.force||!this.cache[e.src]?o[e.type](e.src).then(s=>d(e,s,t)).catch(s=>(console.warn("Failed loading",e.src,s),i.push(e.src),t())):d(e,this.cache[e.src],t)}):Promise.resolve());return new Promise((e,s)=>{Promise.all(t.map((e,t)=>a(()=>m(e,t)))).then(()=>(console.groupEnd(),e({success:!1,data:h,failed:i,loaded:l}))).catch(s)})}}});
//# sourceMappingURL=../sourcemaps/utils/preloader.js.map
