{"version":3,"sources":["skylark-osjsv2-client-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","format","args","Array","prototype","slice","call","arguments","replace","match","number","parseurl","url","modify","protocol","splitted","tmp","proto","window","location","host","shift","join","parts","username","authstr","String","password","push","_parts","urlparams","search","hash","indexOf","reduce","params","key","val","Object","assign","[object Object]","decodeURIComponent","argumentDefaults","defaults","undef","keys","forEach","mergeObject","opts","p","hasOwnProperty","overwrite","constructor","e","cloneObject","o","alternative","_clone","map","iter","k","JSON","parse","stringify","value","tagName","undefined","misc","DefaultLocale","CurrentLocale","CurrentRTL","_","userLocale","systemLocale","OSjs","require","console","warn","s","a","apply","stack","__","l","getLocale","setLocale","locale","major","html","document","querySelector","setAttribute","info","createLocalizer","locales","unshift","init","options","languages","names","RTL","Locales","modules","installedModules","__webpack_require__","moduleId","exports","module","id","loaded","m","c","utils","bind","Axios","mergeConfig","createInstance","defaultConfig","context","instance","request","extend","axios","create","instanceConfig","Cancel","CancelToken","isCancel","all","promises","Promise","spread","default","toString","isArray","isUndefined","isObject","isFunction","fn","isArrayBuffer","isBuffer","isFormData","FormData","isArrayBufferView","result","ArrayBuffer","isView","buffer","isString","isNumber","isDate","isFile","isBlob","isStream","pipe","isURLSearchParams","URLSearchParams","isStandardBrowserEnv","navigator","product","merge","assignValue","deepMerge","b","thisArg","trim","str","buildURL","InterceptorManager","dispatchRequest","this","interceptors","response","config","method","toLowerCase","chain","promise","resolve","interceptor","fulfilled","rejected","then","getUri","paramsSerializer","data","encode","encodeURIComponent","serializedParams","v","toISOString","hashmarkIndex","handlers","use","eject","h","transformData","throwIfCancellationRequested","cancelToken","throwIfRequested","headers","transformRequest","common","adapter","transformResponse","reason","reject","fns","__CANCEL__","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","XMLHttpRequest","process","getDefaultAdapter","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","validateStatus","status","Accept","normalizedName","toUpperCase","settle","buildFullPath","parseHeaders","isURLSameOrigin","createError","requestData","requestHeaders","auth","Authorization","btoa","fullPath","baseURL","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","cookies","xsrfValue","withCredentials","read","setRequestHeader","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","abort","send","enhanceError","message","code","error","Error","isAxiosError","toJSON","description","fileName","lineNumber","columnNumber","isAbsoluteURL","combineURLs","requestedURL","test","relativeURL","ignoreDuplicateOf","parsed","line","substr","concat","originURL","msie","userAgent","urlParsingNode","createElement","resolveURL","href","hostname","port","pathname","charAt","requestURL","write","expires","domain","secure","cookie","Date","toGMTString","RegExp","remove","now","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","prop","axiosKeys","otherKeys","filter","executor","TypeError","resolvePromise","token","source","callback","arr","events","n","debug","cb","Function","added","_register","index","splice","applyArgs","loaders","loaderGraze","$container","parentNode","body","appendChild","el","title","icon","img","src","setTimeout","style","display","clearTimeout","item","from","getJSON","defaultValue","setJSON","json","queue","isTree","prune","guess","guessValue","newTree","resulted","getNewTree","mergeDeep","target","removeNulls","SimpleJSON","getConfig","getDefaultPath","fallback","getBrowserPath","app","getUserLocale","loc","userLanguage","language","nb","es","ru","en","minor","EventHandler","Loader","Config","progressHandler","ev","onprogress","lengthComputable","total","_instance","offline","_evHandler","onlineFn","onOnline","offlineFn","onOffline","onLine","removeEventListener","destroy","base","defaultDist","q","mount","appRef","emit","reconnecting","raw","requestOptions","createRequestOptions","ignore","appendRequestOptions","catch","realMethod","getVFSPath","func","on","idx","off","indicator","createRequest","err","finally","Connection","saveTimeout","pool","storage","settings","Process","SettingsManager","getProcesses","proc","_getSessionData","set","res","get","list","__resume__","__windows__","windows","Misc","SettingsFragment","poolName","sm","_sm","_pool","_settings","ret","save","triggerWatch","changed","nestedSetting","every","Storage","defaultSettings","watches","saveableStorage","saveSettings","mergeDefaults","watch","Utils","filename","pop","_abToSomething","arrayBuffer","mime","blob","Blob","type","r","FileReader","onloadend","getPathFromVirtual","getPathProtocol","orig","filext","d","ext","dirname","f","pstr","prot","_parentDir","humanFileSize","bytes","si","units","thresh","u","toFixed","escapeFilename","replaceFileExtension","rep","spl","replaceFilename","newname","pathJoin","prefix","getPart","getFilenameRange","range","min","max","btoaUrlsafe","atobUrlsafe","atob","btoaUtf","_unescape","unescape","x","fromCharCode","parseInt","atobUtf","trans","escape","charCodeAt","checkAcceptMime","re","filterScandir","defaultOptions","ioptions","ooptions","scandir","sortBy","sortDir","typeFilter","mimeFilter","showHiddenFiles","filterFile","some","miter","validMime","sb","types","mtime","ctime","sort","localeCompare","reverse","addFormFile","fd","file","File","append","dataSourceToAb","byteString","ab","ia","Uint8Array","textToAb","abToDataSource","abToText","abToBinaryString","abToBlob","blobToAb","readAsArrayBuffer","FS","FileMetadata","arg","size","shortcut","setData","_guessMime","destination","resolvePreloads","metadata","pm","packageURI","mapIter","additions","preload","depends","Applications","pkg","getPackage","pkgs","getPackages","pn","uses","scope","VFS","packages","blacklist","Authenticator","isStandalone","setPackages","_loadMetadata","len","paths","command","action","currLocale","newIter","descriptions","root","dest","zip","generateUserMetadata","repos","entries","yes","no","_repository","freeze","filtered","hidden","allowed","groups","checkPermission","vfspath","appname","__pname","fsuri","checkEntry","resolveIcon","packagePath","each","className","compability","getCanvasSupported","getContext","getVideoSupported","canPlayType","canPlayCodec","support","check","enabled","isSupported","supported","chk","_checkSupport","codec","getAudioSupported","getCanvasContexts","cache","canvas","tst","eee","detectCSSFeature","featurename","feature","domPrefixes","elm","featurenameCapital","checkWindow","indexedDB","localStorage","sessionStorage","globalStorage","openDatabase","socket","worker","orientation","touch","getTouch","xhr","getUpload","getUserMedia","getMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","fileSystem","dnd","css","transition","animation","canvasContext","webgl","contexts","getWebGL","audioContext","getAudioContext","svg","createElementNS","createSVGRect","video","videoTypes","webm","ogg","h264","mpeg","mkv","audio","audioTypes","mp3","wav","richtext","contentEditable","getRichText","getCompability","isIE","documentMode","$getStyle","oElm","strCssRule","strValue","defaultView","getComputedStyle","getPropertyValue","currentStyle","strMatch","p1","$","getElementById","$safeName","$remove","node","removeChild","$empty","myNode","firstChild","$position","parentEl","left","top","width","offsetWidth","height","offsetHeight","offsetLeft","offsetTop","offsetParent","getBoundingClientRect","$parent","current","$index","nodeList","children","nodeIndex","$selectRange","field","start","end","createTextRange","selRange","collapse","moveStart","moveEnd","select","focus","setSelectionRange","selectionStart","selectionEnd","$addClass","classList","add","$removeClass","$hasClass","contains","$escape","div","createTextNode","innerHTML","$create","properties","element","_foreach","dict","aria","$createCSS","onload","link","getElementsByTagName","$createJS","attrs","charset","$isFormElement","input","Event","srcElement","Element","readOnly","disabled","$css","ink","inv","$path","_path","ix","siblings","childNodes","sibling","nodeType","$fromPath","doc","XPathEvaluator","evaluate","documentElement","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","$clean","PackageManager","Compability","DOM","$themeScript","audioAvailable","oggAvailable","enableSounds","styleTheme","soundTheme","iconTheme","sounds","settheme","setTheme","theme","getStyleTheme","Themes","isFirefox","typeMap","image","image-center","image-fill","image-strech","back","wallpaper","background","backgroundImage","backgroundColor","fontFamily","backgroundAttachment","themeAction","setThemeScript","getThemeResource","animations","_setBackground","returnMetadata","convert","found","getStyleThemes","t","tmpEl","visibility","position","wd","margin","marginf","parseFloat","border","borderf","getName","getSoundTheme","volume","getSoundFilename","getSound","Audio","play","getIconTheme","meta","getPackageResource","getIcon","handler","triggerHook","thisarg","addHook","removeHook","limiter","count","outstanding","jobs","job","semaphore","run","items","mapper","failed","limit","addExtras","promiseLimit","getFileType","getSource","javascript","stylesheet","styleSheet","checkCss","preloads","force","group","done","preloadData","progress","groupEnd","success","Theme","hooks","Preloader","alreadyLaunching","runningProcesses","_kill","pid","__pid","__args","__metadata","__started","__destroyed","__evHandler","__label","__path","__scope","__iter","_emit","msg","sourceId","_app","application","matcher","_onMessage","first","getProcess","__preload__","onconstruct","fail","alreadyRunning","compabilityFailures","singular","pargs","preloadParallel","ResolvedPackage","getLaunchObject","fm","pack","getPackagesByMime","forceList","DialogWindow","btn","useDefault","transport","visible","searchable","dynamic","internal","special","sname","createMatch","isMounted","notify","option","mounted","Mountpoint","inited","mountpoints","loadTransports","transports","mountPoints","point","T","moduleName","getModule","unmount","hits","filterName","find","dataURL","FileDataURL","MountManager","noop","hasAlias","retm","getModuleFromPath","alias","checkMetadataArgument","checkRo","mountpoint","isReadOnly","hasSameTransport","msrc","mdst","existsWrapper","exists","requestWrapper","onVFSRequestCompleted","performRequest","errorStr","broadcastMessage","_message","w","checkPath","_check","wasTouched","checkWatches","aliased","_transform","getModules","findAlias","tuple","move","dialogProgress","prog","dialog","setProgress","sourceMountpoint","destMountpoint","vfsSettings","oitem","isShortcut","niter","opt","backlink","isOnRoot","foundBack","createBackLink","convertTo","convertWriteData","datasource","dataSource","text","jsn","copy","rename","unlink","pkgdir","chkdir","idir","mkdir","fileinfo","files","fileDest","download","trash","untrash","emptyTrash","freeSpace","unwatch","ApplicationModule","query","getFileIcon","launch","fields","applications","results","qry","dlimit","reindex","FilesystemModule","recursive","errors","next","userData","loggedIn","createUI","isLoggedIn","user","getUser","userGroups","g","login","onLogin","userSettings","curLocale","detectedLocale","CoreWM","blacklistedPackages","setBlacklist","_renderUI","_createUI","tempNode","nn","cloneNode","container","_restore","removeAttribute","onsubmit","preventDefault","requestLogin","alert","Keycodes","F1","F2","F3","F4","F6","F7","F8","F9","F10","F11","F12","TILDE","GRAVE","CMD","LSUPER","RSUPER","DELETE","INSERT","HOME","END","PGDOWN","PGUP","PAUSE","BREAK","CAPS_LOCK","SCROLL_LOCK","BACKSPACE","SPACE","TAB","ENTER","ESC","LEFT","RIGHT","UP","DOWN","getEventList","mousePosition","detail","y","touches","changedTouches","clientX","clientY","keyCombination","modifiers","CTRL","ctrlKey","SHIFT","shiftKey","ALT","altKey","META","metaKey","checkFor","checks","checkMods","checkKeys","hasmod","fk","haskey","keyCode","getKeyName","$bind","makeFakeEvent","pos","nev","MouseEvent","addEventHandler","useCapture","realType","_boundEvents","customEvents","mousewheel","_wheel","direction","wheelDelta","z","click","firstTarget","firstEvent","cancelled","tempMove","newEvent","defineProperty","enumerable","dispatchEvent","dblclick","debounce","stopPropagation","contextmenu","evName","noBind","addEvent","nsType","realName","PointerEvent","MSPointerEvent","tmpName","getRealEventName","initNamespace","mouseButton","button","which","$unbind","unbindNamed","Events","BehaviourState","wm","win","$element","_$element","$top","_$top","$handle","_$resize","rectWorkspace","getWindowSpace","rectWindow","_position","_dimension","topMargin","borderSize","snapping","cornerSize","getSetting","windowSize","moved","startX","startY","minWidth","_properties","min_width","minHeight","min_height","windowRects","getWindows","_wid","dim","rect","right","bottom","snapRects","dir","dirX","dirY","nw","ne","se","sw","createWindowBehaviour","newRect","onMouseMove","getMouseLocked","dx","dy","newLeft","newTop","cornerSnapSize","windowSnapSize","newRight","newBottom","onWindowMove","nh","nl","nt","Math","onWindowResize","_move","_resize","onMouseDown","_state","maximized","_focus","calculateDirection","getRect","_mouselock","_onChange","onMouseUp","allow_move","_destroyed","allow_resize","WindowBehaviour","triggerFullscreen","state","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","ALLOW_KEYBOARD_INPUT","webkitCancelFullScreen","mozCancelFullScreen","exitFullscreen","super","_windows","_currentWin","_lastWin","_stylesheet","_sessionLoaded","_fullyLoaded","_isResponsive","_responsiveRes","_dcTimeout","_resizeTimeout","_$fullscreen","_$lastDomInput","__name","destroyStylesheet","onbeforeunload","Notification","subscribe","_onMouseLeave","_onOrientationChange","_onHashChange","_onResize","_onScroll","_onFullscreen","_onContextMenu","_onMouseDown","_onClick","_onKeyUp","_onKeyDown","_onKeyPress","_onError","_onBeforeUnload","queries","getDefaultSetting","maxWidth","resize","_inited","foundIndex","findIndex","styles","rawStyles","rules","innerWidth","onResize","prev","_onDisplayChange","relatedTarget","toElement","nodeName","screen","onOrientationChange","getArgs","space","scrollTop","scrollLeft","notif","fullScreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","_isFullscreen","setImage","onContextMenu","blur","hitWindow","hitMenu","getAttribute","getCurrentWindow","_blur","onKeyUp","_onKeyEvent","reacted","combination","onKeyDown","accept","doPrevent","key_capture","checkPrevent","linenumber","column","exception","winCount","getLabel","label","createInputLabel","lbl","span","getWindowId","attr","getValueLabel","nodeValue","getViewNodeValue","siz","getProperty","param","isDataView","checked","setProperty","_setKnownAttribute","_setValueAttribute","inner","readonly","ignoreParams","classMap","textalign","fvalue","getValue","setFlexbox","grow","shrink","basis","checkel","flex","webkitBoxFlex","mozBoxFlex","webkitFlex","mozFlex","msFlex","oFlex","align","createDrag","onDown","onMove","onUp","currentX","currentY","dragging","_onMouseMove","touchDevice","diffX","diffY","_onMouseUp","getNextElement","elements","ignore_roles","querySelectorAll","getElements","currentParent","els","cur","getCurrentParent","currentIndex","getCurrentIndex","nextIndex","getNextIndex","getNext","createDraggable","effect","dragImage","onStart","onEnd","_dragStart","dataTransfer","effectAllowed","setDragImage","dragEl","dragPos","offset","opacity","createDroppable","onFilesDropped","onItemDropped","onEnter","onOver","onLeave","onDrop","_onDrop","getData","_doDrop","getParent","dropEffect","GUI","REGISTRY","getFocusElement","inst","tagMap","gui-switch","gui-list-view","gui-tree-view","gui-icon-view","gui-input-modal","createElementInstance","buildArgs","component","build","GUIElement","oldDisplay","arg2","outer","_append","parseNode","rui","createFromNode","_call","gel","values","onparse","lcase","translator","isNative","hasAttribute","parseDynamic","pel","_wasParsed","classRef","allowedChildren","allowedParents","parent","addChildren","frag","before","insertBefore","cleanScheme","newhtml","edsplit","removeSelfClosingTags","GUIScheme","scheme","triggers","render","createDocumentFragment","wrapper","gelData","getRegisteredElement","ac","childrenTagNames","sNode","ap","parentTagName","cbxhr","_load","content","getFragment","_resolve","nodes","resolving","resolveFragments","_getRoot","_restored","allow_maximize","allow_minimize","allow_close","isNaN","_setProperty","setWindowProperties","_trigger","cleaned","WindowManager","Hooks","lastMenu","clickWrapper","onclick","original","isExpander","subMenu","isTrusted","clamp","_clamp","rm","srm","customInstance","callbackMap","resolveItems","par","props","labelHTML","titleHTML","entry","menu","nroot","onClick","diff","marginTop","clampSubMenu","round","setActive","Menu","getNextZindex","_lzindex","_ltzindex","ontop","waitForAnimation","anim","_animationCallback","createMediaQueries","qs","ref","_createQueries","_WID","_NAMES","dimension","tag","auto_size","_$root","_$winicon","_$loading","_$disabled","_$warning","_opts","_loaded","_initialized","_disabled","_loading","_icon","_name","_title","_tag","_children","_parent","_origtitle","_lastDimension","_lastPosition","_sound","_soundVolume","_scheme","gravity","allow_windowlist","allow_drop","allow_iconmenu","allow_ontop","allow_hotkeys","allow_session","start_focused","max_width","max_height","media_queries","focused","modal","minimized","onbottom","_queryTimer","np","getWindowPosition","restore","restored","grav","innerHeight","_wm","classNames","zIndex","window_id","role","live","windowTitle","preventTimeout","_onanimationend","_onWindowButtonClick","_onWindowIconClick","_maximize","_onDndEvent","_toggleLoading","_toggleDisabled","_setIcon","_updateMarkup","playSound","_minimize","maxHeight","traverseTree","sel","inittimeout","shutdown","_removeDOM","_setWarning","animatetimeout","_animateClose","_removeChild","_removeChildren","_destroyDOM","removeWindow","curWin","setCurrentWindow","lastWin","getLastWindow","setLastWindow","_destroyWin","_args","_findByQuery","fromString","createInto","Node","wmAdd","wmFocus","addWindow","child","_getChildren","_getChild","_getMaximizedSize","restoreMaximized","restoreMinimized","_toggleAttentionBlink","_blurGUI","dw","dh","cpos","cx","cy","newW","newH","newX","newY","_limitTo","_moveTo","_resizeFinished","getNewSize","ui","dmax","dmin","dclose","dres","stat","_blink","nextElement","activeElement","_nextTabIndex","checkMediaQueries","control","_close","close","minimize","maximize","byUser","eventWindow","delimiter","tel","Window","closeWithMain","closeOnEmpty","__inited","__mainwindow","__windows","__settings","__destroying","__options","focusLastWindow","last","__scheme","_removeWindow","setmain","_getWindow","wins","Dom","Application","dialogsHtml","buttonClicked","closeCallback","windowName","focusButtons","buttonMap","ButtonOK","ButtonCancel","ButtonYes","ButtonNo","_render","_findDOM","_find","onClose","parentObj","parentIsWindow","parentIsProcess","Dialogs","_on","_addChild","_addWindow","$el","$progress","Watermark","ver","Version","lines","per","$notifications","visibles","animationCallback","_remove","alt","getNotificationArea","pitem","createNotification","removeNotification","getNotification","cols","rows","columns","selected","convertToRGB","hex","rgb","convertToHEX","invertHEX","color","Colors","getColor","updateHex","update","hide","buttons","parseMessage","empty","extMessage","traceMessage","bugreport","txt","filetypes","extension","mfilter","multiple","setTo","settingsWatch","changePath","view","home","mlist","checkEmptyInput","disable","dpath","activated","checkSelection","ft","newinput","rootPath","clear","fromDropdown","lastDir","resetLastSelected","chdir","wasActivated","checkFileExtension","busy","pb","maxSize","setFile","progressDialog","fileSize","desc","fontName","fontSize","fontColor","fonts","minSize","unit","selection","preview","sizes","j","updatePreview","listFonts","listSizes","placeholder","newArgs","Transport","cors","binary","_request","byteLength","shortcuts","parentfile","_requestUpload","OSjsTransport","getTargetPath","getTargetUrl","moduleOptions","baseUrl","basename","parseListing","reqpath","uri","getElementsByTagNameNS","textContent","getFilePath","getFileId","getFileSize","getFileMime","Destination","aopts","copts","httpCode","DOMParser","parseFromString","requestUrl","show","displayMenu","createIcon","onInited","_updateIcon","destroyIcon","setTitle","Response","statusCode","getBody","encoding","baseQs","handleQs","jsonpID","queues","followRedirects","callbackName","abortTimeout","script","head","onComplete","async","callbackParameter","methodParameter","nodeify","ServiceNotificationIcon","jsonp","gapi","SingletonInstance","GoogleAPI","clientId","accessToken","userId","preloaded","authenticated","load","client","authenticate","loadAll","finished","lload","_next","signOut","immediate","authorize","client_id","user_id","createRingNotification","revoke","handleAuthResult","authResult","error_subtype","access_token","oauth2","userinfo","execute","resp","_run","CACHE_CLEAR_TIMEOUT","_authenticated","_clearCacheTimeout","_rootFolderId","_treeCache","createDirectoryList","rdir","fileType","mimeType","kind","quotaBytesUsed","createItem","getAllDirectoryFiles","doRetrieve","initialRequest","drive","retrievePageOfFiles","nextPageToken","pageToken","retrieveAllFiles","idList","parentList","parents","piter","resolves","currentParentId","_getFileList","foundId","_nextDir","completed","getFilesBelongingTo","about","rootFolderId","getFileFromPath","tmpItem","ldir","getParentPathId","setFolder","insert","folderId","resource","delete","childId","fargs","_init","ritem","fileId","getToken","downloadUrl","parentId","boundary","close_delim","contentType","createBody","base64Data","multipartRequestBody","reqContentType","toBase64","createBoundary","fileData","uploadType","patch","req","useKeys","webContentLink","dirDest","rootDest","redirectURI","WindowsLiveAPI","hasSession","lastScope","WL","_login","currScope","onLogout","onLog","onSessionChange","redirect_uri","session","error_description","unsubscribe","_removeRing","logout","getSession","_mimeCache","_isMounted","onedriveCall","api","responseFailed","getItemType","getMetadataFromItem","itemFile","getItemMime","getFilesInFolder","resolvePath","useParent","lfound","iargs","relativePath","drivePath","fileList","srcDrivePath","dstDrivePath","authed","dbx","Dropbox","timedOut","loginTimeout","redirectUrl","authUrl","getAuthenticationUrl","_loadDependencies","_createClient","error_summary","path_display","filesSearch","max_results","mode",".tag","matches","_createMetadata","cursor","has_more","dl","sharingGetSharedLinkFile","fileBlob","filesUpload","contents","filesCopy","from_path","to_path","filesMove","filesGetMetadata","hasLink","sharingGetSharedLinks","links","newLink","sharingCreateSharedLinkWithSettings","requested_visibility","filesCreateFolder","usersGetSpaceUsage","allocation","individual","allocated","filesDelete","SearchEngine","SplashScreen","AlertDialog","ApplicationChooserDialog","ColorDialog","ConfirmDialog","ErrorDialog","FileInfoDialog","FileDialog","FileProgressDialog","FileUploadDialog","FontDialog","InputDialog","WebTransport","OsjsTransport","DistTransport","ApplicationTransport","WebdavTransport","GdriveTransport","OnedriveTransport","DropboxTransport","OSJS_DEBUG","web","osjs","dist","webdav","google-drive","onedrive","dropbox","hasBooted","hasShutDown","onError","testMode","_dialog","initPreloading","flatten","Preloads","initHandlers","log","authenticator","connection","connectionName","initVFS","addList","initSettingsManager","pools","initPackageManager","PreloadOnBoot","getManifest","initExtensions","preloadExtensions","exts","Extensions","launchExtensions","initSearchEngine","initGUI","register","Alert","ApplicationChooser","Color","Confirm","FileInfo","FileProgress","FileUpload","Font","Input","initWindowManager","wmConfig","exec","setup","initMocha","overflow","runTests","onMessage","onPostMessage","wid","Locale","LocaleOptions","Languages","watermark","AutoStart","checkMap","skipMap","getLastSession","adds","refid","createFromArray","initSession","stop","restart","toggleFullscreen","killAll","reload","lout","saveSession","running","MOUSE_PROPS","MOUSE_DEFAULTS","inType","inDict","createEvent","initEvent","bubbles","cancelable","pressure","pointerId","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","USE_MAP","Map","PointerMap","SparseArrayMap","array","has","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","newEvents","unregister","contained","ex","down","inEvent","fireEvent","up","enter","leave","over","out","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","listen","unlisten","removeEvent","eventName","boundHandler","makeEvent","_target","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","toArray","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","shadowSelector","selector","rule","watchSubtree","observe","enableOnSubtree","installOnLoad","installNewSubtree","findElements","addElement","removeElement","elementChanged","oldValue","concatLists","accum","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","mutations","mutationHandler","addedNodes","removed","removedNodes","attrib2css","selectors","hasNativePE","hasShadowRoot","ShadowDOMPolyfill","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","abs","prepareEvent","pd","prepareButtonsForMove","mousedown","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","touchActionToScrollType","_scrollType","elementRemoved","oldSt","scrollTypes","EMITTER","XSCROLLER","YSCROLLER","SCROLLER","touchAction","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","cancelResetClickCount","removePrimaryPointer","inPointer","resetClickCount","clickCount","resetId","typeToButtons","touchToPointer","cte","currentTouchEvent","radiusX","webkitRadiusX","radiusY","webkitRadiusY","webkitForce","self","processTouches","inFunction","tl","shouldScroll","scrollAxis","currentTarget","oa","da","doa","findTouch","inTL","inId","vacuumTouches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","assertConnected","elem","ownerDocument","inActiveButtonState","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","pointerevents","targetFinding","Init","mod","ERR_FILE_OPEN","ERR_WM_NOT_RUNNING","ERR_FILE_OPEN_FMT","ERR_APP_MIME_NOT_FOUND_FMT","ERR_APP_LAUNCH_FAILED","ERR_APP_LAUNCH_FAILED_FMT","ERR_APP_CONSTRUCT_FAILED_FMT","ERR_APP_INIT_FAILED_FMT","ERR_APP_RESOURCES_MISSING_FMT","ERR_APP_PRELOAD_FAILED_FMT","ERR_APP_LAUNCH_ALREADY_RUNNING_FMT","ERR_APP_LAUNCH_MANIFEST_FAILED_FMT","ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT","ERR_NO_WM_RUNNING","ERR_CORE_INIT_FAILED","ERR_CORE_INIT_FAILED_DESC","ERR_CORE_INIT_NO_WM","ERR_CORE_INIT_WM_FAILED_FMT","ERR_CORE_INIT_PRELOAD_FAILED","ERR_JAVASCRIPT_EXCEPTION","ERR_JAVACSRIPT_EXCEPTION_DESC","ERR_APP_API_ERROR","ERR_APP_API_ERROR_DESC_FMT","ERR_APP_MISSING_ARGUMENT_FMT","ERR_APP_UNKNOWN_ERROR","ERR_OPERATION_TIMEOUT","ERR_OPERATION_TIMEOUT_FMT","ERR_ARGUMENT_FMT","ERR_INVALID_LOCATION","ERR_WIN_DUPLICATE_FMT","WINDOW_MINIMIZE","WINDOW_MAXIMIZE","WINDOW_RESTORE","WINDOW_CLOSE","WINDOW_ONTOP_ON","WINDOW_ONTOP_OFF","TITLE_SIGN_OUT","TITLE_SIGNED_IN_AS_FMT","ERR_LOGIN_FMT","ERR_LOGIN_INVALID","ERR_NO_SESSION","MSG_SESSION_WARNING","BUGREPORT_MSG","SERVICENOTIFICATION_TOOLTIP","CONNECTION_LOST","CONNECTION_RESTORED","CONNECTION_RESTORE_FAILED","CONNECTION_ERROR","ERR_UTILS_XHR_FATAL","ERR_UTILS_XHR_FMT","DIALOG_LOGOUT_TITLE","DIALOG_LOGOUT_MSG_FMT","DIALOG_CLOSE","DIALOG_CANCEL","DIALOG_APPLY","DIALOG_OK","DIALOG_ALERT_TITLE","DIALOG_COLOR_TITLE","DIALOG_COLOR_R","DIALOG_COLOR_G","DIALOG_COLOR_B","DIALOG_COLOR_A","DIALOG_CONFIRM_TITLE","DIALOG_ERROR_TITLE","DIALOG_ERROR_MESSAGE","DIALOG_ERROR_SUMMARY","DIALOG_ERROR_TRACE","DIALOG_ERROR_BUGREPORT","DIALOG_FILE_SAVE","DIALOG_FILE_OPEN","DIALOG_FILE_MKDIR","DIALOG_FILE_MKDIR_MSG","DIALOG_FILE_OVERWRITE","DIALOG_FILE_MNU_VIEWTYPE","DIALOG_FILE_MNU_LISTVIEW","DIALOG_FILE_MNU_TREEVIEW","DIALOG_FILE_MNU_ICONVIEW","DIALOG_FILE_ERROR","DIALOG_FILE_ERROR_SCANDIR","DIALOG_FILE_ERROR_FIND","DIALOG_FILE_MISSING_FILENAME","DIALOG_FILE_MISSING_SELECTION","DIALOG_FILEINFO_TITLE","DIALOG_FILEINFO_LOADING","DIALOG_FILEINFO_ERROR","DIALOG_FILEINFO_ERROR_LOOKUP","DIALOG_FILEINFO_ERROR_LOOKUP_FMT","DIALOG_INPUT_TITLE","DIALOG_FILEPROGRESS_TITLE","DIALOG_FILEPROGRESS_LOADING","DIALOG_UPLOAD_TITLE","DIALOG_UPLOAD_DESC","DIALOG_UPLOAD_MSG_FMT","DIALOG_UPLOAD_MSG","DIALOG_UPLOAD_FAILED","DIALOG_UPLOAD_FAILED_MSG","DIALOG_UPLOAD_FAILED_UNKNOWN","DIALOG_UPLOAD_FAILED_CANCELLED","DIALOG_UPLOAD_TOO_BIG","DIALOG_UPLOAD_TOO_BIG_FMT","DIALOG_FONT_TITLE","DIALOG_APPCHOOSER_TITLE","DIALOG_APPCHOOSER_MSG","DIALOG_APPCHOOSER_NO_SELECTION","DIALOG_APPCHOOSER_SET_DEFAULT","GAPI_DISABLED","GAPI_SIGN_OUT","GAPI_REVOKE","GAPI_AUTH_FAILURE","GAPI_AUTH_FAILURE_FMT","GAPI_LOAD_FAILURE","WLAPI_DISABLED","WLAPI_SIGN_OUT","WLAPI_LOAD_FAILURE","WLAPI_LOGIN_FAILED","WLAPI_LOGIN_FAILED_FMT","WLAPI_INIT_FAILED_FMT","IDB_MISSING_DBNAME","IDB_NO_SUCH_ITEM","ERR_VFS_FATAL","ERR_VFS_UNAVAILABLE","ERR_VFS_FILE_ARGS","ERR_VFS_NUM_ARGS","ERR_VFS_EXPECT_FILE","ERR_VFS_EXPECT_SRC_FILE","ERR_VFS_EXPECT_DST_FILE","ERR_VFS_FILE_EXISTS","ERR_VFS_TARGET_NOT_EXISTS","ERR_VFS_TRANSFER_FMT","ERR_VFS_UPLOAD_NO_DEST","ERR_VFS_UPLOAD_NO_FILES","ERR_VFS_UPLOAD_FAIL_FMT","ERR_VFS_UPLOAD_CANCELLED","ERR_VFS_DOWNLOAD_NO_FILE","ERR_VFS_DOWNLOAD_FAILED","ERR_VFS_REMOTEREAD_EMPTY","ERR_VFS_NO_MIME_DETECT","ERR_VFSMODULE_INVALID","ERR_VFSMODULE_INVALID_FMT","ERR_VFSMODULE_INVALID_METHOD","ERR_VFSMODULE_INVALID_METHOD_FMT","ERR_VFSMODULE_INVALID_TYPE","ERR_VFSMODULE_INVALID_TYPE_FMT","ERR_VFSMODULE_INVALID_CONFIG","ERR_VFSMODULE_INVALID_CONFIG_FMT","ERR_VFSMODULE_ALREADY_MOUNTED","ERR_VFSMODULE_ALREADY_MOUNTED_FMT","ERR_VFSMODULE_NOT_MOUNTED","ERR_VFSMODULE_NOT_MOUNTED_FMT","ERR_VFSMODULE_EXCEPTION","ERR_VFSMODULE_EXCEPTION_FMT","ERR_VFSMODULE_NOT_FOUND_FMT","ERR_VFSMODULE_READONLY","ERR_VFSMODULE_READONLY_FMT","TOOLTIP_VFS_DOWNLOAD_NOTIFICATION","ERR_VFSMODULE_XHR_ERROR","ERR_VFSMODULE_ROOT_ID","ERR_VFSMODULE_NOSUCH","ERR_VFSMODULE_PARENT","ERR_VFSMODULE_PARENT_FMT","ERR_VFSMODULE_SCANDIR","ERR_VFSMODULE_SCANDIR_FMT","ERR_VFSMODULE_READ","ERR_VFSMODULE_READ_FMT","ERR_VFSMODULE_WRITE","ERR_VFSMODULE_WRITE_FMT","ERR_VFSMODULE_COPY","ERR_VFSMODULE_COPY_FMT","ERR_VFSMODULE_UNLINK","ERR_VFSMODULE_UNLINK_FMT","ERR_VFSMODULE_MOVE","ERR_VFSMODULE_MOVE_FMT","ERR_VFSMODULE_EXIST","ERR_VFSMODULE_EXIST_FMT","ERR_VFSMODULE_FILEINFO","ERR_VFSMODULE_FILEINFO_FMT","ERR_VFSMODULE_MKDIR","ERR_VFSMODULE_MKDIR_FMT","ERR_VFSMODULE_MKFILE","ERR_VFSMODULE_MKFILE_FMT","ERR_VFSMODULE_URL","ERR_VFSMODULE_URL_FMT","ERR_VFSMODULE_TRASH","ERR_VFSMODULE_TRASH_FMT","ERR_VFSMODULE_UNTRASH","ERR_VFSMODULE_UNTRASH_FMT","ERR_VFSMODULE_EMPTYTRASH","ERR_VFSMODULE_EMPTYTRASH_FMT","ERR_VFSMODULE_FIND","ERR_VFSMODULE_FIND_FMT","ERR_VFSMODULE_FREESPACE","ERR_VFSMODULE_FREESPACE_FMT","ERR_VFSMODULE_EXISTS","ERR_VFSMODULE_EXISTS_FMT","ERR_DROPBOX_API","ERR_DROPBOX_AUTH","ERR_DROPBOX_KEY","DROPBOX_NOTIFICATION_TITLE","DROPBOX_SIGN_OUT","ONEDRIVE_ERR_RESOLVE","ZIP_PRELOAD_FAIL","ZIP_VENDOR_FAIL","ZIP_NO_RESOURCE","ZIP_NO_PATH","SEARCH_LOADING","SEARCH_NO_RESULTS","ERR_PACKAGE_EXISTS","ERR_PACKAGE_MANIFEST","ERR_PACKAGE_ENUM_FAILED","ERR_FILE_APP_OPEN","ERR_FILE_APP_OPEN_FMT","ERR_FILE_APP_OPEN_ALT_FMT","ERR_FILE_APP_SAVE_ALT_FMT","ERR_GENERIC_APP_FMT","ERR_GENERIC_APP_ACTION_FMT","ERR_GENERIC_APP_UNKNOWN","ERR_GENERIC_APP_REQUEST","ERR_GENERIC_APP_FATAL_FMT","MSG_GENERIC_APP_DISCARD","MSG_FILE_CHANGED","MSG_APPLICATION_WARNING","MSG_MIME_OVERRIDE","ERR_OPEN_LOCATION","ERR_OPEN_LOCATION_FMT","LBL_UNKNOWN","LBL_APPEARANCE","LBL_USER","LBL_NAME","LBL_APPLY","LBL_FILENAME","LBL_PATH","LBL_SIZE","LBL_TYPE","LBL_MIME","LBL_LOADING","LBL_SETTINGS","LBL_ADD_FILE","LBL_COMMENT","LBL_ACCOUNT","LBL_CONNECT","LBL_ONLINE","LBL_OFFLINE","LBL_AWAY","LBL_BUSY","LBL_CHAT","LBL_HELP","LBL_ABOUT","LBL_PANELS","LBL_LOCALES","LBL_THEME","LBL_COLOR","LBL_PID","LBL_KILL","LBL_ALIVE","LBL_INDEX","LBL_ADD","LBL_FONT","LBL_YES","LBL_NO","LBL_CANCEL","LBL_TOP","LBL_LEFT","LBL_RIGHT","LBL_BOTTOM","LBL_CENTER","LBL_FILE","LBL_NEW","LBL_OPEN","LBL_SAVE","LBL_SAVEAS","LBL_CLOSE","LBL_MKDIR","LBL_UPLOAD","LBL_VIEW","LBL_EDIT","LBL_RENAME","LBL_DELETE","LBL_OPENWITH","LBL_ICONVIEW","LBL_TREEVIEW","LBL_LISTVIEW","LBL_REFRESH","LBL_VIEWTYPE","LBL_BOLD","LBL_ITALIC","LBL_UNDERLINE","LBL_REGULAR","LBL_STRIKE","LBL_INDENT","LBL_OUTDENT","LBL_UNDO","LBL_REDO","LBL_CUT","LBL_UNLINK","LBL_COPY","LBL_PASTE","LBL_INSERT","LBL_IMAGE","LBL_LINK","LBL_DISCONNECT","LBL_APPLICATIONS","LBL_ADD_FOLDER","LBL_INFORMATION","LBL_TEXT_COLOR","LBL_BACK_COLOR","LBL_RESET_DEFAULT","LBL_DOWNLOAD_COMP","LBL_ORDERED_LIST","LBL_BACKGROUND_IMAGE","LBL_BACKGROUND_COLOR","LBL_UNORDERED_LIST","LBL_STATUS","LBL_READONLY","LBL_CREATED","LBL_MODIFIED","LBL_SHOW_COLUMNS","LBL_MOVE","LBL_OPTIONS","LBL_OK","LBL_DIRECTORY","LBL_CREATE","LBL_BUGREPORT","LBL_INSTALL","LBL_UPDATE","LBL_REMOVE","LBL_SHOW_SIDEBAR","LBL_SHOW_NAVIGATION","LBL_SHOW_HIDDENFILES","LBL_SHOW_FILEEXTENSIONS","LBL_MOUNT","LBL_DESCRIPTION","LBL_USERNAME","LBL_PASSWORD","LBL_HOST","LBL_NAMESPACE","LBL_SEARCH","LBL_BACK","LBL_ICONS","LBL_ICON","LBL_UNINSTALL","LBL_REGENERATE","LBL_DESKTOP","LBL_WINDOWMANAGER","LBL_HOTKEY","LBL_HOTKEYS","LBL_MOUNTS","LBL_ID","LBL_APPLICATION","LBL_SCOPE","LBL_HIDE","LBL_REPOSITORY","LBL_VERSION","LBL_AUTHOR","LBL_GROUPS","LBL_AUTOHIDE","LBL_PERSONAL","LBL_SYSTEM","LBL_STARTING","LBL_SOUNDS","LBL_STORE","LBL_LOCALE","LBL_PACKAGE","LBL_PACKAGES","LBL_INPUT","LBL_MISC","LBL_OTHER","LBL_USERS","LBL_FONTS","LBL_OPEN_LOCATION","LBL_HOME","LBL_WIDGET","LBL_WIDGETS","LBL_LOCK","LBL_UNLOCK","LBL_WARNING","LBL_INFO","LBL_POSITION","LBL_OPACITY","LBL_ITEMS","LBL_ONTOP","LBL_BACKGROUND","LBL_QUIT","LBL_EXIT","LBL_WINDOWS","getItem","_getSettings","DemoAuthenticator","HttpConnection","ws","wsurl","wsqueue","destroying","_connect","reconnect","connected","WebSocket","onopen","onmessage","_index","_onmessage","onclose","_onclose","curr","version","setItem","DemoStorage","toggleState","expanded","GUIPanedView","orient","cel","resizer","resizeEl","previousElementSibling","startWidth","startHeight","Number","MAX_VALUE","totalSize","totalContainers","totalSpacers","newWidth","newHeight","webkitFlexBasis","mozFflexBasis","msFflexBasis","oFlexBasis","flexBasis","CustomEvent","bindResizer","GUIPanedViewContainer","GUIButtonBar","GUIToolBar","GUIGrid","GUIGridRow","GUIGridEntry","GUIVBox","GUIVBoxContainer","GUIHBox","GUIHBoxContainer","GUIExpander","lbltxt","_CLIPBOARD","setClipboard","getClipboard","Clipboard","_classMap","getEntryTagName","getEntryFromEvent","header","tn","isHeader","row","handleItemSelection","multipleSelect","findex","getValueParameter","matchValueByKey","UIDataView","_selected","oncreate","oninit","single","inView","updateActiveSelection","findId","findKey","active","_active","scrollSpace","elTop","tooltip","asValue","scrollIntoView","scroll","singleClick","wasResized","col","resetDir","expand","activate","underlay","cls","C","getRowSize","lastTop","handleKey","handleKeyPress","oldTop","ExtendedDate","date","defaultFormat","dayNames","monthNames","fmt","getFirstDayInMonth","getLastDayInMonth","getDaysInMonth","getWeekNumber","to","isWithinMonth","getDayOfTheYear","getMonth","getFullYear","getDate","_now","_y","_m","setFullYear","setHours","setDate","getDay","ceil","shrt","floor","toindex","utc","pad","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","D","getUTCDay","getUTCDate","S","W","F","getUTCMonth","M","getUTCFullYear","G","A","getUTCHours","getHours","H","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","O","tzo","getTimezoneOffset","dif","ppad","num","norm","zones","U","getTime","formatDate","GUIDataView","DateExtended","_iconSizes","filesize","removeExtension","mimeConfig","extensions","getDateFromStamp","stamp","getListViewColumns","columnMapping","defColumns","useColumns","defaultcolumns","vfsOptions","scandirOptions","resizable","readdir","sopts","childView","getChildView","setOption","cc","showFileExtensions","scanopts","showDotFiles","dotfiles","filetype","sortby","sortdir","summary","directories","_createEntry","GUIFileView","buildChildView","toggle","_readdirTimeout","getChildViewType","nel","draggable","draggable-type","createEntry","initEntry","dicon","dimg","dlabel","dspan","bindEntryEvents","GUIIconView","getSelected","getEntry","setSelected","_buttonCount","createInputOfType","attribs","tabindex","step","_bindDefaults","rolemap","TEXTAREA","INPUT","_create","setSwitchValue","_GUIInput","_GUISelect","addToSelectBox","what","selectedIndex","createSelectInput","GUILabel","isHTML","GUITextarea","scrollHeight","GUIText","GUIPassword","GUIFileUpload","onchange","GUIRadio","GUICheckbox","GUISwitch","toggleValue","GUIButton","setLabel","tip","GUISelect","GUISelectList","GUISlider","GUIInputModal","createFakeHeader","fh","fhead","fcols","rel","fcol","widthOffset","createResizers","initRow","_columns","setSize","createRow","GUIListView","cbCreated","onCreated","moveIntoInner","fakeHead","fakeHeadInner","hcols","vis","getSelectionEventAttribs","mel","didx","an","getEventName","runChildren","level","winRef","onEntryClick","GUIMenuEntry","createTyped","GUIMenuBar","submenu","updateChildren","GUIMenu","newNode","customMenu","submenus","sub","GUIIframe","_tagName","standalone","matchMedia","iframe","GUIColorBox","GUIColorSwatch","cv","ctx","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","offsetX","offsetY","getImageData","GUIProgressBar","percentage","GUIStatusBar","textNodes","TEXT_NODE","getDocument","contentDocument","contentWindow","destroyFixInterval","_fixTry","_fixInterval","clearInterval","setDocumentData","themeName","editable","getSelection","getRangeAt","rangeCount","deleteContents","insertNode","createRange","insertTextAtCursor","template","setInterval","createFixInterval","GUIRichText","execCommand","queryCommandValue","getDocumentData","toggleActive","eidx","selectTab","tabs","tab","findTab","createTab","GUITabs","newtabs","removetabs","removeTab","currentTab","handleItemExpand","_rendered","onDndEnter","onDndLeave","expander","eel","dval","GUITreeView","recurse","createVisualElement","controls","autoplay","GUIAudio","GUIVideo","GUIImage","GUICanvas","hasClosingDialog","currentFile","hasChanged","menuMap","MenuNew","newDialog","MenuSave","saveDialog","MenuSaveAs","MenuOpen","openDialog","MenuClose","openFile","checkHasChanged","discard","updateFile","_setTitle","readData","rawData","_getArgument","onDone","_setArgument","showFile","callbackVFS","saveAs","getFileData","saveFile","IFRAME_COUNT","allow_restore","_iwin","_frame","postMessage","wmRef","setLocation","oldbefore","IFrameApplicationWindow","_getResource","_response","_getMainWindow"],"mappings":"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","file":"../skylark-osjsv2-client-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-osjsv2-client/utils/misc',[],function () {\n    'use strict';\n    function format(format) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        const sprintfRegex = /\\{(\\d+)\\}/g;\n        function sprintf(match, number) {\n            return number in args ? args[number] : match;\n        }\n        return format.replace(sprintfRegex, sprintf);\n    }\n    function parseurl(url, modify) {\n        modify = modify || {};\n        if (!url.match(/^(\\w+\\:)\\/\\//)) {\n            url = '//' + url;\n        }\n        const protocol = url.split(/^(\\w+\\:)?\\/\\//);\n        const splitted = (() => {\n            const tmp = protocol[2].replace(/^\\/\\//, '').split('/');\n            return {\n                proto: (modify.protocol || protocol[1] || window.location.protocol || '').replace(/\\:$/, ''),\n                host: modify.host || tmp.shift(),\n                path: modify.path || '/' + tmp.join('/')\n            };\n        })();\n        function _parts() {\n            const parts = [\n                splitted.proto,\n                '://'\n            ];\n            if (modify.username) {\n                const authstr = String(modify.username) + ':' + String(modify.password);\n                parts.push(authstr);\n                parts.push('@');\n            }\n            parts.push(splitted.host);\n            parts.push(splitted.path);\n            return parts.join('');\n        }\n        return {\n            protocol: splitted.proto,\n            host: splitted.host,\n            path: splitted.path,\n            url: _parts()\n        };\n    }\n    function urlparams(search, hash) {\n        let hashes = search.slice(search.indexOf(hash ? '#' : '?') + 1).split('&');\n        return hashes.reduce((params, hash) => {\n            let [key, val] = hash.split('=');\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    }\n    function argumentDefaults(args, defaults, undef) {\n        args = args || {};\n        Object.keys(defaults).forEach(key => {\n            if (typeof defaults[key] === 'boolean' || typeof defaults[key] === 'number') {\n                if (typeof args[key] === 'undefined' || args[key] === null) {\n                    args[key] = defaults[key];\n                }\n            } else {\n                args[key] = args[key] || defaults[key];\n            }\n        });\n        return args;\n    }\n    function mergeObject(obj1, obj2, opts) {\n        opts = opts || {};\n        for (let p in obj2) {\n            if (obj2.hasOwnProperty(p)) {\n                try {\n                    if (opts.overwrite === false && obj1.hasOwnProperty(p)) {\n                        continue;\n                    }\n                    if (obj2[p].constructor === Object) {\n                        obj1[p] = mergeObject(obj1[p], obj2[p]);\n                    } else {\n                        obj1[p] = obj2[p];\n                    }\n                } catch (e) {\n                    obj1[p] = obj2[p];\n                }\n            }\n        }\n        return obj1;\n    }\n    function cloneObject(o, alternative) {\n        function _clone(i) {\n            if (typeof i !== 'object' || i === null) {\n                return i;\n            } else if (i instanceof Array) {\n                return i.map(_clone);\n            }\n            const iter = {};\n            Object.keys(i).forEach(k => {\n                iter[k] = _clone(i[k]);\n            });\n            return iter;\n        }\n        if (alternative) {\n            return _clone(o);\n        }\n        return JSON.parse(JSON.stringify(o, (key, value) => {\n            if (value && typeof value === 'object' && value.tagName) {\n                return window.undefined;\n            }\n            return value;\n        }));\n    }\n    return {\n        format: format,\n        parseurl: parseurl,\n        urlparams: urlparams,\n        argumentDefaults: argumentDefaults,\n        mergeObject: mergeObject,\n        cloneObject: cloneObject\n    };\n});\ndefine('skylark-osjsv2-client/core/locales',[\n    '../utils/misc'\n], function (misc) {\n    'use strict';\n    let DefaultLocale = 'en_EN';\n    let CurrentLocale = 'en_EN';\n    let CurrentRTL = [];\n    function _() {\n        let userLocale = {};\n        let systemLocale = {};\n        try {\n            userLocale = OSjs.require('locales/' + CurrentLocale ); // modified by lwf\n            systemLocale = OSjs.require('locales/' + DefaultLocale ); // modified by lwf\n        } catch (e) {\n            console.warn('Locale error', e);\n        }\n        const s = arguments[0];\n        let a = arguments;\n        try {\n            if (userLocale && userLocale[s]) {\n                a[0] = userLocale[s];\n            } else {\n                a[0] = systemLocale[s] || s;\n            }\n            return a.length > 1 ? misc.format.apply(null, a) : a[0];\n        } catch (e) {\n            console.warn(e.stack, e);\n        }\n        return s;\n    }\n    function __() {\n        const l = arguments[0];\n        const s = arguments[1];\n        let a = Array.prototype.slice.call(arguments, 1);\n        if (l[CurrentLocale] && l[CurrentLocale][s]) {\n            a[0] = l[CurrentLocale][s];\n        } else {\n            a[0] = l[DefaultLocale] ? l[DefaultLocale][s] || s : s;\n            if (a[0] && a[0] === s) {\n                a[0] = _.apply(null, a);\n            }\n        }\n        return a.length > 1 ? misc.format.apply(null, a) : a[0];\n    }\n    function getLocale() {\n        return CurrentLocale;\n    }\n    function setLocale(l) {\n        let locale;\n        try {\n            locale = OSjs.require('locales/' + l); // modified by lwf\n        } catch (e) {\n            console.warn('Failed to set locale', e);\n            return;\n        }\n        if (locale) {\n            CurrentLocale = l;\n        } else {\n            console.warn('Locales::setLocale()', 'Invalid locale', l, '(Using default)');\n            CurrentLocale = DefaultLocale;\n        }\n        const major = CurrentLocale.split('_')[0];\n        const html = document.querySelector('html');\n        if (html) {\n            html.setAttribute('lang', l);\n            html.setAttribute('dir', CurrentRTL.indexOf(major) !== -1 ? 'rtl' : 'ltr');\n        }\n        console.info('Locales::setLocale()', CurrentLocale);\n    }\n    function createLocalizer(locales) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            args.unshift(locales);\n            return __(...args);\n        };\n    }\n    function init(locale, options, languages) {\n        options = options || {};\n        const names = languages ? Object.keys(languages) : {};\n        if (names instanceof Array && names.indexOf(locale) !== -1) {\n            CurrentLocale = locale;\n        }\n        CurrentRTL = options.RTL || [];\n        names.forEach(k => {\n            OSjs.Locales[k] = OSjs.require('locales/' + k);//modified by lwf\n        });\n    }\n    return {\n        _: _,\n        __: __,\n        getLocale: getLocale,\n        setLocale: setLocale,\n        createLocalizer: createLocalizer,\n        init: init\n    };\n});\n/* axios v0.19.2 | (c) 2020 by Matt Zabriskie */\r\ndefine('skylark-axios/axios',[],  function() {\r\nreturn /******/ (function(modules) { // webpackBootstrap\r\n/******/ \t// The module cache\r\n/******/ \tvar installedModules = {};\r\n/******/\r\n/******/ \t// The require function\r\n/******/ \tfunction __webpack_require__(moduleId) {\r\n/******/\r\n/******/ \t\t// Check if module is in cache\r\n/******/ \t\tif(installedModules[moduleId])\r\n/******/ \t\t\treturn installedModules[moduleId].exports;\r\n/******/\r\n/******/ \t\t// Create a new module (and put it into the cache)\r\n/******/ \t\tvar module = installedModules[moduleId] = {\r\n/******/ \t\t\texports: {},\r\n/******/ \t\t\tid: moduleId,\r\n/******/ \t\t\tloaded: false\r\n/******/ \t\t};\r\n/******/\r\n/******/ \t\t// Execute the module function\r\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\r\n/******/\r\n/******/ \t\t// Flag the module as loaded\r\n/******/ \t\tmodule.loaded = true;\r\n/******/\r\n/******/ \t\t// Return the exports of the module\r\n/******/ \t\treturn module.exports;\r\n/******/ \t}\r\n/******/\r\n/******/\r\n/******/ \t// expose the modules object (__webpack_modules__)\r\n/******/ \t__webpack_require__.m = modules;\r\n/******/\r\n/******/ \t// expose the module cache\r\n/******/ \t__webpack_require__.c = installedModules;\r\n/******/\r\n/******/ \t// __webpack_public_path__\r\n/******/ \t__webpack_require__.p = \"\";\r\n/******/\r\n/******/ \t// Load entry module and return exports\r\n/******/ \treturn __webpack_require__(0);\r\n/******/ })\r\n/************************************************************************/\r\n/******/ ([\r\n/* 0 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\tmodule.exports = __webpack_require__(1);\r\n\r\n/***/ }),\r\n/* 1 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\tvar bind = __webpack_require__(3);\r\n\tvar Axios = __webpack_require__(4);\r\n\tvar mergeConfig = __webpack_require__(22);\r\n\tvar defaults = __webpack_require__(10);\r\n\t\r\n\t/**\r\n\t * Create an instance of Axios\r\n\t *\r\n\t * @param {Object} defaultConfig The default config for the instance\r\n\t * @return {Axios} A new instance of Axios\r\n\t */\r\n\tfunction createInstance(defaultConfig) {\r\n\t  var context = new Axios(defaultConfig);\r\n\t  var instance = bind(Axios.prototype.request, context);\r\n\t\r\n\t  // Copy axios.prototype to instance\r\n\t  utils.extend(instance, Axios.prototype, context);\r\n\t\r\n\t  // Copy context to instance\r\n\t  utils.extend(instance, context);\r\n\t\r\n\t  return instance;\r\n\t}\r\n\t\r\n\t// Create the default instance to be exported\r\n\tvar axios = createInstance(defaults);\r\n\t\r\n\t// Expose Axios class to allow class inheritance\r\n\taxios.Axios = Axios;\r\n\t\r\n\t// Factory for creating new instances\r\n\taxios.create = function create(instanceConfig) {\r\n\t  return createInstance(mergeConfig(axios.defaults, instanceConfig));\r\n\t};\r\n\t\r\n\t// Expose Cancel & CancelToken\r\n\taxios.Cancel = __webpack_require__(23);\r\n\taxios.CancelToken = __webpack_require__(24);\r\n\taxios.isCancel = __webpack_require__(9);\r\n\t\r\n\t// Expose all/spread\r\n\taxios.all = function all(promises) {\r\n\t  return Promise.all(promises);\r\n\t};\r\n\taxios.spread = __webpack_require__(25);\r\n\t\r\n\tmodule.exports = axios;\r\n\t\r\n\t// Allow use of default import syntax in TypeScript\r\n\tmodule.exports.default = axios;\r\n\r\n\r\n/***/ }),\r\n/* 2 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar bind = __webpack_require__(3);\r\n\t\r\n\t/*global toString:true*/\r\n\t\r\n\t// utils is a library of generic helper functions non-specific to axios\r\n\t\r\n\tvar toString = Object.prototype.toString;\r\n\t\r\n\t/**\r\n\t * Determine if a value is an Array\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is an Array, otherwise false\r\n\t */\r\n\tfunction isArray(val) {\r\n\t  return toString.call(val) === '[object Array]';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is undefined\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if the value is undefined, otherwise false\r\n\t */\r\n\tfunction isUndefined(val) {\r\n\t  return typeof val === 'undefined';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a Buffer\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a Buffer, otherwise false\r\n\t */\r\n\tfunction isBuffer(val) {\r\n\t  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\r\n\t    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is an ArrayBuffer\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is an ArrayBuffer, otherwise false\r\n\t */\r\n\tfunction isArrayBuffer(val) {\r\n\t  return toString.call(val) === '[object ArrayBuffer]';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a FormData\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is an FormData, otherwise false\r\n\t */\r\n\tfunction isFormData(val) {\r\n\t  return (typeof FormData !== 'undefined') && (val instanceof FormData);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a view on an ArrayBuffer\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\r\n\t */\r\n\tfunction isArrayBufferView(val) {\r\n\t  var result;\r\n\t  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\r\n\t    result = ArrayBuffer.isView(val);\r\n\t  } else {\r\n\t    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\r\n\t  }\r\n\t  return result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a String\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a String, otherwise false\r\n\t */\r\n\tfunction isString(val) {\r\n\t  return typeof val === 'string';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a Number\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a Number, otherwise false\r\n\t */\r\n\tfunction isNumber(val) {\r\n\t  return typeof val === 'number';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is an Object\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is an Object, otherwise false\r\n\t */\r\n\tfunction isObject(val) {\r\n\t  return val !== null && typeof val === 'object';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a Date\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a Date, otherwise false\r\n\t */\r\n\tfunction isDate(val) {\r\n\t  return toString.call(val) === '[object Date]';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a File\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a File, otherwise false\r\n\t */\r\n\tfunction isFile(val) {\r\n\t  return toString.call(val) === '[object File]';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a Blob\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a Blob, otherwise false\r\n\t */\r\n\tfunction isBlob(val) {\r\n\t  return toString.call(val) === '[object Blob]';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a Function\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a Function, otherwise false\r\n\t */\r\n\tfunction isFunction(val) {\r\n\t  return toString.call(val) === '[object Function]';\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a Stream\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a Stream, otherwise false\r\n\t */\r\n\tfunction isStream(val) {\r\n\t  return isObject(val) && isFunction(val.pipe);\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if a value is a URLSearchParams object\r\n\t *\r\n\t * @param {Object} val The value to test\r\n\t * @returns {boolean} True if value is a URLSearchParams object, otherwise false\r\n\t */\r\n\tfunction isURLSearchParams(val) {\r\n\t  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Trim excess whitespace off the beginning and end of a string\r\n\t *\r\n\t * @param {String} str The String to trim\r\n\t * @returns {String} The String freed of excess whitespace\r\n\t */\r\n\tfunction trim(str) {\r\n\t  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\r\n\t}\r\n\t\r\n\t/**\r\n\t * Determine if we're running in a standard browser environment\r\n\t *\r\n\t * This allows axios to run in a web worker, and react-native.\r\n\t * Both environments support XMLHttpRequest, but not fully standard globals.\r\n\t *\r\n\t * web workers:\r\n\t *  typeof window -> undefined\r\n\t *  typeof document -> undefined\r\n\t *\r\n\t * react-native:\r\n\t *  navigator.product -> 'ReactNative'\r\n\t * nativescript\r\n\t *  navigator.product -> 'NativeScript' or 'NS'\r\n\t */\r\n\tfunction isStandardBrowserEnv() {\r\n\t  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\r\n\t                                           navigator.product === 'NativeScript' ||\r\n\t                                           navigator.product === 'NS')) {\r\n\t    return false;\r\n\t  }\r\n\t  return (\r\n\t    typeof window !== 'undefined' &&\r\n\t    typeof document !== 'undefined'\r\n\t  );\r\n\t}\r\n\t\r\n\t/**\r\n\t * Iterate over an Array or an Object invoking a function for each item.\r\n\t *\r\n\t * If `obj` is an Array callback will be called passing\r\n\t * the value, index, and complete array for each item.\r\n\t *\r\n\t * If 'obj' is an Object callback will be called passing\r\n\t * the value, key, and complete object for each property.\r\n\t *\r\n\t * @param {Object|Array} obj The object to iterate\r\n\t * @param {Function} fn The callback to invoke for each item\r\n\t */\r\n\tfunction forEach(obj, fn) {\r\n\t  // Don't bother if no value provided\r\n\t  if (obj === null || typeof obj === 'undefined') {\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  // Force an array if not already something iterable\r\n\t  if (typeof obj !== 'object') {\r\n\t    /*eslint no-param-reassign:0*/\r\n\t    obj = [obj];\r\n\t  }\r\n\t\r\n\t  if (isArray(obj)) {\r\n\t    // Iterate over array values\r\n\t    for (var i = 0, l = obj.length; i < l; i++) {\r\n\t      fn.call(null, obj[i], i, obj);\r\n\t    }\r\n\t  } else {\r\n\t    // Iterate over object keys\r\n\t    for (var key in obj) {\r\n\t      if (Object.prototype.hasOwnProperty.call(obj, key)) {\r\n\t        fn.call(null, obj[key], key, obj);\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Accepts varargs expecting each argument to be an object, then\r\n\t * immutably merges the properties of each object and returns result.\r\n\t *\r\n\t * When multiple objects contain the same key the later object in\r\n\t * the arguments list will take precedence.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * ```js\r\n\t * var result = merge({foo: 123}, {foo: 456});\r\n\t * console.log(result.foo); // outputs 456\r\n\t * ```\r\n\t *\r\n\t * @param {Object} obj1 Object to merge\r\n\t * @returns {Object} Result of all merge properties\r\n\t */\r\n\tfunction merge(/* obj1, obj2, obj3, ... */) {\r\n\t  var result = {};\r\n\t  function assignValue(val, key) {\r\n\t    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n\t      result[key] = merge(result[key], val);\r\n\t    } else {\r\n\t      result[key] = val;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  for (var i = 0, l = arguments.length; i < l; i++) {\r\n\t    forEach(arguments[i], assignValue);\r\n\t  }\r\n\t  return result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Function equal to merge with the difference being that no reference\r\n\t * to original objects is kept.\r\n\t *\r\n\t * @see merge\r\n\t * @param {Object} obj1 Object to merge\r\n\t * @returns {Object} Result of all merge properties\r\n\t */\r\n\tfunction deepMerge(/* obj1, obj2, obj3, ... */) {\r\n\t  var result = {};\r\n\t  function assignValue(val, key) {\r\n\t    if (typeof result[key] === 'object' && typeof val === 'object') {\r\n\t      result[key] = deepMerge(result[key], val);\r\n\t    } else if (typeof val === 'object') {\r\n\t      result[key] = deepMerge({}, val);\r\n\t    } else {\r\n\t      result[key] = val;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  for (var i = 0, l = arguments.length; i < l; i++) {\r\n\t    forEach(arguments[i], assignValue);\r\n\t  }\r\n\t  return result;\r\n\t}\r\n\t\r\n\t/**\r\n\t * Extends object a by mutably adding to it the properties of object b.\r\n\t *\r\n\t * @param {Object} a The object to be extended\r\n\t * @param {Object} b The object to copy properties from\r\n\t * @param {Object} thisArg The object to bind function to\r\n\t * @return {Object} The resulting value of object a\r\n\t */\r\n\tfunction extend(a, b, thisArg) {\r\n\t  forEach(b, function assignValue(val, key) {\r\n\t    if (thisArg && typeof val === 'function') {\r\n\t      a[key] = bind(val, thisArg);\r\n\t    } else {\r\n\t      a[key] = val;\r\n\t    }\r\n\t  });\r\n\t  return a;\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  isArray: isArray,\r\n\t  isArrayBuffer: isArrayBuffer,\r\n\t  isBuffer: isBuffer,\r\n\t  isFormData: isFormData,\r\n\t  isArrayBufferView: isArrayBufferView,\r\n\t  isString: isString,\r\n\t  isNumber: isNumber,\r\n\t  isObject: isObject,\r\n\t  isUndefined: isUndefined,\r\n\t  isDate: isDate,\r\n\t  isFile: isFile,\r\n\t  isBlob: isBlob,\r\n\t  isFunction: isFunction,\r\n\t  isStream: isStream,\r\n\t  isURLSearchParams: isURLSearchParams,\r\n\t  isStandardBrowserEnv: isStandardBrowserEnv,\r\n\t  forEach: forEach,\r\n\t  merge: merge,\r\n\t  deepMerge: deepMerge,\r\n\t  extend: extend,\r\n\t  trim: trim\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 3 */\r\n/***/ (function(module, exports) {\r\n\r\n\t'use strict';\r\n\t\r\n\tmodule.exports = function bind(fn, thisArg) {\r\n\t  return function wrap() {\r\n\t    var args = new Array(arguments.length);\r\n\t    for (var i = 0; i < args.length; i++) {\r\n\t      args[i] = arguments[i];\r\n\t    }\r\n\t    return fn.apply(thisArg, args);\r\n\t  };\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 4 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\tvar buildURL = __webpack_require__(5);\r\n\tvar InterceptorManager = __webpack_require__(6);\r\n\tvar dispatchRequest = __webpack_require__(7);\r\n\tvar mergeConfig = __webpack_require__(22);\r\n\t\r\n\t/**\r\n\t * Create a new instance of Axios\r\n\t *\r\n\t * @param {Object} instanceConfig The default config for the instance\r\n\t */\r\n\tfunction Axios(instanceConfig) {\r\n\t  this.defaults = instanceConfig;\r\n\t  this.interceptors = {\r\n\t    request: new InterceptorManager(),\r\n\t    response: new InterceptorManager()\r\n\t  };\r\n\t}\r\n\t\r\n\t/**\r\n\t * Dispatch a request\r\n\t *\r\n\t * @param {Object} config The config specific for this request (merged with this.defaults)\r\n\t */\r\n\tAxios.prototype.request = function request(config) {\r\n\t  /*eslint no-param-reassign:0*/\r\n\t  // Allow for axios('example/url'[, config]) a la fetch API\r\n\t  if (typeof config === 'string') {\r\n\t    config = arguments[1] || {};\r\n\t    config.url = arguments[0];\r\n\t  } else {\r\n\t    config = config || {};\r\n\t  }\r\n\t\r\n\t  config = mergeConfig(this.defaults, config);\r\n\t\r\n\t  // Set config.method\r\n\t  if (config.method) {\r\n\t    config.method = config.method.toLowerCase();\r\n\t  } else if (this.defaults.method) {\r\n\t    config.method = this.defaults.method.toLowerCase();\r\n\t  } else {\r\n\t    config.method = 'get';\r\n\t  }\r\n\t\r\n\t  // Hook up interceptors middleware\r\n\t  var chain = [dispatchRequest, undefined];\r\n\t  var promise = Promise.resolve(config);\r\n\t\r\n\t  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\r\n\t    chain.unshift(interceptor.fulfilled, interceptor.rejected);\r\n\t  });\r\n\t\r\n\t  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\r\n\t    chain.push(interceptor.fulfilled, interceptor.rejected);\r\n\t  });\r\n\t\r\n\t  while (chain.length) {\r\n\t    promise = promise.then(chain.shift(), chain.shift());\r\n\t  }\r\n\t\r\n\t  return promise;\r\n\t};\r\n\t\r\n\tAxios.prototype.getUri = function getUri(config) {\r\n\t  config = mergeConfig(this.defaults, config);\r\n\t  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\r\n\t};\r\n\t\r\n\t// Provide aliases for supported request methods\r\n\tutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\r\n\t  /*eslint func-names:0*/\r\n\t  Axios.prototype[method] = function(url, config) {\r\n\t    return this.request(utils.merge(config || {}, {\r\n\t      method: method,\r\n\t      url: url\r\n\t    }));\r\n\t  };\r\n\t});\r\n\t\r\n\tutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n\t  /*eslint func-names:0*/\r\n\t  Axios.prototype[method] = function(url, data, config) {\r\n\t    return this.request(utils.merge(config || {}, {\r\n\t      method: method,\r\n\t      url: url,\r\n\t      data: data\r\n\t    }));\r\n\t  };\r\n\t});\r\n\t\r\n\tmodule.exports = Axios;\r\n\r\n\r\n/***/ }),\r\n/* 5 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\t\r\n\tfunction encode(val) {\r\n\t  return encodeURIComponent(val).\r\n\t    replace(/%40/gi, '@').\r\n\t    replace(/%3A/gi, ':').\r\n\t    replace(/%24/g, '$').\r\n\t    replace(/%2C/gi, ',').\r\n\t    replace(/%20/g, '+').\r\n\t    replace(/%5B/gi, '[').\r\n\t    replace(/%5D/gi, ']');\r\n\t}\r\n\t\r\n\t/**\r\n\t * Build a URL by appending params to the end\r\n\t *\r\n\t * @param {string} url The base of the url (e.g., http://www.google.com)\r\n\t * @param {object} [params] The params to be appended\r\n\t * @returns {string} The formatted url\r\n\t */\r\n\tmodule.exports = function buildURL(url, params, paramsSerializer) {\r\n\t  /*eslint no-param-reassign:0*/\r\n\t  if (!params) {\r\n\t    return url;\r\n\t  }\r\n\t\r\n\t  var serializedParams;\r\n\t  if (paramsSerializer) {\r\n\t    serializedParams = paramsSerializer(params);\r\n\t  } else if (utils.isURLSearchParams(params)) {\r\n\t    serializedParams = params.toString();\r\n\t  } else {\r\n\t    var parts = [];\r\n\t\r\n\t    utils.forEach(params, function serialize(val, key) {\r\n\t      if (val === null || typeof val === 'undefined') {\r\n\t        return;\r\n\t      }\r\n\t\r\n\t      if (utils.isArray(val)) {\r\n\t        key = key + '[]';\r\n\t      } else {\r\n\t        val = [val];\r\n\t      }\r\n\t\r\n\t      utils.forEach(val, function parseValue(v) {\r\n\t        if (utils.isDate(v)) {\r\n\t          v = v.toISOString();\r\n\t        } else if (utils.isObject(v)) {\r\n\t          v = JSON.stringify(v);\r\n\t        }\r\n\t        parts.push(encode(key) + '=' + encode(v));\r\n\t      });\r\n\t    });\r\n\t\r\n\t    serializedParams = parts.join('&');\r\n\t  }\r\n\t\r\n\t  if (serializedParams) {\r\n\t    var hashmarkIndex = url.indexOf('#');\r\n\t    if (hashmarkIndex !== -1) {\r\n\t      url = url.slice(0, hashmarkIndex);\r\n\t    }\r\n\t\r\n\t    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n\t  }\r\n\t\r\n\t  return url;\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 6 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\t\r\n\tfunction InterceptorManager() {\r\n\t  this.handlers = [];\r\n\t}\r\n\t\r\n\t/**\r\n\t * Add a new interceptor to the stack\r\n\t *\r\n\t * @param {Function} fulfilled The function to handle `then` for a `Promise`\r\n\t * @param {Function} rejected The function to handle `reject` for a `Promise`\r\n\t *\r\n\t * @return {Number} An ID used to remove interceptor later\r\n\t */\r\n\tInterceptorManager.prototype.use = function use(fulfilled, rejected) {\r\n\t  this.handlers.push({\r\n\t    fulfilled: fulfilled,\r\n\t    rejected: rejected\r\n\t  });\r\n\t  return this.handlers.length - 1;\r\n\t};\r\n\t\r\n\t/**\r\n\t * Remove an interceptor from the stack\r\n\t *\r\n\t * @param {Number} id The ID that was returned by `use`\r\n\t */\r\n\tInterceptorManager.prototype.eject = function eject(id) {\r\n\t  if (this.handlers[id]) {\r\n\t    this.handlers[id] = null;\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Iterate over all the registered interceptors\r\n\t *\r\n\t * This method is particularly useful for skipping over any\r\n\t * interceptors that may have become `null` calling `eject`.\r\n\t *\r\n\t * @param {Function} fn The function to call for each interceptor\r\n\t */\r\n\tInterceptorManager.prototype.forEach = function forEach(fn) {\r\n\t  utils.forEach(this.handlers, function forEachHandler(h) {\r\n\t    if (h !== null) {\r\n\t      fn(h);\r\n\t    }\r\n\t  });\r\n\t};\r\n\t\r\n\tmodule.exports = InterceptorManager;\r\n\r\n\r\n/***/ }),\r\n/* 7 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\tvar transformData = __webpack_require__(8);\r\n\tvar isCancel = __webpack_require__(9);\r\n\tvar defaults = __webpack_require__(10);\r\n\t\r\n\t/**\r\n\t * Throws a `Cancel` if cancellation has been requested.\r\n\t */\r\n\tfunction throwIfCancellationRequested(config) {\r\n\t  if (config.cancelToken) {\r\n\t    config.cancelToken.throwIfRequested();\r\n\t  }\r\n\t}\r\n\t\r\n\t/**\r\n\t * Dispatch a request to the server using the configured adapter.\r\n\t *\r\n\t * @param {object} config The config that is to be used for the request\r\n\t * @returns {Promise} The Promise to be fulfilled\r\n\t */\r\n\tmodule.exports = function dispatchRequest(config) {\r\n\t  throwIfCancellationRequested(config);\r\n\t\r\n\t  // Ensure headers exist\r\n\t  config.headers = config.headers || {};\r\n\t\r\n\t  // Transform request data\r\n\t  config.data = transformData(\r\n\t    config.data,\r\n\t    config.headers,\r\n\t    config.transformRequest\r\n\t  );\r\n\t\r\n\t  // Flatten headers\r\n\t  config.headers = utils.merge(\r\n\t    config.headers.common || {},\r\n\t    config.headers[config.method] || {},\r\n\t    config.headers\r\n\t  );\r\n\t\r\n\t  utils.forEach(\r\n\t    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\r\n\t    function cleanHeaderConfig(method) {\r\n\t      delete config.headers[method];\r\n\t    }\r\n\t  );\r\n\t\r\n\t  var adapter = config.adapter || defaults.adapter;\r\n\t\r\n\t  return adapter(config).then(function onAdapterResolution(response) {\r\n\t    throwIfCancellationRequested(config);\r\n\t\r\n\t    // Transform response data\r\n\t    response.data = transformData(\r\n\t      response.data,\r\n\t      response.headers,\r\n\t      config.transformResponse\r\n\t    );\r\n\t\r\n\t    return response;\r\n\t  }, function onAdapterRejection(reason) {\r\n\t    if (!isCancel(reason)) {\r\n\t      throwIfCancellationRequested(config);\r\n\t\r\n\t      // Transform response data\r\n\t      if (reason && reason.response) {\r\n\t        reason.response.data = transformData(\r\n\t          reason.response.data,\r\n\t          reason.response.headers,\r\n\t          config.transformResponse\r\n\t        );\r\n\t      }\r\n\t    }\r\n\t\r\n\t    return Promise.reject(reason);\r\n\t  });\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 8 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\t\r\n\t/**\r\n\t * Transform the data for a request or a response\r\n\t *\r\n\t * @param {Object|String} data The data to be transformed\r\n\t * @param {Array} headers The headers for the request or response\r\n\t * @param {Array|Function} fns A single function or Array of functions\r\n\t * @returns {*} The resulting transformed data\r\n\t */\r\n\tmodule.exports = function transformData(data, headers, fns) {\r\n\t  /*eslint no-param-reassign:0*/\r\n\t  utils.forEach(fns, function transform(fn) {\r\n\t    data = fn(data, headers);\r\n\t  });\r\n\t\r\n\t  return data;\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 9 */\r\n/***/ (function(module, exports) {\r\n\r\n\t'use strict';\r\n\t\r\n\tmodule.exports = function isCancel(value) {\r\n\t  return !!(value && value.__CANCEL__);\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 10 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\tvar normalizeHeaderName = __webpack_require__(11);\r\n\t\r\n\tvar DEFAULT_CONTENT_TYPE = {\r\n\t  'Content-Type': 'application/x-www-form-urlencoded'\r\n\t};\r\n\t\r\n\tfunction setContentTypeIfUnset(headers, value) {\r\n\t  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\r\n\t    headers['Content-Type'] = value;\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction getDefaultAdapter() {\r\n\t  var adapter;\r\n\t  if (typeof XMLHttpRequest !== 'undefined') {\r\n\t    // For browsers use XHR adapter\r\n\t    adapter = __webpack_require__(12);\r\n\t  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\r\n\t    // For node use HTTP adapter\r\n\t    adapter = __webpack_require__(12);\r\n\t  }\r\n\t  return adapter;\r\n\t}\r\n\t\r\n\tvar defaults = {\r\n\t  adapter: getDefaultAdapter(),\r\n\t\r\n\t  transformRequest: [function transformRequest(data, headers) {\r\n\t    normalizeHeaderName(headers, 'Accept');\r\n\t    normalizeHeaderName(headers, 'Content-Type');\r\n\t    if (utils.isFormData(data) ||\r\n\t      utils.isArrayBuffer(data) ||\r\n\t      utils.isBuffer(data) ||\r\n\t      utils.isStream(data) ||\r\n\t      utils.isFile(data) ||\r\n\t      utils.isBlob(data)\r\n\t    ) {\r\n\t      return data;\r\n\t    }\r\n\t    if (utils.isArrayBufferView(data)) {\r\n\t      return data.buffer;\r\n\t    }\r\n\t    if (utils.isURLSearchParams(data)) {\r\n\t      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\r\n\t      return data.toString();\r\n\t    }\r\n\t    if (utils.isObject(data)) {\r\n\t      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\r\n\t      return JSON.stringify(data);\r\n\t    }\r\n\t    return data;\r\n\t  }],\r\n\t\r\n\t  transformResponse: [function transformResponse(data) {\r\n\t    /*eslint no-param-reassign:0*/\r\n\t    if (typeof data === 'string') {\r\n\t      try {\r\n\t        data = JSON.parse(data);\r\n\t      } catch (e) { /* Ignore */ }\r\n\t    }\r\n\t    return data;\r\n\t  }],\r\n\t\r\n\t  /**\r\n\t   * A timeout in milliseconds to abort a request. If set to 0 (default) a\r\n\t   * timeout is not created.\r\n\t   */\r\n\t  timeout: 0,\r\n\t\r\n\t  xsrfCookieName: 'XSRF-TOKEN',\r\n\t  xsrfHeaderName: 'X-XSRF-TOKEN',\r\n\t\r\n\t  maxContentLength: -1,\r\n\t\r\n\t  validateStatus: function validateStatus(status) {\r\n\t    return status >= 200 && status < 300;\r\n\t  }\r\n\t};\r\n\t\r\n\tdefaults.headers = {\r\n\t  common: {\r\n\t    'Accept': 'application/json, text/plain, */*'\r\n\t  }\r\n\t};\r\n\t\r\n\tutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\r\n\t  defaults.headers[method] = {};\r\n\t});\r\n\t\r\n\tutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\r\n\t  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\r\n\t});\r\n\t\r\n\tmodule.exports = defaults;\r\n\r\n\r\n/***/ }),\r\n/* 11 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\t\r\n\tmodule.exports = function normalizeHeaderName(headers, normalizedName) {\r\n\t  utils.forEach(headers, function processHeader(value, name) {\r\n\t    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\r\n\t      headers[normalizedName] = value;\r\n\t      delete headers[name];\r\n\t    }\r\n\t  });\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 12 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\tvar settle = __webpack_require__(13);\r\n\tvar buildURL = __webpack_require__(5);\r\n\tvar buildFullPath = __webpack_require__(16);\r\n\tvar parseHeaders = __webpack_require__(19);\r\n\tvar isURLSameOrigin = __webpack_require__(20);\r\n\tvar createError = __webpack_require__(14);\r\n\t\r\n\tmodule.exports = function xhrAdapter(config) {\r\n\t  return new Promise(function dispatchXhrRequest(resolve, reject) {\r\n\t    var requestData = config.data;\r\n\t    var requestHeaders = config.headers;\r\n\t\r\n\t    if (utils.isFormData(requestData)) {\r\n\t      delete requestHeaders['Content-Type']; // Let the browser set it\r\n\t    }\r\n\t\r\n\t    var request = new XMLHttpRequest();\r\n\t\r\n\t    // HTTP basic authentication\r\n\t    if (config.auth) {\r\n\t      var username = config.auth.username || '';\r\n\t      var password = config.auth.password || '';\r\n\t      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\r\n\t    }\r\n\t\r\n\t    var fullPath = buildFullPath(config.baseURL, config.url);\r\n\t    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\r\n\t\r\n\t    // Set the request timeout in MS\r\n\t    request.timeout = config.timeout;\r\n\t\r\n\t    // Listen for ready state\r\n\t    request.onreadystatechange = function handleLoad() {\r\n\t      if (!request || request.readyState !== 4) {\r\n\t        return;\r\n\t      }\r\n\t\r\n\t      // The request errored out and we didn't get a response, this will be\r\n\t      // handled by onerror instead\r\n\t      // With one exception: request that using file: protocol, most browsers\r\n\t      // will return status as 0 even though it's a successful request\r\n\t      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\r\n\t        return;\r\n\t      }\r\n\t\r\n\t      // Prepare the response\r\n\t      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\r\n\t      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\r\n\t      var response = {\r\n\t        data: responseData,\r\n\t        status: request.status,\r\n\t        statusText: request.statusText,\r\n\t        headers: responseHeaders,\r\n\t        config: config,\r\n\t        request: request\r\n\t      };\r\n\t\r\n\t      settle(resolve, reject, response);\r\n\t\r\n\t      // Clean up request\r\n\t      request = null;\r\n\t    };\r\n\t\r\n\t    // Handle browser request cancellation (as opposed to a manual cancellation)\r\n\t    request.onabort = function handleAbort() {\r\n\t      if (!request) {\r\n\t        return;\r\n\t      }\r\n\t\r\n\t      reject(createError('Request aborted', config, 'ECONNABORTED', request));\r\n\t\r\n\t      // Clean up request\r\n\t      request = null;\r\n\t    };\r\n\t\r\n\t    // Handle low level network errors\r\n\t    request.onerror = function handleError() {\r\n\t      // Real errors are hidden from us by the browser\r\n\t      // onerror should only fire if it's a network error\r\n\t      reject(createError('Network Error', config, null, request));\r\n\t\r\n\t      // Clean up request\r\n\t      request = null;\r\n\t    };\r\n\t\r\n\t    // Handle timeout\r\n\t    request.ontimeout = function handleTimeout() {\r\n\t      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\r\n\t      if (config.timeoutErrorMessage) {\r\n\t        timeoutErrorMessage = config.timeoutErrorMessage;\r\n\t      }\r\n\t      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\r\n\t        request));\r\n\t\r\n\t      // Clean up request\r\n\t      request = null;\r\n\t    };\r\n\t\r\n\t    // Add xsrf header\r\n\t    // This is only done if running in a standard browser environment.\r\n\t    // Specifically not if we're in a web worker, or react-native.\r\n\t    if (utils.isStandardBrowserEnv()) {\r\n\t      var cookies = __webpack_require__(21);\r\n\t\r\n\t      // Add xsrf header\r\n\t      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\r\n\t        cookies.read(config.xsrfCookieName) :\r\n\t        undefined;\r\n\t\r\n\t      if (xsrfValue) {\r\n\t        requestHeaders[config.xsrfHeaderName] = xsrfValue;\r\n\t      }\r\n\t    }\r\n\t\r\n\t    // Add headers to the request\r\n\t    if ('setRequestHeader' in request) {\r\n\t      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\r\n\t        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\r\n\t          // Remove Content-Type if data is undefined\r\n\t          delete requestHeaders[key];\r\n\t        } else {\r\n\t          // Otherwise add header to the request\r\n\t          request.setRequestHeader(key, val);\r\n\t        }\r\n\t      });\r\n\t    }\r\n\t\r\n\t    // Add withCredentials to request if needed\r\n\t    if (!utils.isUndefined(config.withCredentials)) {\r\n\t      request.withCredentials = !!config.withCredentials;\r\n\t    }\r\n\t\r\n\t    // Add responseType to request if needed\r\n\t    if (config.responseType) {\r\n\t      try {\r\n\t        request.responseType = config.responseType;\r\n\t      } catch (e) {\r\n\t        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\r\n\t        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\r\n\t        if (config.responseType !== 'json') {\r\n\t          throw e;\r\n\t        }\r\n\t      }\r\n\t    }\r\n\t\r\n\t    // Handle progress if needed\r\n\t    if (typeof config.onDownloadProgress === 'function') {\r\n\t      request.addEventListener('progress', config.onDownloadProgress);\r\n\t    }\r\n\t\r\n\t    // Not all browsers support upload events\r\n\t    if (typeof config.onUploadProgress === 'function' && request.upload) {\r\n\t      request.upload.addEventListener('progress', config.onUploadProgress);\r\n\t    }\r\n\t\r\n\t    if (config.cancelToken) {\r\n\t      // Handle cancellation\r\n\t      config.cancelToken.promise.then(function onCanceled(cancel) {\r\n\t        if (!request) {\r\n\t          return;\r\n\t        }\r\n\t\r\n\t        request.abort();\r\n\t        reject(cancel);\r\n\t        // Clean up request\r\n\t        request = null;\r\n\t      });\r\n\t    }\r\n\t\r\n\t    if (requestData === undefined) {\r\n\t      requestData = null;\r\n\t    }\r\n\t\r\n\t    // Send the request\r\n\t    request.send(requestData);\r\n\t  });\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 13 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar createError = __webpack_require__(14);\r\n\t\r\n\t/**\r\n\t * Resolve or reject a Promise based on response status.\r\n\t *\r\n\t * @param {Function} resolve A function that resolves the promise.\r\n\t * @param {Function} reject A function that rejects the promise.\r\n\t * @param {object} response The response.\r\n\t */\r\n\tmodule.exports = function settle(resolve, reject, response) {\r\n\t  var validateStatus = response.config.validateStatus;\r\n\t  if (!validateStatus || validateStatus(response.status)) {\r\n\t    resolve(response);\r\n\t  } else {\r\n\t    reject(createError(\r\n\t      'Request failed with status code ' + response.status,\r\n\t      response.config,\r\n\t      null,\r\n\t      response.request,\r\n\t      response\r\n\t    ));\r\n\t  }\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 14 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar enhanceError = __webpack_require__(15);\r\n\t\r\n\t/**\r\n\t * Create an Error with the specified message, config, error code, request and response.\r\n\t *\r\n\t * @param {string} message The error message.\r\n\t * @param {Object} config The config.\r\n\t * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n\t * @param {Object} [request] The request.\r\n\t * @param {Object} [response] The response.\r\n\t * @returns {Error} The created error.\r\n\t */\r\n\tmodule.exports = function createError(message, config, code, request, response) {\r\n\t  var error = new Error(message);\r\n\t  return enhanceError(error, config, code, request, response);\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 15 */\r\n/***/ (function(module, exports) {\r\n\r\n\t'use strict';\r\n\t\r\n\t/**\r\n\t * Update an Error with the specified config, error code, and response.\r\n\t *\r\n\t * @param {Error} error The error to update.\r\n\t * @param {Object} config The config.\r\n\t * @param {string} [code] The error code (for example, 'ECONNABORTED').\r\n\t * @param {Object} [request] The request.\r\n\t * @param {Object} [response] The response.\r\n\t * @returns {Error} The error.\r\n\t */\r\n\tmodule.exports = function enhanceError(error, config, code, request, response) {\r\n\t  error.config = config;\r\n\t  if (code) {\r\n\t    error.code = code;\r\n\t  }\r\n\t\r\n\t  error.request = request;\r\n\t  error.response = response;\r\n\t  error.isAxiosError = true;\r\n\t\r\n\t  error.toJSON = function() {\r\n\t    return {\r\n\t      // Standard\r\n\t      message: this.message,\r\n\t      name: this.name,\r\n\t      // Microsoft\r\n\t      description: this.description,\r\n\t      number: this.number,\r\n\t      // Mozilla\r\n\t      fileName: this.fileName,\r\n\t      lineNumber: this.lineNumber,\r\n\t      columnNumber: this.columnNumber,\r\n\t      stack: this.stack,\r\n\t      // Axios\r\n\t      config: this.config,\r\n\t      code: this.code\r\n\t    };\r\n\t  };\r\n\t  return error;\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 16 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar isAbsoluteURL = __webpack_require__(17);\r\n\tvar combineURLs = __webpack_require__(18);\r\n\t\r\n\t/**\r\n\t * Creates a new URL by combining the baseURL with the requestedURL,\r\n\t * only when the requestedURL is not already an absolute URL.\r\n\t * If the requestURL is absolute, this function returns the requestedURL untouched.\r\n\t *\r\n\t * @param {string} baseURL The base URL\r\n\t * @param {string} requestedURL Absolute or relative URL to combine\r\n\t * @returns {string} The combined full path\r\n\t */\r\n\tmodule.exports = function buildFullPath(baseURL, requestedURL) {\r\n\t  if (baseURL && !isAbsoluteURL(requestedURL)) {\r\n\t    return combineURLs(baseURL, requestedURL);\r\n\t  }\r\n\t  return requestedURL;\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 17 */\r\n/***/ (function(module, exports) {\r\n\r\n\t'use strict';\r\n\t\r\n\t/**\r\n\t * Determines whether the specified URL is absolute\r\n\t *\r\n\t * @param {string} url The URL to test\r\n\t * @returns {boolean} True if the specified URL is absolute, otherwise false\r\n\t */\r\n\tmodule.exports = function isAbsoluteURL(url) {\r\n\t  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\r\n\t  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\r\n\t  // by any combination of letters, digits, plus, period, or hyphen.\r\n\t  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 18 */\r\n/***/ (function(module, exports) {\r\n\r\n\t'use strict';\r\n\t\r\n\t/**\r\n\t * Creates a new URL by combining the specified URLs\r\n\t *\r\n\t * @param {string} baseURL The base URL\r\n\t * @param {string} relativeURL The relative URL\r\n\t * @returns {string} The combined URL\r\n\t */\r\n\tmodule.exports = function combineURLs(baseURL, relativeURL) {\r\n\t  return relativeURL\r\n\t    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\r\n\t    : baseURL;\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 19 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\t\r\n\t// Headers whose duplicates are ignored by node\r\n\t// c.f. https://nodejs.org/api/http.html#http_message_headers\r\n\tvar ignoreDuplicateOf = [\r\n\t  'age', 'authorization', 'content-length', 'content-type', 'etag',\r\n\t  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\r\n\t  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\r\n\t  'referer', 'retry-after', 'user-agent'\r\n\t];\r\n\t\r\n\t/**\r\n\t * Parse headers into an object\r\n\t *\r\n\t * ```\r\n\t * Date: Wed, 27 Aug 2014 08:58:49 GMT\r\n\t * Content-Type: application/json\r\n\t * Connection: keep-alive\r\n\t * Transfer-Encoding: chunked\r\n\t * ```\r\n\t *\r\n\t * @param {String} headers Headers needing to be parsed\r\n\t * @returns {Object} Headers parsed into an object\r\n\t */\r\n\tmodule.exports = function parseHeaders(headers) {\r\n\t  var parsed = {};\r\n\t  var key;\r\n\t  var val;\r\n\t  var i;\r\n\t\r\n\t  if (!headers) { return parsed; }\r\n\t\r\n\t  utils.forEach(headers.split('\\n'), function parser(line) {\r\n\t    i = line.indexOf(':');\r\n\t    key = utils.trim(line.substr(0, i)).toLowerCase();\r\n\t    val = utils.trim(line.substr(i + 1));\r\n\t\r\n\t    if (key) {\r\n\t      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\r\n\t        return;\r\n\t      }\r\n\t      if (key === 'set-cookie') {\r\n\t        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\r\n\t      } else {\r\n\t        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\r\n\t      }\r\n\t    }\r\n\t  });\r\n\t\r\n\t  return parsed;\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 20 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\t\r\n\tmodule.exports = (\r\n\t  utils.isStandardBrowserEnv() ?\r\n\t\r\n\t  // Standard browser envs have full support of the APIs needed to test\r\n\t  // whether the request URL is of the same origin as current location.\r\n\t    (function standardBrowserEnv() {\r\n\t      var msie = /(msie|trident)/i.test(navigator.userAgent);\r\n\t      var urlParsingNode = document.createElement('a');\r\n\t      var originURL;\r\n\t\r\n\t      /**\r\n\t    * Parse a URL to discover it's components\r\n\t    *\r\n\t    * @param {String} url The URL to be parsed\r\n\t    * @returns {Object}\r\n\t    */\r\n\t      function resolveURL(url) {\r\n\t        var href = url;\r\n\t\r\n\t        if (msie) {\r\n\t        // IE needs attribute set twice to normalize properties\r\n\t          urlParsingNode.setAttribute('href', href);\r\n\t          href = urlParsingNode.href;\r\n\t        }\r\n\t\r\n\t        urlParsingNode.setAttribute('href', href);\r\n\t\r\n\t        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\r\n\t        return {\r\n\t          href: urlParsingNode.href,\r\n\t          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\r\n\t          host: urlParsingNode.host,\r\n\t          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\r\n\t          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\r\n\t          hostname: urlParsingNode.hostname,\r\n\t          port: urlParsingNode.port,\r\n\t          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\r\n\t            urlParsingNode.pathname :\r\n\t            '/' + urlParsingNode.pathname\r\n\t        };\r\n\t      }\r\n\t\r\n\t      originURL = resolveURL(window.location.href);\r\n\t\r\n\t      /**\r\n\t    * Determine if a URL shares the same origin as the current location\r\n\t    *\r\n\t    * @param {String} requestURL The URL to test\r\n\t    * @returns {boolean} True if URL shares the same origin, otherwise false\r\n\t    */\r\n\t      return function isURLSameOrigin(requestURL) {\r\n\t        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\r\n\t        return (parsed.protocol === originURL.protocol &&\r\n\t            parsed.host === originURL.host);\r\n\t      };\r\n\t    })() :\r\n\t\r\n\t  // Non standard browser envs (web workers, react-native) lack needed support.\r\n\t    (function nonStandardBrowserEnv() {\r\n\t      return function isURLSameOrigin() {\r\n\t        return true;\r\n\t      };\r\n\t    })()\r\n\t);\r\n\r\n\r\n/***/ }),\r\n/* 21 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\t\r\n\tmodule.exports = (\r\n\t  utils.isStandardBrowserEnv() ?\r\n\t\r\n\t  // Standard browser envs support document.cookie\r\n\t    (function standardBrowserEnv() {\r\n\t      return {\r\n\t        write: function write(name, value, expires, path, domain, secure) {\r\n\t          var cookie = [];\r\n\t          cookie.push(name + '=' + encodeURIComponent(value));\r\n\t\r\n\t          if (utils.isNumber(expires)) {\r\n\t            cookie.push('expires=' + new Date(expires).toGMTString());\r\n\t          }\r\n\t\r\n\t          if (utils.isString(path)) {\r\n\t            cookie.push('path=' + path);\r\n\t          }\r\n\t\r\n\t          if (utils.isString(domain)) {\r\n\t            cookie.push('domain=' + domain);\r\n\t          }\r\n\t\r\n\t          if (secure === true) {\r\n\t            cookie.push('secure');\r\n\t          }\r\n\t\r\n\t          document.cookie = cookie.join('; ');\r\n\t        },\r\n\t\r\n\t        read: function read(name) {\r\n\t          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\r\n\t          return (match ? decodeURIComponent(match[3]) : null);\r\n\t        },\r\n\t\r\n\t        remove: function remove(name) {\r\n\t          this.write(name, '', Date.now() - 86400000);\r\n\t        }\r\n\t      };\r\n\t    })() :\r\n\t\r\n\t  // Non standard browser env (web workers, react-native) lack needed support.\r\n\t    (function nonStandardBrowserEnv() {\r\n\t      return {\r\n\t        write: function write() {},\r\n\t        read: function read() { return null; },\r\n\t        remove: function remove() {}\r\n\t      };\r\n\t    })()\r\n\t);\r\n\r\n\r\n/***/ }),\r\n/* 22 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar utils = __webpack_require__(2);\r\n\t\r\n\t/**\r\n\t * Config-specific merge-function which creates a new config-object\r\n\t * by merging two configuration objects together.\r\n\t *\r\n\t * @param {Object} config1\r\n\t * @param {Object} config2\r\n\t * @returns {Object} New object resulting from merging config2 to config1\r\n\t */\r\n\tmodule.exports = function mergeConfig(config1, config2) {\r\n\t  // eslint-disable-next-line no-param-reassign\r\n\t  config2 = config2 || {};\r\n\t  var config = {};\r\n\t\r\n\t  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];\r\n\t  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];\r\n\t  var defaultToConfig2Keys = [\r\n\t    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',\r\n\t    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\r\n\t    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',\r\n\t    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',\r\n\t    'httpsAgent', 'cancelToken', 'socketPath'\r\n\t  ];\r\n\t\r\n\t  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\r\n\t    if (typeof config2[prop] !== 'undefined') {\r\n\t      config[prop] = config2[prop];\r\n\t    }\r\n\t  });\r\n\t\r\n\t  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {\r\n\t    if (utils.isObject(config2[prop])) {\r\n\t      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\r\n\t    } else if (typeof config2[prop] !== 'undefined') {\r\n\t      config[prop] = config2[prop];\r\n\t    } else if (utils.isObject(config1[prop])) {\r\n\t      config[prop] = utils.deepMerge(config1[prop]);\r\n\t    } else if (typeof config1[prop] !== 'undefined') {\r\n\t      config[prop] = config1[prop];\r\n\t    }\r\n\t  });\r\n\t\r\n\t  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\r\n\t    if (typeof config2[prop] !== 'undefined') {\r\n\t      config[prop] = config2[prop];\r\n\t    } else if (typeof config1[prop] !== 'undefined') {\r\n\t      config[prop] = config1[prop];\r\n\t    }\r\n\t  });\r\n\t\r\n\t  var axiosKeys = valueFromConfig2Keys\r\n\t    .concat(mergeDeepPropertiesKeys)\r\n\t    .concat(defaultToConfig2Keys);\r\n\t\r\n\t  var otherKeys = Object\r\n\t    .keys(config2)\r\n\t    .filter(function filterAxiosKeys(key) {\r\n\t      return axiosKeys.indexOf(key) === -1;\r\n\t    });\r\n\t\r\n\t  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {\r\n\t    if (typeof config2[prop] !== 'undefined') {\r\n\t      config[prop] = config2[prop];\r\n\t    } else if (typeof config1[prop] !== 'undefined') {\r\n\t      config[prop] = config1[prop];\r\n\t    }\r\n\t  });\r\n\t\r\n\t  return config;\r\n\t};\r\n\r\n\r\n/***/ }),\r\n/* 23 */\r\n/***/ (function(module, exports) {\r\n\r\n\t'use strict';\r\n\t\r\n\t/**\r\n\t * A `Cancel` is an object that is thrown when an operation is canceled.\r\n\t *\r\n\t * @class\r\n\t * @param {string=} message The message.\r\n\t */\r\n\tfunction Cancel(message) {\r\n\t  this.message = message;\r\n\t}\r\n\t\r\n\tCancel.prototype.toString = function toString() {\r\n\t  return 'Cancel' + (this.message ? ': ' + this.message : '');\r\n\t};\r\n\t\r\n\tCancel.prototype.__CANCEL__ = true;\r\n\t\r\n\tmodule.exports = Cancel;\r\n\r\n\r\n/***/ }),\r\n/* 24 */\r\n/***/ (function(module, exports, __webpack_require__) {\r\n\r\n\t'use strict';\r\n\t\r\n\tvar Cancel = __webpack_require__(23);\r\n\t\r\n\t/**\r\n\t * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n\t *\r\n\t * @class\r\n\t * @param {Function} executor The executor function.\r\n\t */\r\n\tfunction CancelToken(executor) {\r\n\t  if (typeof executor !== 'function') {\r\n\t    throw new TypeError('executor must be a function.');\r\n\t  }\r\n\t\r\n\t  var resolvePromise;\r\n\t  this.promise = new Promise(function promiseExecutor(resolve) {\r\n\t    resolvePromise = resolve;\r\n\t  });\r\n\t\r\n\t  var token = this;\r\n\t  executor(function cancel(message) {\r\n\t    if (token.reason) {\r\n\t      // Cancellation has already been requested\r\n\t      return;\r\n\t    }\r\n\t\r\n\t    token.reason = new Cancel(message);\r\n\t    resolvePromise(token.reason);\r\n\t  });\r\n\t}\r\n\t\r\n\t/**\r\n\t * Throws a `Cancel` if cancellation has been requested.\r\n\t */\r\n\tCancelToken.prototype.throwIfRequested = function throwIfRequested() {\r\n\t  if (this.reason) {\r\n\t    throw this.reason;\r\n\t  }\r\n\t};\r\n\t\r\n\t/**\r\n\t * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n\t * cancels the `CancelToken`.\r\n\t */\r\n\tCancelToken.source = function source() {\r\n\t  var cancel;\r\n\t  var token = new CancelToken(function executor(c) {\r\n\t    cancel = c;\r\n\t  });\r\n\t  return {\r\n\t    token: token,\r\n\t    cancel: cancel\r\n\t  };\r\n\t};\r\n\t\r\n\tmodule.exports = CancelToken;\r\n\r\n\r\n/***/ }),\r\n/* 25 */\r\n/***/ (function(module, exports) {\r\n\r\n\t'use strict';\r\n\t\r\n\t/**\r\n\t * Syntactic sugar for invoking a function and expanding an array for arguments.\r\n\t *\r\n\t * Common use case would be to use `Function.prototype.apply`.\r\n\t *\r\n\t *  ```js\r\n\t *  function f(x, y, z) {}\r\n\t *  var args = [1, 2, 3];\r\n\t *  f.apply(null, args);\r\n\t *  ```\r\n\t *\r\n\t * With `spread` this example can be re-written.\r\n\t *\r\n\t *  ```js\r\n\t *  spread(function(x, y, z) {})([1, 2, 3]);\r\n\t *  ```\r\n\t *\r\n\t * @param {Function} callback\r\n\t * @returns {Function}\r\n\t */\r\n\tmodule.exports = function spread(callback) {\r\n\t  return function wrap(arr) {\r\n\t    return callback.apply(null, arr);\r\n\t  };\r\n\t};\r\n\r\n\r\n/***/ })\r\n/******/ ])\r\n});\r\n\ndefine('skylark-axios/main',[\r\n\t\"./axios\"\r\n],function(axios){\r\n\treturn axios;\r\n});\ndefine('skylark-axios', ['skylark-axios/main'], function (main) { return main; });\n\ndefine('skylark-osjsv2-client/helpers/event-handler',[],function () {\n    'use strict';\n    return class EventHandler {\n        constructor(name, names) {\n            this.name = name;\n            this.events = {};\n            (names || []).forEach(function (n) {\n                this.events[n] = [];\n            }, this);\n            console.debug('EventHandler::constructor()', this.events);\n        }\n        destroy() {\n            this.events = {};\n        }\n        on(name, cb, thisArg) {\n            thisArg = thisArg || this;\n            if (!(cb instanceof Function)) {\n                throw new TypeError('EventHandler::on() expects cb to be a Function');\n            }\n            const added = [];\n            const _register = n => {\n                if (!(this.events[n] instanceof Array)) {\n                    this.events[n] = [];\n                }\n                added.push(this.events[n].push(args => {\n                    return cb.apply(thisArg, args);\n                }));\n            };\n            if (name instanceof RegExp) {\n                Object.keys(this.events).forEach(function (n) {\n                    if (name.test(n)) {\n                        _register(n);\n                    }\n                });\n            } else {\n                name.replace(/\\s/g, '').split(',').forEach(function (n) {\n                    _register(n);\n                });\n            }\n            return added.length === 1 ? added[0] : added;\n        }\n        off(name, index) {\n            if (!(this.events[name] instanceof Array)) {\n                throw new TypeError('Invalid event name');\n            }\n            if (arguments.length > 1 && typeof index === 'number') {\n                this.events[name].splice(index, 1);\n            } else {\n                this.events[name] = [];\n            }\n        }\n        emit(name, args, thisArg, applyArgs) {\n            args = args || [];\n            thisArg = thisArg || this;\n            if (!(this.events[name] instanceof Array)) {\n                return;\n            }\n            this.events[name].forEach(fn => {\n                try {\n                    if (applyArgs) {\n                        fn.apply(thisArg, args);\n                    } else {\n                        fn.call(thisArg, args);\n                    }\n                } catch (e) {\n                    console.warn('EventHandler::emit() exception', name, e);\n                    console.warn(e.stack);\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/loader',[],function () {\n    'use strict';\n    class Loader {\n        constructor() {\n            this.loaders = {};\n            this.loaderGraze = {};\n            this.$container = document.createElement('osjs-loaders');\n        }\n        create(name, opts) {\n            opts = opts || {};\n            if (!this.$container.parentNode) {\n                document.body.appendChild(this.$container);\n            }\n            if (this.loaders[name]) {\n                return;\n            }\n            const el = document.createElement('osjs-loading');\n            el.title = opts.title || '';\n            if (opts.icon) {\n                const img = document.createElement('img');\n                img.src = opts.icon;\n                el.appendChild(img);\n            }\n            this.$container.appendChild(el);\n            this.loaderGraze[name] = setTimeout(() => {\n                el.style.display = 'inline-block';\n            }, 100);\n            this.loaders[name] = el;\n        }\n        destroy(name) {\n            if (!this.loaders[name]) {\n                return;\n            }\n            clearTimeout(this.loaderGraze[name]);\n            this.loaders[name].remove();\n            delete this.loaders[name];\n            delete this.loaderGraze[name];\n        }\n    }\n    return new Loader();\n});\ndefine('skylark-osjsv2-client/helpers/simplejsonconf',[],function(){\r\n  /*!\r\n   * Module: simplejsonconf\r\n   *\r\n   * Use JSON as a configuration file\r\n   *\r\n   * @author Anders Evenrud <andersevenrud@gmail.com>\r\n   * @license MIT\r\n   */\r\n\r\n  'use strict';\r\n\r\n  /*\r\n   * Check if this is an \"Object\"\r\n   */\r\n  function isObject(item) {\r\n    return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n  }\r\n\r\n  /*\r\n   * Merges the two objects together\r\n   */\r\n  function mergeDeep(target, source) {\r\n    if ( isObject(target) && isObject(source) ) {\r\n      for ( var key in source ) {\r\n        if ( isObject(source[key]) ) {\r\n          if ( !target[key] || typeof target[key] !== typeof source[key] ) {\r\n            Object.assign(target, {\r\n              [key]: {}\r\n            });\r\n          }\r\n          mergeDeep(target[key], source[key]);\r\n        } else {\r\n          Object.assign(target, {\r\n            [key]: source[key]\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  var exports = {};\r\n\r\n  /**\r\n   * Creates a new proxy object with getJSON/setJSON methods for given JSON object.\r\n   *\r\n   * @param {Object}  obj       The JSON object\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function from\r\n   * @return {Object} A proxy object\r\n   */\r\n  exports.from = (obj) => {\r\n    return {\r\n      getJSON: (path, defaultValue) => {\r\n        return exports.getJSON(obj, path, defaultValue);\r\n      },\r\n      setJSON: (path, value, opts) => {\r\n        return exports.setJSON(obj, path, value, opts);\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Resolves the given path in JSON object and returns value\r\n   *\r\n   * @example .getJSON({foo: {bar: 'baz'}}, 'foo.bar') => 'baz'\r\n   *\r\n   * @param {Object}  json          The JSON object\r\n   * @param {String}  [path=null]   The path to seek. If empty, the entire tree is returned\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function getJSON\r\n   * @return {Mixed} Result for the path\r\n   */\r\n  exports.getJSON = (json, path, defaultValue) => {\r\n    if ( typeof path === 'string' ) {\r\n      let result = null;\r\n      let ns = json;\r\n\r\n      path.split(/\\./).forEach((k, i, queue) => {\r\n        if ( i >= queue.length - 1 ) {\r\n          result = ns[k];\r\n        } else {\r\n          ns = ns[k];\r\n        }\r\n      });\r\n\r\n      return typeof result === 'undefined' ? defaultValue : result;\r\n    }\r\n\r\n    return json;\r\n  };\r\n\r\n\r\n  /**\r\n   * Resolves the given path in JSON object and returns value\r\n   *\r\n   * @example .setJSON({foo: {bar: 'baz'}}, 'foo.bar', 'jazz') => {foo: {bar: 'jazz'}}\r\n   *\r\n   * @param {Object}          json                      The JSON object\r\n   * @param {String}          path                      The path to seek. If you set this as 'null' you can define the value as a tree\r\n   * @param {Mixed}           value                     The value to set on the path\r\n   * @param {Object}          [options]                 A set of options\r\n   * @param {Boolean}         [options.prune=false]     Remove 'null' from the tree (this also prunes empty objects)\r\n   * @param {Boolean}         [options.guess=false]     Try to guess what kind of type this value is\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function setJSON\r\n   * @return {Object} The new JSON object\r\n   */\r\n  exports.setJSON = (() => {\r\n\r\n    function removeNulls(obj) {\r\n      const isArray = obj instanceof Array;\r\n\r\n      for ( let k in obj ) {\r\n        if ( obj[k] === null ) {\r\n          if ( isArray ) {\r\n            obj.splice(k, 1);\r\n          } else {\r\n            delete obj[k];\r\n          }\r\n        } else if ( typeof obj[k] === 'object') {\r\n          removeNulls(obj[k]);\r\n        }\r\n      }\r\n    }\r\n\r\n    function getNewTree(key, value) {\r\n      const queue = key.split(/\\./);\r\n\r\n      let resulted = {};\r\n      let ns = resulted;\r\n\r\n      queue.forEach((k, i) => {\r\n        if ( i >= queue.length - 1 ) {\r\n          ns[k] = value;\r\n        } else {\r\n          if ( typeof ns[k] === 'undefined' ) {\r\n            ns[k] = {};\r\n          }\r\n          ns = ns[k];\r\n        }\r\n      });\r\n\r\n      return resulted;\r\n    }\r\n\r\n    function guessValue(value) {\r\n      try {\r\n        return JSON.parse(value);\r\n      } catch ( e ) {}\r\n      return String(value);\r\n    }\r\n\r\n    return function(json, path, value, opts) {\r\n      const isTree = !path;\r\n      const options = Object.assign({\r\n        prune: false,\r\n        guess: false,\r\n        value: null,\r\n      }, opts || {});\r\n\r\n      if ( !isTree && options.guess ) {\r\n        value = guessValue(value);\r\n      }\r\n\r\n      let newTree = isTree ? value : getNewTree(path, value);\r\n      let result = mergeDeep(json, newTree);\r\n\r\n      if ( options.prune ) {\r\n        removeNulls(result);\r\n      }\r\n\r\n      return result;\r\n    };\r\n  })();\r\n\r\nreturn exports;\r\n\r\n});\ndefine('skylark-osjsv2-client/core/config',['../helpers/simplejsonconf'], function (SimpleJSON) {\n    'use strict';\n    function getConfig(path, defaultValue) {\n        const config = OSjs.getConfig();\n        if (!path) {\n            return config;\n        }\n        const result = SimpleJSON.getJSON(config, path, defaultValue);\n        return typeof result === 'object' && !(result instanceof Array) ? Object.assign({}, result) : result;\n    }\n    function getDefaultPath(fallback) {\n        if (fallback && fallback.match(/^\\//)) {\n            fallback = null;\n        }\n        return getConfig('VFS.Home') || fallback || getConfig('VFS.Dist');\n    }\n    function getBrowserPath(app) {\n        let str = getConfig('Connection.RootURI');\n        if (typeof app === 'string') {\n            str = str.replace(/\\/?$/, app.replace(/^\\/?/, '/'));\n        }\n        return str;\n    }\n    function getUserLocale() {\n        const loc = (window.navigator.userLanguage || window.navigator.language || 'en-EN').replace('-', '_');\n        const map = {\n            'nb': 'no_NO',\n            'es': 'es_ES',\n            'ru': 'ru_RU',\n            'en': 'en_EN'\n        };\n        const major = loc.split('_')[0] || 'en';\n        const minor = loc.split('_')[1] || major.toUpperCase();\n        if (map[major]) {\n            return map[major];\n        }\n        return major + '_' + minor;\n    }\n    return {\n        getConfig: getConfig,\n        getDefaultPath: getDefaultPath,\n        getBrowserPath: getBrowserPath,\n        getUserLocale: getUserLocale\n    };\n});\ndefine('skylark-osjsv2-client/core/connection',[\n    'skylark-axios',\n    '../helpers/event-handler',\n    '../helpers/loader',\n    './config'\n], function (axios, EventHandler, Loader, Config) {\n    'use strict';\n    function progressHandler(ev, onprogress) {\n        if (ev.lengthComputable) {\n            onprogress(ev, ev.loaded / ev.total);\n        } else {\n            onprogress(ev, -1);\n        }\n    }\n    function appendRequestOptions(data, options) {\n        options = options || {};\n        const onprogress = options.onprogress || function () {\n        };\n        const ignore = [\n            'onsuccess',\n            'onerror',\n            'onprogress',\n            'oncanceled'\n        ];\n        Object.keys(options).forEach(key => {\n            if (ignore.indexOf(key) === -1) {\n                data[key] = options[key];\n            }\n        });\n        data.onUploadProgress = ev => progressHandler(ev, onprogress);\n        data.onDownloadProgress = ev => progressHandler(ev, onprogress);\n        return data;\n    }\n    let _instance;\n    return class Connection {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            if (!_instance) {\n                _instance = this;\n            }\n            this.offline = false;\n            this.index = 0;\n            this._evHandler = new EventHandler(name, []);\n            this.onlineFn = () => this.onOnline();\n            this.offlineFn = () => this.onOffline();\n        }\n        init() {\n            if (typeof navigator.onLine !== 'undefined') {\n                window.addEventListener('offline', this.offlineFn);\n                window.addEventListener('online', this.onlineFn);\n            }\n            return Promise.resolve();\n        }\n        destroy() {\n            window.removeEventListener('offline', this.offlineFn);\n            window.removeEventListener('online', this.onlineFn);\n            if (this._evHandler) {\n                this._evHandler = this._evHandler.destroy();\n            }\n            _instance = null;\n        }\n        getVFSPath(item, options) {\n            options = options || {};\n            const base = Config.getConfig('Connection.RootURI', '/').replace(/\\/?$/, '/');\n            const defaultDist = Config.getConfig('VFS.Dist');\n            if (window.location.protocol === 'file:') {\n                return item ? base + item.path.substr(defaultDist.length) : base;\n            }\n            let url = Config.getConfig('Connection.FSURI', '/');\n            if (item) {\n                url += '/read';\n                options.path = item.path;\n            } else {\n                url += '/upload';\n            }\n            if (options) {\n                const q = Object.keys(options).map(k => {\n                    return k + '=' + encodeURIComponent(options[k]);\n                });\n                if (q.length) {\n                    url += '?' + q.join('&');\n                }\n            }\n            return url;\n        }\n        isOnline() {\n            return !this.offline;\n        }\n        isOffline() {\n            return this.offline;\n        }\n        onVFSRequestCompleted(mount, method, args, response, appRef) {\n            return Promise.resolve(true);\n        }\n        onOnline() {\n            console.warn('Connection::onOnline()', 'Going online...');\n            this.offline = false;\n            if (this._evHandler) {\n                this._evHandler.emit('online');\n            }\n        }\n        onOffline(reconnecting) {\n            console.warn('Connection::onOffline()', 'Going offline...');\n            if (!this.offline && this._evHandler) {\n                this._evHandler.emit('offline', [reconnecting]);\n            }\n            this.offline = true;\n        }\n        createRequest(method, args, options) {\n            args = args || {};\n            options = options || {};\n            if (this.offline) {\n                return Promise.reject(new Error('You are currently off-line and cannot perform this operation!'));\n            }\n            const {raw, requestOptions} = this.createRequestOptions(method, args);\n            return new Promise((resolve, reject) => {\n                axios(appendRequestOptions(requestOptions, options)).then(result => {\n                    return resolve(raw ? result.data : {\n                        error: false,\n                        result: result.data\n                    });\n                }).catch(error => {\n                    reject(new Error(error.message || error));\n                });\n            });\n        }\n        createRequestOptions(method, args) {\n            const realMethod = method.replace(/^FS:/, '');\n            let raw = true;\n            let requestOptions = {\n                responseType: 'json',\n                url: Config.getConfig('Connection.APIURI') + '/' + realMethod,\n                method: 'POST',\n                data: args\n            };\n            if (method.match(/^FS:/)) {\n                if (realMethod === 'get') {\n                    requestOptions.responseType = 'arraybuffer';\n                    requestOptions.url = args.url || this.getVFSPath({ path: args.path });\n                    requestOptions.method = args.method || 'GET';\n                    raw = false;\n                } else if (realMethod === 'upload') {\n                    requestOptions.url = this.getVFSPath();\n                } else {\n                    requestOptions.url = Config.getConfig('Connection.FSURI') + '/' + realMethod;\n                }\n            }\n            return {\n                raw,\n                requestOptions\n            };\n        }\n        subscribe(k, func) {\n            return this._evHandler.on(k, func, this);\n        }\n        unsubscribe(k, idx) {\n            return this._evHandler.off(k, idx);\n        }\n        static request(m, a, options) {\n            a = a || {};\n            options = options || {};\n            if (options && typeof options !== 'object') {\n                return Promise.reject(new TypeError('request() expects an object as options'));\n            }\n            Loader.create('Connection.request');\n            if (typeof options.indicator !== 'undefined') {\n                delete options.indicator;\n            }\n            return new Promise((resolve, reject) => {\n                this.instance.createRequest(m, a, options).then(response => {\n                    if (response.error) {\n                        return reject(new Error(response.error));\n                    }\n                    return resolve(response.result);\n                }).catch(err => {\n                    reject(new Error(err));\n                }).finally(() => {\n                    Loader.destroy('Connection.request');\n                });\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage',[\n    './connection',\n], function (Connection) {\n    'use strict';\n    let _instance;\n    return class Storage {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            _instance = this;\n            this.saveTimeout = null;\n        }\n        init() {\n            return Promise.resolve();\n        }\n        destroy() {\n            _instance = null;\n        }\n        saveSettings(pool, storage) {\n            clearTimeout(this.saveTimeout);\n            return new Promise((resolve, reject) => {\n                this.saveTimeout = setTimeout(() => {\n                    Connection.request('settings', {\n                        pool: pool,\n                        settings: Object.assign({}, storage)\n                    }).then(resolve).catch(reject);\n                    clearTimeout(this.saveTimeout);\n                }, 250);\n            });\n        }\n        saveSession(Process,SettingsManager) { // modified by lwf\n            return new Promise((resolve, reject) => {\n                const data = Process.getProcesses().filter(proc => typeof proc._getSessionData === 'function').map(proc => proc._getSessionData());\n                SettingsManager.set('UserSession', null, data, (err, res) => {\n                    return err ? reject(err) : resolve(res);\n                });\n            });\n        }\n        getLastSession(SettingsManager) { // modified by lwf\n            const res = SettingsManager.get('UserSession');\n            const list = (res || []).map(iter => {\n                const args = iter.args;\n                args.__resume__ = true;\n                args.__windows__ = iter.windows || [];\n                return {\n                    name: iter.name,\n                    args\n                };\n            });\n            return Promise.resolve(list);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/settings-fragment',['../utils/misc'], function (Misc) {\n    'use strict';\n    return class SettingsFragment {\n        constructor(obj, poolName, sm) {\n            this._sm = sm;\n            this._pool = poolName;\n            if (obj.constructor !== {}.constructor) {\n                if (!(obj instanceof Array)) {\n                    throw new Error('SettingsFragment will not work unless you give it a object to manage.');\n                }\n            }\n            this._settings = obj;\n        }\n        get(key, defaultValue) {\n            const ret = key ? this._settings[key] : this._settings;\n            return typeof ret === 'undefined' ? defaultValue : ret;\n        }\n        set(key, value, save, triggerWatch) {\n            if (key === null) {\n                Misc.mergeObject(this._settings, value);\n            } else {\n                if ([\n                        'number',\n                        'string'\n                    ].indexOf(typeof key) >= 0) {\n                    this._settings[key] = value;\n                } else {\n                    console.warn('SettingsFragment::set()', 'expects key to be a valid iter, not', key);\n                }\n            }\n            if (save) {\n                this._sm.save(this._pool, save);\n            }\n            if (typeof triggerWatch === 'undefined' || triggerWatch === true) {\n                this._sm.changed(this._pool);\n            }\n            return this;\n        }\n        save(callback) {\n            return this._sm.save(this._pool, callback);\n        }\n        getChained() {\n            let nestedSetting = this._settings;\n            arguments.every(function (key) {\n                if (nestedSetting[key]) {\n                    nestedSetting = nestedSetting[key];\n                    return true;\n                }\n                return false;\n            });\n            return nestedSetting;\n        }\n        mergeDefaults(defaults) {\n            Misc.mergeObject(this._settings, defaults, { overwrite: false });\n            return this;\n        }\n        instance(key) {\n            if (typeof this._settings[key] === 'undefined') {\n                throw new Error(\"The object doesn't contain that key. SettingsFragment will not work.\");\n            }\n            return new SettingsFragment(this._settings[key], this._pool, this._sm);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/settings-manager',[\n    './storage',\n    '../helpers/settings-fragment'\n], function (Storage, SettingsFragment) {\n    'use strict';\n    class SettingsManager {\n        constructor() {\n            this.storage = {};\n            this.defaultSettings = {};\n            this.watches = [];\n        }\n        init(settings) {\n            this.storage = settings || {};\n            return Promise.resolve();\n        }\n        get(pool, key) {\n            try {\n                if (this.storage[pool] && Object.keys(this.storage[pool]).length) {\n                    return key ? this.storage[pool][key] : this.storage[pool];\n                }\n                return key ? this.defaultSettings[pool][key] : this.defaultSettings[pool];\n            } catch (e) {\n                console.warn('SettingsManager::get()', 'exception', e, e.stack);\n            }\n            return false;\n        }\n        set(pool, key, value, save, triggerWatch) {\n            let promise = Promise.resolve(true);\n            try {\n                if (key) {\n                    if (typeof this.storage[pool] === 'undefined') {\n                        this.storage[pool] = {};\n                    }\n                    if ([\n                            'number',\n                            'string'\n                        ].indexOf(typeof key) >= 0) {\n                        this.storage[pool][key] = value;\n                    } else {\n                        console.warn('SettingsManager::set()', 'expects key to be a valid iter, not', key);\n                    }\n                } else {\n                    this.storage[pool] = value;\n                }\n            } catch (e) {\n                console.warn('SettingsManager::set()', 'exception', e, e.stack);\n            }\n            if (save) {\n                promise = this.save(pool);\n                if (typeof save === 'function') {\n                    console.warn('Using a callback is deprecated, you should use the returned promise');\n                    promise.then(res => save(false, res)).catch(err => save(err, false));\n                }\n            }\n            if (typeof triggerWatch === 'undefined' || triggerWatch === true) {\n                this.changed(pool);\n            }\n            return promise;\n        }\n        save(pool) {\n            console.debug('SettingsManager::save()', pool, this.storage);\n            const saveableStorage = {};\n            Object.keys(this.storage).filter(n => {\n                return !n.match(/^__/);\n            }).forEach(n => {\n                saveableStorage[n] = this.storage[n];\n            });\n            return Storage.instance.saveSettings(pool, saveableStorage);\n        }\n        defaults(pool, defaults) {\n            this.defaultSettings[pool] = defaults;\n        }\n        instance(pool, defaults) {\n            if (!this.storage[pool] || this.storage[pool] instanceof Array) {\n                this.storage[pool] = {};\n            }\n            const instance = new SettingsFragment(this.storage[pool], pool, this);\n            if (arguments.length > 1) {\n                this.defaults(pool, defaults);\n                instance.mergeDefaults(defaults);\n            }\n            return instance;\n        }\n        unwatch(index) {\n            if (typeof this.watches[index] !== 'undefined') {\n                delete this.watches[index];\n            }\n        }\n        watch(pool, callback) {\n            if (!this.storage[pool]) {\n                return false;\n            }\n            const index = this.watches.push({\n                pool: pool,\n                callback: callback\n            });\n            return index - 1;\n        }\n        changed(pool) {\n            this.watches.forEach(watch => {\n                if (watch && watch.pool === pool) {\n                    watch.callback(this.storage[pool]);\n                }\n            });\n            return this;\n        }\n        clear(pool, save) {\n            save = typeof save === 'undefined' || save === true;\n            this.set(pool, null, {}, save);\n            return this;\n        }\n    }\n    return new SettingsManager();\n});\ndefine('utils/misc',[],function () {\n    'use strict';\n    function format(format) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        const sprintfRegex = /\\{(\\d+)\\}/g;\n        function sprintf(match, number) {\n            return number in args ? args[number] : match;\n        }\n        return format.replace(sprintfRegex, sprintf);\n    }\n    function parseurl(url, modify) {\n        modify = modify || {};\n        if (!url.match(/^(\\w+\\:)\\/\\//)) {\n            url = '//' + url;\n        }\n        const protocol = url.split(/^(\\w+\\:)?\\/\\//);\n        const splitted = (() => {\n            const tmp = protocol[2].replace(/^\\/\\//, '').split('/');\n            return {\n                proto: (modify.protocol || protocol[1] || window.location.protocol || '').replace(/\\:$/, ''),\n                host: modify.host || tmp.shift(),\n                path: modify.path || '/' + tmp.join('/')\n            };\n        })();\n        function _parts() {\n            const parts = [\n                splitted.proto,\n                '://'\n            ];\n            if (modify.username) {\n                const authstr = String(modify.username) + ':' + String(modify.password);\n                parts.push(authstr);\n                parts.push('@');\n            }\n            parts.push(splitted.host);\n            parts.push(splitted.path);\n            return parts.join('');\n        }\n        return {\n            protocol: splitted.proto,\n            host: splitted.host,\n            path: splitted.path,\n            url: _parts()\n        };\n    }\n    function urlparams(search, hash) {\n        let hashes = search.slice(search.indexOf(hash ? '#' : '?') + 1).split('&');\n        return hashes.reduce((params, hash) => {\n            let [key, val] = hash.split('=');\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    }\n    function argumentDefaults(args, defaults, undef) {\n        args = args || {};\n        Object.keys(defaults).forEach(key => {\n            if (typeof defaults[key] === 'boolean' || typeof defaults[key] === 'number') {\n                if (typeof args[key] === 'undefined' || args[key] === null) {\n                    args[key] = defaults[key];\n                }\n            } else {\n                args[key] = args[key] || defaults[key];\n            }\n        });\n        return args;\n    }\n    function mergeObject(obj1, obj2, opts) {\n        opts = opts || {};\n        for (let p in obj2) {\n            if (obj2.hasOwnProperty(p)) {\n                try {\n                    if (opts.overwrite === false && obj1.hasOwnProperty(p)) {\n                        continue;\n                    }\n                    if (obj2[p].constructor === Object) {\n                        obj1[p] = mergeObject(obj1[p], obj2[p]);\n                    } else {\n                        obj1[p] = obj2[p];\n                    }\n                } catch (e) {\n                    obj1[p] = obj2[p];\n                }\n            }\n        }\n        return obj1;\n    }\n    function cloneObject(o, alternative) {\n        function _clone(i) {\n            if (typeof i !== 'object' || i === null) {\n                return i;\n            } else if (i instanceof Array) {\n                return i.map(_clone);\n            }\n            const iter = {};\n            Object.keys(i).forEach(k => {\n                iter[k] = _clone(i[k]);\n            });\n            return iter;\n        }\n        if (alternative) {\n            return _clone(o);\n        }\n        return JSON.parse(JSON.stringify(o, (key, value) => {\n            if (value && typeof value === 'object' && value.tagName) {\n                return window.undefined;\n            }\n            return value;\n        }));\n    }\n    return {\n        format: format,\n        parseurl: parseurl,\n        urlparams: urlparams,\n        argumentDefaults: argumentDefaults,\n        mergeObject: mergeObject,\n        cloneObject: cloneObject\n    };\n});\ndefine('skylark-osjsv2-client/utils/fs',['utils/misc'], function (Utils) {\n    'use strict';\n    function getPathFromVirtual(str) {\n        str = str || '';\n        const res = str.split(/([A-z0-9\\-_]+)\\:\\/\\/(.*)/)[2] || '';\n        return res.replace(/^\\/?/, '/');\n    }\n    function getPathProtocol(orig) {\n        const tmp = document.createElement('a');\n        tmp.href = orig;\n        return tmp.protocol.replace(/:$/, '');\n    }\n    function filename(p) {\n        return (p || '').replace(/\\/$/, '').split('/').pop();\n    }\n    function filext(d) {\n        const ext = filename(d).split('.').pop();\n        return ext ? ext.toLowerCase() : null;\n    }\n    function dirname(f) {\n        function _parentDir(p) {\n            const pstr = p.split(/^(.*)\\:\\/\\/(.*)/).filter(function (n) {\n                return n !== '';\n            });\n            const args = pstr.pop();\n            const prot = pstr.pop();\n            let result = '';\n            const tmp = args.split('/').filter(function (n) {\n                return n !== '';\n            });\n            if (tmp.length) {\n                tmp.pop();\n            }\n            result = tmp.join('/');\n            if (!result.match(/^\\//)) {\n                result = '/' + result;\n            }\n            if (prot) {\n                result = prot + '://' + result;\n            }\n            return result;\n        }\n        return f.match(/^((.*)\\:\\/\\/)?\\/$/) ? f : _parentDir(f.replace(/\\/$/, ''));\n    }\n    function humanFileSize(bytes, si) {\n        const units = si ? [\n            'kB',\n            'MB',\n            'GB',\n            'TB',\n            'PB',\n            'EB',\n            'ZB',\n            'YB'\n        ] : [\n            'KiB',\n            'MiB',\n            'GiB',\n            'TiB',\n            'PiB',\n            'EiB',\n            'ZiB',\n            'YiB'\n        ];\n        const thresh = si ? 1000 : 1024;\n        if (bytes < thresh) {\n            return bytes + ' B';\n        }\n        let u = -1;\n        do {\n            bytes /= thresh;\n            ++u;\n        } while (bytes >= thresh);\n        return bytes.toFixed(1) + ' ' + units[u];\n    }\n    function escapeFilename(n) {\n        return (n || '').replace(/[\\|&;\\$%@\"<>\\(\\)\\+,\\*\\/]/g, '').trim();\n    }\n    function replaceFileExtension(filename, rep) {\n        const spl = filename.split('.');\n        spl.pop();\n        spl.push(rep);\n        return spl.join('.');\n    }\n    function replaceFilename(orig, newname) {\n        const spl = orig.split('/');\n        spl.pop();\n        spl.push(newname);\n        return spl.join('/');\n    }\n    function pathJoin() {\n        let parts = [];\n        let prefix = '';\n        function getPart(s) {\n            if (s.match(/^([A-z0-9\\-_]+)\\:\\//)) {\n                const spl = s.split(/^([A-z0-9\\-_]+)\\:\\//);\n                if (!prefix) {\n                    prefix = spl[1] + '://';\n                }\n                s = spl[2] || '';\n            }\n            s = s.replace(/^\\/+/, '').replace(/\\/+$/, '');\n            return s.split('/').filter(function (i) {\n                return [\n                    '',\n                    '.',\n                    '..'\n                ].indexOf(i) === -1;\n            }).join('/');\n        }\n        for (let i = 0; i < arguments.length; i++) {\n            const str = getPart(String(arguments[i]));\n            if (str) {\n                parts.push(str);\n            }\n        }\n        return prefix + parts.join('/').replace(/^\\/?/, '/');\n    }\n    function getFilenameRange(val) {\n        val = val || '';\n        const range = {\n            min: 0,\n            max: val.length\n        };\n        if (val.match(/^\\./)) {\n            if (val.length >= 2) {\n                range.min = 1;\n            }\n        } else {\n            if (val.match(/\\.(\\w+)$/)) {\n                const m = val.split(/\\.(\\w+)$/);\n                for (let i = m.length - 1; i >= 0; i--) {\n                    if (m[i].length) {\n                        range.max = val.length - m[i].length - 1;\n                        break;\n                    }\n                }\n            }\n        }\n        return range;\n    }\n    function btoaUrlsafe(str) {\n        return !str || !str.length ? '' : btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n    }\n    function atobUrlsafe(str) {\n        if (str && str.length) {\n            str = (str + '===').slice(0, str.length + str.length % 4);\n            return atob(str.replace(/-/g, '+').replace(/_/g, '/'));\n        }\n        return '';\n    }\n    function btoaUtf(str) {\n        const _unescape = window.unescape || function (s) {\n            function d(x, n) {\n                return String.fromCharCode(parseInt(n, 16));\n            }\n            return s.replace(/%([0-9A-F]{2})/i, d);\n        };\n        str = _unescape(encodeURIComponent(str));\n        return btoa(str);\n    }\n    function atobUtf(str) {\n        const _escape = window.escape || function (s) {\n            function q(c) {\n                c = c.charCodeAt();\n                return '%' + (c < 16 ? '0' : '') + c.toString(16).toUpperCase();\n            }\n            return s.replace(/[\\x00-),:-?[-^`{-\\xFF]/g, q);\n        };\n        const trans = _escape(atob(str));\n        return decodeURIComponent(trans);\n    }\n    function checkAcceptMime(mime, list) {\n        if (mime && list.length) {\n            let re;\n            for (let i = 0; i < list.length; i++) {\n                re = new RegExp(list[i]);\n                if (re.test(mime) === true) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    function filterScandir(list, options, defaultOptions) {\n        defaultOptions = Utils.cloneObject(defaultOptions || {});\n        const ioptions = Utils.cloneObject(options, true);\n        let ooptions = Object.assign({}, defaultOptions.scandir || {}, ioptions);\n        ooptions = Object.assign({}, {\n            sortBy: null,\n            sortDir: 'asc',\n            typeFilter: null,\n            mimeFilter: [],\n            showHiddenFiles: true\n        }, ooptions);\n        function filterFile(iter) {\n            if (ooptions.typeFilter && iter.type !== ooptions.typeFilter || !ooptions.showHiddenFiles && iter.filename.match(/^\\.\\w/)) {\n                return false;\n            }\n            return true;\n        }\n        function validMime(iter) {\n            if (ooptions.mimeFilter && ooptions.mimeFilter.length && iter.mime) {\n                return ooptions.mimeFilter.some(function (miter) {\n                    if (iter.mime.match(miter)) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return true;\n        }\n        const result = list.filter(function (iter) {\n            if (iter.filename === '..' || !filterFile(iter)) {\n                return false;\n            }\n            if (iter.type === 'file' && !validMime(iter)) {\n                return false;\n            }\n            return true;\n        }).map(function (iter) {\n            if (iter.mime === 'application/vnd.google-apps.folder') {\n                iter.type = 'dir';\n            }\n            return iter;\n        });\n        const sb = ooptions.sortBy;\n        const types = {\n            mtime: 'date',\n            ctime: 'date'\n        };\n        if ([\n                'filename',\n                'size',\n                'mime',\n                'ctime',\n                'mtime'\n            ].indexOf(sb) !== -1) {\n            if (types[sb] === 'date') {\n                result.sort(function (a, b) {\n                    a = new Date(a[sb]);\n                    b = new Date(b[sb]);\n                    return a > b ? 1 : b > a ? -1 : 0;\n                });\n            } else {\n                if (sb === 'size' || !String.prototype.localeCompare) {\n                    result.sort(function (a, b) {\n                        return a[sb] > b[sb] ? 1 : b[sb] > a[sb] ? -1 : 0;\n                    });\n                } else {\n                    result.sort(function (a, b) {\n                        return String(a[sb]).localeCompare(String(b[sb]));\n                    });\n                }\n            }\n            if (ooptions.sortDir === 'desc') {\n                result.reverse();\n            }\n        }\n        return result.filter(function (iter) {\n            return iter.type === 'dir';\n        }).concat(result.filter(function (iter) {\n            return iter.type !== 'dir';\n        }));\n    }\n    function _abToSomething(m, arrayBuffer, mime, callback) {\n        mime = mime || 'application/octet-stream';\n        try {\n            const blob = new Blob([arrayBuffer], { type: mime });\n            const r = new FileReader();\n            r.onerror = function (e) {\n                callback(e);\n            };\n            r.onloadend = function () {\n                callback(false, r.result);\n            };\n            r[m](blob);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    function addFormFile(fd, key, data, file) {\n        file = file || {\n            mime: 'application/octet-stream',\n            filename: 'filename'\n        };\n        if (data instanceof window.File) {\n            fd.append(key, data);\n        } else if (data instanceof window.ArrayBuffer) {\n            try {\n                data = new Blob([data], { type: file.mime });\n            } catch (e) {\n                data = null;\n                console.warn(e, e.stack);\n            }\n            fd.append(key, data, file.filename);\n        } else {\n            if (data.data && data.filename) {\n                fd.append(key, data.data, data.filename);\n            }\n        }\n    }\n    function dataSourceToAb(data, mime, callback) {\n        const byteString = atob(data.split(',')[1]);\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        callback(false, ab);\n    }\n    function textToAb(data, mime, callback) {\n        _abToSomething('readAsArrayBuffer', data, mime, callback);\n    }\n    function abToDataSource(arrayBuffer, mime, callback) {\n        _abToSomething('readAsDataURL', arrayBuffer, mime, callback);\n    }\n    function abToText(arrayBuffer, mime, callback) {\n        _abToSomething('readAsText', arrayBuffer, mime, callback);\n    }\n    function abToBinaryString(arrayBuffer, mime, callback) {\n        _abToSomething('readAsBinaryString', arrayBuffer, mime, callback);\n    }\n    function abToBlob(arrayBuffer, mime, callback) {\n        mime = mime || 'application/octet-stream';\n        try {\n            const blob = new Blob([arrayBuffer], { type: mime });\n            callback(false, blob);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    function blobToAb(data, callback) {\n        try {\n            const r = new FileReader();\n            r.onerror = function (e) {\n                callback(e);\n            };\n            r.onloadend = function () {\n                callback(false, r.result);\n            };\n            r.readAsArrayBuffer(data);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    return {\n        getPathFromVirtual: getPathFromVirtual,\n        getPathProtocol: getPathProtocol,\n        filename: filename,\n        filext: filext,\n        dirname: dirname,\n        humanFileSize: humanFileSize,\n        escapeFilename: escapeFilename,\n        replaceFileExtension: replaceFileExtension,\n        replaceFilename: replaceFilename,\n        pathJoin: pathJoin,\n        getFilenameRange: getFilenameRange,\n        btoaUrlsafe: btoaUrlsafe,\n        atobUrlsafe: atobUrlsafe,\n        btoaUtf: btoaUtf,\n        atobUtf: atobUtf,\n        checkAcceptMime: checkAcceptMime,\n        filterScandir: filterScandir,\n        addFormFile: addFormFile,\n        dataSourceToAb: dataSourceToAb,\n        textToAb: textToAb,\n        abToDataSource: abToDataSource,\n        abToText: abToText,\n        abToBinaryString: abToBinaryString,\n        abToBlob: abToBlob,\n        blobToAb: blobToAb\n    };\n});\ndefine('skylark-osjsv2-client/vfs/file',[\n    '../utils/fs',\n    '../core/config',\n    '../core/locales'\n], function (FS, Config, Locales) {\n    'use strict';\n    return class FileMetadata {\n        constructor(arg, mime) {\n            if (!arg) {\n                throw new Error(Locales._('ERR_VFS_FILE_ARGS'));\n            }\n            this.path = null;\n            this.filename = null;\n            this.type = null;\n            this.size = null;\n            this.mime = null;\n            this.id = null;\n            this.shortcut = false;\n            if (typeof arg === 'object') {\n                this.setData(arg);\n            } else if (typeof arg === 'string') {\n                this.path = arg;\n                this.setData();\n            }\n            if (typeof mime === 'string') {\n                if (mime.match(/\\//)) {\n                    this.mime = mime;\n                } else {\n                    this.type = mime;\n                }\n            }\n            this._guessMime();\n        }\n        setData(o) {\n            if (o) {\n                Object.keys(o).forEach(k => {\n                    if (k !== '_element') {\n                        this[k] = o[k];\n                    }\n                });\n            }\n            if (!this.filename) {\n                this.filename = FS.filename(this.path);\n            }\n        }\n        getData() {\n            return {\n                path: this.path,\n                filename: this.filename,\n                type: this.type,\n                size: this.size,\n                mime: this.mime,\n                id: this.id\n            };\n        }\n        _guessMime() {\n            if (this.mime || this.type === 'dir' || (!this.path || this.path.match(/\\/$/))) {\n                return;\n            }\n            const ext = FS.filext(this.path);\n            this.mime = Config.getConfig('MIME.mapping')['.' + ext] || 'application/octet-stream';\n        }\n        static fromUpload(destination, f) {\n            return new FileMetadata({\n                filename: f.name,\n                path: (destination + '/' + f.name).replace(/\\/\\/\\/\\/+/, '///'),\n                mime: f.mime || 'application/octet-stream',\n                size: f.size\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/package-manager',[\n    './settings-manager',\n    '../utils/misc',\n    './locales',\n    './config',\n    '../utils/fs',\n    './connection'\n], function ( SettingsManager, misc, locales, config, FS, Connection) {\n    'use strict';\n    const resolvePreloads = (metadata, pm) => {\n        const packageURI = config.getConfig('Connection.PackageURI');\n        const mapIter = s => typeof s === 'string' ? { src: s } : s;\n        let additions = [];\n        let list = (metadata.preload || []).slice(0).map(mapIter);\n        if (metadata.depends instanceof Array) {\n            metadata.depends.forEach(k => {\n                if (!OSjs.Applications[k]) {\n                    const pkg = pm.getPackage(k);\n                    if (pkg) {\n                        console.info('Using dependency', k);\n                        additions = additions.concat(pkg.preload.map(mapIter));\n                    }\n                }\n            });\n        }\n        const pkgs = pm.getPackages(false); \n        Object.keys(pkgs).forEach(pn => {\n            const p = pkgs[pn];\n            if (p.type === 'extension' && p.uses === name) {\n                if (p) {\n                    console.info('Using extension', pn);\n                    additions = additions.concat(p.preload.map(mapIter));\n                }\n            }\n        });\n        return additions.concat(list).map(p => {\n            if (!p.src.match(/^(\\/|https?|ftp)/)) {\n                if (metadata.scope === 'user') {\n                    pm.VFS.url(FS.pathJoin(metadata.path, p.src)).then(url => {\n                        p.src = url;\n                        return true;\n                    });\n                } else {\n                    p.src = FS.pathJoin(packageURI, metadata.path, p.src);\n                }\n            }\n            return p;\n        });\n    };\n    class PackageManager {\n        constructor() { \n            this.packages = {};\n            this.blacklist = [];\n        }\n        destroy() {\n            this.packages = {};\n            this.blacklist = [];\n        }\n        init(Authenticator,VFS, metadata, isStandalone) { // modified by lwf\n            this.Authenticator = Authenticator;\n            this.VFS = VFS;\n            console.debug('PackageManager::load()', metadata);\n            return new Promise((resolve, reject) => {\n                const setPackages = metadata ? this.setPackages(metadata) : Promise.resolve();\n                setPackages.then(() => {\n                    if (isStandalone) {\n                        return resolve(true);\n                    }\n                    return this._loadMetadata().then(() => {\n                        const len = Object.keys(this.packages).length;\n                        if (len) {\n                            return resolve(true);\n                        }\n                        return reject(new Error(locales._('ERR_PACKAGE_ENUM_FAILED')));\n                    }).catch(reject);\n                }).catch(reject);\n            });\n        }\n        _loadMetadata() {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'list',\n                    args: { paths: paths }\n                }).then(res => {\n                    return this.setPackages(res).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        generateUserMetadata() {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            return new Promise((resolve, reject) => {\n                const cb = () => this._loadMetadata().then(resolve).catch(reject);\n                Connection.request('packages', {\n                    command: 'cache',\n                    args: {\n                        action: 'generate',\n                        scope: 'user',\n                        paths: paths\n                    }\n                }).then(cb).catch(cb);\n            });\n        }\n        _addPackages(result, scope) {\n            console.debug('PackageManager::_addPackages()', result);\n            const keys = Object.keys(result);\n            if (!keys.length) {\n                return;\n            }\n            const currLocale = locales.getLocale();\n            keys.forEach(i => {\n                const newIter = misc.cloneObject(result[i]);\n                if (typeof newIter !== 'object') {\n                    return;\n                }\n                if (typeof newIter.names !== 'undefined' && newIter.names[currLocale]) {\n                    newIter.name = newIter.names[currLocale];\n                }\n                if (typeof newIter.descriptions !== 'undefined' && newIter.descriptions[currLocale]) {\n                    newIter.description = newIter.descriptions[currLocale];\n                }\n                if (!newIter.description) {\n                    newIter.description = newIter.name;\n                }\n                newIter.scope = scope || 'system';\n                newIter.type = newIter.type || 'application';\n                this.packages[i] = newIter;\n            });\n        }\n        install(file, root) {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            if (typeof root !== 'string') {\n                root = paths[0];\n            }\n            const dest = FS.pathJoin(root, file.filename.replace(/\\.zip$/i, ''));\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'install',\n                    args: {\n                        zip: file.path,\n                        dest: dest,\n                        paths: paths\n                    }\n                }).then(() => {\n                    return this.generateUserMetadata().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        uninstall(file) {\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'uninstall',\n                    args: { path: file.path }\n                }).then(() => {\n                    return this.generateUserMetadata().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        setBlacklist(list) {\n            this.blacklist = list || [];\n        }\n        getStorePackages(opts) {\n            const repos = SettingsManager.instance('PackageManager').get('Repositories', []);\n            let entries = [];\n            return new Promise((resolve, reject) => {\n                Promise.all(repos.map(url => {\n                    return new Promise((yes, no) => {\n                        Connection.request('curl', {\n                            url: url,\n                            method: 'GET'\n                        }).then(result => {\n                            let list = [];\n                            if (typeof result.body === 'string') {\n                                try {\n                                    list = JSON.parse(result.body);\n                                } catch (e) {\n                                }\n                            }\n                            entries = entries.concat(list.map(iter => {\n                                iter._repository = url;\n                                return iter;\n                            }));\n                            return yes();\n                        }).catch(no);\n                    });\n                })).then(() => resolve(entries)).catch(reject);\n            });\n        }\n        getPackage(name) {\n            if (typeof this.packages[name] !== 'undefined') {\n                return Object.freeze(misc.cloneObject(this.packages)[name]);\n            }\n            return false;\n        }\n        getPackages(filtered) {\n            const Authenticator = this.Authenticator;\n\n            const hidden = SettingsManager.instance('PackageManager').get('Hidden', []);\n            const p = misc.cloneObject(this.packages);\n            const allowed = iter => {\n                if (this.blacklist.indexOf(iter.path) >= 0) {\n                    return false;\n                }\n                if (iter && iter.groups instanceof Array) {\n                    if (!Authenticator.instance().checkPermission(iter.groups)) { // modified by lwf\n                        return false;\n                    }\n                }\n                return true;\n            };\n            if (typeof filtered === 'undefined' || filtered === true) {\n                const result = {};\n                Object.keys(p).forEach(name => {\n                    const iter = p[name];\n                    if (!allowed(iter)) {\n                        return;\n                    }\n                    if (iter && hidden.indexOf(name) < 0) {\n                        result[name] = iter;\n                    }\n                });\n                return Object.freeze(result);\n            }\n            return Object.freeze(p);\n        }\n        getPackagesByMime(mime) {\n            const list = [];\n            const p = misc.cloneObject(this.packages);\n            Object.keys(p).forEach(i => {\n                if (this.blacklist.indexOf(i) < 0) {\n                    const a = p[i];\n                    if (a && a.mime) {\n                        if (FS.checkAcceptMime(mime, a.mime)) {\n                            list.push(i);\n                        }\n                    }\n                }\n            });\n            return list;\n        }\n        getPackageResource(app, name, vfspath) {\n            if (name.match(/^((https?:)|\\.)?\\//)) {\n                return name;\n            }\n            name = name.replace(/^\\.\\//, '');\n            const appname = typeof app === 'string' ? app : app.__pname;\n            const fsuri = config.getConfig('Connection.FSURI');\n            const pkg = this.getPackage(appname);\n            let path = name;\n            if (pkg) {\n                path = pkg.scope === 'user' ? '/user-package/' + FS.filename(pkg.path) + '/' + name.replace(/^\\//, '') : 'packages/' + pkg.path + '/' + name;\n                if (vfspath) {\n                    return pkg.scope === 'user' ? path.substr(fsuri.length) : config.getConfig('VFS.Dist') + path;\n                }\n            }\n            return path;\n        }\n        setPackages(res) { \n            const packages = {};\n            const locale = locales.getLocale();\n            const checkEntry = (key, iter, scope) => {\n                iter = Object.assign({}, iter);\n                iter.type = iter.type || 'application';\n                if (scope) {\n                    iter.scope = scope;\n                }\n                if (iter.names && iter.names[locale]) {\n                    iter.name = iter.names[locale];\n                }\n                if (iter.descriptions && iter.descriptions[locale]) {\n                    iter.description = iter.descriptions[locale];\n                }\n                let resolveIcon = () => {\n                    if (iter.icon && iter.path) {\n                        let packagePath = iter.path.replace(/^\\//, '');\n                        if (iter.scope === 'user') {\n                            return this.VFS.url(FS.pathJoin(packagePath, iter.icon));\n                        } else {\n                            if (iter.icon.match(/^\\.\\//)) {\n                                const packageURI = config.getConfig('Connection.PackageURI').replace(/\\/?$/, '/');\n                                return Promise.resolve(packageURI + packagePath + iter.icon.replace(/^\\./, ''));\n                            }\n                        }\n                    }\n                    return Promise.resolve(iter.icon);\n                };\n                iter.preload = resolvePreloads(iter, this); \n                return new Promise((resolve, reject) => {\n                    resolveIcon().then(icon => {\n                        if (icon) {\n                            iter.icon = icon;\n                        }\n                        return resolve(iter);\n                    }).catch(reject);\n                });\n            };\n            return new Promise((resolve, reject) => {\n                const entries = Object.keys(res || {});\n                Promise.each(entries, key => {\n                    return new Promise((yes, no) => {\n                        const iter = res[key];\n                        if (iter && !packages[iter.className]) {\n                            checkEntry(key, iter).then(pkg => {\n                                packages[iter.className] = pkg;\n                                return yes();\n                            }).catch(no);\n                        } else {\n                            console.warn('No such package', key);\n                            yes();\n                        }\n                    });\n                }).catch(reject).then(() => {\n                    this.packages = packages;\n                    return resolve();\n                });\n            });\n        }\n    }\n    return new PackageManager();\n});\ndefine('skylark-osjsv2-client/utils/compability',[],function () {\n    'use strict';\n    const compability = function () {\n        function _checkSupport(enabled, check, isSupported) {\n            const supported = {};\n            Object.keys(check).forEach(key => {\n                let chk = check[key];\n                let value = false;\n                if (chk instanceof Array) {\n                    chk.forEach(c => {\n                        value = isSupported(c);\n                        return !value;\n                    });\n                } else {\n                    value = isSupported(chk);\n                }\n                supported[key] = value;\n            });\n            return supported;\n        }\n        function getUpload() {\n            try {\n                const xhr = new XMLHttpRequest();\n                return !!(xhr && 'upload' in xhr && 'onprogress' in xhr.upload);\n            } catch (e) {\n            }\n            return false;\n        }\n        function getCanvasSupported() {\n            return document.createElement('canvas').getContext ? document.createElement('canvas') : null;\n        }\n        function getVideoSupported() {\n            return document.createElement('video').canPlayType ? document.createElement('video') : null;\n        }\n        function canPlayCodec(support, check) {\n            return _checkSupport(support, check, codec => {\n                try {\n                    return !!support.canPlayType(codec);\n                } catch (e) {\n                }\n                return false;\n            });\n        }\n        function getVideoTypesSupported() {\n            return canPlayCodec(getVideoSupported(), {\n                webm: 'video/webm; codecs=\"vp8.0, vorbis\"',\n                ogg: 'video/ogg; codecs=\"theora\"',\n                h264: [\n                    'video/mp4; codecs=\"avc1.42E01E\"',\n                    'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n                ],\n                mpeg: 'video/mp4; codecs=\"mp4v.20.8\"',\n                mkv: 'video/x-matroska; codecs=\"theora, vorbis\"'\n            });\n        }\n        function getAudioSupported() {\n            return document.createElement('audio').canPlayType ? document.createElement('audio') : null;\n        }\n        function getAudioTypesSupported() {\n            return canPlayCodec(getAudioSupported(), {\n                ogg: 'audio/ogg; codecs=\"vorbis',\n                mp3: 'audio/mpeg',\n                wav: 'audio/wav; codecs=\"1\"'\n            });\n        }\n        function getAudioContext() {\n            if (window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext')) {\n                return true;\n            }\n            return false;\n        }\n        const getCanvasContexts = (() => {\n            const cache = [];\n            return () => {\n                if (!cache.length) {\n                    const canvas = getCanvasSupported();\n                    if (canvas) {\n                        const test = [\n                            '2d',\n                            'webgl',\n                            'experimental-webgl',\n                            'webkit-3d',\n                            'moz-webgl'\n                        ];\n                        test.forEach((tst, i) => {\n                            try {\n                                if (!!canvas.getContext(tst)) {\n                                    cache.push(tst);\n                                }\n                            } catch (eee) {\n                            }\n                        });\n                    }\n                }\n                return cache;\n            };\n        })();\n        function getWebGL() {\n            let result = false;\n            let contexts = getCanvasContexts();\n            try {\n                result = contexts.length > 1;\n                if (!result) {\n                    if ('WebGLRenderingContext' in window) {\n                        result = true;\n                    }\n                }\n            } catch (e) {\n            }\n            return result;\n        }\n        function detectCSSFeature(featurename) {\n            let feature = false;\n            let domPrefixes = 'Webkit Moz ms O'.split(' ');\n            let elm = document.createElement('div');\n            let featurenameCapital = null;\n            featurename = featurename.toLowerCase();\n            if (elm.style[featurename]) {\n                feature = true;\n            }\n            if (feature === false) {\n                featurenameCapital = featurename.charAt(0).toUpperCase() + featurename.substr(1);\n                for (let i = 0; i < domPrefixes.length; i++) {\n                    if (typeof elm.style[domPrefixes[i] + featurenameCapital] !== 'undefined') {\n                        feature = true;\n                        break;\n                    }\n                }\n            }\n            return feature;\n        }\n        function getUserMedia() {\n            let getMedia = false;\n            if (window.navigator) {\n                getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n            }\n            return !!getMedia;\n        }\n        function getRichText() {\n            try {\n                return !!document.createElement('textarea').contentEditable;\n            } catch (e) {\n            }\n            return false;\n        }\n        function getTouch() {\n            try {\n                if (navigator.userAgent.match(/Windows NT 6\\.(2|3)/)) {\n                    return false;\n                }\n            } catch (e) {\n            }\n            try {\n                if (navigator.userAgent.match(/iOS|Android|BlackBerry|IEMobile|iPad|iPhone|iPad/i)) {\n                    return true;\n                }\n            } catch (e) {\n            }\n            return false;\n        }\n        function getDnD() {\n            return !!('draggable' in document.createElement('span'));\n        }\n        function getSVG() {\n            return !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect;\n        }\n        function getFileSystem() {\n            return 'requestFileSystem' in window || 'webkitRequestFileSystem' in window;\n        }\n        const checkWindow = {\n            indexedDB: 'indexedDB',\n            localStorage: 'localStorage',\n            sessionStorage: 'sessionStorage',\n            globalStorage: 'globalStorage',\n            openDatabase: 'openDatabase',\n            socket: 'WebSocket',\n            worker: 'Worker',\n            file: 'File',\n            blob: 'Blob',\n            orientation: 'onorientationchange'\n        };\n        const compability = {\n            touch: getTouch(),\n            upload: getUpload(),\n            getUserMedia: getUserMedia(),\n            fileSystem: getFileSystem(),\n            localStorage: false,\n            sessionStorage: false,\n            globalStorage: false,\n            openDatabase: false,\n            socket: false,\n            worker: false,\n            file: false,\n            blob: false,\n            orientation: false,\n            dnd: getDnD(),\n            css: {\n                transition: detectCSSFeature('transition'),\n                animation: detectCSSFeature('animation')\n            },\n            canvas: !!getCanvasSupported(),\n            canvasContext: getCanvasContexts(),\n            webgl: getWebGL(),\n            audioContext: getAudioContext(),\n            svg: getSVG(),\n            video: !!getVideoSupported(),\n            videoTypes: getVideoTypesSupported(),\n            audio: !!getAudioSupported(),\n            audioTypes: getAudioTypesSupported(),\n            richtext: getRichText()\n        };\n        Object.keys(checkWindow).forEach(key => {\n            try {\n                compability[key] = checkWindow[key] in window && window[checkWindow[key]] !== null;\n            } catch (e) {\n                console.warn(e);\n            }\n        });\n        return () => {\n            return compability;\n        };\n    }();\n    function getCompability() {\n        return compability();\n    }\n    function isIE() {\n        const dm = parseInt(document.documentMode, 10);\n        return dm <= 11 || !!navigator.userAgent.match(/(MSIE|Edge)/);\n    }\n    return {\n        getCompability: getCompability,\n        isIE: isIE\n    };\n});\ndefine('skylark-osjsv2-client/utils/dom',[],function () {\n    'use strict';\n    function $(id) {\n        return document.getElementById(id);\n    }\n    function $safeName(str) {\n        return (str || '').replace(/[^a-zA-Z0-9]/g, '_');\n    }\n    function $remove(node) {\n        if (node) {\n            if (typeof node.remove === 'function') {\n                node.remove();\n            } else if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        }\n    }\n    function $empty(myNode) {\n        if (myNode) {\n            while (myNode.firstChild) {\n                myNode.removeChild(myNode.firstChild);\n            }\n        }\n    }\n    function $getStyle(oElm, strCssRule) {\n        let strValue = '';\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            strValue = document.defaultView.getComputedStyle(oElm, '').getPropertyValue(strCssRule);\n        } else if (oElm.currentStyle) {\n            strCssRule = strCssRule.replace(/\\-(\\w)/g, (strMatch, p1) => {\n                return p1.toUpperCase();\n            });\n            strValue = oElm.currentStyle[strCssRule];\n        }\n        return strValue;\n    }\n    function $position(el, parentEl) {\n        if (el) {\n            if (parentEl) {\n                const result = {\n                    left: 0,\n                    top: 0,\n                    width: el.offsetWidth,\n                    height: el.offsetHeight\n                };\n                while (true) {\n                    result.left += el.offsetLeft;\n                    result.top += el.offsetTop;\n                    if (el.offsetParent === parentEl || el.offsetParent === null) {\n                        break;\n                    }\n                    el = el.offsetParent;\n                }\n                return result;\n            }\n            return el.getBoundingClientRect();\n        }\n        return null;\n    }\n    function $parent(el, cb) {\n        let result = null;\n        if (el && cb) {\n            let current = el;\n            while (current.parentNode) {\n                if (cb(current)) {\n                    result = current;\n                    break;\n                }\n                current = current.parentNode;\n            }\n        }\n        return result;\n    }\n    function $index(el, parentEl) {\n        if (el) {\n            parentEl = parentEl || el.parentNode;\n            if (parentEl) {\n                const nodeList = Array.prototype.slice.call(parentEl.children);\n                const nodeIndex = nodeList.indexOf(el, parentEl);\n                return nodeIndex;\n            }\n        }\n        return -1;\n    }\n    function $selectRange(field, start, end) {\n        if (!field) {\n            throw new Error('Cannot select range: missing element');\n        }\n        if (typeof start === 'undefined' || typeof end === 'undefined') {\n            throw new Error('Cannot select range: mising start/end');\n        }\n        if (field.createTextRange) {\n            const selRange = field.createTextRange();\n            selRange.collapse(true);\n            selRange.moveStart('character', start);\n            selRange.moveEnd('character', end);\n            selRange.select();\n            field.focus();\n        } else if (field.setSelectionRange) {\n            field.focus();\n            field.setSelectionRange(start, end);\n        } else if (typeof field.selectionStart !== 'undefined') {\n            field.selectionStart = start;\n            field.selectionEnd = end;\n            field.focus();\n        }\n    }\n    function $addClass(el, name) {\n        if (el) {\n            name.split(' ').forEach(n => {\n                el.classList.add(n);\n            });\n        }\n    }\n    function $removeClass(el, name) {\n        if (el) {\n            name.split(' ').forEach(n => {\n                el.classList.remove(n);\n            });\n        }\n    }\n    function $hasClass(el, name) {\n        if (el && name) {\n            return name.split(' ').every(n => {\n                return el.classList.contains(n);\n            });\n        }\n        return false;\n    }\n    function $escape(str) {\n        const div = document.createElement('div');\n        div.appendChild(document.createTextNode(str));\n        return div.innerHTML;\n    }\n    function $create(tagName, properties) {\n        const element = document.createElement(tagName);\n        function _foreach(dict, l) {\n            dict = dict || {};\n            Object.keys(dict).forEach(name => {\n                l(name.replace(/_/g, '-'), String(dict[name]));\n            });\n        }\n        _foreach(properties.style, (key, val) => {\n            element.style[key] = val;\n        });\n        _foreach(properties.aria, (key, val) => {\n            if (['role'].indexOf(key) !== -1) {\n                key = 'aria-' + key;\n            }\n            element.setAttribute(key, val);\n        });\n        _foreach(properties.data, (key, val) => {\n            element.setAttribute('data-' + key, val);\n        });\n        _foreach(properties, (key, val) => {\n            if ([\n                    'style',\n                    'aria',\n                    'data'\n                ].indexOf(key) === -1) {\n                element[key] = val;\n            }\n        });\n        return element;\n    }\n    function $createCSS(src, onload, onerror) {\n        const link = document.createElement('link');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.onload = onload || function () {\n        };\n        link.onerror = onerror || function () {\n        };\n        link.setAttribute('href', src);\n        document.getElementsByTagName('head')[0].appendChild(link);\n        return link;\n    }\n    function $createJS(src, onreadystatechange, onload, onerror, attrs) {\n        const res = document.createElement('script');\n        res.onreadystatechange = onreadystatechange || function () {\n        };\n        res.onerror = onerror || function () {\n        };\n        res.onload = onload || function () {\n        };\n        attrs = Object.assign({}, {\n            type: 'text/javascript',\n            charset: 'utf-8',\n            src: src\n        }, attrs || {});\n        Object.keys(attrs).forEach(k => {\n            res[k] = String(attrs[k]);\n        });\n        document.getElementsByTagName('head')[0].appendChild(res);\n        return res;\n    }\n    function $isFormElement(input, types) {\n        types = types || [\n            'TEXTAREA',\n            'INPUT',\n            'SELECT'\n        ];\n        if (input instanceof window.Event) {\n            input = input.srcElement || input.target;\n        }\n        if (input instanceof window.Element) {\n            if (types.indexOf(input.tagName.toUpperCase()) >= 0) {\n                if (!(input.readOnly || input.disabled)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    function $css(el, ink, inv) {\n        function rep(k) {\n            return k.replace(/\\-(\\w)/g, (strMatch, p1) => {\n                return p1.toUpperCase();\n            });\n        }\n        let obj = {};\n        if (arguments.length === 2) {\n            if (typeof ink === 'string') {\n                return el.parentNode ? $getStyle(el, ink) : el.style[rep(ink)];\n            }\n            obj = ink;\n        } else if (arguments.length === 3) {\n            obj[ink] = inv;\n        }\n        Object.keys(obj).forEach(k => {\n            el.style[rep(k)] = String(obj[k]);\n        });\n        return null;\n    }\n    function $path(el) {\n        function _path(e) {\n            if (e === document.body) {\n                return e.tagName;\n            } else if (e === window) {\n                return 'WINDOW';\n            } else if (e === document) {\n                return 'DOCUMENT';\n            }\n            if (e.id !== '') {\n                return 'id(\"' + e.id + '\")';\n            }\n            let ix = 0;\n            const siblings = e.parentNode ? e.parentNode.childNodes : [];\n            for (let i = 0; i < siblings.length; i++) {\n                const sibling = siblings[i];\n                if (sibling === e) {\n                    return _path(e.parentNode) + '/' + e.tagName + '[' + (ix + 1) + ']';\n                }\n                if (sibling.nodeType === 1 && sibling.tagName === e.tagName) {\n                    ix++;\n                }\n            }\n            return null;\n        }\n        return _path(el);\n    }\n    function $fromPath(path, doc) {\n        doc = doc || document;\n        const evaluator = new XPathEvaluator();\n        const result = evaluator.evaluate(path, doc.documentElement, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);\n        return result.singleNodeValue;\n    }\n    function $clean(html) {\n        if (typeof html !== 'string') {\n            html = html.innerHTML;\n        }\n        return (html || '').replace(/\\n/g, '').replace(/[\\t ]+</g, '<').replace(/\\>[\\t ]+</g, '><').replace(/\\>[\\t ]+$/g, '>');\n    }\n    return {\n        $: $,\n        $safeName: $safeName,\n        $remove: $remove,\n        $empty: $empty,\n        $getStyle: $getStyle,\n        $position: $position,\n        $parent: $parent,\n        $index: $index,\n        $selectRange: $selectRange,\n        $addClass: $addClass,\n        $removeClass: $removeClass,\n        $hasClass: $hasClass,\n        $escape: $escape,\n        $create: $create,\n        $createCSS: $createCSS,\n        $createJS: $createJS,\n        $isFormElement: $isFormElement,\n        $css: $css,\n        $path: $path,\n        $fromPath: $fromPath,\n        $clean: $clean\n    };\n});\ndefine('skylark-osjsv2-client/core/theme',[\n    './settings-manager',\n    './config',\n    '../vfs/file',\n    './package-manager',\n    '../utils/fs',\n    '../utils/compability',\n    '../utils/dom'\n], function (SettingsManager, Config, FileMetadata, PackageManager, FS, Compability, DOM) {\n    'use strict';\n    class Theme {\n        constructor() {\n            const compability = Compability.getCompability();\n            this.settings = null;\n            this.$themeScript = null;\n            this.audioAvailable = !!compability.audio;\n            this.oggAvailable = !!compability.audioTypes.ogg;\n        }\n        init(VFS) { // modified by lwf\n            this.VFS = VFS;\n\n            this.settings = SettingsManager.instance('__theme__', {\n                enableSounds: true,\n                styleTheme: 'default',\n                soundTheme: 'default',\n                iconTheme: 'default',\n                sounds: {}\n            });\n        }\n        update(settings, settheme) {\n            this.settings.set(null, settings);\n            if (settheme) {\n                this.setTheme(settings);\n            }\n        }\n        destroy() {\n            this.$themeScript = DOM.$remove(this.$themeScript);\n        }\n        themeAction(action, args) {\n            const theme = this.getStyleTheme();\n            args = args || [];\n            try {\n                if (OSjs.Themes[theme]) {\n                    return OSjs.Themes[theme][action].apply(null, args);\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n            return null;\n        }\n        _setBackground(settings) {\n            const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n            const typeMap = {\n                'image': 'normal',\n                'image-center': 'center',\n                'image-fill': 'fill',\n                'image-strech': 'strech'\n            };\n            let className = 'color';\n            let back = 'none';\n            if (settings.wallpaper && settings.background.match(/^image/)) {\n                back = settings.wallpaper;\n                className = typeMap[settings.background] || 'default';\n            }\n            if (back !== 'none') {\n                try {\n                    this.VFS.url(back).then(result => {\n                        back = \"url('\" + result + \"')\";\n                        document.body.style.backgroundImage = back;\n                        return true;\n                    });\n                } catch (e) {\n                    console.warn(e);\n                }\n            } else {\n                document.body.style.backgroundImage = back;\n            }\n            if (settings.backgroundColor) {\n                document.body.style.backgroundColor = settings.backgroundColor;\n            }\n            if (settings.fontFamily) {\n                document.body.style.fontFamily = settings.fontFamily;\n            }\n            if (isFirefox) {\n                document.body.style.backgroundAttachment = 'fixed';\n            } else {\n                document.body.style.backgroundAttachment = 'scroll';\n            }\n            document.body.setAttribute('data-background-style', className);\n        }\n        getThemeCSS(name) {\n            let root = Config.getConfig('Connection.RootURI', '/');\n            if (name === null) {\n                return root + 'blank.css';\n            }\n            root = Config.getConfig('Connection.ThemeURI');\n            return root + '/' + name + '.css';\n        }\n        setTheme(settings) {\n            this.themeAction('destroy');\n            this.setThemeScript(this.getThemeResource('theme.js'));\n            document.body.setAttribute('data-style-theme', settings.styleTheme);\n            document.body.setAttribute('data-icon-theme', settings.iconTheme);\n            document.body.setAttribute('data-sound-theme', settings.soundTheme);\n            document.body.setAttribute('data-animations', String(settings.animations));\n            this._setBackground(settings);\n            this.settings.set(null, settings);\n        }\n        setThemeScript(src) {\n            if (this.$themeScript) {\n                this.$themeScript = DOM.$remove(this.$themeScript);\n            }\n            if (src) {\n                this.$themeScript = DOM.$createJS(src, null, () => {\n                    this.themeAction('init');\n                });\n            }\n        }\n        getStyleTheme(returnMetadata, convert) {\n            const name = this.settings.get('styleTheme') || null;\n            if (returnMetadata) {\n                let found = null;\n                if (name) {\n                    this.getStyleThemes().forEach(function (t) {\n                        if (t && t.name === name) {\n                            found = t;\n                        }\n                    });\n                }\n                if (found && convert === true) {\n                    const tmpEl = document.createElement('div');\n                    tmpEl.style.visibility = 'hidden';\n                    tmpEl.style.position = 'fixed';\n                    tmpEl.style.top = '-10000px';\n                    tmpEl.style.left = '-10000px';\n                    tmpEl.style.width = '1em';\n                    tmpEl.style.height = '1em';\n                    document.body.appendChild(tmpEl);\n                    const wd = tmpEl.offsetWidth;\n                    tmpEl.parentNode.removeChild(tmpEl);\n                    if (typeof found.style.window.margin === 'string' && found.style.window.margin.match(/em$/)) {\n                        const marginf = parseFloat(found.style.window.margin);\n                        found.style.window.margin = marginf * wd;\n                    }\n                    if (typeof found.style.window.border === 'string' && found.style.window.border.match(/em$/)) {\n                        const borderf = parseFloat(found.style.window.border);\n                        found.style.window.border = borderf * wd;\n                    }\n                }\n                return found;\n            }\n            return name;\n        }\n        getThemeResource(name, type) {\n            name = name || null;\n            type = type || null;\n            const root = Config.getConfig('Connection.ThemeURI');\n            function getName(str, theme) {\n                if (!str.match(/^\\//)) {\n                    if (type === 'base' || type === null) {\n                        str = `${ root }/${ theme }/${ str }`;\n                    } else {\n                        str = `${ root }/${ theme }/${ type }/${ str }`;\n                    }\n                }\n                return str;\n            }\n            if (name) {\n                const theme = this.getStyleTheme();\n                name = getName(name, theme);\n            }\n            return name;\n        }\n        getSound(name) {\n            name = name || null;\n            if (name && !name.match(/^(https?:)?\\//)) {\n                const theme = this.getSoundTheme();\n                const root = Config.getConfig('Connection.SoundURI');\n                const ext = this.oggAvailable ? 'oga' : 'mp3';\n                name = `${ root }/${ theme }/${ name }.${ ext }`;\n            }\n            return name;\n        }\n        playSound(name, volume) {\n            const filename = this.getSoundFilename(name);\n            if (!filename) {\n                console.debug('playSound()', 'Cannot play sound, no compability or not enabled!');\n                return null;\n            }\n            if (typeof volume === 'undefined') {\n                volume = 1;\n            }\n            const f = this.getSound(filename);\n            console.debug('playSound()', name, filename, f, volume);\n            const audio = new Audio(f);\n            audio.volume = volume;\n            try {\n                audio.play();\n            } catch (e) {\n                console.error(e);\n            }\n            return audio;\n        }\n        getIcon(name, size) {\n            name = name || '';\n            size = size || '16x16';\n            if (!name.match(/^(https:?)?\\//)) {\n                const root = Config.getConfig('Connection.IconURI');\n                const theme = this.getIconTheme();\n                name = `${ root }/${ theme }/${ size }/${ name }`;\n            }\n            return name;\n        }\n        getFileIcon(file, size, icon) {\n            icon = icon || 'mimetypes/text-x-preview.png';\n            if (typeof file === 'object' && !(file instanceof FileMetadata)) {\n                file = new FileMetadata(file);\n            }\n            if (!file.filename) {\n                throw new Error('Filename is required for getFileIcon()');\n            }\n            const map = [\n                {\n                    match: 'application/pdf',\n                    icon: 'mimetypes/x-office-document.png'\n                },\n                {\n                    match: 'application/zip',\n                    icon: 'mimetypes/package-x-generic.png'\n                },\n                {\n                    match: 'application/x-python',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'application/x-lua',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'application/javascript',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'text/html',\n                    icon: 'mimetypes/text-html.png'\n                },\n                {\n                    match: 'text/xml',\n                    icon: 'mimetypes/text-html.png'\n                },\n                {\n                    match: 'text/css',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'osjs/document',\n                    icon: 'mimetypes/x-office-document.png'\n                },\n                {\n                    match: 'osjs/draw',\n                    icon: 'mimetypes/image-x-generic.png'\n                },\n                {\n                    match: /^text\\//,\n                    icon: 'mimetypes/text-x-generic.png'\n                },\n                {\n                    match: /^audio\\//,\n                    icon: 'mimetypes/audio-x-generic.png'\n                },\n                {\n                    match: /^video\\//,\n                    icon: 'mimetypes/video-x-generic.png'\n                },\n                {\n                    match: /^image\\//,\n                    icon: 'mimetypes/image-x-generic.png'\n                },\n                {\n                    match: /^application\\//,\n                    icon: 'mimetypes/application-x-executable.png'\n                }\n            ];\n            if (file.type === 'dir') {\n                icon = 'places/folder.png';\n            } else if (file.type === 'trash') {\n                icon = 'places/user-trash.png';\n            } else if (file.type === 'application') {\n                const appname = FS.filename(file.path);\n                const meta = PackageManager.getPackage(appname);\n                if (meta) {\n                    if (!meta.icon.match(/^((https?:)|\\.)?\\//)) {\n                        return this.getIcon(meta.icon, size);\n                    }\n                    return PackageManager.getPackageResource(appname, meta.icon);\n                }\n            } else {\n                const mime = file.mime || 'application/octet-stream';\n                map.every(iter => {\n                    let match = false;\n                    if (typeof iter.match === 'string') {\n                        match = mime === iter.match;\n                    } else {\n                        match = mime.match(iter.match);\n                    }\n                    if (match) {\n                        icon = iter.icon;\n                        return false;\n                    }\n                    return true;\n                });\n            }\n            return this.getIcon(icon, size);\n        }\n        getIconTheme() {\n            return this.settings.get('iconTheme', 'default');\n        }\n        getSoundTheme() {\n            return this.settings.get('soundTheme', 'default');\n        }\n        getSoundFilename(k) {\n            if (!this.audioAvailable || !this.settings.get('enableSounds') || !k) {\n                return false;\n            }\n            const sounds = this.settings.get('sounds', {});\n            return sounds[k] || null;\n        }\n        getStyleThemes() {\n            return Config.getConfig('Styles', []);\n        }\n        getSoundThemes() {\n            return Config.getConfig('Sounds', []);\n        }\n        getIconThemes() {\n            return Config.getConfig('Icons', []);\n        }\n    }\n    return new Theme();\n});\ndefine('skylark-osjsv2-client/helpers/hooks',['./event-handler'], function (EventHandler) {\n    'use strict';\n    let handler = new EventHandler('core-hooks', [\n        'initialize',\n        'initialized',\n        'sessionLoaded',\n        'shudown',\n        'processStart',\n        'processStarted',\n        'menuBlur'\n    ]);\n    function triggerHook(name, args, thisarg) {\n        if (handler) {\n            handler.emit(name, args, thisarg, true);\n        }\n    }\n    function addHook(name, fn) {\n        if (handler) {\n            return handler.on(name, fn);\n        }\n        return -1;\n    }\n    function removeHook(name, index) {\n        if (handler) {\n            return handler.off(name, index);\n        }\n        return false;\n    }\n    return {\n        triggerHook: triggerHook,\n        addHook: addHook,\n        removeHook: removeHook\n    };\n});\ndefine('skylark-osjsv2-client/helpers/promise-limit',[],function() {\r\n  function limiter (count) {\r\n    var outstanding = 0\r\n    var jobs = []\r\n\r\n    function remove () {\r\n      outstanding--\r\n\r\n      if (outstanding < count) {\r\n        dequeue()\r\n      }\r\n    }\r\n\r\n    function dequeue () {\r\n      var job = jobs.shift()\r\n      semaphore.queue = jobs.length\r\n\r\n      if (job) {\r\n        run(job.fn).then(job.resolve).catch(job.reject)\r\n      }\r\n    }\r\n\r\n    function queue (fn) {\r\n      return new Promise(function (resolve, reject) {\r\n        jobs.push({fn: fn, resolve: resolve, reject: reject})\r\n        semaphore.queue = jobs.length\r\n      })\r\n    }\r\n\r\n    function run (fn) {\r\n      outstanding++\r\n      try {\r\n        return Promise.resolve(fn()).then(function (result) {\r\n          remove()\r\n          return result\r\n        }, function (error) {\r\n          remove()\r\n          throw error\r\n        })\r\n      } catch (err) {\r\n        remove()\r\n        return Promise.reject(err)\r\n      }\r\n    }\r\n\r\n    var semaphore = function (fn) {\r\n      if (outstanding >= count) {\r\n        return queue(fn)\r\n      } else {\r\n        return run(fn)\r\n      }\r\n    }\r\n\r\n    return semaphore\r\n  }\r\n\r\n  function map (items, mapper) {\r\n    var failed = false\r\n\r\n    var limit = this\r\n\r\n    return Promise.all(items.map(function () {\r\n      var args = arguments\r\n      return limit(function () {\r\n        if (!failed) {\r\n          return mapper.apply(undefined, args).catch(function (e) {\r\n            failed = true\r\n            throw e\r\n          })\r\n        }\r\n      })\r\n    }))\r\n  }\r\n\r\n  function addExtras (fn) {\r\n    fn.queue = 0\r\n    fn.map = map\r\n    return fn\r\n  }\r\n\r\n  return function (count) {\r\n    if (count) {\r\n      return addExtras(limiter(count))\r\n    } else {\r\n      return addExtras(function (fn) {\r\n        return fn()\r\n      })\r\n    }\r\n  }\r\n});\r\n\ndefine('skylark-osjsv2-client/utils/preloader',[\n    '../helpers/promise-limit',\n    '../core/config',\n    'skylark-axios'\n], function (promiseLimit, Config, axios) {\n    'use strict';\n    const getFileType = src => {\n        if (src.match(/\\.js$/i)) {\n            return 'javascript';\n        } else if (src.match(/\\.css$/i)) {\n            return 'stylesheet';\n        }\n        return 'unknown';\n    };\n    const getSource = src => {\n        if (src && !src.match(/^(\\/|file|https?)/)) {\n            return Config.getBrowserPath(src);\n        }\n        return src;\n    };\n    const checkCss = path => {\n        let result = false;\n        (document.styleSheet || []).forEach((iter, i) => {\n            if (iter.href.indexOf(path) !== -1) {\n                result = true;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n    const handlers = {\n        javascript: src => new Promise((resolve, reject) => {\n            const el = document.createElement('script');\n            el.onreadystatechange = function () {\n                if (this.readyState === 'complete' || this.readyState === 'loaded') {\n                    resolve();\n                }\n            };\n            el.onerror = err => {\n                let error = new Error();\n                error.name = '<script> error';\n                error.message = 'Failed to load script';\n                reject(error);\n            };\n            el.onload = () => resolve();\n            el.src = src;\n            document.getElementsByTagName('head')[0].appendChild(el);\n        }),\n        stylesheet: src => new Promise((resolve, reject) => {\n            let timeout;\n            const onerror = str => {\n                clearTimeout(timeout);\n                let error = new Error();\n                error.name = '<link> error';\n                error.message = str;\n                reject(error);\n            };\n            const link = document.createElement('link');\n            link.setAttribute('rel', 'stylesheet');\n            link.setAttribute('type', 'text/css');\n            link.onload = () => resolve();\n            link.onerror = err => onerror('Failed to load link');\n            link.setAttribute('href', src);\n            document.getElementsByTagName('head')[0].appendChild(link);\n            timeout = setTimeout(() => {\n                onerror('Loading stylesheet timed out');\n            }, 30000);\n            setTimeout(() => {\n                if (checkCss(src)) {\n                    clearTimeout(timeout);\n                    resolve();\n                }\n            }, 10);\n        }),\n        html: src => new Promise((resolve, reject) => {\n            axios.get(src).then(result => {\n                return resolve(result.data);\n            }).catch(err => reject(err.message));\n        })\n    };\n    class Preloader {\n        constructor() {\n            this.cache = {};\n        }\n        clear() {\n            this.cache = {};\n        }\n        preload(preloads, args) {\n            args = args || {};\n            preloads = preloads.map(p => {\n                if (typeof p === 'string') {\n                    return {\n                        src: getSource(p),\n                        force: false,\n                        type: getFileType(p)\n                    };\n                } else {\n                    p.src = getSource(p.src);\n                    if (!p.type) {\n                        p.type = getFileType(p.src);\n                    }\n                }\n                return p;\n            }).filter(p => !!p.src);\n            console.group('Preloader.load()', preloads);\n            const limit = promiseLimit(args.max || 1);\n            const total = preloads.length;\n            const failed = [];\n            const loaded = [];\n            const data = [];\n            const done = (item, preloadData, yes) => {\n                if (typeof preloadData !== 'undefined') {\n                    data.push({\n                        item,\n                        data: preloadData\n                    });\n                }\n                if (args.cache !== false && typeof this.cache[item.src] === 'undefined') {\n                    this.cache[item.src] = preloadData;\n                }\n                loaded.push(item.src);\n                return yes();\n            };\n            const job = (item, index) => {\n                if (typeof args.progress === 'function') {\n                    args.progress(index, total);\n                }\n                if (handlers[item.type]) {\n                    return new Promise((yes, no) => {\n                        if (!args.force && this.cache[item.src]) {\n                            done(item, this.cache[item.src], yes);\n                            return;\n                        }\n                        handlers[item.type](item.src).then(preloadData => {\n                            return done(item, preloadData, yes);\n                        }).catch(e => {\n                            console.warn('Failed loading', item.src, e);\n                            failed.push(item.src);\n                            return yes();\n                        });\n                    });\n                }\n                return Promise.resolve();\n            };\n            return new Promise((resolve, reject) => {\n                Promise.all(preloads.map((iter, index) => {\n                    return limit(() => job(iter, index));\n                })).then(() => {\n                    console.groupEnd();\n                    return resolve({\n                        success: false,\n                        data: data,\n                        failed: failed,\n                        loaded: loaded\n                    });\n                }).catch(reject);\n            });\n        }\n    }\n    return new Preloader();\n});\ndefine('skylark-osjsv2-client/core/process',[\n    './connection',\n    '../helpers/event-handler',\n    './theme',\n    '../utils/fs',\n    './config',\n    '../utils/compability',\n    './locales',\n    '../helpers/hooks',\n    '../helpers/loader',\n    '../vfs/file',\n    '../utils/preloader',\n    './settings-manager',\n    './package-manager'\n], function (\n    Connection, \n    EventHandler, \n    Theme, \n    FS, \n    Config, \n    Compability, \n    locales, \n    hooks, \n    Loader, \n    FileMetadata, \n    Preloader, \n    SettingsManager, \n    PackageManager\n) {\n    'use strict';\n    let alreadyLaunching = [];\n    let runningProcesses = [];\n    function _kill(pid, force) {\n        if (pid >= 0 && runningProcesses[pid]) {\n            try {\n                const res = runningProcesses[pid].destroy(force);\n                console.warn('Killing application', pid, res);\n                if (res !== false) {\n                    runningProcesses[pid] = null;\n                    return true;\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n        return false;\n    }\n    function getLaunchObject(s) {\n        if (typeof s === 'string') {\n            const spl = s.split('@');\n            const name = spl[0];\n            let args = {};\n            if (typeof spl[1] !== 'undefined') {\n                try {\n                    args = JSON.parse(spl[1]);\n                } catch (e) {\n                }\n            }\n            s = {\n                name: name,\n                args: args\n            };\n        }\n        return s;\n    }\n    return class Process {\n        constructor(name, args, metadata) {\n            console.group('Process::constructor()', runningProcesses.length, arguments);\n            this.__pid = runningProcesses.push(this) - 1;\n            this.__pname = name;\n            this.__args = args || {};\n            this.__metadata = metadata || {};\n            this.__started = new Date();\n            this.__destroyed = false;\n            this.__evHandler = new EventHandler(name, [\n                'message',\n                'attention',\n                'hashchange',\n                'api',\n                'destroy',\n                'destroyWindow',\n                'vfs',\n                'vfs:mount',\n                'vfs:unmount',\n                'vfs:mkdir',\n                'vfs:write',\n                'vfs:move',\n                'vfs:copy',\n                'vfs:delete',\n                'vfs:upload',\n                'vfs:update'\n            ]);\n            this.__label = this.__metadata.name;\n            this.__path = this.__metadata.path;\n            this.__scope = this.__metadata.scope || 'system';\n            this.__iter = this.__metadata.className;\n            console.groupEnd();\n        }\n        destroy() {\n            if (!this.__destroyed) {\n                this.__destroyed = true;\n                console.group('Process::destroy()', this.__pid, this.__pname);\n                this._emit('destroy', []);\n                if (this.__evHandler) {\n                    this.__evHandler = this.__evHandler.destroy();\n                }\n                if (this.__pid >= 0) {\n                    runningProcesses[this.__pid] = null;\n                }\n                console.groupEnd();\n                return true;\n            }\n            return false;\n        }\n        _onMessage(msg, obj, opts) {\n            opts = opts || {};\n            let sourceId = opts.source;\n            if (sourceId && typeof sourceId === 'object') {\n                if (sourceId instanceof Process) {\n                    sourceId = sourceId.__pid;\n                } else if (sourceId._app) {\n                    sourceId = sourceId._app ? sourceId._app.__pid : -1;\n                }\n            }\n            if (this.__evHandler && sourceId !== this.__pid) {\n                console.debug('Process::_onMessage()', msg, obj, opts, this.__pid, this.__pname);\n                this.__evHandler.emit('message', [\n                    msg,\n                    obj,\n                    opts\n                ]);\n                if (msg.substr(0, 3) === 'vfs') {\n                    this.__evHandler.emit('vfs', [\n                        msg,\n                        obj,\n                        opts\n                    ]);\n                }\n                this.__evHandler.emit(msg, [\n                    obj,\n                    opts,\n                    msg\n                ]);\n            }\n        }\n        _emit(k, args) {\n            return this.__evHandler ? this.__evHandler.emit(k, args) : null;\n        }\n        _on(k, func) {\n            return this.__evHandler ? this.__evHandler.on(k, func, this) : null;\n        }\n        _off(k, idx) {\n            if (this.__evHandler) {\n                this.__evHandler.off(k, idx);\n            }\n        }\n        _api(method, args, options) {\n            if (typeof options === 'boolean') {\n                options = { indicator: options };\n            } else if (typeof options !== 'object') {\n                options = {};\n            }\n            this._emit('api', [method]);\n            return new Promise((resolve, reject) => {\n                Connection.request('application', {\n                    application: this.__iter,\n                    path: this.__path,\n                    method: method,\n                    args: args\n                }, options).then(res => {\n                    if (!this.__destroyed) {\n                        resolve(res);\n                        return true;\n                    }\n                    console.warn('Process::_api()', 'INGORED RESPONSE: Process was closed');\n                    return false;\n                }).catch(err => {\n                    if (!this.__destroyed) {\n                        reject(err instanceof Error ? err : new Error(err));\n                    }\n                });\n            });\n        }\n        _getArgument(k) {\n            return typeof this.__args[k] === 'undefined' ? null : this.__args[k];\n        }\n        _getArguments() {\n            return this.__args;\n        }\n        _getResource(src, vfspath) {\n            return PackageManager.getPackageResource(this, src, vfspath);\n        }\n        _setArgument(k, v) {\n            this.__args[k] = v;\n        }\n        static kill(pid) {\n            return _kill(pid);\n        }\n        static killAll(match) {\n            let matcher = () => true;\n            if (match) {\n                matcher = match instanceof RegExp ? p => p.__pname.match(match) : p => p.__pname === match;\n            }\n            this.getProcesses().filter(p => matcher(p)).forEach(p => _kill(p.__pid, true));\n            runningProcesses = [];\n        }\n        static message(msg, obj, opts) {\n            opts = opts || {};\n            console.debug('Process::message()', msg, obj, opts);\n            let filter = opts.filter || (() => true);\n            if (typeof filter === 'string') {\n                const s = filter;\n                filter = p => {\n                    return p.__pname === s;\n                };\n            }\n            this.getProcesses().filter(filter).forEach(p => p._onMessage(msg, obj, opts));\n        }\n        static getProcess(name, first) {\n            if (typeof name === 'number') {\n                return runningProcesses[name];\n            }\n            const found = this.getProcesses().filter(p => {\n                return p.__pname === name;\n            });\n            return first ? found[0] : found;\n        }\n        static getProcesses() {\n            return runningProcesses.filter(p => !!p);\n        }\n        static reload(n) {\n            if (!(n instanceof Array)) {\n                n = [n];\n            }\n            n.map(name => this.getProcess(name, true)).filter(p => !!p).forEach(p => {\n                let promise = null;\n                let data = p._getSessionData();\n                let args = {};\n                let name;\n                try {\n                    name = p.__pname;\n                    promise = p.destroy();\n                } catch (e) {\n                    console.warn('Process::reload()', e.stack, e);\n                }\n                if (data !== null) {\n                    args = data.args;\n                    args.__resume__ = true;\n                    args.__windows__ = data.windows || [];\n                }\n                args.__preload__ = { force: true };\n                if (!(promise instanceof Promise)) {\n                    promise = Promise.resolve(true);\n                }\n                if (name) {\n                    promise.then(() => {\n                        return setTimeout(() => {\n                            this.create(name, args);\n                        }, 500);\n                    });\n                }\n            });\n        }\n        static create(name, args, onconstruct) {\n            args = args || {};\n            onconstruct = onconstruct || function () {\n            };\n            const hash = name + JSON.stringify(args);\n            if (alreadyLaunching.indexOf(hash) !== -1) {\n                return Promise.resolve(null);\n            }\n            alreadyLaunching.push(hash);\n            const init = () => {\n                if (!name) {\n                    throw new Error('Cannot Process::create() witout a application name');\n                }\n                const compability = Compability.getCompability();\n                const metadata = PackageManager.getPackage(name);\n                const alreadyRunning = Process.getProcess(name, true);\n                if (!metadata) {\n                    throw new Error(locales._('ERR_APP_LAUNCH_MANIFEST_FAILED_FMT', name));\n                }\n                const compabilityFailures = (metadata.compability || []).filter(c => {\n                    if (typeof compability[c] !== 'undefined') {\n                        return !compability[c];\n                    }\n                    return false;\n                });\n                if (compabilityFailures.length) {\n                    throw new Error(locales._('ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT', name, compabilityFailures.join(', ')));\n                }\n                if (metadata.singular === true && alreadyRunning) {\n                    console.warn('Process::create()', 'detected that this application is a singular and already running...');\n                    alreadyRunning._onMessage('attention', args);\n                    return Promise.resolve(alreadyRunning);\n                }\n                hooks.triggerHook('processStart', [\n                    name,\n                    args\n                ]);\n                Loader.create('Main.launch.' + name, {\n                    title: locales._('LBL_STARTING') + ' ' + metadata.name,\n                    icon: Theme.getIcon(metadata.icon, '16x16')\n                });\n                let pargs = { max: metadata.preloadParallel === true ? Config.getConfig('Connection.PreloadParallel') : metadata.preloadParallel };\n                if (args.__preload__) {\n                    pargs = Object.assign(pargs, args.__preload__);\n                    delete args.__preload__;\n                }\n                return new Promise((resolve, reject) => {\n                    const onerror = e => {\n                        console.warn(e);\n                        return reject(new Error(e));\n                    };\n                    Preloader.preload(metadata.preload, pargs).then(result => {\n                        if (result.failed.length) {\n                            return onerror(locales._('ERR_APP_PRELOAD_FAILED_FMT', name, result.failed.join(',')));\n                        }\n                        if (typeof OSjs.Applications[name] === 'undefined') {\n                            return onerror(new Error(locales._('ERR_APP_RESOURCES_MISSING_FMT', name)));\n                        }\n                        let instance;\n                        try {\n                            const ResolvedPackage = OSjs.Applications[name];\n                            instance = new ResolvedPackage(args, metadata);\n                            onconstruct(instance, metadata);\n                        } catch (e) {\n                            return onerror(e);\n                        }\n                        try {\n                            const settings = SettingsManager.get(instance.__pname) || {};\n                            instance.init(settings, metadata);\n                            hooks.triggerHook('processStarted', [{\n                                    application: instance,\n                                    name: name,\n                                    args: args,\n                                    settings: settings,\n                                    metadata: metadata\n                                }]);\n                        } catch (e) {\n                            return onerror(e);\n                        }\n                        return resolve(instance);\n                    }).catch(onerror);\n                });\n            };\n            const onerror = err => {\n                OSjs.error(locales._('ERR_APP_LAUNCH_FAILED'), locales._('ERR_APP_LAUNCH_FAILED_FMT', name), err, err, true);\n            };\n            return new Promise((resolve, reject) => {\n                console.group('Process::create()', name, args);\n                const remove = () => {\n                    console.groupEnd();\n                    const i = alreadyLaunching.indexOf(hash);\n                    if (i >= 0) {\n                        alreadyLaunching.splice(i, 1);\n                    }\n                    Loader.destroy('Main.launch.' + name);\n                };\n                const fail = e => {\n                    Loader.destroy('Main.launch.' + name);\n                    remove();\n                    onerror(e);\n                    return reject(e);\n                };\n                try {\n                    init().then(resolve).catch(fail).finally(remove);\n                } catch (e) {\n                    fail(e);\n                }\n            });\n        }\n        static createFromArray(list, onconstruct) {\n            list = list || [];\n            onconstruct = onconstruct || function () {\n            };\n            console.info('Process::createFromArray()', list);\n            return Promise.each(list, s => {\n                return new Promise((resolve, reject) => {\n                    s = getLaunchObject(s);\n                    if (s.name) {\n                        try {\n                            this.create(s.name, s.args, (instance, metadata) => {\n                                onconstruct(instance, metadata, s.name, s.args);\n                            }).then(resolve).catch(reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    } else {\n                        resolve();\n                    }\n                });\n            });\n        }\n        static createFromFile(file, args) {\n            file = new FileMetadata(file);\n            args = Object.assign({ file: file }, args || {});\n            if (args.args) {\n                Object.keys(args.args).forEach(i => {\n                    args[i] = args.args[i];\n                });\n            }\n            if (!file.path) {\n                throw new Error('Cannot open file without a path');\n            }\n            console.info('Process::createFromFile()', file, args);\n            if (file.mime === 'osjs/application') {\n                return this.create(FS.filename(file.path));\n            } else if (file.type === 'dir') {\n                const fm = SettingsManager.instance('DefaultApplication').get('dir', 'ApplicationFileManager');\n                return this.create(fm, { path: file.path });\n            }\n            return new Promise((resolve, reject) => {\n                const val = SettingsManager.get('DefaultApplication', file.mime);\n                let pack = PackageManager.getPackagesByMime(file.mime);\n                if (!args.forceList && val) {\n                    if (PackageManager.getPackage(val)) {\n                        console.debug('Process::createFromFile()', 'default application', val);\n                        pack = [val];\n                    }\n                }\n                if (pack.length === 0) {\n                    OSjs.error(locales._('ERR_FILE_OPEN'), locales._('ERR_FILE_OPEN_FMT', file.path), locales._('ERR_APP_MIME_NOT_FOUND_FMT', file.mime));\n                    reject(new Error(locales._('ERR_APP_MIME_NOT_FOUND_FMT', file.mime)));\n                } else if (pack.length === 1) {\n                    this.create(pack[0], args).then(resolve).catch(reject);\n                } else {\n                    const DialogWindow = OSjs.require('core/dialog');\n                    DialogWindow.default.create('ApplicationChooser', {\n                        file: file,\n                        list: pack\n                    }, (ev, btn, result) => {\n                        if (btn === 'ok') {\n                            this.create(result.name, args);\n                            SettingsManager.set('DefaultApplication', file.mime, result.useDefault ? result.name : null, true).then(resolve).catch(err => {\n                                reject(typeof err === 'string' ? new Error(err) : err);\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/mountpoint',[\n    '../core/process',\n    '../core/locales'\n], function ( Process, Locales) {\n    'use strict';\n    function createMatch(m, sname) {\n        if (typeof m === 'string') {\n            return new RegExp(m);\n        } else if (!m) {\n            return new RegExp('^' + (sname + '://').replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&'));\n        }\n        return m;\n    }\n    return class Mountpoint {\n        constructor(options) {\n            this.options = Object.assign({\n                name: null,\n                root: null,\n                match: null,\n                enabled: true,\n                readOnly: false,\n                transport: null,\n                visible: true,\n                searchable: false,\n                dynamic: true,\n                internal: false,\n                special: false,\n                options: {}\n            }, options);\n            if (!this.options.transport) {\n                throw new Error('No transport was defined for mountpoint ' + this.options.name);\n            }\n            if (!this.options.name) {\n                throw new Error(Locales._('ERR_VFSMODULE_INVALID_CONFIG_FMT'));\n            }\n            const sname = this.options.name.replace(/\\s/g, '-').toLowerCase();\n            const defaults = {\n                icon: 'devices/drive-harddisk.png',\n                name: sname,\n                title: this.options.name,\n                description: this.options.description || this.options.name,\n                root: sname + ':///',\n                match: createMatch(this.options.match, sname)\n            };\n            Object.keys(defaults).forEach(k => {\n                if (!this.options[k]) {\n                    this.options[k] = defaults[k];\n                }\n            });\n            this.name = sname;\n            this.isMounted = false;\n        }\n        mount(options) {\n            options = Object.assign({ notify: true }, options || {});\n            if (!this.isMounted && !this.option('special')) {\n                if (options.notify) {\n                    Process.message('vfs:mount', this.option('name'), { source: null });\n                }\n                this.isMounted = true;\n            }\n            return Promise.resolve();\n        }\n        unmount(options) {\n            options = Object.assign({ notify: true }, options || {});\n            if (this.isMounted && !this.option('special')) {\n                if (options.notify) {\n                    Process.message('vfs:unmount', this.option('name'), { source: null });\n                }\n                this.isMounted = false;\n            }\n            return Promise.resolve();\n        }\n        mounted() {\n            return this.isMounted;\n        }\n        enabled() {\n            return this.option('enabled');\n        }\n        option(name) {\n            return this.options[name];\n        }\n        isReadOnly() {\n            return this.option('readOnly');\n        }\n        setMounted(mounted) {\n            this.isMounted = mounted === true;\n        }\n        request(method, args, options) {\n            const transport = this.option('transport');\n            if (transport) {\n                return transport.request(method, args, options, this);\n            }\n            return Promise.reject(new Error(Locales._('ERR_VFSMODULE_NOT_FOUND_FMT', test)));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/mount-manager',[\n    '../vfs/mountpoint',\n    './locales',\n    './config'\n], function (Mountpoint, Locales, Config) {\n    'use strict';\n\n    class MountManager {\n        constructor() {\n            this.inited = false;\n            this.mountpoints = [];\n//            this.transports = loadTransports();\n        }\n        init(loadTransports) { // modified by lwf\n            if (this.inited) {\n                return Promise.resolve();\n            }\n            this.transports = loadTransports();\n            this.inited = true;\n            const config = Config.getConfig('VFS.Mountpoints', {});\n            const enabled = Object.keys(config).filter(name => {\n                return config[name].enabled !== false;\n            });\n            return Promise.each(enabled, name => {\n                return new Promise(resolve => {\n                    const iter = Object.assign({\n                        name: name,\n                        dynamic: false\n                    }, config[name]);\n                    this.add(iter, true, { notify: false }).then(resolve).catch(e => {\n                        console.warn('Failed to init VFS Mountpoint', name, iter, String(e));\n                        return resolve(false);\n                    });\n                });\n            });\n        }\n        addList(mountPoints) {\n            return Promise.each(mountPoints, iter => this.add(iter));\n        }\n        add(point, mount, options) {\n            try {\n                if (!(point instanceof Mountpoint)) {\n                    if (typeof point.transport === 'string') {\n                        const T = this.transports[point.transport];\n                        if (!T) {\n                            return Promise.reject(new Error('No such transport: ' + point.transport));\n                        }\n                        point.transport = new T();\n                    }\n                    point = new Mountpoint(point);\n                }\n                const found = this.mountpoints.filter(m => {\n                    if (m.option('name') === point.option('name')) {\n                        return true;\n                    }\n                    if (m.option('root') === point.option('root')) {\n                        return true;\n                    }\n                    return false;\n                });\n                if (found.length) {\n                    return Promise.reject(new Error(Locales._('ERR_VFSMODULE_ALREADY_MOUNTED_FMT', point.option('name'))));\n                }\n                this.mountpoints.push(point);\n            } catch (e) {\n                return Promise.reject(e);\n            }\n            console.info('Mounting', point);\n            return new Promise((resolve, reject) => {\n                if (mount) {\n                    point.mount().then(() => {\n                        return resolve(point);\n                    }).catch(reject);\n                } else {\n                    resolve(point);\n                }\n            });\n        }\n        remove(moduleName, options) {\n            const module = this.getModule(moduleName);\n            const index = this.getModule(moduleName, true);\n            if (module) {\n                return new Promise((resolve, reject) => {\n                    module.unmount(options).then(res => {\n                        if (index !== -1) {\n                            this.mountpoints.splice(index, 1);\n                        }\n                        return resolve(res);\n                    }).catch(reject);\n                });\n            }\n            return Promise.reject(new Error(Locales._('ERR_VFSMODULE_NOT_MOUNTED_FMT', moduleName)));\n        }\n        getModules(filter) {\n            filter = Object.assign({}, {\n                visible: true,\n                special: false\n            }, filter);\n            return this.mountpoints.filter(mount => {\n                if (mount.enabled() && mount.option('visible')) {\n                    const hits = Object.keys(filter).filter(filterName => {\n                        return mount.option(filterName) === filter[filterName];\n                    });\n                    return hits.length > 0;\n                }\n                return false;\n            });\n        }\n        getModuleFromPath(test) {\n            return this.mountpoints.find(mount => {\n                if (typeof test === 'string' && mount.enabled()) {\n                    if (mount.option('match') && test.match(mount.option('match'))) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        getModule(name, idx) {\n            const m = idx ? 'findIndex' : 'find';\n            return this.mountpoints[m](i => i.option('name') === name);\n        }\n        getTransport(name) {\n            return this.transports[name];\n        }\n    }\n    return new MountManager();\n});\ndefine('skylark-osjsv2-client/vfs/filedataurl',[],function () {\n    'use strict';\n    return class FileDataURL {\n        constructor(dataURL) {\n            this.dataURL = dataURL;\n        }\n        toBase64() {\n            return this.data.split(',')[1];\n        }\n        toString() {\n            return this.dataURL;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/fs',[\n    '../utils/fs',\n    './file',\n    './filedataurl',\n    '../core/process',\n    '../core/mount-manager',\n    '../core/package-manager',\n    '../core/settings-manager',\n    '../core/connection',\n    '../core/locales'\n], function (FS, FileMetadata, FileDataURL, Process, MountManager, PackageManager, SettingsManager, Connection, Locales) {\n    'use strict';\n    let watches = [];\n    function noop(err, res) {\n        if (err) {\n            console.error('VFS operation without callback caused an error', err);\n        } else {\n            console.warn('VFS operation without callback', res);\n        }\n    }\n    function hasAlias(item, retm) {\n        const module = MountManager.getModuleFromPath(item.path);\n        if (module) {\n            const match = module.option('match');\n            const options = module.option('options');\n            if (options && options.alias) {\n                return retm ? module : item.path.replace(match, options.alias);\n            }\n        }\n        return false;\n    }\n    function checkMetadataArgument(item, err, checkRo) {\n        if (typeof item === 'string') {\n            item = new FileMetadata(item);\n        } else if (typeof item === 'object' && item.path) {\n            item = new FileMetadata(item);\n        }\n        if (!(item instanceof FileMetadata)) {\n            throw new TypeError(err || Locales._('ERR_VFS_EXPECT_FILE'));\n        }\n        const alias = hasAlias(item);\n        if (alias) {\n            item.path = alias;\n        }\n        const mountpoint = MountManager.getModuleFromPath(item.path);\n        if (!mountpoint) {\n            throw new Error(Locales._('ERR_VFSMODULE_NOT_FOUND_FMT', item.path));\n        }\n        if (checkRo && mountpoint.isReadOnly()) {\n            throw new Error(Locales._('ERR_VFSMODULE_READONLY_FMT', mountpoint.name));\n        }\n        return item;\n    }\n    function hasSameTransport(src, dest) {\n        const msrc = MountManager.getModuleFromPath(src.path);\n        const mdst = MountManager.getModuleFromPath(dest.path);\n        if (!msrc || !mdst || msrc === mdst) {\n            return true;\n        }\n        if (msrc && mdst && (msrc.option('internal') && mdst.option('internal'))) {\n            return true;\n        }\n        return msrc.option('transport') === mdst.option('tranport');\n    }\n    function existsWrapper(item, options) {\n        options = options || {};\n        if (options.overwrite) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            exists(item).then(result => {\n                if (result) {\n                    return reject(new Error(Locales._('ERR_VFS_FILE_EXISTS')));\n                }\n                return resolve();\n            }).catch(error => {\n                if (error) {\n                    console.warn('existsWrapper() error', error);\n                }\n                reject(error);\n            });\n        });\n    }\n    function createBackLink(item, result, alias, oitem) {\n        const path = item.path.split('://')[1].replace(/\\/+/g, '/').replace(/^\\/?/, '/');\n        let isOnRoot = path === '/';\n        if (alias) {\n            isOnRoot = oitem.path === alias.root;\n        }\n        if (!isOnRoot) {\n            const foundBack = result.some(function (iter) {\n                return iter.filename === '..';\n            });\n            if (!foundBack) {\n                return new FileMetadata({\n                    filename: '..',\n                    path: FS.dirname(item.path),\n                    mime: null,\n                    size: 0,\n                    type: 'dir'\n                });\n            }\n        }\n        return false;\n    }\n    function checkWatches(msg, obj) {\n        watches.forEach(function (w) {\n            const checkPath = w.path;\n            function _check(f) {\n                if (w.type === 'dir') {\n                    return f.path.substr(0, checkPath.length) === checkPath;\n                }\n                return f.path === checkPath;\n            }\n            let wasTouched = false;\n            if (obj.destination) {\n                wasTouched = _check(obj.destination);\n                if (!wasTouched) {\n                    wasTouched = _check(obj.source);\n                }\n            } else {\n                wasTouched = _check(obj);\n            }\n            if (wasTouched) {\n                w.cb(msg, obj);\n            }\n        });\n    }\n    function findAlias(item) {\n        const mm = MountManager;\n        let found = null;\n        mm.getModules().forEach(function (iter) {\n            if (!found && iter.option('options').alias) {\n                const a = iter.option('options').alias;\n                if (item.path.substr(0, a.length) === a) {\n                    found = iter;\n                }\n            }\n        });\n        return found;\n    }\n    function convertWriteData(data, mime) {\n        const convertTo = (m, d, resolve, reject) => {\n            FS[m](d, mime, function (error, response) {\n                if (error) {\n                    reject(new Error(error));\n                } else {\n                    resolve(response);\n                }\n            });\n        };\n        return new Promise((resolve, reject) => {\n            try {\n                if (typeof data === 'string') {\n                    if (data.length) {\n                        return convertTo('textToAb', data, resolve, reject);\n                    }\n                } else {\n                    if (data instanceof FileDataURL) {\n                        return convertTo('dataSourceToAb', data.toString(), resolve, reject);\n                    } else if (window.Blob && data instanceof window.Blob) {\n                        return convertTo('blobToAb', data, resolve, reject);\n                    }\n                }\n            } catch (e) {\n                return reject(e);\n            }\n            return resolve(data);\n        });\n    }\n    function requestWrapper(mountpoint, method, args, options, appRef) {\n        console.info('VFS operation', ...arguments);\n        if (!mountpoint) {\n            return Promise.reject(new Error(Locales._('ERR_VFSMODULE_INVALID')));\n        }\n        return new Promise((resolve, reject) => {\n            mountpoint.request(method, args, options).then(response => {\n                return Connection.instance.onVFSRequestCompleted(mountpoint, method, args, response, appRef).then(() => resolve(response)).catch(reject);\n            }).catch(reject);\n        });\n    }\n    function performRequest(method, args, options, test, appRef, errorStr) {\n        return new Promise((resolve, reject) => {\n            if (options && !(options instanceof Object)) {\n                reject(new TypeError(Locales._('ERR_ARGUMENT_FMT', 'VFS::' + method, 'options', 'Object', typeof options)));\n                return;\n            }\n            const mountpoint = MountManager.getModuleFromPath(test);\n            if (!mountpoint) {\n                reject(new Error(Locales._('ERR_VFSMODULE_NOT_FOUND_FMT', test)));\n                return;\n            }\n            requestWrapper(mountpoint, method, args, options, appRef).then(resolve).catch(reject);\n        });\n    }\n    function broadcastMessage(msg, item, appRef) {\n        function _message(i) {\n            Process.message(msg, i, { source: appRef ? appRef.__pid : null });\n            checkWatches(msg, item);\n        }\n        const aliased = function () {\n            function _transform(i) {\n                if (i instanceof FileMetadata) {\n                    const n = new FileMetadata(i);\n                    const alias = findAlias(n);\n                    if (alias) {\n                        n.path = n.path.replace(alias.option('options').alias, alias.option('root'));\n                        return n;\n                    }\n                }\n                return false;\n            }\n            if (item instanceof FileMetadata) {\n                return _transform(item);\n            } else if (item && item.destination && item.source) {\n                return {\n                    source: _transform(item.source),\n                    destination: _transform(item.destination)\n                };\n            }\n            return null;\n        }();\n        _message(item);\n        const tuple = aliased.source || aliased.destination;\n        if (aliased && (aliased instanceof FileMetadata || tuple)) {\n            if (tuple) {\n                aliased.source = aliased.source || item.source;\n                aliased.destination = aliased.destination || item.destination;\n            }\n            _message(aliased);\n        }\n    }\n    function find(item, args, options) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('find', [\n            item,\n            args\n        ], options, item.path, null, 'ERR_VFSMODULE_FIND_FMT');\n    }\n    function scandir(item, options) {\n        const vfsSettings = SettingsManager.get('VFS');\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        const oitem = new FileMetadata(item);\n        const alias = hasAlias(oitem, true);\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            performRequest('scandir', [item], options, item.path, null, 'ERR_VFSMODULE_SCANDIR_FMT').then(result => {\n                if (result instanceof Array) {\n                    result = FS.filterScandir(result, options, vfsSettings);\n                    if (alias) {\n                        result = result.map(function (iter) {\n                            const isShortcut = iter.shortcut === true;\n                            const niter = new FileMetadata(iter);\n                            if (!isShortcut) {\n                                const str = iter.path.replace(/\\/?$/, '');\n                                const opt = alias.option('options') || {};\n                                const tmp = opt.alias.replace(/\\/?$/, '');\n                                niter.path = FS.pathJoin(alias.option('root'), str.replace(tmp, ''));\n                            }\n                            return niter;\n                        });\n                    }\n                    if (options.backlink !== false) {\n                        const back = createBackLink(item, result, alias, oitem);\n                        if (back) {\n                            result.unshift(back);\n                        }\n                    }\n                }\n                return resolve(result);\n            }).catch(reject);\n        });\n    }\n    function write(item, data, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(item.path);\n            convertWriteData(data, item.mime).then(ab => {\n                requestWrapper(mountpoint, 'write', [\n                    item,\n                    ab\n                ], options, appRef).then(resolve).catch(e => {\n                    reject(new Error(Locales._('ERR_VFSMODULE_WRITE_FMT', e)));\n                });\n                return true;\n            }).catch(e => {\n                reject(new Error(Locales._('ERR_VFSMODULE_WRITE_FMT', e)));\n            });\n        });\n    }\n    function read(item, options) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(item.path);\n            requestWrapper(mountpoint, 'read', [item], options).then(response => {\n                if (options.type) {\n                    const types = {\n                        datasource: () => new Promise((yes, no) => {\n                            FS.abToDataSource(response, item.mime, function (error, dataSource) {\n                                return error ? no(error) : yes(dataSource);\n                            });\n                        }),\n                        text: () => new Promise((yes, no) => {\n                            FS.abToText(response, item.mime, function (error, text) {\n                                return error ? no(error) : yes(text);\n                            });\n                        }),\n                        blob: () => new Promise((yes, no) => {\n                            FS.abToBlob(response, item.mime, function (error, blob) {\n                                return error ? no(error) : yes(blob);\n                            });\n                        }),\n                        json: () => new Promise((yes, no) => {\n                            FS.abToText(response, item.mime, function (error, text) {\n                                let jsn;\n                                if (typeof text === 'string') {\n                                    try {\n                                        jsn = JSON.parse(text);\n                                    } catch (e) {\n                                        console.warn('VFS::read()', 'readToJSON', e.stack, e);\n                                    }\n                                }\n                                return error ? no(error) : yes(jsn);\n                            });\n                        })\n                    };\n                    const type = options.type.toLowerCase();\n                    if (types[type]) {\n                        return types[type]().then(resolve).catch(reject);\n                    }\n                }\n                return resolve(response);\n            }).catch(e => {\n                reject(new Error(Locales._('ERR_VFSMODULE_READ_FMT', e)));\n            });\n        });\n    }\n    function copy(src, dest, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            src = checkMetadataArgument(src, Locales._('ERR_VFS_EXPECT_SRC_FILE'));\n            dest = checkMetadataArgument(dest, Locales._('ERR_VFS_EXPECT_DST_FILE'), true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        options = Object.assign({}, {\n            type: 'binary',\n            dialog: null\n        }, options);\n        options.arrayBuffer = true;\n        function dialogProgress(prog) {\n            if (options.dialog) {\n                options.dialog.setProgress(prog);\n            }\n        }\n        const promise = new Promise((resolve, reject) => {\n            existsWrapper(dest, options).then(() => {\n                const sourceMountpoint = MountManager.getModuleFromPath(src.path);\n                const destMountpoint = MountManager.getModuleFromPath(dest.path);\n                if (hasSameTransport(src, dest)) {\n                    requestWrapper(sourceMountpoint, 'copy', [\n                        src,\n                        dest\n                    ], options, appRef).then(() => {\n                        dialogProgress(100);\n                        return resolve(true);\n                    }).catch(reject);\n                } else {\n                    requestWrapper(sourceMountpoint, 'read', [src], options, appRef).then(data => {\n                        dialogProgress(50);\n                        return requestWrapper(destMountpoint, 'write', [\n                            dest,\n                            data\n                        ], options, appRef).then(res => {\n                            dialogProgress(100);\n                            return resolve(res);\n                        }).catch(reject);\n                    }).catch(reject);\n                }\n                return true;\n            }).catch(reject);\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                dialogProgress(100);\n                reject(new Error(Locales._('ERR_VFSMODULE_COPY_FMT', e)));\n            });\n        });\n    }\n    function move(src, dest, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            src = checkMetadataArgument(src, Locales._('ERR_VFS_EXPECT_SRC_FILE'));\n            dest = checkMetadataArgument(dest, Locales._('ERR_VFS_EXPECT_DST_FILE'), true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        function dialogProgress(prog) {\n            if (options.dialog) {\n                options.dialog.setProgress(prog);\n            }\n        }\n        const promise = new Promise((resolve, reject) => {\n            existsWrapper(dest, options).then(() => {\n                const sourceMountpoint = MountManager.getModuleFromPath(src.path);\n                const destMountpoint = MountManager.getModuleFromPath(dest.path);\n                if (hasSameTransport(src, dest)) {\n                    requestWrapper(sourceMountpoint, 'move', [\n                        src,\n                        dest\n                    ], options, appRef).then(() => {\n                        dialogProgress(100);\n                        return resolve(true);\n                    }).catch(reject);\n                } else {\n                    requestWrapper(sourceMountpoint, 'read', [src], options, appRef).then(data => {\n                        dialogProgress(50);\n                        return requestWrapper(destMountpoint, 'write', [\n                            dest,\n                            data\n                        ], options, appRef).then(res => {\n                            return requestWrapper(sourceMountpoint, 'unlink', [src], options, appRef).then(res => {\n                                dialogProgress(100);\n                                return resolve(res);\n                            }).catch(reject);\n                        }).catch(reject);\n                    }).catch(reject);\n                }\n                return true;\n            }).catch(reject);\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                dialogProgress(100);\n                reject(new Error(Locales._('ERR_VFSMODULE_MOVE_FMT', e)));\n            });\n        });\n    }\n    function rename(src, dest) {\n        return move(...arguments);\n    }\n    function unlink(item, options, appRef) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            performRequest('unlink', [item], options, item.path, appRef, 'ERR_VFSMODULE_UNLINK_FMT').then(response => {\n                const pkgdir = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n                const found = pkgdir.some(function (i) {\n                    const chkdir = new FileMetadata(i);\n                    const idir = FS.dirname(item.path);\n                    return idir === chkdir.path;\n                });\n                if (found) {\n                    PackageManager.generateUserMetadata(function () {\n                    });\n                }\n                return resolve(response);\n            }).catch(reject);\n        });\n    }\n    function mkdir(item, options, appRef) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('mkdir', [item], options, item.path, appRef, 'ERR_VFSMODULE_MKDIR_FMT');\n    }\n    function exists(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('exists', [item], {}, item.path, null, 'ERR_VFSMODULE_EXISTS_FMT');\n    }\n    function fileinfo(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('fileinfo', [item], {}, item.path, null, 'ERR_VFSMODULE_FILEINFO_FMT');\n    }\n    function url(item, options) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('url', [item], options, item.path, null, 'ERR_VFSMODULE_URL_FMT');\n    }\n    function upload(args, options, appRef) {\n        args = args || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        if (!args.files) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UPLOAD_NO_FILES')));\n        }\n        if (!args.destination) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UPLOAD_NO_DEST')));\n        }\n        const dest = new FileMetadata(args.destination);\n        const mountpoint = MountManager.getModuleFromPath(args.destination);\n        return new Promise((resolve, reject) => {\n            Promise.all(args.files.map(f => {\n                const filename = f instanceof window.File ? f.name : f.filename;\n                const fileDest = new FileMetadata(FS.pathJoin(args.destination, filename));\n                return new Promise((resolve, reject) => {\n                    existsWrapper(fileDest, options).then(() => {\n                        return requestWrapper(mountpoint, 'upload', [\n                            dest,\n                            f\n                        ], options, appRef).then(resolve).catch(reject);\n                    }).catch(reject);\n                });\n            })).then(resolve).catch(e => {\n                reject(new Error(Locales._('ERR_VFS_UPLOAD_FAIL_FMT', e)));\n            });\n        });\n    }\n    function download(file) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            file = checkMetadataArgument(file);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        if (!file.path) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_DOWNLOAD_NO_FILE')));\n        }\n        const promise = new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(file);\n            requestWrapper(mountpoint, 'download', [file], {}).then(() => {\n                if (mountpoint.option('internal')) {\n                    mountpoint.download(file).then(resolve).catch(reject);\n                } else {\n                    mountpoint.read(file).then(resolve).catch(reject);\n                }\n                return true;\n            });\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                reject(new Error(Locales._('ERR_VFS_DOWNLOAD_FAILED', e)));\n            });\n        });\n    }\n    function trash(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('trash', [item], {}, item.path, null, 'ERR_VFSMODULE_TRASH_FMT');\n    }\n    function untrash(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('untrash', [item], {}, item.path, null, 'ERR_VFSMODULE_UNTRASH_FMT');\n    }\n    function emptyTrash() {\n        return performRequest('emptyTrash', [], {}, null, null, 'ERR_VFSMODULE_EMPTYTRASH_FMT');\n    }\n    function freeSpace(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        const m = MountManager.getModuleFromPath(item.path, false, true);\n        return performRequest('freeSpace', [m.option('root')], {}, item.path, null, 'ERR_VFSMODULE_FREESPACE_FMT');\n    }\n    function watch(item, callback) {\n        callback = callback || noop;\n        if (arguments.length < 2) {\n            callback(Locales._('ERR_VFS_NUM_ARGS'));\n            return -1;\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return Promise.resolve(watches.push({\n            path: item.path,\n            type: item.type,\n            cb: callback\n        }) - 1);\n    }\n    function unwatch(idx) {\n        if (typeof watches[idx] !== 'undefined') {\n            delete watches[idx];\n        }\n    }\n    function triggerWatch(method, arg, appRef) {\n        broadcastMessage('vfs:' + method, arg, appRef);\n    }\n    return {\n        broadcastMessage: broadcastMessage,\n        find: find,\n        scandir: scandir,\n        write: write,\n        read: read,\n        copy: copy,\n        move: move,\n        rename: rename,\n        unlink: unlink,\n        mkdir: mkdir,\n        exists: exists,\n        fileinfo: fileinfo,\n        url: url,\n        upload: upload,\n        download: download,\n        trash: trash,\n        untrash: untrash,\n        emptyTrash: emptyTrash,\n        freeSpace: freeSpace,\n        watch: watch,\n        unwatch: unwatch,\n        triggerWatch: triggerWatch\n    };\n});\ndefine('skylark-osjsv2-client/core/search-engine',[\n    './package-manager',\n    './settings-manager',\n    '../vfs/file',\n    './theme',\n    '../vfs/fs'\n], function (PackageManager, SettingsManager, FileMetadata, Theme, VFS) {\n    'use strict';\n    function search(list, query) {\n        const result = [];\n        list.forEach(obj => {\n            let found = false;\n            obj.fields.forEach(s => {\n                if (found) {\n                    return;\n                }\n                const qry = String(query).toLowerCase();\n                const str = String(s).toLowerCase();\n                if (str.indexOf(qry) !== -1) {\n                    result.push(obj.value);\n                    found = true;\n                }\n            });\n        });\n        return result;\n    }\n    function SearchObject(obj) {\n        Object.keys(obj).forEach(k => {\n            this[k] = obj[k];\n        });\n    }\n    const ApplicationModule = function () {\n        function query() {\n            const packages = PackageManager.getPackages(); \n            return Object.keys(packages).map(pn => {\n                const p = packages[pn];\n                return new SearchObject({\n                    value: {\n                        title: p.name,\n                        description: p.description,\n                        icon: Theme.getFileIcon(new FileMetadata('applications:///' + p.className, 'application'), '16x16'),\n                        launch: {\n                            application: pn,\n                            args: {}\n                        }\n                    },\n                    fields: [\n                        p.className,\n                        p.name,\n                        p.description\n                    ]\n                });\n            });\n        }\n        return {\n            search: function (q, args, settings) {\n                if (settings.applications) {\n                    let results = search(query(), q);\n                    if (args.limit && results.length > args.dlimit) {\n                        results = results.splice(0, args.dlimit);\n                    }\n                    return Promise.resolve(results);\n                }\n                return Promise.resolve([]);\n            },\n            reindex: function (args) {\n                return Promise.resolve(true);\n            },\n            destroy: function () {\n            }\n        };\n    }();\n    const FilesystemModule = {\n        search: function (q, args, settings, cb) {\n            if (!settings.files || !settings.paths) {\n                return Promise.resolve([]);\n            }\n            let found = [];\n            const append = result => {\n                if (result) {\n                    found = found.concat(result.map(iter => {\n                        return {\n                            title: iter.filename,\n                            description: iter.path,\n                            icon: Theme.getFileIcon(new FileMetadata(iter)),\n                            launch: {\n                                application: '',\n                                args: '',\n                                file: iter\n                            }\n                        };\n                    }));\n                }\n            };\n            return new Promise((resolve, reject) => {\n                Promise.each(settings.paths, e => {\n                    return new Promise(n => {\n                        VFS.find(e, {\n                            query: q,\n                            limit: args.limit ? args.dlimit : 0,\n                            recursive: args.recursive\n                        }).then(result => {\n                            return n(append(result));\n                        }).catch(error => {\n                            console.warn(error);\n                            n();\n                        });\n                    });\n                }).then(() => {\n                    return resolve(found);\n                }).catch(reject);\n            });\n        },\n        reindex: function (args) {\n            return Promise.resolve();\n        },\n        destroy: function () {\n        }\n    };\n    class SearchEngine {\n        constructor() {\n            this.settings = {};\n            this.inited = false;\n            this.modules = [\n                ApplicationModule,\n                FilesystemModule\n            ];\n        }\n        init() {\n            console.debug('SearchEngine::init()');\n            if (!this.inited) {\n                this.settings = SettingsManager.get('SearchEngine') || {};\n                this.inited = true;\n            }\n            return Promise.resolve();\n        }\n        destroy() {\n            console.debug('SearchEngine::destroy()');\n            this.modules.forEach(m => {\n                m.destroy();\n            });\n            this.modules = [];\n            this.settings = {};\n            this.inited = false;\n        }\n        search(q, args) {\n            let result = [];\n            let errors = [];\n            args = Object.assign({}, {\n                recursive: false,\n                limit: 0,\n                dlimit: 0\n            }, args);\n            if (args.limit) {\n                args.dlimit = args.limit;\n            }\n            return new Promise((resolve, reject) => {\n                Promise.each(this.modules, module => {\n                    return new Promise((next, reject) => {\n                        console.debug('SearchEngine::search()', '=>', module);\n                        if (!args.limit || args.dlimit > 0) {\n                            module.search(q, args, this.settings).then(res => {\n                                args.dlimit -= res.length;\n                                result = result.concat(res);\n                                next();\n                            }).catch(err => {\n                                console.warn(err);\n                                errors.push(err instanceof Error ? err.toString() : err);\n                                next();\n                            });\n                        } else {\n                            next();\n                        }\n                    });\n                }).then(() => resolve(result)).catch(reject);\n            });\n        }\n        reindex(args) {\n            const errors = [];\n            return Promise.each(this.modules, module => {\n                return new Promise(next => {\n                    console.debug('SearchEngine::reindex()', '=>', module);\n                    module.reindex(args).then(next).catch(err => {\n                        if (err) {\n                            errors.push(err);\n                        }\n                        next();\n                    });\n                });\n            });\n        }\n        configure(opts, save) {\n        }\n    }\n    return new SearchEngine();\n});\ndefine('skylark-osjsv2-client/core/authenticator',[\n    './locales',\n    './config',\n    './connection',\n    './settings-manager',\n    './package-manager'\n], function ( a, b, Connection, SettingsManager, PackageManager) {\n    'use strict';\n    let _instance;\n    return class Authenticator {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            _instance = this;\n            this.userData = {\n                id: 0,\n                username: 'root',\n                name: 'root user',\n                groups: ['admin']\n            };\n            this.loggedIn = false;\n            this.isStandalone = false;\n        }\n        init() {\n            return this.createUI();\n        }\n        destroy() {\n            _instance = null;\n        }\n        getUser() {\n            return Object.assign({}, this.userData);\n        }\n        isLoggedIn() {\n            return this.isLoggedIn;\n        }\n        login(data) {\n            return new Promise((resolve, reject) => {\n                Connection.request('login', data).then(result => {\n                    return resolve(result ? result : a._('ERR_LOGIN_INVALID'));\n                }).catch(error => {\n                    reject(new Error(a._('ERR_LOGIN_FMT', error)));\n                });\n            });\n        }\n        logout() {\n            return new Promise((resolve, reject) => {\n                Connection.request('logout', {}).then(result => {\n                    return resolve(!!result);\n                }).catch(err => {\n                    reject(new Error('An error occured: ' + err));\n                });\n            });\n        }\n        checkPermission(group) {\n            const user = this.getUser();\n            const userGroups = user.groups || [];\n            if (!(group instanceof Array)) {\n                group = [group];\n            }\n            if (userGroups.indexOf('admin') === -1) {\n                return !!group.every(g => userGroups.indexOf(g) >= 0);\n            }\n            return true;\n        }\n        requestLogin(data) {\n            return new Promise((resolve, reject) => {\n                this.login(data).then(res => {\n                    return this.onLogin(res).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        onLogin(data) {\n            let userSettings = data.userSettings;\n            if (!userSettings || userSettings instanceof Array) {\n                userSettings = {};\n            }\n            this.userData = data.userData;\n            function getLocale() {\n                let curLocale = b.getConfig('Locale');\n                let detectedLocale = b.getUserLocale();\n                if (b.getConfig('LocaleOptions.AutoDetect', true) && detectedLocale) {\n                    console.info('Auto-detected user locale via browser', detectedLocale);\n                    curLocale = detectedLocale;\n                }\n                let result = SettingsManager.get('CoreWM');\n                if (!result) {\n                    try {\n                        result = userSettings.CoreWM;\n                    } catch (e) {\n                    }\n                }\n                return result ? result.language || curLocale : curLocale;\n            }\n            document.getElementById('LoadingScreen').style.display = 'block';\n            a.setLocale(getLocale());\n            SettingsManager.init(userSettings);\n            if (data.blacklistedPackages) {\n                PackageManager.setBlacklist(data.blacklistedPackages);\n            }\n            this.loggedIn = true;\n            return Promise.resolve(true);\n        }\n        createUI() {\n            this._renderUI();\n            return this._createUI();\n        }\n        _renderUI(html) {\n            if (!html) {\n                html = require('osjs-scheme-loader!login.html');\n            }\n            const tempNode = document.createElement('div');\n            tempNode.innerHTML = html;\n            tempNode.childNodes.forEach(n => {\n                const nn = n.cloneNode(true);\n                if ([\n                        'STYLE',\n                        'SCRIPT'\n                    ].indexOf(n.tagName) === -1) {\n                    document.body.appendChild(nn);\n                } else {\n                    document.querySelector('head').appendChild(nn);\n                }\n            });\n        }\n        _createUI() {\n            const container = document.getElementById('Login');\n            const login = document.getElementById('LoginForm');\n            const u = document.getElementById('LoginUsername');\n            const p = document.getElementById('LoginPassword');\n            const s = document.getElementById('LoginSubmit');\n            function _restore() {\n                s.removeAttribute('disabled');\n                u.removeAttribute('disabled');\n                p.removeAttribute('disabled');\n            }\n            function _lock() {\n                s.setAttribute('disabled', 'disabled');\n                u.setAttribute('disabled', 'disabled');\n                p.setAttribute('disabled', 'disabled');\n            }\n            container.style.display = 'block';\n            _restore();\n            return new Promise((resolve, reject) => {\n                login.onsubmit = ev => {\n                    _lock();\n                    if (ev) {\n                        ev.preventDefault();\n                    }\n                    this.requestLogin({\n                        username: u.value,\n                        password: p.value\n                    }).then(() => {\n                        container.parentNode.removeChild(container);\n                        return resolve();\n                    }).catch(err => {\n                        alert(err);\n                        _restore();\n                    });\n                };\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/keycodes',[],function () {\n    'use strict';\n    const Keycodes = function () {\n        const list = {\n            F1: 112,\n            F2: 113,\n            F3: 114,\n            F4: 115,\n            F6: 118,\n            F7: 119,\n            F8: 120,\n            F9: 121,\n            F10: 122,\n            F11: 123,\n            F12: 124,\n            TILDE: 220,\n            GRAVE: 192,\n            CMD: 17,\n            LSUPER: 91,\n            RSUPER: 92,\n            DELETE: 46,\n            INSERT: 45,\n            HOME: 36,\n            END: 35,\n            PGDOWN: 34,\n            PGUP: 33,\n            PAUSE: 19,\n            BREAK: 19,\n            CAPS_LOCK: 20,\n            SCROLL_LOCK: 186,\n            BACKSPACE: 8,\n            SPACE: 32,\n            TAB: 9,\n            ENTER: 13,\n            ESC: 27,\n            LEFT: 37,\n            RIGHT: 39,\n            UP: 38,\n            DOWN: 40\n        };\n        for (let n = 33; n <= 126; n++) {\n            list[String.fromCharCode(n)] = n;\n        }\n        return Object.freeze(list);\n    }();\n    return Keycodes;\n});\ndefine('skylark-osjsv2-client/utils/events',[\n    './keycodes'\n], function (Keycodes) {\n    'use strict';\n    function getRealEventName(evName) {\n        let realName = evName;\n        if (evName !== 'mousewheel' && evName.match(/^mouse/)) {\n            if (window.PointerEvent) {\n                realName = evName.replace(/^mouse/, 'pointer');\n            } else if (window.MSPointerEvent) {\n                const tmpName = evName.replace(/^mouse/, '');\n                realName = 'MSPointer' + tmpName.charAt(0).toUpperCase() + tmpName.slice(1).toLowerCase();\n            }\n        }\n        return realName;\n    }\n    function getEventList(str) {\n        return str.replace(/\\s/g, '').split(',');\n    }\n    function mousePosition(ev) {\n        if (ev.detail && typeof ev.detail.x !== 'undefined' && typeof ev.detail.y !== 'undefined') {\n            return {\n                x: ev.detail.x,\n                y: ev.detail.y\n            };\n        }\n        const touch = ev.touches || ev.changedTouches || [];\n        if (touch.length) {\n            return {\n                x: touch[0].clientX,\n                y: touch[0].clientY\n            };\n        }\n        return {\n            x: ev.clientX,\n            y: ev.clientY\n        };\n    }\n    function mouseButton(ev) {\n        if (typeof ev.button !== 'undefined') {\n            if (ev.button === 0) {\n                return 'left';\n            } else if (ev.button === 1) {\n                return 'middle';\n            }\n            return 'right';\n        }\n        if (ev.which === 2 || ev.which === 4) {\n            return 'middle';\n        } else if (ev.which === 1) {\n            return 'left';\n        }\n        return 'right';\n    }\n    const keyCombination = function () {\n        const modifiers = {\n            CTRL: ev => {\n                return ev.ctrlKey;\n            },\n            SHIFT: ev => {\n                return ev.shiftKey;\n            },\n            ALT: ev => {\n                return ev.altKey;\n            },\n            META: ev => {\n                return ev.metaKey;\n            }\n        };\n        function getKeyName(keyCode) {\n            let result = false;\n            Object.keys(Keycodes).forEach(k => {\n                if (!result && keyCode === Keycodes[k]) {\n                    result = k;\n                }\n            });\n            return result;\n        }\n        return function (ev, checkFor) {\n            const checks = checkFor.toUpperCase().split('+');\n            const checkMods = {\n                CTRL: false,\n                SHIFT: false,\n                ALT: false\n            };\n            const checkKeys = [];\n            checks.forEach(f => {\n                if (modifiers[f]) {\n                    checkMods[f] = true;\n                } else {\n                    checkKeys.push(f);\n                }\n            });\n            const hasmod = Object.keys(checkMods).every(f => {\n                const fk = !!modifiers[f](ev);\n                return checkMods[f] === fk;\n            });\n            const haskey = checkKeys.every(f => {\n                return getKeyName(ev.keyCode) === f;\n            });\n            return hasmod && haskey;\n        };\n    }();\n    const $bind = function () {\n        function makeFakeEvent(name, ev) {\n            const pos = mousePosition(ev);\n            const nev = Object.assign({\n                clientX: pos.x,\n                clientY: pos.y,\n                x: pos.x,\n                y: pos.y\n            }, ev);\n            return new MouseEvent(name, nev);\n        }\n        function addEventHandler(el, n, t, callback, handler, useCapture, realType) {\n            const args = [\n                t,\n                handler,\n                useCapture\n            ];\n            el.addEventListener.apply(el, args);\n            el._boundEvents[n].push({\n                realType: realType,\n                args: args,\n                callback: callback\n            });\n        }\n        function createWheelHandler(el, n, t, callback, useCapture) {\n            function _wheel(ev) {\n                const pos = mousePosition(ev);\n                const direction = ev.detail < 0 || ev.wheelDelta > 0 ? 1 : -1;\n                pos.z = direction;\n                return callback(ev, pos);\n            }\n            addEventHandler(el, n, 'mousewheel', callback, _wheel, useCapture, 'mousewheel');\n            addEventHandler(el, n, 'DOMMouseScroll', callback, _wheel, useCapture, 'DOMMouseScroll');\n        }\n        function createClick(el, n, t, callback, useCapture) {\n            let cancelled = false;\n            let timeout;\n            let firstTarget;\n            let firstEvent;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                clearTimeout(timeout);\n                firstTarget = null;\n                cancelled = true;\n                window.removeEventListener('touchmove', tempMove);\n            }\n            function tempEnd(ev) {\n                clearTimeout(timeout);\n                window.removeEventListener('touchmove', tempMove);\n                if (!cancelled && ev.target === firstTarget) {\n                    const newEvent = makeFakeEvent('click', firstEvent);\n                    Object.defineProperty(newEvent, 'target', {\n                        value: firstEvent.target,\n                        enumerable: false\n                    });\n                    el.dispatchEvent(newEvent);\n                }\n            }\n            function tempStart(ev) {\n                firstEvent = ev;\n                firstTarget = ev.target;\n                timeout = setTimeout(() => {\n                    cancelled = true;\n                }, 300);\n                window.addEventListener('touchmove', tempMove);\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'click');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'click');\n        }\n        function createDoubleClick(el, n, t, callback, useCapture) {\n            let count = 0;\n            let cancelled = false;\n            let firstTarget;\n            let firstEvent;\n            let debounce;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                firstTarget = null;\n                cancelled = true;\n                count = 0;\n                window.removeEventListener('toucmove', tempMove);\n            }\n            function tempEnd() {\n                window.removeEventListener('touchmove', tempMove);\n                debounce = setTimeout(cancel, 680);\n            }\n            function tempStart(ev) {\n                window.addEventListener('touchmove', tempMove);\n                clearTimeout(debounce);\n                if (count === 0) {\n                    firstEvent = ev;\n                    firstTarget = ev.target;\n                } else if (count > 0) {\n                    if (ev.target !== firstTarget) {\n                        cancel();\n                        return;\n                    }\n                    if (!cancelled) {\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                        ev.target.dispatchEvent(makeFakeEvent('dblclick', firstEvent));\n                    }\n                }\n                cancelled = false;\n                count++;\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'dblclick');\n        }\n        function createContextMenu(el, n, t, callback, useCapture) {\n            let cancelled = false;\n            let timeout;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                clearTimeout(timeout);\n                cancelled = true;\n                window.removeEventListener('toucmove', tempMove);\n            }\n            function tempEnd(ev) {\n                cancelled = true;\n                clearTimeout(timeout);\n                window.removeEventListener('touchmove', tempMove);\n            }\n            function tempStart(ev) {\n                timeout = setTimeout(() => {\n                    if (!cancelled) {\n                        ev.preventDefault();\n                        ev.target.dispatchEvent(makeFakeEvent('contextmenu', ev));\n                    }\n                }, 300);\n                window.addEventListener('touchmove', tempMove);\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'contextmenu');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'contextmenu');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'contextmenu');\n        }\n        const customEvents = {\n            mousewheel: createWheelHandler,\n            click: createClick,\n            dblclick: createDoubleClick,\n            contextmenu: createContextMenu\n        };\n        return function Utils_$bind(el, evName, callback, useCapture, noBind) {\n            useCapture = useCapture === true;\n            if (arguments.length < 3) {\n                throw new Error('$bind expects 3 or more arguments');\n            }\n            if (typeof evName !== 'string') {\n                throw new Error('Given event type was not a string');\n            }\n            if (typeof callback !== 'function') {\n                throw new Error('Given callback was not a function');\n            }\n            function addEvent(nsType, type) {\n                type = getRealEventName(type);\n                addEventHandler(el, nsType, type, callback, function mouseEventHandler(ev) {\n                    if (!window.OSjs) {\n                        return;\n                    }\n                    if (noBind) {\n                        callback(ev, mousePosition(ev));\n                    }\n                    callback.call(el, ev, mousePosition(ev));\n                }, useCapture);\n                if (type === 'click' && el.tagName === 'BUTTON') {\n                    return;\n                }\n                if (customEvents[type]) {\n                    customEvents[type](el, nsType, type, function fakeEventHandler(ev) {\n                        if (noBind) {\n                            callback(ev, mousePosition(ev));\n                        }\n                        callback.call(el, ev, mousePosition(ev));\n                    }, useCapture);\n                }\n            }\n            function initNamespace(ns) {\n                if (!el._boundEvents) {\n                    el._boundEvents = {};\n                }\n                if (!el._boundEvents[ns]) {\n                    el._boundEvents[ns] = [];\n                }\n                const found = el._boundEvents[ns].filter(iter => {\n                    return iter.callback === callback;\n                });\n                return found.length === 0;\n            }\n            getEventList(evName).forEach(ns => {\n                const type = ns.split(':')[0];\n                if (!initNamespace(ns)) {\n                    console.warn('Utils::$bind()', 'This event was already bound, skipping');\n                    return;\n                }\n                addEvent(ns, type);\n            });\n        };\n    }();\n    function $unbind(el, evName, callback, useCapture) {\n        function unbindNamed(type) {\n            if (el._boundEvents) {\n                const list = el._boundEvents || {};\n                if (list[type]) {\n                    for (let i = 0; i < list[type].length; i++) {\n                        let iter = list[type][i];\n                        if (callback && iter.callback !== callback) {\n                            continue;\n                        }\n                        el.removeEventListener.apply(el, iter.args);\n                        list[type].splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        function unbindAll() {\n            if (el._boundEvents) {\n                Object.keys(el._boundEvents).forEach(type => {\n                    unbindNamed(type);\n                });\n                delete el._boundEvents;\n            }\n        }\n        if (el) {\n            if (evName) {\n                getEventList(evName).forEach(type => {\n                    unbindNamed(type);\n                });\n            } else {\n                unbindAll();\n            }\n        }\n    }\n    return {\n        mousePosition: mousePosition,\n        mouseButton: mouseButton,\n        keyCombination: keyCombination,\n        $bind: $bind,\n        $unbind: $unbind\n    };\n});\ndefine('skylark-osjsv2-client/helpers/window-behaviour',[\n    '../utils/dom',\n    '../utils/events',\n    '../core/theme'\n], function (DOM, Events, Theme) {\n    'use strict';\n    class BehaviourState {\n        constructor(wm, win, action, mousePosition) {\n            this.win = win;\n            this.$element = win._$element;\n            this.$top = win._$top;\n            this.$handle = win._$resize;\n            this.rectWorkspace = wm.getWindowSpace(true);\n            this.rectWindow = {\n                x: win._position.x,\n                y: win._position.y,\n                w: win._dimension.w,\n                h: win._dimension.h,\n                r: win._dimension.w + win._position.x,\n                b: win._dimension.h + win._position.y\n            };\n            const theme = Object.assign({}, Theme.getStyleTheme(true, true));\n            if (!theme.style) {\n                theme.style = {\n                    'window': {\n                        margin: 0,\n                        border: 0\n                    }\n                };\n            }\n            this.theme = {\n                topMargin: theme.style.window.margin || 0,\n                borderSize: theme.style.window.border || 0\n            };\n            this.snapping = {\n                cornerSize: wm.getSetting('windowCornerSnap') || 0,\n                windowSize: wm.getSetting('windowSnap') || 0\n            };\n            this.action = action;\n            this.moved = false;\n            this.direction = null;\n            this.startX = mousePosition.x;\n            this.startY = mousePosition.y;\n            this.minWidth = win._properties.min_width;\n            this.minHeight = win._properties.min_height;\n            const windowRects = [];\n            wm.getWindows().forEach(w => {\n                if (w && w._wid !== win._wid) {\n                    const pos = w._position;\n                    const dim = w._dimension;\n                    const rect = {\n                        left: pos.x - this.theme.borderSize,\n                        top: pos.y - this.theme.borderSize,\n                        width: dim.w + this.theme.borderSize * 2,\n                        height: dim.h + this.theme.borderSize * 2 + this.theme.topMargin\n                    };\n                    rect.right = rect.left + rect.width;\n                    rect.bottom = pos.y + dim.h + this.theme.topMargin + this.theme.borderSize;\n                    windowRects.push(rect);\n                }\n            });\n            this.snapRects = windowRects;\n        }\n        getRect() {\n            const win = this.win;\n            return {\n                left: win._position.x,\n                top: win._position.y,\n                width: win._dimension.w,\n                height: win._dimension.h\n            };\n        }\n        calculateDirection() {\n            const dir = DOM.$position(this.$handle);\n            const dirX = this.startX - dir.left;\n            const dirY = this.startY - dir.top;\n            const dirD = 20;\n            const checks = {\n                nw: dirX <= dirD && dirY <= dirD,\n                n: dirX > dirD && dirY <= dirD,\n                w: dirX <= dirD && dirY >= dirD,\n                ne: dirX >= dir.width - dirD && dirY <= dirD,\n                e: dirX >= dir.width - dirD && dirY > dirD,\n                se: dirX >= dir.width - dirD && dirY >= dir.height - dirD,\n                sw: dirX <= dirD && dirY >= dir.height - dirD\n            };\n            let direction = 's';\n            Object.keys(checks).forEach(function (k) {\n                if (checks[k]) {\n                    direction = k;\n                }\n            });\n            this.direction = direction;\n        }\n    }\n    function createWindowBehaviour(win, wm) {\n        let current = null;\n        let newRect = {};\n        function onWindowResize(ev, mousePosition, dx, dy) {\n            if (!current || !current.direction) {\n                return false;\n            }\n            let nw, nh, nl, nt;\n            (function () {\n                if (current.direction.indexOf('s') !== -1) {\n                    nh = current.rectWindow.h + dy;\n                    newRect.height = Math.max(current.minHeight, nh);\n                } else if (current.direction.indexOf('n') !== -1) {\n                    nh = current.rectWindow.h - dy;\n                    nt = current.rectWindow.y + dy;\n                    if (nt < current.rectWorkspace.top) {\n                        nt = current.rectWorkspace.top;\n                        nh = newRect.height;\n                    } else {\n                        if (nh < current.minHeight) {\n                            nt = current.rectWindow.b - current.minHeight;\n                        }\n                    }\n                    newRect.height = Math.max(current.minHeight, nh);\n                    newRect.top = nt;\n                }\n            }());\n            (function () {\n                if (current.direction.indexOf('e') !== -1) {\n                    nw = current.rectWindow.w + dx;\n                    newRect.width = Math.max(current.minWidth, nw);\n                } else if (current.direction.indexOf('w') !== -1) {\n                    nw = current.rectWindow.w - dx;\n                    nl = current.rectWindow.x + dx;\n                    if (nw < current.minWidth) {\n                        nl = current.rectWindow.r - current.minWidth;\n                    }\n                    newRect.width = Math.max(current.minWidth, nw);\n                    newRect.left = nl;\n                }\n            }());\n            return newRect;\n        }\n        function onWindowMove(ev, mousePosition, dx, dy) {\n            let newWidth = null;\n            let newHeight = null;\n            let newLeft = current.rectWindow.x + dx;\n            let newTop = current.rectWindow.y + dy;\n            const borderSize = current.theme.borderSize;\n            const topMargin = current.theme.topMargin;\n            const cornerSnapSize = current.snapping.cornerSize;\n            const windowSnapSize = current.snapping.windowSize;\n            if (newTop < current.rectWorkspace.top) {\n                newTop = current.rectWorkspace.top;\n            }\n            let newRight = newLeft + current.rectWindow.w + borderSize * 2;\n            let newBottom = newTop + current.rectWindow.h + topMargin + borderSize;\n            if (cornerSnapSize > 0) {\n                if (newLeft - borderSize <= cornerSnapSize && newLeft - borderSize >= -cornerSnapSize) {\n                    newLeft = borderSize;\n                } else if (newRight >= current.rectWorkspace.width - cornerSnapSize && newRight <= current.rectWorkspace.width + cornerSnapSize) {\n                    newLeft = current.rectWorkspace.width - current.rectWindow.w - borderSize;\n                }\n                if (newTop <= current.rectWorkspace.top + cornerSnapSize && newTop >= current.rectWorkspace.top - cornerSnapSize) {\n                    newTop = current.rectWorkspace.top + borderSize;\n                } else if (newBottom >= current.rectWorkspace.height + current.rectWorkspace.top - cornerSnapSize && newBottom <= current.rectWorkspace.height + current.rectWorkspace.top + cornerSnapSize) {\n                    newTop = current.rectWorkspace.height + current.rectWorkspace.top - current.rectWindow.h - topMargin - borderSize;\n                }\n            }\n            if (windowSnapSize > 0) {\n                current.snapRects.every(function (rect) {\n                    if (newRight >= rect.left - windowSnapSize && newRight <= rect.left + windowSnapSize) {\n                        newLeft = rect.left - (current.rectWindow.w + borderSize * 2);\n                        return false;\n                    }\n                    if (newLeft - borderSize <= rect.right + windowSnapSize && newLeft - borderSize >= rect.right - windowSnapSize) {\n                        newLeft = rect.right + borderSize * 2;\n                        return false;\n                    }\n                    if (newBottom >= rect.top - windowSnapSize && newBottom <= rect.top + windowSnapSize) {\n                        newTop = rect.top - (current.rectWindow.h + borderSize * 2 + topMargin);\n                        return false;\n                    }\n                    if (newTop <= rect.bottom + windowSnapSize && newTop >= rect.bottom - windowSnapSize) {\n                        newTop = rect.bottom + borderSize * 2;\n                        return false;\n                    }\n                    return true;\n                });\n            }\n            return {\n                left: newLeft,\n                top: newTop,\n                width: newWidth,\n                height: newHeight\n            };\n        }\n        function onMouseUp(ev, action, win, mousePosition) {\n            if (!current) {\n                return;\n            }\n            if (current.moved) {\n                if (action === 'move') {\n                    win._onChange('move', true);\n                    win._emit('moved', [\n                        win._position.x,\n                        win._position.y\n                    ]);\n                } else if (action === 'resize') {\n                    win._onChange('resize', true);\n                    win._emit('resized', [\n                        win._dimension.w,\n                        win._dimension.h\n                    ]);\n                }\n            }\n            current.$element.setAttribute('data-hint', '');\n            document.body.setAttribute('data-window-hint', '');\n            win._emit('postop');\n            current = null;\n        }\n        function onMouseMove(ev, action, win, mousePosition) {\n            if (!wm.getMouseLocked() || !action || !current) {\n                return;\n            }\n            ev.preventDefault();\n            let result;\n            const dx = mousePosition.x - current.startX;\n            const dy = mousePosition.y - current.startY;\n            if (action === 'move') {\n                result = onWindowMove(ev, mousePosition, dx, dy);\n            } else {\n                result = onWindowResize(ev, mousePosition, dx, dy);\n            }\n            if (result) {\n                if (result.left !== null && result.top !== null) {\n                    win._move(result.left, result.top);\n                    win._emit('move', [\n                        result.left,\n                        result.top\n                    ]);\n                }\n                if (result.width !== null && result.height !== null) {\n                    win._resize(result.width, result.height, true);\n                    win._emit('resize', [\n                        result.width,\n                        result.height\n                    ]);\n                }\n            }\n            current.moved = true;\n        }\n        function onMouseDown(ev, action, win, mousePosition) {\n            ev.preventDefault();\n            if (win._state.maximized) {\n                return;\n            }\n            current = new BehaviourState(wm, win, action, mousePosition);\n            newRect = {};\n            win._focus();\n            if (action === 'move') {\n                current.$element.setAttribute('data-hint', 'moving');\n                document.body.setAttribute('data-window-hint', 'moving');\n            } else {\n                current.calculateDirection();\n                current.$element.setAttribute('data-hint', 'resizing');\n                document.body.setAttribute('data-window-hint', 'resizing');\n                newRect = current.getRect();\n            }\n            win._emit('preop');\n            function _onMouseMove(ev, pos) {\n                ev.preventDefault();\n                if (wm._mouselock) {\n                    onMouseMove(ev, action, win, pos);\n                }\n            }\n            function _onMouseUp(ev, pos) {\n                onMouseUp(ev, action, win, pos);\n                Events.$unbind(document, 'pointermove:movewindow,touchmove:movewindowTouch');\n                Events.$unbind(document, 'pointerup:movewindowstop,touchend:movewindowstopTouch');\n            }\n            Events.$bind(document, 'pointermove:movewindow,touchmove:movewindowTouch', _onMouseMove, false);\n            Events.$bind(document, 'pointerup:movewindowstop,touchend:movewindowstopTouch', _onMouseUp, false);\n        }\n        if (win._properties.allow_move) {\n            Events.$bind(win._$top, 'pointerdown,touchstart', (ev, pos) => {\n                ev.preventDefault();\n                if (!win._destroyed) {\n                    onMouseDown(ev, 'move', win, pos);\n                }\n            }, true);\n        }\n        if (win._properties.allow_resize) {\n            Events.$bind(win._$resize, 'pointerdown,touchstart', (ev, pos) => {\n                ev.preventDefault();\n                if (!win._destroyed) {\n                    onMouseDown(ev, 'resize', win, pos);\n                }\n            });\n        }\n    }\n    return { createWindowBehaviour: createWindowBehaviour };\n});\ndefine('skylark-osjsv2-client/core/window-manager',[\n    '../utils/dom',\n //   '../gui/menu',\n    '../utils/events',\n    '../utils/misc',\n    '../utils/keycodes',\n    './theme',\n    './process',\n//    './window',\n//    './dialog',\n    './connection',\n    './settings-manager',\n//    '../gui/notification',\n    './locales',\n    './config',\n    '../helpers/window-behaviour'\n], function (DOM, Events, Utils, Keycodes, Theme, Process,   Connection, SettingsManager,  Locales, Config, WindowBehaviour) {\n    'use strict';\n    function checkForbiddenKeyCombo(ev) {\n        return false;\n    }\n    function checkPrevent(ev, win) {\n        const d = ev.srcElement || ev.target;\n        const accept = [\n            122,\n            123\n        ];\n        let doPrevent = d.tagName === 'BODY' ? true : false;\n        if (ev.keyCode === Keycodes.BACKSPACE && !DOM.$isFormElement(ev)) {\n            doPrevent = true;\n        } else if (ev.keyCode === Keycodes.TAB && DOM.$isFormElement(ev)) {\n            doPrevent = true;\n        } else {\n            if (accept.indexOf(ev.keyCode) !== -1) {\n                doPrevent = false;\n            } else if (checkForbiddenKeyCombo(ev)) {\n                doPrevent = true;\n            }\n        }\n        if (doPrevent && (!win || !win._properties.key_capture)) {\n            return true;\n        }\n        return false;\n    }\n    function triggerFullscreen(el, state) {\n        function _request() {\n            if (el.requestFullscreen) {\n                el.requestFullscreen();\n            } else if (el.mozRequestFullScreen) {\n                el.mozRequestFullScreen();\n            } else if (el.webkitRequestFullScreen) {\n                el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n            }\n        }\n        function _restore() {\n            if (el.webkitCancelFullScreen) {\n                el.webkitCancelFullScreen();\n            } else if (el.mozCancelFullScreen) {\n                el.mozCancelFullScreen();\n            } else if (el.exitFullscreen) {\n                el.exitFullscreen();\n            }\n        }\n        if (el) {\n            if (state) {\n                _request();\n            } else {\n                _restore();\n            }\n        }\n    }\n    let _instance;\n    return class WindowManager extends Process {\n        static get instance() {\n            return _instance;\n        }\n        constructor(name, args, metadata, settings) {\n            console.group('WindowManager::constructor()');\n            console.debug('Name', name);\n            console.debug('Arguments', args);\n            super(name, args, metadata);\n            _instance = this;\n            this._windows = [];\n            this._settings = SettingsManager.instance(name, settings);\n            this._currentWin = null;\n            this._lastWin = null;\n            this._mouselock = true;\n            this._stylesheet = null;\n            this._sessionLoaded = false;\n            this._fullyLoaded = false;\n            this._isResponsive = false;\n            this._responsiveRes = 800;\n            this._dcTimeout = null;\n            this._resizeTimeout = null;\n            this._$fullscreen = null;\n            this._$lastDomInput = null;\n            this.__name = name || 'WindowManager';\n            this.__path = metadata.path;\n            this.__iter = metadata.iter;\n\n            console.groupEnd();\n        }\n        destroy() {\n            console.debug('WindowManager::destroy()');\n            this.destroyStylesheet();\n            Events.$unbind(document, 'pointerout:windowmanager');\n            Events.$unbind(document, 'pointerenter:windowmanager');\n            Events.$unbind(window, 'orientationchange:windowmanager');\n            Events.$unbind(window, 'hashchange:windowmanager');\n            Events.$unbind(window, 'resize:windowmanager');\n            Events.$unbind(window, 'scroll:windowmanager');\n            Events.$unbind(window, 'fullscreenchange:windowmanager');\n            Events.$unbind(window, 'mozfullscreenchange:windowmanager');\n            Events.$unbind(window, 'webkitfullscreenchange:windowmanager');\n            Events.$unbind(window, 'msfullscreenchange:windowmanager');\n            Events.$unbind(document.body, 'contextmenu:windowmanager');\n            Events.$unbind(document.body, 'pointerdown:windowmanager,touchstart:windowmanager');\n            Events.$unbind(document.body, 'click:windowmanager');\n            Events.$unbind(document, 'keyup:windowmanager');\n            Events.$unbind(document, 'keydown:windowmanager');\n            Events.$unbind(document, 'keypress:windowmanager');\n            window.onerror = null;\n            window.onbeforeunload = null;\n            this._windows.forEach((win, i) => {\n                if (win) {\n                    win.destroy(true);\n                    this._windows[i] = null;\n                }\n            });\n            this._windows = [];\n            this._currentWin = null;\n            this._lastWin = null;\n            this._$fullscreen = null;\n            _instance = null;\n\n            this.Notification = OSjs.require(\"gui/notification\");// added by lwf\n            return super.destroy();\n        }\n        init(metadata, settings) {\n            var Notification = this.Notification;\n\n            Connection.instance.subscribe('online', () => {\n                Notification.create({\n                    title: Locales._('LBL_INFO'),\n                    message: Locales._('CONNECTION_RESTORED')\n                });\n            });\n            Connection.instance.subscribe('offline', reconnecting => {\n                Notification.create({\n                    title: Locales._('LBL_WARNING'),\n                    message: Locales._(reconnecting ? 'CONNECTION_RESTORE_FAILED' : 'CONNECTION_LOST')\n                });\n            });\n\n            console.debug('WindowManager::init()');\n            document.body.addEventListener('touchend', ev => {\n                if (ev.target === document.body) {\n                    ev.preventDefault();\n                }\n            });\n            Events.$bind(document, 'pointerout:windowmanager', ev => this._onMouseLeave(ev));\n            Events.$bind(document, 'pointerenter:windowmanager', ev => this._onMouseLeave(ev));\n            Events.$bind(window, 'orientationchange:windowmanager', ev => this._onOrientationChange(ev));\n            Events.$bind(window, 'hashchange:windowmanager', ev => this._onHashChange(ev));\n            Events.$bind(window, 'resize:windowmanager', ev => this._onResize(ev));\n            Events.$bind(window, 'scroll:windowmanager', ev => this._onScroll(ev));\n            Events.$bind(window, 'fullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'mozfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'webkitfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'msfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(document.body, 'contextmenu:windowmanager', ev => this._onContextMenu(ev));\n            Events.$bind(document.body, 'pointerdown:windowmanager,touchstart:windowmanager', ev => this._onMouseDown(ev));\n            Events.$bind(document.body, 'click:windowmanager', ev => this._onClick(ev));\n            Events.$bind(document, 'keyup:windowmanager', ev => this._onKeyUp(ev));\n            Events.$bind(document, 'keydown:windowmanager', ev => this._onKeyDown(ev));\n            Events.$bind(document, 'keypress:windowmanager', ev => this._onKeyPress(ev));\n            window.onerror = this._onError.bind(this);\n            window.onbeforeunload = this._onBeforeUnload(this);\n            const queries = this.getDefaultSetting('mediaQueries') || {};\n            let maxWidth = 0;\n            Object.keys(queries).forEach(q => {\n                maxWidth = Math.max(maxWidth, queries[q]);\n            });\n            this._responsiveRes = maxWidth || 800;\n            this._onOrientationChange();\n            this.resize();\n        }\n        setup(cb) {\n            cb();\n        }\n        getWindow(name) {\n            return this.getWindows().find(w => {\n                return w.__name === name;\n            });\n        }\n        addWindow(w, focus) {\n            //if (!(w instanceof Window)) { // modified by lwf\n            //    console.warn('WindowManager::addWindow()', 'Got', w);\n            //    throw new TypeError('given argument was not instance of Core.Window');\n            //}\n            console.debug('WindowManager::addWindow()');\n            try {\n                w.init(this, w._app);\n            } catch (e) {\n                console.error('WindowManager::addWindow()', '=>', 'Window::init()', e, e.stack);\n            }\n            WindowBehaviour.createWindowBehaviour(w, this);\n            this._windows.push(w);\n            w._inited();\n            //if (focus === true || w instanceof DialogWindow) {\n            if (focus === true) { // modified by lwf\n                w._focus();\n            }\n            return w;\n        }\n        removeWindow(w) {\n            //if (!(w instanceof Window)) { // modified by lwf\n            //    console.warn('WindowManager::removeWindow()', 'Got', w);\n            //    throw new TypeError('given argument was not instance of Core.Window');\n            //}\n            const foundIndex = this._windows.findIndex(win => win && win._wid === w._wid);\n            console.debug('WindowManager::removeWindow()', w._wid, foundIndex);\n            if (foundIndex !== -1) {\n                this._windows[foundIndex] = null;\n                return true;\n            }\n            return false;\n        }\n        applySettings(settings, force, save, triggerWatch) {\n            settings = settings || {};\n            console.debug('WindowManager::applySettings()', 'forced?', force);\n            const result = force ? settings : Utils.mergeObject(this._settings.get(), settings);\n            this._settings.set(null, result, save, triggerWatch);\n            return true;\n        }\n        createStylesheet(styles, rawStyles) {\n            this.destroyStylesheet();\n            let innerHTML = [];\n            Object.keys(styles).forEach(key => {\n                let rules = [];\n                Object.keys(styles[key]).forEach(r => {\n                    rules.push(Utils.format('    {0}: {1};', r, styles[key][r]));\n                });\n                rules = rules.join('\\n');\n                innerHTML.push(Utils.format('{0} {\\n{1}\\n}', key, rules));\n            });\n            innerHTML = innerHTML.join('\\n');\n            if (rawStyles) {\n                innerHTML += '\\n' + rawStyles;\n            }\n            const style = document.createElement('style');\n            style.type = 'text/css';\n            style.id = 'WMGeneratedStyles';\n            style.innerHTML = innerHTML;\n            document.getElementsByTagName('head')[0].appendChild(style);\n            this._stylesheet = style;\n        }\n        destroyStylesheet() {\n            if (this._stylesheet) {\n                DOM.$remove(this._stylesheet);\n            }\n            this._stylesheet = null;\n        }\n        resize(ev, rect) {\n            this._isResponsive = window.innerWidth <= 1024;\n            this.onResize(ev);\n        }\n        eventWindow(ev, win) {\n            return false;\n        }\n        showSettings() {\n        }\n        toggleFullscreen(el, t) {\n            if (typeof t === 'boolean') {\n                triggerFullscreen(el, t);\n            } else {\n                const prev = this._$fullscreen;\n                if (prev && prev !== el) {\n                    triggerFullscreen(prev, false);\n                }\n                triggerFullscreen(el, prev !== el);\n            }\n            this._$fullscreen = el;\n        }\n        onKeyDown(ev, win) {\n        }\n        onOrientationChange(ev, orientation) {\n            console.info('ORIENTATION CHANGED', ev, orientation);\n            document.body.setAttribute('data-orientation', orientation);\n            this._onDisplayChange();\n        }\n        onResize(ev) {\n            this._onDisplayChange();\n            this._emit('resized');\n        }\n        onSessionLoaded() {\n            if (this._sessionLoaded) {\n                return false;\n            }\n            this._sessionLoaded = true;\n            return true;\n        }\n        _onMouseEnter(ev) {\n            this._mouselock = true;\n        }\n        _onMouseLeave(ev) {\n            const from = ev.relatedTarget || ev.toElement;\n            if (!from || from.nodeName === 'HTML') {\n                this._mouselock = false;\n            } else {\n                this._mouselock = true;\n            }\n        }\n        _onDisplayChange() {\n            this._dcTimeout = clearTimeout(this._dcTimeout);\n            this._dcTimeout = setTimeout(() => {\n                if (!this._windows) {\n                    return;\n                }\n                this.getWindows().forEach(w => {\n                    w._onResize();\n                    w._emit('resize');\n                });\n            }, 100);\n            document.body.setAttribute('data-responsive', String(this._isResponsive));\n        }\n        _onOrientationChange(ev) {\n            let orientation = 'landscape';\n            if (window.screen && window.screen.orientation) {\n                if (window.screen.orientation.type.indexOf('portrait') !== -1) {\n                    orientation = 'portrait';\n                }\n            }\n            this.onOrientationChange(ev, orientation);\n        }\n        _onHashChange(ev) {\n            const hash = window.location.hash.substr(1);\n            const spl = hash.split(/^([\\w\\.\\-_]+)\\:(.*)/);\n            function getArgs(q) {\n                const args = {};\n                q.split('&').forEach(function (a) {\n                    const b = a.split('=');\n                    const k = decodeURIComponent(b[0]);\n                    args[k] = decodeURIComponent(b[1] || '');\n                });\n                return args;\n            }\n            if (spl.length === 4) {\n                const root = spl[1];\n                const args = getArgs(spl[2]);\n                if (root) {\n                    Process.getProcess(root).forEach(function (p) {\n                        p._onMessage('hashchange', {\n                            hash: hash,\n                            args: args\n                        }, { source: null });\n                    });\n                }\n            }\n        }\n        _onResize(ev) {\n            clearTimeout(this._resizeTimeout);\n            this._resizeTimeout = setTimeout(() => {\n                const space = this.getWindowSpace();\n                this.resize(ev, space);\n            }, 100);\n        }\n        _onScroll(ev) {\n            if (ev.target === document || ev.target === document.body) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                return false;\n            }\n            document.body.scrollTop = 0;\n            document.body.scrollLeft = 0;\n            return true;\n        }\n        _onFullscreen(ev) {\n            try {\n                const notif = this.Notification.getIcon('_FullscreenNotification'); // modified by lwf\n                if (notif) {\n                    if (!document.fullScreen && !document.mozFullScreen && !document.webkitIsFullScreen && !document.msFullscreenElement) {\n                        notif.opts._isFullscreen = false;\n                        notif.setImage(Theme.getIcon('actions/view-fullscreen.png', '16x16'));\n                    } else {\n                        notif.opts._isFullscreen = true;\n                        notif.setImage(Theme.getIcon('actions/view-restore.png', '16x16'));\n                    }\n                }\n            } catch (e) {\n                console.warn(e.stack, e);\n            }\n        }\n        _onContextMenu(ev) {\n            this.onContextMenu(ev);\n            if (DOM.$isFormElement(ev)) {\n                OSjs.require(\"gui/menu\").blur();\n            } else {\n                ev.preventDefault();\n                return false;\n            }\n            return true;\n        }\n        _onMouseDown(ev) {\n            if (DOM.$isFormElement(ev)) {\n                this._$lastDomInput = ev.target;\n            } else {\n                if (this._$lastDomInput) {\n                    try {\n                        this._$lastDomInput.blur();\n                    } catch (e) {\n                    }\n                    this._$lastDomInput = null;\n                }\n            }\n        }\n        _onClick(ev) {\n            let hitWindow, hitMenu;\n            let el = ev.target;\n            while (el.parentNode) {\n                if (el.tagName.match(/^GUI\\-MENU/)) {\n                    hitMenu = el;\n                } else if (el.tagName.match(/^APPLICATION\\-WINDOW/)) {\n                    hitWindow = true;\n                }\n                if (hitWindow || hitMenu) {\n                    break;\n                }\n                el = el.parentNode;\n            }\n            if (hitMenu) {\n                if (hitMenu.tagName === 'GUI-MENU-ENTRY') {\n                    if (hitMenu.getAttribute('data-disabled') !== 'true') {\n                        if (!DOM.$hasClass(hitMenu, 'gui-menu-expand')) {\n                            hitMenu = null;\n                        }\n                    }\n                } else if (hitMenu.tagName === 'GUI-MENU-BAR') {\n                    hitMenu = null;\n                }\n            }\n            if (!hitMenu) {\n                OSjs.require(\"gui/menu\").blur();\n            }\n            if (ev.target.tagName === 'BODY') {\n                const win = this.getCurrentWindow();\n                if (win) {\n                    win._blur();\n                }\n            }\n            Theme.themeAction('event', [ev]);\n        }\n        _onKeyUp(ev) {\n            const win = this.getCurrentWindow();\n            this.onKeyUp(ev, win);\n            if (win) {\n                return win._onKeyEvent(ev, 'keyup');\n            }\n            return true;\n        }\n        _onKeyDown(ev) {\n            const win = this.getCurrentWindow();\n            const reacted = (() => {\n                const combination = this.onKeyDown(ev, win);\n                if (win && !combination) {\n                    win._onKeyEvent(ev, 'keydown');\n                }\n                return combination;\n            })();\n            if (checkPrevent(ev, win) || reacted) {\n                ev.preventDefault();\n            }\n            return true;\n        }\n        _onKeyPress(ev) {\n            if (checkForbiddenKeyCombo(ev)) {\n                ev.preventDefault();\n            }\n            const win = this.getCurrentWindow();\n            if (win) {\n                return win._onKeyEvent(ev, 'keypress');\n            }\n            return true;\n        }\n        _onBeforeUnload(ev) {\n            if (Config.getConfig('ShowQuitWarning')) {\n                return Locales._('MSG_SESSION_WARNING');\n            }\n            return null;\n        }\n        _onError(message, url, linenumber, column, exception) {\n            if (typeof exception === 'string') {\n                exception = null;\n            }\n            exception = exception || {\n                name: 'window::onerror()',\n                fileName: url,\n                lineNumber: linenumber + ':' + column,\n                message: message\n            };\n            console.warn('window::onerror()', arguments);\n            OSjs.error(Locales._('ERR_JAVASCRIPT_EXCEPTION'), Locales._('ERR_JAVACSRIPT_EXCEPTION_DESC'), Locales._('BUGREPORT_MSG'), exception, true);\n            return false;\n        }\n        getDefaultSetting() {\n            return null;\n        }\n        getPanel() {\n            return null;\n        }\n        getPanels() {\n            return [];\n        }\n        setSetting(k, v) {\n            return this._settings.set(k, v);\n        }\n        getWindowSpace() {\n            return {\n                top: 0,\n                left: 0,\n                width: document.body.offsetWidth,\n                height: document.body.offsetHeight\n            };\n        }\n        getWindowPosition() {\n            const winCount = this._windows.reduce(function (count, win) {\n                return win === null ? count : count + 1;\n            }, 0);\n            return {\n                x: 10 * winCount,\n                y: 10 * winCount\n            };\n        }\n        getSetting(k) {\n            return this._settings.get(k);\n        }\n        getSettings() {\n            return this._settings.get();\n        }\n        getWindows() {\n            return this._windows.filter(w => !!w);\n        }\n        getCurrentWindow() {\n            return this._currentWin;\n        }\n        setCurrentWindow(w) {\n            this._currentWin = w || null;\n        }\n        getLastWindow() {\n            return this._lastWin;\n        }\n        setLastWindow(w) {\n            this._lastWin = w || null;\n        }\n        getMouseLocked() {\n            return this._mouselock;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/gui',[\n    './dom',\n    './events',\n    './compability',\n    '../core/package-manager',\n    '../core/theme'\n], function (DOM, Events, Compability, PackageManager, Theme) {\n    'use strict';\n    function getWindowId(el) {\n        while (el.parentNode) {\n            const attr = el.getAttribute('data-window-id');\n            if (attr !== null) {\n                return parseInt(attr, 10);\n            }\n            el = el.parentNode;\n        }\n        return null;\n    }\n    function getLabel(el) {\n        const label = el.getAttribute('data-label');\n        return label || '';\n    }\n    function getValueLabel(el, attr) {\n        let label = attr ? el.getAttribute('data-label') : null;\n        if (el.childNodes.length && el.childNodes[0].nodeType === 3 && el.childNodes[0].nodeValue) {\n            label = el.childNodes[0].nodeValue;\n            DOM.$empty(el);\n        }\n        return label || '';\n    }\n    function getViewNodeValue(el) {\n        let value = el.getAttribute('data-value');\n        if (typeof value === 'string' && value.match(/^\\[|\\{/)) {\n            try {\n                value = JSON.parse(value);\n            } catch (e) {\n                value = null;\n            }\n        }\n        return value;\n    }\n    function getIcon(el, win) {\n        let image = el.getAttribute('data-icon');\n        if (image) {\n            return win ? PackageManager.getPackageResource(win._app, image) : image;\n        }\n        image = el.getAttribute('data-stock-icon');\n        if (image && image !== 'undefined') {\n            let size = '16x16';\n            try {\n                let spl = image.split('/');\n                let tmp = spl.shift();\n                let siz = tmp.match(/^\\d+x\\d+/);\n                if (siz) {\n                    size = siz[0];\n                    image = spl.join('/');\n                }\n                image = Theme.getIcon(image, size);\n            } catch (e) {\n            }\n            return image;\n        }\n        return null;\n    }\n    function getProperty(el, param, tagName) {\n        tagName = tagName || el.tagName.toLowerCase();\n        const isDataView = tagName.match(/^gui\\-(tree|icon|list|file)\\-view$/);\n        if (param === 'value' && !isDataView) {\n            if ([\n                    'gui-text',\n                    'gui-password',\n                    'gui-textarea',\n                    'gui-slider',\n                    'gui-select',\n                    'gui-select-list'\n                ].indexOf(tagName) >= 0) {\n                return el.querySelector('input, textarea, select').value;\n            }\n            if ([\n                    'gui-checkbox',\n                    'gui-radio',\n                    'gui-switch'\n                ].indexOf(tagName) >= 0) {\n                return !!el.querySelector('input').checked;\n            }\n            return null;\n        }\n        //if ((param === 'value' || param === 'selected') && isDataView) {\n        //    return GUIElement.createFromNode(el).values();\n        //}\n        return el.getAttribute('data-' + param);\n    }\n    function createInputLabel(el, type, input, label) {\n        label = label || getLabel(el);\n        if (label) {\n            const lbl = document.createElement('label');\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(label));\n            if (type === 'checkbox' || type === 'radio') {\n                lbl.appendChild(input);\n                lbl.appendChild(span);\n            } else {\n                lbl.appendChild(span);\n                lbl.appendChild(input);\n            }\n            el.appendChild(lbl);\n        } else {\n            el.appendChild(input);\n        }\n    }\n    function setProperty(el, param, value, tagName) {\n        tagName = tagName || el.tagName.toLowerCase();\n        function _setKnownAttribute(i, k, v, a) {\n            if (v) {\n                i.setAttribute(k, k);\n            } else {\n                i.removeAttribute(k);\n            }\n            if (a) {\n                el.setAttribute('aria-' + k, String(value === true));\n            }\n        }\n        function _setValueAttribute(i, k, v) {\n            if (typeof v === 'object') {\n                try {\n                    v = JSON.stringify(value);\n                } catch (e) {\n                }\n            }\n            i.setAttribute(k, String(v));\n        }\n        const inner = el.children[0];\n        let accept = [\n            'gui-slider',\n            'gui-text',\n            'gui-password',\n            'gui-textarea',\n            'gui-checkbox',\n            'gui-radio',\n            'gui-select',\n            'gui-select-list',\n            'gui-button'\n        ];\n        (function () {\n            let firstChild;\n            const params = {\n                readonly: function () {\n                    _setKnownAttribute(firstChild, 'readonly', value, true);\n                },\n                disabled: function () {\n                    _setKnownAttribute(firstChild, 'disabled', value, true);\n                },\n                value: function () {\n                    if (tagName === 'gui-radio' || tagName === 'gui-checkbox') {\n                        _setKnownAttribute(firstChild, 'checked', value);\n                        firstChild.checked = !!value;\n                    }\n                    firstChild.value = value;\n                },\n                label: function () {\n                    el.appendChild(firstChild);\n                    DOM.$remove(el.querySelector('label'));\n                    createInputLabel(el, tagName.replace(/^gui\\-/, ''), firstChild, value);\n                }\n            };\n            if (accept.indexOf(tagName) >= 0) {\n                firstChild = el.querySelector('textarea, input, select, button');\n                if (firstChild) {\n                    if (params[param]) {\n                        params[param]();\n                    } else {\n                        _setValueAttribute(firstChild, param, value || '');\n                    }\n                }\n            }\n        }());\n        accept = [\n            'gui-image',\n            'gui-audio',\n            'gui-video'\n        ];\n        if ([\n                'src',\n                'controls',\n                'autoplay',\n                'alt'\n            ].indexOf(param) >= 0 && accept.indexOf(tagName) >= 0) {\n            inner[param] = value;\n        }\n        if ([\n                '_id',\n                '_class',\n                '_style'\n            ].indexOf(param) >= 0) {\n            inner.setAttribute(param.replace(/^_/, ''), value);\n            return;\n        }\n        if (param !== 'value') {\n            _setValueAttribute(el, 'data-' + param, value);\n        }\n    }\n    function createElement(tagName, params, ignoreParams) {\n        ignoreParams = ignoreParams || [];\n        const el = document.createElement(tagName);\n        const classMap = {\n            textalign: function (v) {\n                DOM.$addClass(el, 'gui-align-' + v);\n            },\n            className: function (v) {\n                DOM.$addClass(el, v);\n            }\n        };\n        function getValue(k, value) {\n            if (typeof value === 'boolean') {\n                value = value ? 'true' : 'false';\n            } else if (typeof value === 'object') {\n                try {\n                    value = JSON.stringify(value);\n                } catch (e) {\n                }\n            }\n            return value;\n        }\n        if (typeof params === 'object') {\n            Object.keys(params).forEach(function (k) {\n                if (ignoreParams.indexOf(k) >= 0) {\n                    return;\n                }\n                const value = params[k];\n                if (typeof value !== 'undefined' && typeof value !== 'function') {\n                    if (classMap[k]) {\n                        classMap[k](value);\n                        return;\n                    }\n                    const fvalue = getValue(k, value);\n                    el.setAttribute('data-' + k, fvalue);\n                }\n            });\n        }\n        return el;\n    }\n    function setFlexbox(el, grow, shrink, basis, checkel) {\n        checkel = checkel || el;\n        (function () {\n            if (typeof basis === 'undefined' || basis === null) {\n                basis = checkel.getAttribute('data-basis') || 'auto';\n            }\n        }());\n        (function () {\n            if (typeof grow === 'undefined' || grow === null) {\n                grow = checkel.getAttribute('data-grow') || 0;\n            }\n        }());\n        (function () {\n            if (typeof shrink === 'undefined' || shrink === null) {\n                shrink = checkel.getAttribute('data-shrink') || 0;\n            }\n        }());\n        const flex = [\n            grow,\n            shrink\n        ];\n        if (basis.length) {\n            flex.push(basis);\n        }\n        const style = flex.join(' ');\n        el.style.webkitBoxFlex = style;\n        el.style.mozBoxFlex = style;\n        el.style.webkitFlex = style;\n        el.style.mozFlex = style;\n        el.style.msFlex = style;\n        el.style.oFlex = style;\n        el.style.flex = style;\n        const align = el.getAttribute('data-align');\n        DOM.$removeClass(el, 'gui-flex-align-start');\n        DOM.$removeClass(el, 'gui-flex-align-end');\n        if (align) {\n            DOM.$addClass(el, 'gui-flex-align-' + align);\n        }\n    }\n    function createDrag(el, onDown, onMove, onUp) {\n        onDown = onDown || function () {\n        };\n        onMove = onMove || function () {\n        };\n        onUp = onUp || function () {\n        };\n        let startX, startY, currentX, currentY;\n        let dragging = false;\n        function _onMouseMove(ev, pos, touchDevice) {\n            ev.preventDefault();\n            if (dragging) {\n                currentX = pos.x;\n                currentY = pos.y;\n                const diffX = currentX - startX;\n                const diffY = currentY - startY;\n                onMove(ev, {\n                    x: diffX,\n                    y: diffY\n                }, {\n                    x: currentX,\n                    y: currentY\n                });\n            }\n        }\n        function _onMouseUp(ev, pos, touchDevice) {\n            onUp(ev, {\n                x: currentX,\n                y: currentY\n            });\n            dragging = false;\n            Events.$unbind(window, 'pointerup:guidrag');\n            Events.$unbind(window, 'pointermove:guidrag');\n        }\n        function _onMouseDown(ev, pos, touchDevice) {\n            ev.preventDefault();\n            startX = pos.x;\n            startY = pos.y;\n            onDown(ev, {\n                x: startX,\n                y: startY\n            });\n            dragging = true;\n            Events.$bind(window, 'pointerup:guidrag', _onMouseUp, false);\n            Events.$bind(window, 'pointermove:guidrag', _onMouseMove, false);\n        }\n        Events.$bind(el, 'pointerdown', _onMouseDown, false);\n    }\n    function getNextElement(prev, current, root) {\n        function getElements() {\n            const ignore_roles = [\n                'menu',\n                'menuitem',\n                'grid',\n                'gridcell',\n                'listitem'\n            ];\n            const list = [];\n            root.querySelectorAll('.gui-element').forEach(function (e) {\n                if (DOM.$hasClass(e, 'gui-focus-element') || ignore_roles.indexOf(e.getAttribute('role')) >= 0 || e.getAttribute('data-disabled') === 'true') {\n                    return;\n                }\n                if (e.offsetParent) {\n                    list.push(e);\n                }\n            });\n            return list;\n        }\n        function getCurrentIndex(els, m) {\n            let found = -1;\n            if (m) {\n                els.every(function (e, idx) {\n                    if (e === m) {\n                        found = idx;\n                    }\n                    return found === -1;\n                });\n            }\n            return found;\n        }\n        function getCurrentParent(els, m) {\n            if (m) {\n                let cur = m;\n                while (cur.parentNode) {\n                    if (DOM.$hasClass(cur, 'gui-element')) {\n                        return cur;\n                    }\n                    cur = cur.parentNode;\n                }\n                return null;\n            }\n            return els[0];\n        }\n        function getNextIndex(els, p, i) {\n            if (prev) {\n                i = i <= 0 ? els.length - 1 : i - 1;\n            } else {\n                i = i >= els.length - 1 ? 0 : i + 1;\n            }\n            return i;\n        }\n        function getNext(els, i) {\n            let next = els[i];\n            if (next.tagName.match(/^GUI\\-(BUTTON|TEXT|PASSWORD|SWITCH|CHECKBOX|RADIO|SELECT)/)) {\n                next = next.querySelectorAll('input, textarea, button, select')[0];\n            }\n            if (next.tagName === 'GUI-FILE-VIEW') {\n                next = next.children[0];\n            }\n            return next;\n        }\n        if (root) {\n            const elements = getElements();\n            if (elements.length) {\n                const currentParent = getCurrentParent(elements, current);\n                const currentIndex = getCurrentIndex(elements, currentParent);\n                if (currentIndex >= 0) {\n                    const nextIndex = getNextIndex(elements, currentParent, currentIndex);\n                    return getNext(elements, nextIndex);\n                }\n            }\n        }\n        return null;\n    }\n    function createDraggable(el, args) {\n        args = Object.assign({}, {\n            type: null,\n            effect: 'move',\n            data: null,\n            mime: 'application/json',\n            dragImage: null,\n            onStart: function () {\n                return true;\n            },\n            onEnd: function () {\n                return true;\n            }\n        }, args);\n        if (Compability.isIE()) {\n            args.mime = 'text';\n        }\n        function _toString(mime) {\n            return JSON.stringify({\n                type: args.type,\n                effect: args.effect,\n                data: args.data,\n                mime: args.mime\n            });\n        }\n        function _dragStart(ev) {\n            try {\n                ev.dataTransfer.effectAllowed = args.effect;\n                if (args.dragImage && typeof args.dragImage === 'function') {\n                    if (ev.dataTransfer.setDragImage) {\n                        const dragImage = args.dragImage(ev, el);\n                        if (dragImage) {\n                            const dragEl = dragImage.element;\n                            const dragPos = dragImage.offset;\n                            document.body.appendChild(dragEl);\n                            ev.dataTransfer.setDragImage(dragEl, dragPos.x, dragPos.y);\n                        }\n                    }\n                }\n                ev.dataTransfer.setData(args.mime, _toString(args.mime));\n            } catch (e) {\n                console.warn('Failed to dragstart: ' + e);\n                console.warn(e.stack);\n            }\n        }\n        el.setAttribute('draggable', 'true');\n        el.setAttribute('aria-grabbed', 'false');\n        Events.$bind(el, 'dragstart', function (ev) {\n            this.setAttribute('aria-grabbed', 'true');\n            this.style.opacity = '0.4';\n            if (ev.dataTransfer) {\n                _dragStart(ev);\n            }\n            return args.onStart(ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragend', function (ev) {\n            this.setAttribute('aria-grabbed', 'false');\n            this.style.opacity = '1.0';\n            return args.onEnd(ev, this, args);\n        }, false);\n    }\n    function createDroppable(el, args) {\n        args = Object.assign({}, {\n            accept: null,\n            effect: 'move',\n            mime: 'application/json',\n            files: true,\n            onFilesDropped: function () {\n                return true;\n            },\n            onItemDropped: function () {\n                return true;\n            },\n            onEnter: function () {\n                return true;\n            },\n            onOver: function () {\n                return true;\n            },\n            onLeave: function () {\n                return true;\n            },\n            onDrop: function () {\n                return true;\n            }\n        }, args);\n        if (Compability.isIE()) {\n            args.mime = 'text';\n        }\n        function getParent(start, matcher) {\n            if (start === matcher) {\n                return true;\n            }\n            let i = 10;\n            while (start && i > 0) {\n                if (start === matcher) {\n                    return true;\n                }\n                start = start.parentNode;\n                i--;\n            }\n            return false;\n        }\n        function _doDrop(ev, el) {\n            if (!ev.dataTransfer) {\n                return true;\n            }\n            if (args.files) {\n                const files = ev.dataTransfer.files;\n                if (files && files.length) {\n                    return args.onFilesDropped(ev, el, files, args);\n                }\n            }\n            try {\n                const data = ev.dataTransfer.getData(args.mime);\n                const item = JSON.parse(data);\n                if (args.accept === null || args.accept === item.type) {\n                    return args.onItemDropped(ev, el, item, args);\n                }\n            } catch (e) {\n                console.warn('Failed to drop: ' + e);\n            }\n            return false;\n        }\n        function _onDrop(ev, el) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            const result = _doDrop(ev, el);\n            args.onDrop(ev, el);\n            return result;\n        }\n        el.setAttribute('aria-dropeffect', args.effect);\n        Events.$bind(el, 'drop', function (ev) {\n            return _onDrop(ev, this);\n        }, false);\n        Events.$bind(el, 'dragenter', function (ev) {\n            return args.onEnter.call(this, ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragover', function (ev) {\n            ev.preventDefault();\n            if (!getParent(ev.target, el)) {\n                return false;\n            }\n            ev.stopPropagation();\n            ev.dataTransfer.dropEffect = args.effect;\n            return args.onOver.call(this, ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragleave', function (ev) {\n            return args.onLeave.call(this, ev, this, args);\n        }, false);\n    }\n    return {\n        getWindowId: getWindowId,\n        getLabel: getLabel,\n        getValueLabel: getValueLabel,\n        getViewNodeValue: getViewNodeValue,\n        getIcon: getIcon,\n        getProperty: getProperty,\n        createInputLabel: createInputLabel,\n        setProperty: setProperty,\n        createElement: createElement,\n        setFlexbox: setFlexbox,\n        createDrag: createDrag,\n        getNextElement: getNextElement,\n        createDraggable: createDraggable,\n        createDroppable: createDroppable\n    };\n});\ndefine('skylark-osjsv2-client/gui/element',[\n    '../utils/dom',\n    '../utils/gui',\n    '../core/locales',\n    '../core/package-manager'\n], function (DOM, GUI, Locales, PackageManager) {\n    'use strict';\n    let REGISTRY = {};\n    function getFocusElement(inst) {\n        const tagMap = {\n            'gui-switch': 'button',\n            'gui-list-view': 'textarea',\n            'gui-tree-view': 'textarea',\n            'gui-icon-view': 'textarea',\n            'gui-input-modal': 'button'\n        };\n        if (tagMap[inst.tagName]) {\n            return inst.$element.querySelector(tagMap[inst.tagName]);\n        }\n        return inst.$element.firstChild || inst.$element;\n    }\n    function parseDynamic(node, win, args) {\n        args = args || {};\n        const translator = args.undefined || Locales._;\n        node.querySelectorAll('*[data-label]').forEach(function (el) {\n            const label = translator(el.getAttribute('data-label'));\n            el.setAttribute('data-label', label);\n        });\n        node.querySelectorAll('gui-label, gui-button, gui-list-view-column, gui-select-option, gui-select-list-option').forEach(function (el) {\n            if (!el.children.length && !el.getAttribute('data-no-translate')) {\n                const lbl = GUI.getValueLabel(el);\n                el.appendChild(document.createTextNode(translator(lbl)));\n            }\n        });\n        node.querySelectorAll('gui-button').forEach(function (el) {\n            const label = GUI.getValueLabel(el);\n            if (label) {\n                el.appendChild(document.createTextNode(Locales._(label)));\n            }\n        });\n        node.querySelectorAll('*[data-icon], *[data-stock-icon]').forEach(function (el) {\n            const image = GUI.getIcon(el, win);\n            el.setAttribute('data-icon', image);\n        });\n        node.querySelectorAll('*[data-src],*[src]').forEach(function (el) {\n            const isNative = el.hasAttribute('src');\n            const src = isNative ? el.getAttribute('src') : el.getAttribute('data-src') || '';\n            if (win && win._app && !src.match(/^(https?:)?\\//)) {\n                const source = PackageManager.getPackageResource(win._app, src);\n                el.setAttribute(isNative ? 'src' : 'data-src', source);\n            }\n        });\n    }\n    function createElementInstance(tagName, el, q, buildArgs) {\n        tagName = tagName || el.tagName.toLowerCase();\n        let instance;\n        if (REGISTRY[tagName]) {\n            instance = new REGISTRY[tagName].component(el, q);\n            if (buildArgs) {\n                instance.build.apply(instance, buildArgs);\n            }\n        }\n        return instance;\n    }\n    return class GUIElement {\n        constructor(el, q) {\n            this.$element = el || null;\n            this.tagName = el ? el.tagName.toLowerCase() : null;\n            this.oldDisplay = null;\n            if (!el) {\n                console.warn('GUIElement() was constructed without a DOM element', q);\n            }\n        }\n        build() {\n            return this;\n        }\n        remove() {\n            this.$element = DOM.$remove(this.$element);\n            return this;\n        }\n        empty() {\n            DOM.$empty(this.$element);\n            return this;\n        }\n        blur() {\n            if (this.$element) {\n                const firstChild = getFocusElement(this);\n                if (firstChild) {\n                    firstChild.blur();\n                }\n            }\n            return this;\n        }\n        focus() {\n            if (this.$element) {\n                const firstChild = getFocusElement(this);\n                if (firstChild) {\n                    firstChild.focus();\n                }\n            }\n            return this;\n        }\n        show() {\n            if (this.$element && !this.$element.offsetParent) {\n                if (this.$element) {\n                    this.$element.style.display = this.oldDisplay || '';\n                }\n            }\n            return this;\n        }\n        hide() {\n            if (this.$element && this.$element.offsetParent) {\n                if (!this.oldDisplay) {\n                    this.oldDisplay = this.$element.style.display;\n                }\n                this.$element.style.display = 'none';\n            }\n            return this;\n        }\n        on(evName, callback, args) {\n            return this;\n        }\n        son(evName, thisArg, callback, args) {\n            return this.on(evName, function () {\n                const args = Array.prototype.slice.call(arguments);\n                args.unshift(this);\n                callback.apply(thisArg, args);\n            }, args);\n        }\n        set(param, value, arg, arg2) {\n            if (this.$element) {\n                GUI.setProperty(this.$element, param, value, arg, arg2);\n            }\n            return this;\n        }\n        get(param) {\n            if (this.$element) {\n                return GUIElement.getProperty(this.$element, param); // modified by lwf\n            }\n            return null;\n        }\n        append(el) {\n            if (el instanceof GUIElement) {\n                el = el.$element;\n            } else if (typeof el === 'string' || typeof el === 'number') {\n                el = document.createTextNode(String(el));\n            }\n            let outer = document.createElement('div');\n            outer.appendChild(el);\n            this._append(outer);\n            outer = null;\n            return this;\n        }\n        appendHTML(html, win, args) {\n            const el = document.createElement('div');\n            el.innerHTML = html;\n            return this._append(el, win, args);\n        }\n        _append(el, win, args) {\n            if (el instanceof Element) {\n                GUIElement.parseNode(win, el, null, args);\n            }\n            while (el.childNodes.length) {\n                this.$element.appendChild(el.childNodes[0]);\n            }\n            el = null;\n            return this;\n        }\n        querySelector(q, rui) {\n            const el = this.$element.querySelector(q);\n            if (rui) {\n                return GUIElement.createFromNode(el, q);\n            }\n            return el;\n        }\n        querySelectorAll(q, rui) {\n            let el = this.$element.querySelectorAll(q);\n            if (rui) {\n                el = el.map(i => {\n                    return GUIElement.createFromNode(i, q);\n                });\n            }\n            return el;\n        }\n        css(k, v) {\n            DOM.$css(this.$element, k, v);\n            return this;\n        }\n        position() {\n            return DOM.$position(this.$element);\n        }\n        _call(method, args, thisArg) {\n            if (arguments.length < 3) {\n                console.warn('Element::_call(\"methodName\") is DEPRECATED, use \"instance.methodName()\" instead');\n            }\n            try {\n                if (typeof this._call === 'function') {\n                    return this._call(method, args);\n                }\n                return this[method](args);\n            } catch (e) {\n                console.warn(e.stack, e);\n            }\n            return null;\n        }\n        fn(name, args, thisArg) {\n            console.warn('Element::fn(\"methodName\") is DEPRECATED, use \"instance.methodName()\" instead');\n            args = args || [];\n            thisArg = thisArg || this;\n            return this.fn(name, args, thisArg);\n        }\n        static createInto(tagName, params, parentNode, applyArgs, win) {\n            if (parentNode instanceof GUIElement) {\n                parentNode = parentNode.$element;\n            }\n            const gel = GUIElement.create(tagName, params, applyArgs, win);\n            parentNode.appendChild(gel.$element);\n            return gel;\n        }\n        static createFromNode(el, q, tagName) {\n            if (el) {\n                const instance = createElementInstance(null, el, q);\n                if (instance) {\n                    return instance;\n                }\n            }\n            return new GUIElement(el, q);\n        }\n\n        static getProperty(el, param, tagName) { // added by lwf\n            tagName = tagName || el.tagName.toLowerCase();\n            const isDataView = tagName.match(/^gui\\-(tree|icon|list|file)\\-view$/);\n            if ((param === 'value' || param === 'selected') && isDataView) {\n                return GUIElement.createFromNode(el).values();\n            }\n\n            return GUI.getProperty(el,param,tagName);\n        }\n\n        static create(tagName, params, applyArgs, win) {\n            tagName = tagName || '';\n            applyArgs = applyArgs || {};\n            params = params || {};\n            const el = GUI.createElement(tagName, params);\n            return createElementInstance(null, el, null, [\n                applyArgs,\n                win\n            ]);\n        }\n        static createInstance(el, q, tagName) {\n            console.warn('Element::createInstance() is DEPRECATED, use Element::createFromNode() instead');\n            return this.createFromNode(el, q, tagName);\n        }\n        static parseNode(win, node, type, args, onparse, id) {\n            onparse = onparse || function () {\n            };\n            args = args || {};\n            type = type || 'snipplet';\n            node.querySelectorAll('*').forEach(el => {\n                const lcase = el.tagName.toLowerCase();\n                if (lcase.match(/^gui\\-/) && !lcase.match(/(\\-container|\\-(h|v)box|\\-columns?|\\-rows?|(status|tool)bar|(button|menu)\\-bar|bar\\-entry)$/)) {\n                    DOM.$addClass(el, 'gui-element');\n                }\n            });\n            parseDynamic(node, win, args);\n            onparse(node);\n            Object.keys(REGISTRY).forEach(key => {\n                node.querySelectorAll(key).forEach(pel => {\n                    if (pel._wasParsed || DOM.$hasClass(pel, 'gui-data-view')) {\n                        return;\n                    }\n                    try {\n                        createElementInstance(key, pel, null, []);\n                    } catch (e) {\n                        console.warn('parseNode()', id, type, win, 'exception');\n                        console.warn(e, e.stack);\n                    }\n                    pel._wasParsed = true;\n                });\n            });\n        }\n        static register(data, classRef) {\n            const name = data.tagName;\n            if (REGISTRY[name]) {\n                throw new Error('GUI Element \"' + name + '\" already exists');\n            }\n            REGISTRY[name] = (() => {\n                const metadata = Object.assign({}, {\n                    type: 'element',\n                    allowedChildren: [],\n                    allowedParents: []\n                }, data);\n                if (metadata.parent) {\n                    delete metadata.parent;\n                }\n                if (metadata.type === 'input') {\n                    metadata.allowedChildren = true;\n                } else if (metadata.type !== 'container') {\n                    metadata.allowedChildren = false;\n                }\n                return {\n                    metadata: metadata,\n                    component: classRef\n                };\n            })();\n        }\n        static getRegisteredElement(tagName) {\n            return REGISTRY[tagName];\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/scheme',[\n    'skylark-axios',\n    '../utils/dom',\n    './element',\n    '../core/config'\n], function (axios, DOM, GUIElement, Config) {\n    'use strict';\n    function addChildren(frag, root, before) {\n        if (frag) {\n            const children = frag.children;\n            let i = 0;\n            while (children.length && i < 10000) {\n                if (before) {\n                    root.parentNode.insertBefore(children[0], root);\n                } else {\n                    root.appendChild(children[0]);\n                }\n                i++;\n            }\n        }\n    }\n    function resolveFragments(scheme, node) {\n        function _resolve() {\n            const nodes = node.querySelectorAll('gui-fragment');\n            if (nodes.length) {\n                nodes.forEach(function (el) {\n                    const id = el.getAttribute('data-fragment-id');\n                    if (id) {\n                        const frag = scheme.getFragment(id, 'application-fragment');\n                        if (frag) {\n                            addChildren(frag.cloneNode(true), el.parentNode);\n                        } else {\n                            console.warn('Fragment', id, 'not found');\n                        }\n                    }\n                    DOM.$remove(el);\n                });\n                return true;\n            }\n            return false;\n        }\n        if (scheme) {\n            let resolving = true;\n            while (resolving) {\n                resolving = _resolve();\n            }\n        }\n    }\n    function removeSelfClosingTags(str) {\n        const split = (str || '').split('/>');\n        let newhtml = '';\n        for (let i = 0; i < split.length - 1; i++) {\n            const edsplit = split[i].split('<');\n            newhtml += split[i] + '></' + edsplit[edsplit.length - 1].split(' ')[0] + '>';\n        }\n        return newhtml + split[split.length - 1];\n    }\n    function cleanScheme(html) {\n        return DOM.$clean(removeSelfClosingTags(html));\n    }\n    return class GUIScheme {\n        constructor(url) {\n            console.debug('GUIScheme::construct()', url);\n            this.url = url;\n            this.scheme = null;\n            this.triggers = { render: [] };\n        }\n        destroy() {\n            DOM.$empty(this.scheme);\n            this.scheme = null;\n            this.triggers = {};\n        }\n        on(f, fn) {\n            this.triggers[f].push(fn);\n        }\n        _trigger(f, args) {\n            args = args || [];\n            if (this.triggers[f]) {\n                this.triggers[f].forEach(fn => {\n                    fn.apply(this, args);\n                });\n            }\n        }\n        _load(html, src) {\n            let doc = document.createDocumentFragment();\n            let wrapper = document.createElement('div');\n            wrapper.innerHTML = html;\n            doc.appendChild(wrapper);\n            this.scheme = doc.cloneNode(true);\n            if (Config.getConfig('DebugScheme')) {\n                console.group('Scheme::_load() validation', src);\n                this.scheme.querySelectorAll('*').forEach(node => {\n                    const tagName = node.tagName.toLowerCase();\n                    const gelData = GUIElement.getRegisteredElement(tagName);\n                    if (gelData) {\n                        const ac = gelData.metadata.allowedChildren;\n                        if (ac instanceof Array && ac.length) {\n                            const childrenTagNames = node.children.map(sNode => {\n                                return sNode.tagName.toLowerCase();\n                            });\n                            childrenTagNames.forEach((chk, idx) => {\n                                const found = ac.indexOf(chk);\n                                if (found === -1) {\n                                    console.warn(chk, node.children[idx], 'is not a valid child of type', tagName);\n                                }\n                            });\n                        }\n                        const ap = gelData.metadata.allowedParents;\n                        if (ap instanceof Array && ap.length) {\n                            const parentTagName = node.parentNode.tagName.toLowerCase();\n                            if (ap.indexOf(parentTagName) === -1) {\n                                console.warn(parentTagName, node.parentNode, 'is in an invalid parent of type', tagName);\n                            }\n                        }\n                    }\n                });\n                console.groupEnd();\n            }\n            wrapper = null;\n            doc = null;\n        }\n        load(cb, cbxhr) {\n            cbxhr = cbxhr || function () {\n            };\n            console.debug('GUIScheme::load()', this.url);\n            let src = this.url;\n            if (src.substr(0, 1) !== '/' && !src.match(/^(https?|ftp)/)) {\n                src = Config.getBrowserPath(src);\n            }\n            axios({\n                url: src,\n                method: 'GET'\n            }).then(response => {\n                const html = cleanScheme(response.data);\n                cbxhr(false, html);\n                this._load(html, src);\n                cb(false, this.scheme);\n            }).catch(err => {\n                cb('Failed to fetch scheme: ' + err.message);\n                cbxhr(true);\n            });\n        }\n        getFragment(id, type) {\n            let content = null;\n            if (id) {\n                if (type) {\n                    content = this.scheme.querySelector(type + '[data-id=\"' + id + '\"]');\n                } else {\n                    content = this.scheme.querySelector('application-window[data-id=\"' + id + '\"]') || this.scheme.querySelector('application-dialog[data-id=\"' + id + '\"]') || this.scheme.querySelector('application-fragment[data-id=\"' + id + '\"]');\n                }\n            }\n            return content;\n        }\n        parse(id, type, win, onparse, args) {\n            const content = this.getFragment(id, type);\n            console.debug('GUIScheme::parse()', id);\n            if (!content) {\n                console.error('GUIScheme::parse()', 'No fragment found', id + '@' + type);\n                return null;\n            }\n            type = type || content.tagName.toLowerCase();\n            args = args || {};\n            if (content) {\n                const node = content.cloneNode(true);\n                if (args.resolve !== false) {\n                    resolveFragments(this, node);\n                }\n                GUIElement.parseNode(win, node, type, args, onparse, id);\n                return node;\n            }\n            return null;\n        }\n        render(win, id, root, type, onparse, args) {\n            root = root || win._getRoot();\n            if (root instanceof GUIElement) {\n                root = root.$element;\n            }\n            function setWindowProperties(frag) {\n                if (frag) {\n                    const width = parseInt(frag.getAttribute('data-width'), 10) || 0;\n                    const height = parseInt(frag.getAttribute('data-height'), 10) || 0;\n                    const allow_maximize = frag.getAttribute('data-allow_maximize');\n                    const allow_minimize = frag.getAttribute('data-allow_minimize');\n                    const allow_close = frag.getAttribute('data-allow_close');\n                    const allow_resize = frag.getAttribute('data-allow_resize');\n                    if (!isNaN(width) && width > 0 || !isNaN(height) && height > 0) {\n                        win._resize(width, height);\n                    }\n                    win._setProperty('allow_maximize', allow_maximize);\n                    win._setProperty('allow_minimize', allow_minimize);\n                    win._setProperty('allow_close', allow_close);\n                    win._setProperty('allow_resize', allow_resize);\n                }\n            }\n            console.debug('GUIScheme::render()', id);\n            const content = this.parse(id, type, win, onparse, args);\n            addChildren(content, root);\n            root.querySelectorAll('application-fragment').forEach(e => {\n                DOM.$remove(e);\n            });\n            if (!win._restored) {\n                setWindowProperties(this.getFragment(id));\n            }\n            this._trigger('render', [root]);\n        }\n        getHTML() {\n            return this.scheme.firstChild.innerHTML;\n        }\n        static fromString(str) {\n            const inst = new GUIScheme(null);\n            const cleaned = cleanScheme(str);\n            inst._load(cleaned, '<html>');\n            return inst;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/menu',[\n    '../utils/gui',\n    '../utils/dom',\n    '../utils/events',\n    './element',\n    '../core/window-manager',\n    '../helpers/hooks'\n], function (GUI, DOM, Events, GUIElement, WindowManager, Hooks) {\n    'use strict';\n    let lastMenu;\n    function clickWrapper(ev, pos, onclick, original) {\n        ev.stopPropagation();\n        let t = ev.target;\n        if (t && t.tagName === 'LABEL') {\n            t = t.parentNode;\n        }\n        let isExpander = false;\n        if (t && t.tagName === 'GUI-MENU-ENTRY') {\n            let subMenu = t.querySelector('gui-menu');\n            isExpander = !!subMenu;\n            try {\n                if (isExpander && !ev.isTrusted) {\n                    t.parentNode.querySelectorAll('gui-menu-entry').forEach(pn => {\n                        DOM.$removeClass(pn, 'active');\n                    });\n                    DOM.$addClass(t, 'active');\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n            onclick(ev, pos, t, original, isExpander);\n        }\n    }\n    function clamp(r) {\n        function _clamp(rm) {\n            rm.querySelectorAll('gui-menu-entry').forEach(function (srm) {\n                const sm = srm.querySelector('gui-menu');\n                if (sm) {\n                    sm.style.left = String(-parseInt(sm.offsetWidth, 10)) + 'px';\n                    _clamp(sm);\n                }\n            });\n        }\n        const pos = DOM.$position(r);\n        if (pos && window.innerWidth - pos.right < r.offsetWidth) {\n            DOM.$addClass(r, 'gui-overflowing');\n            _clamp(r);\n        }\n        DOM.$addClass(r, 'gui-showing');\n    }\n    function clampSubMenu(sm) {\n        if (sm) {\n            const pos = DOM.$position(sm);\n            const wm = WindowManager.instance;\n            const space = wm.getWindowSpace(true);\n            if (pos) {\n                const diff = space.height - pos.bottom;\n                if (diff < 0) {\n                    sm.style.marginTop = String(diff) + 'px';\n                }\n            }\n        }\n    }\n    function blur(ev) {\n        if (lastMenu) {\n            lastMenu(ev);\n        }\n        lastMenu = null;\n        Hooks.triggerHook('menuBlur');\n    }\n    function create(items, ev, customInstance) {\n        items = items || [];\n        blur(ev);\n        let root = customInstance;\n        let callbackMap = [];\n        function resolveItems(arr, par) {\n            arr.forEach(function (iter) {\n                const props = {\n                    label: iter.title,\n                    icon: iter.icon,\n                    disabled: iter.disabled,\n                    labelHTML: iter.titleHTML,\n                    type: iter.type,\n                    checked: iter.checked\n                };\n                const entry = GUI.createElement('gui-menu-entry', props);\n                if (iter.menu) {\n                    const nroot = GUI.createElement('gui-menu', {});\n                    resolveItems(iter.menu, nroot);\n                    entry.appendChild(nroot);\n                }\n                if (iter.onClick) {\n                    const index = callbackMap.push(iter.onClick);\n                    entry.setAttribute('data-callback-id', String(index - 1));\n                }\n                par.appendChild(entry);\n            });\n        }\n        if (!root) {\n            root = GUI.createElement('gui-menu', {});\n            resolveItems(items || [], root);\n            GUIElement.createFromNode(root, null, 'gui-menu').build(true);\n            Events.$bind(root, 'mouseover', function (ev, pos) {\n                if (ev.target && ev.target.tagName === 'GUI-MENU-ENTRY') {\n                    setTimeout(() => {\n                        clampSubMenu(ev.target.querySelector('gui-menu'));\n                    }, 1);\n                }\n            }, true);\n            Events.$bind(root, 'click', function (ev, pos) {\n                clickWrapper(ev, pos, function (ev, pos, t, orig, isExpander) {\n                    const index = parseInt(t.getAttribute('data-callback-id'), 10);\n                    if (callbackMap[index]) {\n                        callbackMap[index](ev, pos);\n                    }\n                    if (!isExpander) {\n                        blur(ev);\n                    }\n                });\n            }, true);\n        }\n        if (root.$element) {\n            root = root.$element;\n        }\n        const wm = WindowManager.instance;\n        const space = wm.getWindowSpace(true);\n        const pos = Events.mousePosition(ev);\n        DOM.$addClass(root, 'gui-root-menu');\n        root.style.left = pos.x + 'px';\n        root.style.top = pos.y + 'px';\n        document.body.appendChild(root);\n        setTimeout(function () {\n            const pos = DOM.$position(root);\n            if (pos) {\n                if (pos.right > space.width) {\n                    const newLeft = Math.round(space.width - pos.width);\n                    root.style.left = Math.max(0, newLeft) + 'px';\n                }\n                if (pos.bottom > space.height) {\n                    const newTop = Math.round(space.height - pos.height);\n                    root.style.top = Math.max(0, newTop) + 'px';\n                }\n            }\n            clamp(root);\n            lastMenu = function () {\n                callbackMap = [];\n                if (root) {\n                    root.querySelectorAll('gui-menu-entry').forEach(function (el) {\n                        Events.$unbind(el);\n                    });\n                    Events.$unbind(root);\n                }\n                root = DOM.$remove(root);\n            };\n        }, 1);\n    }\n    function setActive(menu) {\n        blur();\n        lastMenu = menu;\n    }\n    return {\n        clickWrapper: clickWrapper,\n        clamp: clamp,\n        blur: blur,\n        create: create,\n        setActive: setActive\n    };\n});\ndefine('skylark-osjsv2-client/core/window',[\n    '../vfs/file',\n//    './application',\n    './window-manager',\n    '../gui/element',\n    '../gui/scheme',\n    '../helpers/event-handler',\n    './theme',\n    '../utils/dom',\n    '../utils/gui',\n    '../utils/events',\n    '../utils/compability',\n    '../utils/keycodes',\n    '../gui/menu',\n    './locales',\n//    './init'\n], function (FileMetadata, WindowManager, Element, GUIScheme, EventHandler, Theme, DOM, GUI, Events, Compability, Keycodes, Menu, locales) {\n    'use strict';\n    function camelCased(str) {\n        return str.replace(/_([a-z])/g, function (g) {\n            return g[1].toUpperCase();\n        });\n    }\n    const getNextZindex = function () {\n        let _lzindex = 1;\n        let _ltzindex = 100000;\n        return function (ontop) {\n            if (typeof ontop !== 'undefined' && ontop === true) {\n                return _ltzindex += 2;\n            }\n            return _lzindex += 2;\n        };\n    }();\n    function getWindowSpace() {\n        const wm = WindowManager.instance;\n        if (wm) {\n            return wm.getWindowSpace();\n        }\n        return {\n            top: 0,\n            left: 0,\n            width: document.body.offsetWidth,\n            height: document.body.offsetHeight\n        };\n    }\n    function waitForAnimation(win, cb) {\n        const wm = WindowManager.instance;\n        const anim = wm ? wm.getSetting('animations') : false;\n        if (anim) {\n            win._animationCallback = cb;\n        } else {\n            cb();\n        }\n    }\n    const createMediaQueries = function () {\n        let queries;\n        function _createQueries() {\n            let result = {};\n            const wm = WindowManager.instance;\n            if (wm) {\n                const qs = wm.getDefaultSetting('mediaQueries') || {};\n                Object.keys(qs).forEach(function (k) {\n                    if (qs[k]) {\n                        result[k] = function (w, h, ref) {\n                            return w <= qs[k];\n                        };\n                    }\n                });\n            }\n            return result;\n        }\n        return function () {\n            if (!queries) {\n                queries = _createQueries();\n            }\n            return queries;\n        };\n    }();\n    function checkMediaQueries(win) {\n        const wm = WindowManager.instance;\n        if (!win._$element || !wm) {\n            return;\n        }\n        let n = '';\n        let k;\n        const qs = win._properties.media_queries || {};\n        const w = win._$element.offsetWidth;\n        const h = win._$element.offsetHeight;\n        for (k in qs) {\n            if (qs.hasOwnProperty(k)) {\n                if (qs[k](w, h, win)) {\n                    n = k;\n                    break;\n                }\n            }\n        }\n        win._$element.setAttribute('data-media', n);\n    }\n    let _WID = 0;\n    let _DEFAULT_WIDTH = 200;\n    let _DEFAULT_HEIGHT = 200;\n    let _DEFAULT_MIN_HEIGHT = 150;\n    let _DEFAULT_MIN_WIDTH = 150;\n    let _DEFAULT_SND_VOLUME = 1;\n    let _NAMES = [];\n    return class Window {\n        constructor(name, opts, appRef) {\n            if (_NAMES.indexOf(name) >= 0) {\n                throw new Error(locales._('ERR_WIN_DUPLICATE_FMT', name));\n            }\n            //if (appRef && !(appRef instanceof Application)) { // modifed by lwf\n            //    throw new TypeError('appRef given was not instance of Application');\n            //}\n            opts = Object.assign({}, {\n                icon: Theme.getIcon('apps/preferences-system-windows.png'),\n                width: _DEFAULT_WIDTH,\n                height: _DEFAULT_HEIGHT,\n                title: name,\n                tag: name,\n                auto_size: false\n            }, opts);\n            console.group('Window::constructor()', _WID, arguments);\n            this._$element = null;\n            this._$root = null;\n            this._$top = null;\n            this._$winicon = null;\n            this._$loading = null;\n            this._$disabled = null;\n            this._$resize = null;\n            this._$warning = null;\n            this._opts = opts;\n            this._app = appRef || null;\n            this._destroyed = false;\n            this._restored = false;\n            this._loaded = false;\n            this._initialized = false;\n            this._disabled = true;\n            this._loading = false;\n            this._wid = _WID;\n            this._icon = opts.icon;\n            this._name = name;\n            this._title = opts.title;\n            this._tag = opts.tag;\n            this._position = {\n                x: opts.x,\n                y: opts.y\n            };\n            this._dimension = {\n                w: opts.width,\n                h: opts.height\n            };\n            this._children = [];\n            this._parent = null;\n            this._origtitle = this._title;\n            this._lastDimension = this._dimension;\n            this._lastPosition = this._position;\n            this._sound = null;\n            this._soundVolume = _DEFAULT_SND_VOLUME;\n            this._scheme = null;\n            this._properties = {\n                gravity: null,\n                allow_move: true,\n                allow_resize: true,\n                allow_minimize: true,\n                allow_maximize: true,\n                allow_close: true,\n                allow_windowlist: true,\n                allow_drop: false,\n                allow_iconmenu: true,\n                allow_ontop: true,\n                allow_hotkeys: true,\n                allow_session: true,\n                key_capture: false,\n                start_focused: true,\n                min_width: _DEFAULT_MIN_HEIGHT,\n                min_height: _DEFAULT_MIN_WIDTH,\n                max_width: null,\n                max_height: null,\n                media_queries: createMediaQueries()\n            };\n            this._state = {\n                focused: false,\n                modal: false,\n                minimized: false,\n                maximized: false,\n                ontop: false,\n                onbottom: false\n            };\n            this._animationCallback = null;\n            this._queryTimer = null;\n            this._evHandler = new EventHandler(name, [\n                'focus',\n                'blur',\n                'destroy',\n                'maximize',\n                'minimize',\n                'restore',\n                'move',\n                'moved',\n                'resize',\n                'resized',\n                'keydown',\n                'keyup',\n                'keypress',\n                'drop',\n                'drop:upload',\n                'drop:file'\n            ]);\n            Object.keys(opts).forEach(k => {\n                if (typeof this._properties[k] !== 'undefined') {\n                    this._properties[k] = opts[k];\n                } else if (typeof this._state[k] !== 'undefined' && k !== 'focused') {\n                    this._state[k] = opts[k];\n                } else if (('sound', 'sound_volume').indexOf(k) !== -1) {\n                    this['_' + camelCased(k)] = opts[k];\n                }\n            });\n            ((properties, position) => {\n                if (!properties.gravity && typeof position.x === 'undefined' || typeof position.y === 'undefined') {\n                    const wm = WindowManager.instance;\n                    const np = wm ? wm.getWindowPosition() : {\n                        x: 0,\n                        y: 0\n                    };\n                    position.x = np.x;\n                    position.y = np.y;\n                }\n            })(this._properties, this._position);\n            ((properties, dimension) => {\n                if (properties.min_height && dimension.h < properties.min_height) {\n                    dimension.h = properties.min_height;\n                }\n                if (properties.max_width && dimension.w < properties.max_width) {\n                    dimension.w = properties.max_width;\n                }\n                if (properties.max_height && dimension.h > properties.max_height) {\n                    dimension.h = properties.max_height;\n                }\n                if (properties.max_width && dimension.w > properties.max_width) {\n                    dimension.w = properties.max_width;\n                }\n            })(this._properties, this._dimension);\n            ((position, dimension) => {\n                if (appRef && appRef.__args && appRef.__args.__windows__) {\n                    appRef.__args.__windows__.forEach(restore => {\n                        if (!this._restored && restore.name && restore.name === this._name) {\n                            position.x = restore.position.x;\n                            position.y = restore.position.y;\n                            if (this._properties.allow_resize) {\n                                dimension.w = restore.dimension.w;\n                                dimension.h = restore.dimension.h;\n                            }\n                            console.info('RESTORED FROM SESSION', restore);\n                            this._restored = true;\n                        }\n                    });\n                }\n            })(this._position, this._dimension);\n            ((properties, position, dimension, restored) => {\n                const grav = properties.gravity;\n                if (grav && !restored) {\n                    if (grav === 'center') {\n                        position.y = window.innerHeight / 2 - this._dimension.h / 2;\n                        position.x = window.innerWidth / 2 - this._dimension.w / 2;\n                    } else {\n                        const space = getWindowSpace();\n                        if (grav.match(/^south/)) {\n                            position.y = space.height - dimension.h;\n                        } else {\n                            position.y = space.top;\n                        }\n                        if (grav.match(/west$/)) {\n                            position.x = space.left;\n                        } else {\n                            position.x = space.width - dimension.w;\n                        }\n                    }\n                }\n            })(this._properties, this._position, this._dimension, this._restored);\n            console.debug('State', this._state);\n            console.debug('Properties', this._properties);\n            console.debug('Position', this._position);\n            console.debug('Dimension', this._dimension);\n            console.groupEnd();\n            _WID++;\n        }\n        init(_wm, _app) {\n            if (this._initialized || this._loaded) {\n                return this._$root;\n            }\n            this._$element = DOM.$create('application-window', {\n                className: ((n, t) => {\n                    const classNames = [\n                        'Window',\n                        DOM.$safeName(n)\n                    ];\n                    if (t && n !== t) {\n                        classNames.push(DOM.$safeName(t));\n                    }\n                    return classNames;\n                })(this._name, this._tag).join(' '),\n                style: {\n                    width: this._dimension.w + 'px',\n                    height: this._dimension.h + 'px',\n                    top: this._position.y + 'px',\n                    left: this._position.x + 'px',\n                    zIndex: getNextZindex(this._state.ontop)\n                },\n                data: {\n                    window_id: this._wid,\n                    allow_resize: this._properties.allow_resize,\n                    allow_minimize: this._properties.allow_minimize,\n                    allow_maximize: this._properties.allow_maximize,\n                    allow_close: this._properties.allow_close\n                },\n                aria: {\n                    role: 'application',\n                    live: 'polite',\n                    hidden: 'false'\n                }\n            });\n            this._$root = document.createElement('application-window-content');\n            this._$resize = document.createElement('application-window-resize');\n            [\n                'nw',\n                'n',\n                'ne',\n                'e',\n                'se',\n                's',\n                'sw',\n                'w'\n            ].forEach(i => {\n                let h = document.createElement('application-window-resize-handle');\n                h.setAttribute('data-direction', i);\n                this._$resize.appendChild(h);\n                h = null;\n            });\n            this._$loading = document.createElement('application-window-loading');\n            this._$disabled = document.createElement('application-window-disabled');\n            this._$top = document.createElement('application-window-top');\n            this._$winicon = document.createElement('application-window-icon');\n            this._$winicon.setAttribute('role', 'button');\n            this._$winicon.setAttribute('aria-haspopup', 'true');\n            this._$winicon.setAttribute('aria-label', 'Window Menu');\n            const windowTitle = document.createElement('application-window-title');\n            windowTitle.setAttribute('role', 'heading');\n            let preventTimeout;\n            const _onanimationend = ev => {\n                if (typeof this._animationCallback === 'function') {\n                    clearTimeout(preventTimeout);\n                    preventTimeout = setTimeout(() => {\n                        this._animationCallback(ev);\n                        this._animationCallback = false;\n                        preventTimeout = clearTimeout(preventTimeout);\n                    }, 10);\n                }\n            };\n            Events.$bind(this._$element, 'transitionend', _onanimationend);\n            Events.$bind(this._$element, 'animationend', _onanimationend);\n            Events.$bind(this._$element, 'click', ev => {\n                this._focus();\n            }, true);\n            Events.$bind(this._$top, 'mouseup', ev => {\n                const t = ev.target;\n                if (t) {\n                    if (t.tagName.match(/^APPLICATION\\-WINDOW\\-BUTTON/)) {\n                        this._onWindowButtonClick(ev, t, t.getAttribute('data-action'));\n                    } else if (t.tagName === 'APPLICATION-WINDOW-ICON') {\n                        this._onWindowIconClick(ev);\n                    }\n                }\n            });\n            Events.$bind(this._$top, 'dblclick', () => {\n                this._maximize();\n            });\n            ((properties, main, compability) => {\n                if (properties.allow_drop && compability.dnd) {\n                    const border = document.createElement('div');\n                    border.className = 'WindowDropRect';\n                    GUI.createDroppable(main, {\n                        onOver: (ev, el, args) => {\n                            main.setAttribute('data-dnd-state', 'true');\n                        },\n                        onLeave: () => {\n                            main.setAttribute('data-dnd-state', 'false');\n                        },\n                        onDrop: () => {\n                            main.setAttribute('data-dnd-state', 'false');\n                        },\n                        onItemDropped: (ev, el, item, args) => {\n                            main.setAttribute('data-dnd-state', 'false');\n                            return this._onDndEvent(ev, 'itemDrop', item, args, el);\n                        },\n                        onFilesDropped: (ev, el, files, args) => {\n                            main.setAttribute('data-dnd-state', 'false');\n                            return this._onDndEvent(ev, 'filesDrop', files, args, el);\n                        }\n                    });\n                }\n            })(this._properties, this._$element, Compability.getCompability());\n            windowTitle.appendChild(document.createTextNode(this._title));\n            this._$top.appendChild(this._$winicon);\n            this._$top.appendChild(windowTitle);\n            this._$top.appendChild(DOM.$create('application-window-button-minimize', {\n                className: 'application-window-button-entry',\n                data: { action: 'minimize' },\n                aria: {\n                    role: 'button',\n                    label: 'Minimize Window'\n                }\n            }));\n            this._$top.appendChild(DOM.$create('application-window-button-maximize', {\n                className: 'application-window-button-entry',\n                data: { action: 'maximize' },\n                aria: {\n                    role: 'button',\n                    label: 'Maximize Window'\n                }\n            }));\n            this._$top.appendChild(DOM.$create('application-window-button-close', {\n                className: 'application-window-button-entry',\n                data: { action: 'close' },\n                aria: {\n                    role: 'button',\n                    label: 'Close Window'\n                }\n            }));\n            this._$loading.appendChild(document.createElement('application-window-loading-indicator'));\n            this._$element.appendChild(this._$top);\n            this._$element.appendChild(this._$root);\n            this._$element.appendChild(this._$resize);\n            this._$element.appendChild(this._$disabled);\n            this._$element.appendChild(this._$loading);\n            document.body.appendChild(this._$element);\n            this._onChange('create');\n            this._toggleLoading(false);\n            this._toggleDisabled(false);\n            this._setIcon(Theme.getIcon(this._icon));\n            this._updateMarkup();\n            if (this._sound) {\n                Theme.playSound(this._sound, this._soundVolume);\n            }\n            this._initialized = true;\n            this._emit('init', [this._$root]);\n            return this._$root;\n        }\n        _inited() {\n            if (this._loaded) {\n                return;\n            }\n            this._loaded = true;\n            this._onResize();\n            if (!this._restored) {\n                if (this._state.maximized) {\n                    this._maximize(true);\n                } else if (this._state.minimized) {\n                    this._minimize(true);\n                } else {\n                    if (this._opts.auto_size) {\n                        let maxWidth = 0;\n                        let maxHeight = 0;\n                        const traverseTree = el => {\n                            el.children.forEach(sel => {\n                                maxWidth = Math.max(maxWidth, sel.offsetWidth);\n                                maxHeight = Math.max(maxHeight, sel.offsetHeight);\n                                if (sel.children.length) {\n                                    traverseTree(sel);\n                                }\n                            });\n                        };\n                        traverseTree(this._$root);\n                        this._resize(maxWidth, maxHeight, true);\n                    }\n                }\n            }\n            let inittimeout = setTimeout(() => {\n                this._emit('inited', []);\n                inittimeout = clearTimeout(inittimeout);\n            }, 10);\n            if (this._app) {\n                this._app._emit('initedWindow', [this]);\n            }\n            console.debug('Window::_inited()', this._name);\n        }\n        destroy(shutdown) {\n            if (this._destroyed) {\n                return false;\n            }\n            this._emit('destroy');\n            this._destroyed = true;\n            const wm = WindowManager.instance;\n            console.group('Window::destroy()');\n            const _removeDOM = () => {\n                this._setWarning(null);\n                this._$root = null;\n                this._$top = null;\n                this._$winicon = null;\n                this._$loading = null;\n                this._$disabled = null;\n                this._$resize = null;\n                this._$warning = null;\n                this._$element = DOM.$remove(this._$element);\n            };\n            const _destroyDOM = () => {\n                if (this._$element) {\n                    this._$element.querySelectorAll('*').forEach(iter => {\n                        if (iter) {\n                            Events.$unbind(iter);\n                        }\n                    });\n                }\n                if (this._parent) {\n                    this._parent._removeChild(this);\n                }\n                this._parent = null;\n                this._removeChildren();\n            };\n            const _destroyWin = () => {\n                if (wm) {\n                    wm.removeWindow(this);\n                }\n                const curWin = wm ? wm.getCurrentWindow() : null;\n                if (curWin && curWin._wid === this._wid) {\n                    wm.setCurrentWindow(null);\n                }\n                const lastWin = wm ? wm.getLastWindow() : null;\n                if (lastWin && lastWin._wid === this._wid) {\n                    wm.setLastWindow(null);\n                }\n            };\n            const _animateClose = fn => {\n                //if (!init.running()) { // modified by lwf\n                //    fn();\n                //} else {\n                    if (this._$element) {\n                        const anim = wm ? wm.getSetting('animations') : false;\n                        if (anim) {\n                            this._$element.setAttribute('data-closing', 'true');\n                            this._animationCallback = fn;\n                            let animatetimeout = setTimeout(() => {\n                                if (this._animationCallback) {\n                                    this._animationCallback();\n                                }\n                                animatetimeout = clearTimeout(animatetimeout);\n                            }, 1000);\n                        } else {\n                            this._$element.style.display = 'none';\n                            fn();\n                        }\n                    }\n                //}\n            };\n            this._onChange('close');\n            _animateClose(() => {\n                _removeDOM();\n            });\n            _destroyDOM();\n            _destroyWin();\n            if (this._app) {\n                this._app._onMessage('destroyWindow', this, {});\n            }\n            if (this._evHandler) {\n                this._evHandler.destroy();\n            }\n            this._app = null;\n            this._evHandler = null;\n            this._args = {};\n            this._queryTimer = clearTimeout(this._queryTimer);\n            this._scheme = this._scheme ? this._scheme.destroy() : null;\n            console.groupEnd();\n            return true;\n        }\n        _find(id, root) {\n            const q = '[data-id=\"' + id + '\"]';\n            return this._findByQuery(q, root);\n        }\n        _render(id, scheme, root, args) {\n            if (scheme) {\n                root = root || this._getRoot();\n                args = args || {};\n                if (typeof this._opts.translator === 'function') {\n                    args.undefined = this._opts.translator;\n                }\n                this._scheme = typeof scheme === 'string' ? GUIScheme.fromString(scheme) : scheme;\n            }\n            if (this._scheme instanceof GUIScheme) {\n                this._scheme.render(this, id, root, null, null, args);\n            } else {\n                console.warn('Got an invalid scheme in window render()', this._scheme);\n            }\n            return this._scheme;\n        }\n        _findDOM(id, root) {\n            root = root || this._getRoot();\n            const q = '[data-id=\"' + id + '\"]';\n            return root.querySelector(q);\n        }\n        _create(tagName, params, parentNode, applyArgs) {\n            parentNode = parentNode || this._getRoot();\n            return Element.createInto(tagName, params, parentNode, applyArgs, this);\n        }\n        _findByQuery(query, root, all) {\n            root = root || this._getRoot();\n            if (!(root instanceof window.Node)) {\n                return all ? [] : null;\n            }\n            if (all) {\n                return root.querySelectorAll(query).map(el => {\n                    return Element.createFromNode(el, query);\n                });\n            }\n            const el = root.querySelector(query);\n            return Element.createFromNode(el, query);\n        }\n        _emit(k, args) {\n            if (!this._destroyed) {\n                if (this._evHandler) {\n                    return this._evHandler.emit(k, args);\n                }\n            }\n            return false;\n        }\n        _on(k, func) {\n            if (this._evHandler) {\n                return this._evHandler.on(k, func, this);\n            }\n            return false;\n        }\n        _off(k, idx) {\n            if (this._evHandler) {\n                return this._evHandler.off(k, idx);\n            }\n            return false;\n        }\n        _addChild(w, wmAdd, wmFocus) {\n            console.debug('Window::_addChild()');\n            w._parent = this;\n            const wm = WindowManager.instance;\n            if (wmAdd && wm) {\n                wm.addWindow(w, wmFocus);\n            }\n            this._children.push(w);\n            return w;\n        }\n        _removeChild(w) {\n            let found = false;\n            this._children.forEach((child, i) => {\n                if (child && child._wid === w._wid) {\n                    console.debug('Window::_removeChild()');\n                    child.destroy();\n                    this._children[i] = null;\n                    found = true;\n                }\n            });\n            return found;\n        }\n        _getChild(value, key) {\n            key = key || 'wid';\n            const found = this._getChildren().filter(c => {\n                return c['_' + key] === value;\n            });\n            return key === 'tag' ? found : found[0];\n        }\n        _getChildById(id) {\n            return this._getChild(id, 'wid');\n        }\n        _getChildByName(name) {\n            return this._getChild(name, 'name');\n        }\n        _getChildrenByTag(tag) {\n            return this._getChild(tag, 'tag');\n        }\n        _getChildren() {\n            return this._children.filter(w => !!w);\n        }\n        _removeChildren() {\n            this._children.forEach((child, i) => {\n                if (child) {\n                    child.destroy();\n                }\n            });\n            this._children = [];\n        }\n        _close() {\n            if (this._disabled || this._destroyed) {\n                return false;\n            }\n            console.debug('Window::_close()');\n            this._blur();\n            this.destroy();\n            return true;\n        }\n        _minimize(force) {\n            if (!this._properties.allow_minimize || this._destroyed) {\n                return false;\n            }\n            if (!force && this._state.minimized) {\n                this._restore(false, true);\n                return true;\n            }\n            console.debug(this._name, '>', 'Window::_minimize()');\n            this._blur();\n            this._state.minimized = true;\n            this._$element.setAttribute('data-minimized', 'true');\n            waitForAnimation(this, () => {\n                this._$element.style.display = 'none';\n                this._emit('minimize');\n            });\n            this._onChange('minimize');\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid === this._wid) {\n                wm.setCurrentWindow(null);\n            }\n            this._updateMarkup();\n            return true;\n        }\n        _maximize(force) {\n            if (!this._properties.allow_maximize || this._destroyed || !this._$element) {\n                return false;\n            }\n            if (!force && this._state.maximized) {\n                this._restore(true, false);\n                return true;\n            }\n            console.debug(this._name, '>', 'Window::_maximize()');\n            this._lastPosition = {\n                x: this._position.x,\n                y: this._position.y\n            };\n            this._lastDimension = {\n                w: this._dimension.w,\n                h: this._dimension.h\n            };\n            this._state.maximized = true;\n            const s = this._getMaximizedSize();\n            this._$element.style.zIndex = getNextZindex(this._state.ontop);\n            this._$element.style.top = s.top + 'px';\n            this._$element.style.left = s.left + 'px';\n            this._$element.style.width = s.width + 'px';\n            this._$element.style.height = s.height + 'px';\n            this._$element.setAttribute('data-maximized', 'true');\n            this._dimension.w = s.width;\n            this._dimension.h = s.height;\n            this._position.x = s.left;\n            this._position.y = s.top;\n            this._focus();\n            waitForAnimation(this, () => {\n                this._emit('maximize');\n            });\n            this._onChange('maximize');\n            this._onResize();\n            this._updateMarkup();\n            return true;\n        }\n        _restore(max, min) {\n            if (!this._$element || this._destroyed) {\n                return;\n            }\n            const restoreMaximized = () => {\n                if (max && this._state.maximized) {\n                    this._move(this._lastPosition.x, this._lastPosition.y);\n                    this._resize(this._lastDimension.w, this._lastDimension.h);\n                    this._state.maximized = false;\n                    this._$element.setAttribute('data-maximized', 'false');\n                }\n            };\n            const restoreMinimized = () => {\n                if (min && this._state.minimized) {\n                    this._$element.style.display = 'block';\n                    this._$element.setAttribute('data-minimized', 'false');\n                    this._state.minimized = false;\n                }\n            };\n            console.debug(this._name, '>', 'Window::_restore()');\n            max = typeof max === 'undefined' ? true : max === true;\n            min = typeof min === 'undefined' ? true : min === true;\n            restoreMaximized();\n            restoreMinimized();\n            waitForAnimation(this, () => {\n                this._emit('restore');\n            });\n            this._onChange('restore');\n            this._onResize();\n            this._focus();\n            this._updateMarkup();\n        }\n        _focus(force) {\n            if (!this._$element || this._destroyed) {\n                return false;\n            }\n            this._toggleAttentionBlink(false);\n            this._$element.style.zIndex = getNextZindex(this._state.ontop);\n            this._$element.setAttribute('data-focused', 'true');\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid !== this._wid) {\n                win._blur();\n            }\n            if (wm) {\n                wm.setCurrentWindow(this);\n                wm.setLastWindow(this);\n            }\n            if (!this._state.focused || force) {\n                this._onChange('focus');\n                this._emit('focus');\n            }\n            this._state.focused = true;\n            this._updateMarkup();\n            return true;\n        }\n        _blur(force) {\n            if (!this._$element || this._destroyed || !force && !this._state.focused) {\n                return false;\n            }\n            this._$element.setAttribute('data-focused', 'false');\n            this._state.focused = false;\n            this._onChange('blur');\n            this._emit('blur');\n            this._blurGUI();\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid === this._wid) {\n                wm.setCurrentWindow(null);\n            }\n            this._updateMarkup();\n            return true;\n        }\n        _blurGUI() {\n            this._$root.querySelectorAll('input, textarea, select, iframe, button').forEach(el => {\n                el.blur();\n            });\n        }\n        _resizeTo(dw, dh, limit, move, container, force) {\n            if (!this._$element || (dw <= 0 || dh <= 0)) {\n                return;\n            }\n            limit = typeof limit === 'undefined' || limit === true;\n            let dx = 0;\n            let dy = 0;\n            if (container) {\n                const cpos = DOM.$position(container, this._$root);\n                dx = parseInt(cpos.left, 10);\n                dy = parseInt(cpos.top, 10);\n            }\n            const space = this._getMaximizedSize();\n            const cx = this._position.x + dx;\n            const cy = this._position.y + dy;\n            let newW = dw;\n            let newH = dh;\n            let newX = null;\n            let newY = null;\n            const _limitTo = () => {\n                if (cx + newW > space.width) {\n                    if (move) {\n                        newW = space.width;\n                        newX = space.left;\n                    } else {\n                        newW = space.width - cx + dx;\n                    }\n                } else {\n                    newW += dx;\n                }\n                if (cy + newH > space.height) {\n                    if (move) {\n                        newH = space.height;\n                        newY = space.top;\n                    } else {\n                        newH = space.height - cy + this._$top.offsetHeight + dy;\n                    }\n                } else {\n                    newH += dy;\n                }\n            };\n            const _moveTo = () => {\n                if (newX !== null) {\n                    this._move(newX, this._position.y);\n                }\n                if (newY !== null) {\n                    this._move(this._position.x, newY);\n                }\n            };\n            const _resizeFinished = () => {\n                const wm = WindowManager.instance;\n                const anim = wm ? wm.getSetting('animations') : false;\n                if (anim) {\n                    this._animationCallback = () => {\n                        this._emit('resized');\n                    };\n                } else {\n                    this._emit('resized');\n                }\n            };\n            if (limit) {\n                _limitTo();\n            }\n            this._resize(newW, newH, force);\n            _moveTo();\n            _resizeFinished();\n        }\n        _resize(w, h, force) {\n            const p = this._properties;\n            if (!this._$element || this._destroyed || !force && !p.allow_resize) {\n                return false;\n            }\n            const getNewSize = (n, min, max) => {\n                if (!isNaN(n) && n) {\n                    n = Math.max(n, min);\n                    if (max !== null) {\n                        n = Math.min(n, max);\n                    }\n                }\n                return n;\n            };\n            w = force ? w : getNewSize(w, p.min_width, p.max_width);\n            if (!isNaN(w) && w) {\n                this._$element.style.width = w + 'px';\n                this._dimension.w = w;\n            }\n            h = force ? h : getNewSize(h, p.min_height, p.max_height);\n            if (!isNaN(h) && h) {\n                this._$element.style.height = h + 'px';\n                this._dimension.h = h;\n            }\n            this._onResize();\n            return true;\n        }\n        _moveTo(pos) {\n            const wm = WindowManager.instance;\n            if (!wm) {\n                return;\n            }\n            const s = wm.getWindowSpace();\n            const cx = this._position.x;\n            const cy = this._position.y;\n            if (pos === 'left') {\n                this._move(s.left, cy);\n            } else if (pos === 'right') {\n                this._move(s.width - this._dimension.w, cy);\n            } else if (pos === 'top') {\n                this._move(cx, s.top);\n            } else if (pos === 'bottom') {\n                this._move(cx, s.height - this._dimension.h);\n            }\n        }\n        _move(x, y) {\n            if (!this._$element || this._destroyed || !this._properties.allow_move) {\n                return false;\n            }\n            if (typeof x === 'undefined' || typeof y === 'undefined') {\n                return false;\n            }\n            this._$element.style.top = y + 'px';\n            this._$element.style.left = x + 'px';\n            this._position.x = x;\n            this._position.y = y;\n            return true;\n        }\n        _toggleDisabled(t) {\n            if (this._$disabled) {\n                this._$disabled.style.display = t ? 'block' : 'none';\n            }\n            this._disabled = t ? true : false;\n            this._updateMarkup();\n        }\n        _toggleLoading(t) {\n            if (this._$loading) {\n                this._$loading.style.display = t ? 'block' : 'none';\n            }\n            this._loading = t ? true : false;\n            this._updateMarkup();\n        }\n        _updateMarkup(ui) {\n            if (!this._$element) {\n                return;\n            }\n            const t = this._loading || this._disabled;\n            const d = this._disabled;\n            const h = this._state.minimized;\n            const f = !this._state.focused;\n            this._$element.setAttribute('aria-busy', String(t));\n            this._$element.setAttribute('aria-hidden', String(h));\n            this._$element.setAttribute('aria-disabled', String(d));\n            this._$root.setAttribute('aria-hidden', String(f));\n            if (!ui) {\n                return;\n            }\n            const dmax = this._properties.allow_maximize === true ? 'inline-block' : 'none';\n            const dmin = this._properties.allow_minimize === true ? 'inline-block' : 'none';\n            const dclose = this._properties.allow_close === true ? 'inline-block' : 'none';\n            this._$top.querySelector('application-window-button-maximize').style.display = dmax;\n            this._$top.querySelector('application-window-button-minimize').style.display = dmin;\n            this._$top.querySelector('application-window-button-close').style.display = dclose;\n            const dres = this._properties.allow_resize === true;\n            this._$element.setAttribute('data-allow-resize', String(dres));\n        }\n        _toggleAttentionBlink(t) {\n            if (!this._$element || this._destroyed || this._state.focused) {\n                return false;\n            }\n            const el = this._$element;\n            const _blink = stat => {\n                if (el) {\n                    if (stat) {\n                        DOM.$addClass(el, 'WindowAttentionBlink');\n                    } else {\n                        DOM.$removeClass(el, 'WindowAttentionBlink');\n                    }\n                }\n                this._onChange(stat ? 'attention_on' : 'attention_off');\n            };\n            _blink(t);\n            return true;\n        }\n        _nextTabIndex(ev) {\n            const nextElement = GUI.getNextElement(ev.shiftKey, document.activeElement, this._$root);\n            if (nextElement) {\n                if (DOM.$hasClass(nextElement, 'gui-data-view')) {\n                    Element.createFromNode(nextElement).focus();\n                } else {\n                    try {\n                        nextElement.focus();\n                    } catch (e) {\n                    }\n                }\n            }\n        }\n        _onDndEvent(ev, type, item, args, el) {\n            if (this._disabled || this._destroyed) {\n                return false;\n            }\n            console.debug('Window::_onDndEvent()', type, item, args);\n            this._emit('drop', [\n                ev,\n                type,\n                item,\n                args,\n                el\n            ]);\n            if (item) {\n                if (type === 'filesDrop') {\n                    this._emit('drop:upload', [\n                        ev,\n                        item,\n                        args,\n                        el\n                    ]);\n                } else if (type === 'itemDrop' && item.type === 'file' && item.data) {\n                    this._emit('drop:file', [\n                        ev,\n                        new FileMetadata(item.data || {}),\n                        args,\n                        el\n                    ]);\n                }\n            }\n            return true;\n        }\n        _onKeyEvent(ev, type) {\n            if (this._destroyed || !this._state.focused) {\n                return false;\n            }\n            if (type === 'keydown' && ev.keyCode === Keycodes.TAB) {\n                this._nextTabIndex(ev);\n            }\n            this._emit(type, [\n                ev,\n                ev.keyCode,\n                ev.shiftKey,\n                ev.ctrlKey,\n                ev.altKey\n            ]);\n            return true;\n        }\n        _onResize() {\n            clearTimeout(this._queryTimer);\n            this._queryTimer = setTimeout(() => {\n                checkMediaQueries(this);\n                this._queryTimer = clearTimeout(this._queryTimer);\n            }, 20);\n        }\n        _onWindowIconClick(ev) {\n            if (!this._properties.allow_iconmenu || this._destroyed) {\n                return;\n            }\n            console.debug(this._name, '>', 'Window::_onWindowIconClick()');\n            const control = [\n                [\n                    this._properties.allow_minimize,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_MINIMIZE'),\n                            icon: Theme.getIcon('actions/go-up.png'),\n                            onClick: (name, iter) => {\n                                this._minimize();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_maximize,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_MAXIMIZE'),\n                            icon: Theme.getIcon('actions/view-fullscreen.png'),\n                            onClick: (name, iter) => {\n                                this._maximize();\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._state.maximized,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_RESTORE'),\n                            icon: Theme.getIcon('actions/view-restore.png'),\n                            onClick: (name, iter) => {\n                                this._restore();\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_ontop,\n                    () => {\n                        if (this._state.ontop) {\n                            return {\n                                title: locales._('WINDOW_ONTOP_OFF'),\n                                icon: Theme.getIcon('actions/window-new.png'),\n                                onClick: (name, iter) => {\n                                    this._state.ontop = false;\n                                    if (this._$element) {\n                                        this._$element.style.zIndex = getNextZindex(false);\n                                    }\n                                    this._focus();\n                                }\n                            };\n                        }\n                        return {\n                            title: locales._('WINDOW_ONTOP_ON'),\n                            icon: Theme.getIcon('actions/window-new.png'),\n                            onClick: (name, iter) => {\n                                this._state.ontop = true;\n                                if (this._$element) {\n                                    this._$element.style.zIndex = getNextZindex(true);\n                                }\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_close,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_CLOSE'),\n                            icon: Theme.getIcon('actions/window-close.png'),\n                            onClick: (name, iter) => {\n                                this._close();\n                            }\n                        };\n                    }\n                ]\n            ];\n            const list = [];\n            control.forEach(iter => {\n                if (iter[0]) {\n                    list.push(iter[1]());\n                }\n            });\n            this._focus();\n            Menu.create(list, ev);\n        }\n        _onWindowButtonClick(ev, el, btn) {\n            const map = {\n                close: this._close,\n                minimize: this._minimize,\n                maximize: this._maximize\n            };\n            if (map[btn]) {\n                try {\n                    this._blurGUI();\n                } catch (e) {\n                }\n                map[btn].call(this);\n            }\n        }\n        _onChange(ev, byUser) {\n            ev = ev || '';\n            if (ev) {\n                const wm = WindowManager.instance;\n                if (wm) {\n                    wm.eventWindow(ev, this);\n                }\n            }\n        }\n        _getMaximizedSize() {\n            const s = getWindowSpace();\n            if (!this._$element || this._destroyed) {\n                return s;\n            }\n            let topMargin = 23;\n            let borderSize = 0;\n            const theme = Theme.getStyleTheme(true, true);\n            if (theme && theme.style && theme.style.window) {\n                topMargin = theme.style.window.margin;\n                borderSize = theme.style.window.border;\n            }\n            s.left += borderSize;\n            s.top += borderSize;\n            s.width -= borderSize * 2;\n            s.height -= topMargin + borderSize * 2;\n            return Object.freeze(s);\n        }\n        _getViewRect() {\n            return this._$element ? Object.freeze(DOM.$position(this._$element)) : null;\n        }\n        _getRoot() {\n            return this._$root;\n        }\n        _getZindex() {\n            if (this._$element) {\n                return parseInt(this._$element.style.zIndex, 10);\n            }\n            return -1;\n        }\n        _getTitle() {\n            return this._title;\n        }\n        _setTitle(t, append, delimiter) {\n            if (!this._$element || this._destroyed) {\n                return;\n            }\n            delimiter = delimiter || '-';\n            const tel = this._$element.getElementsByTagName('application-window-title')[0];\n            let text = [];\n            if (append) {\n                text = [\n                    this._origtitle,\n                    delimiter,\n                    t\n                ];\n            } else {\n                text = [t || this._origtitle];\n            }\n            this._title = text.join(' ') || this._origtitle;\n            if (tel) {\n                DOM.$empty(tel);\n                tel.appendChild(document.createTextNode(this._title));\n            }\n            this._onChange('title');\n            this._updateMarkup();\n        }\n        _setIcon(i) {\n            if (this._$winicon) {\n                this._$winicon.title = this._title;\n                this._$winicon.style.backgroundImage = 'url(' + i + ')';\n            }\n            this._icon = i;\n            this._onChange('icon');\n        }\n        _setWarning(message) {\n            this._$warning = DOM.$remove(this._$warning);\n            if (this._destroyed || message === null) {\n                return;\n            }\n            message = message || '';\n            let container = document.createElement('application-window-warning');\n            let close = document.createElement('div');\n            close.innerHTML = 'X';\n            Events.$bind(close, 'click', () => {\n                this._setWarning(null);\n            });\n            let msg = document.createElement('div');\n            msg.appendChild(document.createTextNode(message));\n            container.appendChild(close);\n            container.appendChild(msg);\n            this._$warning = container;\n            this._$root.appendChild(this._$warning);\n        }\n        _setProperty(p, v) {\n            if (v === '' || v === null || !this._$element || typeof this._properties[p] === 'undefined') {\n                return;\n            }\n            this._properties[p] = String(v) === 'true';\n            this._updateMarkup(true);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/application',[\n    './process',\n    './settings-manager',\n    './window-manager',\n    './window'\n], function (Process, SettingsManager, WindowManager, Window) {\n    'use strict';\n    return class Application extends Process {\n        constructor(name, args, metadata, settings, options) {\n            console.group('Application::constructor()', arguments);\n            options = Object.assign({\n                closeWithMain: true,\n                closeOnEmpty: true\n            }, options || {});\n            super(...arguments);\n            this.__inited = false;\n            this.__mainwindow = null;\n            this.__windows = [];\n            this.__settings = null;\n            this.__destroying = false;\n            this.__options = options;\n            try {\n                this.__settings = SettingsManager.instance(name, settings || {});\n            } catch (e) {\n                console.warn('Application::construct()', 'An error occured while loading application settings', e);\n                console.warn(e.stack);\n                this.__settings = SettingsManager.instance(name, {});\n            }\n            console.groupEnd();\n        }\n        init(settings, metadata) {\n            const wm = WindowManager.instance;\n            const focusLastWindow = () => {\n                let last;\n                if (wm) {\n                    this.__windows.forEach((win, i) => {\n                        if (win) {\n                            wm.addWindow(win);\n                            last = win;\n                        }\n                    });\n                }\n                if (last) {\n                    last._focus();\n                }\n            };\n            if (!this.__inited) {\n                console.debug('Application::init()', this.__pname);\n                if (this.__settings) {\n                    this.__settings.set(null, settings);\n                }\n                this.__inited = true;\n                this.__evHandler.emit('init', [\n                    settings,\n                    metadata\n                ]);\n                focusLastWindow();\n            }\n        }\n        destroy() {\n            if (this.__destroying || this.__destroyed) {\n                return true;\n            }\n            this.__destroying = true;\n            console.group('Application::destroy()', this.__pname);\n            this.__windows.forEach(w => w && w.destroy());\n            if (this.__scheme && typeof this.__scheme.destroy === 'function') {\n                this.__scheme.destroy();\n            }\n            this.__mainwindow = null;\n            this.__settings = {};\n            this.__windows = [];\n            this.__scheme = null;\n            const result = super.destroy(...arguments);\n            console.groupEnd();\n            return result;\n        }\n        _onMessage(msg, obj, args) {\n            if (this.__destroying || this.__destroyed) {\n                return false;\n            }\n            if (msg === 'destroyWindow') {\n                if (!this.__destroying) {\n                    this._removeWindow(obj);\n                    if (this.__options.closeOnEmpty && !this.__windows.length) {\n                        console.info('All windows removed, destroying application');\n                        this.destroy();\n                    } else if (obj._name === this.__mainwindow) {\n                        if (this.__options.closeWithMain) {\n                            console.info('Main window was closed, destroying application');\n                            this.destroy();\n                        }\n                    }\n                }\n            } else if (msg === 'attention') {\n                if (this.__windows.length && this.__windows[0]) {\n                    this.__windows[0]._focus();\n                }\n            }\n            return super._onMessage(...arguments);\n        }\n        _addWindow(w, cb, setmain) {\n            if (!(w instanceof Window)) {\n                throw new TypeError('Application::_addWindow() expects Core.Window');\n            }\n            console.debug('Application::_addWindow()');\n            this.__windows.push(w);\n            if (setmain || this.__windows.length === 1) {\n                this.__mainwindow = w._name;\n            }\n            const wm = WindowManager.instance;\n            if (this.__inited) {\n                if (wm) {\n                    wm.addWindow(w);\n                }\n                if (w._properties.start_focused) {\n                    setTimeout(() => {\n                        w._focus();\n                    }, 5);\n                }\n            }\n            (cb || function () {\n            })(w, wm);\n            return w;\n        }\n        _removeWindow(w) {\n            if (!(w instanceof Window)) {\n                throw new TypeError('Application::_removeWindow() expects Core.Window');\n            }\n            const found = this.__windows.findIndex(win => win && win._wid === w._wid);\n            if (found !== -1) {\n                const win = this.__windows[found];\n                console.debug('Application::_removeWindow()', win._wid);\n                try {\n                    win.destroy();\n                } catch (e) {\n                    console.warn(e);\n                }\n                this.__windows.splice(found, 1);\n            }\n            return found !== -1;\n        }\n        _getWindow(value, key) {\n            key = key || 'name';\n            if (value === null) {\n                value = this.__mainwindow;\n            }\n            let result = key === 'tag' ? [] : null;\n            this.__windows.every((win, i) => {\n                if (win) {\n                    if (win['_' + key] === value) {\n                        if (key === 'tag') {\n                            result.push(win);\n                        } else {\n                            result = win;\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            });\n            return result;\n        }\n        _getWindowByName(name) {\n            return this._getWindow(name);\n        }\n        _getWindowsByTag(tag) {\n            return this._getWindow(tag, 'tag');\n        }\n        _getWindows() {\n            return this.__windows;\n        }\n        _getMainWindow() {\n            return this._getWindow(this.__mainwindow, 'name');\n        }\n        _getSetting(k) {\n            return this.__settings ? this.__settings.get(k) : null;\n        }\n        _getSessionData() {\n            const args = this.__args;\n            const wins = this.__windows;\n            const data = {\n                name: this.__pname,\n                args: args,\n                windows: []\n            };\n            wins.forEach((win, i) => {\n                if (win && win._properties.allow_session) {\n                    data.windows.push({\n                        name: win._name,\n                        dimension: win._dimension,\n                        position: win._position,\n                        state: win._state\n                    });\n                }\n            });\n            return data;\n        }\n        _setSetting(k, v, save) {\n            if (typeof save === 'undefined') {\n                save = true;\n            }\n            if (arguments.length === 4 && typeof arguments[3] === 'function') {\n                save = arguments[3];\n            }\n            if (this.__settings) {\n                this.__settings.set(k, v, save);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs.html',[], function() { return \"<!--\\r\\n\\r\\n  Dialog: Error\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Error\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_ERROR_MESSAGE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"SummaryLabel\\\">DIALOG_ERROR_SUMMARY</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-fill=\\\"true\\\" data-basis=\\\"90px\\\">\\r\\n      <gui-textarea data-id=\\\"Summary\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"TraceLabel\\\">DIALOG_ERROR_TRACE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"Trace\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_CLOSE</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonBugReport\\\">LBL_BUGREPORT</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Application Chooser\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"ApplicationChooser\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_APPCHOOSER_MSG</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"FileName\\\">filename (mime)</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-list-view data-id=\\\"ApplicationList\\\" data-multiple=\\\"false\\\">\\r\\n      </gui-list-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-checkbox data-id=\\\"SetDefault\\\" data-label=\\\"DIALOG_APPCHOOSER_SET_DEFAULT\\\"></gui-checkbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Save/Open\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"File\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-button data-id=\\\"HomeButton\\\" data-icon=\\\"stock://16x16/places/user-home.png\\\" data-tooltip=\\\"LBL_HOME\\\"></gui-button>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-button data-id=\\\"ButtonMkdir\\\" data-icon=\\\"stock://16x16/actions/folder-new.png\\\" data-tooltip=\\\"LBL_MKDIR\\\"></gui-button>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-select data-id=\\\"ModuleSelect\\\"></gui-select>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-file-view data-id=\\\"FileView\\\">\\r\\n      </gui-file-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-id=\\\"FileInput\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-text data-id=\\\"Filename\\\"></gui-text>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-shrink=\\\"0\\\" data-basis=\\\"150px\\\" data-expand=\\\"true\\\">\\r\\n          <gui-select data-id=\\\"Filetype\\\"></gui-select>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Progress\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileProgress\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">LBL_LOADING</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n      <gui-progress-bar data-id=\\\"Progress\\\"></gui-progress-bar>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\" data-disabled=\\\"true\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Upload\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileUpload\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_UPLOAD_DESC</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-file-upload data-id=\\\"File\\\"></gui-file-upload>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Information\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileInfo\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"Info\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Input\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Input\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_INPUT_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n      <gui-text data-id=\\\"Input\\\"></gui-text>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Alert\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Alert\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_ALERT_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Confirm\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Confirm\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_CONFIRM_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonYes\\\">LBL_YES</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonNo\\\">LBL_NO</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Color\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Color\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\">\\r\\n          <gui-vbox>\\r\\n            <gui-vbox-container shrink=\\\"1\\\">\\r\\n              <gui-color-swatch data-id=\\\"ColorSelect\\\"></gui-color-swatch>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-color-box data-id=\\\"ColorPreview\\\" data-disabled=\\\"true\\\"></gui-color-box>\\r\\n            </gui-vbox-container>\\r\\n          </gui-vbox>\\r\\n        </gui-hbox-container>\\r\\n\\r\\n        <gui-hbox-container data-grow=\\\"1\\\">\\r\\n          <gui-vbox>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelRed\\\">Red</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Red\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelGreen\\\">Green</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Green\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelBlue\\\">Blue</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Blue\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\" data-id=\\\"AlphaLabelContainer\\\">\\r\\n              <gui-label data-id=\\\"LabelAlpha\\\">Alpha</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\" data-id=\\\"AlphaContainer\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"100\\\" data-id=\\\"Alpha\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n          </gui-vbox>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Font\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Font\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\" data-basis=\\\"50%\\\" data-fill=\\\"true\\\">\\r\\n          <gui-select-list data-id=\\\"FontName\\\"></gui-select-list>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\" data-basis=\\\"50%\\\" data-fill=\\\"true\\\" data-id=\\\"FontSizeContainer\\\">\\r\\n          <gui-select-list data-id=\\\"FontSize\\\"></gui-select-list>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-basis=\\\"50px\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"FontPreview\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\"; });\ndefine('skylark-osjsv2-client/core/dialog',[\n    '../utils/dom',\n    '../utils/keycodes',\n    './window',\n    './application',\n    './window-manager',\n    '../gui/scheme',\n    './locales',\n    \"../dialogs.html\"\n], function (Dom, Keycodes, Window, Application, WindowManager, GUIScheme, Locales,dialogsHtml) {\n    'use strict';\n    return class DialogWindow extends Window {\n        constructor(className, opts, args, callback) {\n            opts = opts || {};\n            args = args || {};\n            callback = callback || function () {\n            };\n            if (typeof callback !== 'function') {\n                throw new TypeError('DialogWindow expects a callback Function, gave: ' + typeof callback);\n            }\n            console.info('DialogWindow::construct()', className, opts, args);\n            super(className, opts);\n            this._properties.gravity = 'center';\n            this._properties.allow_resize = false;\n            this._properties.allow_minimize = false;\n            this._properties.allow_maximize = false;\n            this._properties.allow_windowlist = false;\n            this._properties.allow_session = false;\n            this._state.ontop = true;\n            this._tag = 'DialogWindow';\n            if (args.scheme && args.scheme instanceof GUIScheme) {\n                this.scheme = args.scheme;\n                delete args.scheme;\n            }\n            this.args = args;\n            this.className = className;\n            this.buttonClicked = false;\n            this.closeCallback = (ev, button, result) => {\n                if (this._destroyed) {\n                    return;\n                }\n                this.buttonClicked = true;\n                callback.call(this, ev, button, result);\n                this._close();\n            };\n        }\n        destroy() {\n            if (this.scheme) {\n                this.scheme = this.scheme.destroy();\n            }\n            return super.destroy(...arguments);\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'dialog');\n            const windowName = this.className.replace(/Dialog$/, '');\n            const focusButtons = [\n                'ButtonCancel',\n                'ButtonNo'\n            ];\n            const buttonMap = {\n                ButtonOK: 'ok',\n                ButtonCancel: 'cancel',\n                ButtonYes: 'yes',\n                ButtonNo: 'no'\n            };\n            if (this.scheme) {\n                this.scheme.render(this, windowName, root, 'application-dialog', node => {\n                    node.querySelectorAll('gui-label').forEach(el => {\n                        if (el.childNodes.length && el.childNodes[0].nodeType === 3 && el.childNodes[0].nodeValue) {\n                            const label = el.childNodes[0].nodeValue;\n                            Dom.$empty(el);\n                            el.appendChild(document.createTextNode(Locales._(label)));\n                        }\n                    });\n                });\n            } else {\n                //this._render(windowName, require('osjs-scheme-loader!dialogs.html'));\n                this._render(windowName, dialogsHtml);\n            }\n            Object.keys(buttonMap).filter(id => this._findDOM(id)).forEach(id => {\n                const btn = this._find(id);\n                btn.on('click', ev => {\n                    this.onClose(ev, buttonMap[id]);\n                });\n                if (focusButtons.indexOf(id) >= 0) {\n                    btn.focus();\n                }\n            });\n            Dom.$addClass(root, 'DialogWindow');\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, null);\n        }\n        _close() {\n            if (!this.buttonClicked) {\n                this.onClose(null, 'cancel', null);\n            }\n            return super._close(...arguments);\n        }\n        _onKeyEvent(ev) {\n            super._onKeyEvent(...arguments);\n            if (ev.keyCode === Keycodes.ESC) {\n                this.onClose(ev, 'cancel');\n            }\n        }\n        static parseMessage(msg) {\n            msg = Dom.$escape(msg || '').replace(/\\*\\*(.*)\\*\\*/g, '<span>$1</span>');\n            let tmp = document.createElement('div');\n            tmp.innerHTML = msg;\n            const frag = document.createDocumentFragment();\n            for (let i = 0; i < tmp.childNodes.length; i++) {\n                frag.appendChild(tmp.childNodes[i].cloneNode(true));\n            }\n            tmp = null;\n            return frag;\n        }\n        static create(className, args, callback, options) {\n            callback = callback || function () {\n            };\n            options = options || {};\n            let parentObj = options;\n            let parentIsWindow = parentObj instanceof Window;\n            let parentIsProcess = parentObj instanceof Application;\n            if (parentObj && !(parentIsWindow && parentIsProcess)) {\n                parentObj = options.parent;\n                parentIsWindow = parentObj instanceof Window;\n                parentIsProcess = parentObj instanceof Application;\n            }\n            function cb() {\n                if (parentObj) {\n                    if (parentIsWindow && parentObj._destroyed) {\n                        console.warn('DialogWindow::create()', 'INGORED EVENT: Window was destroyed');\n                        return;\n                    }\n                    if (parentIsProcess && parentObj.__destroyed) {\n                        console.warn('DialogWindow::create()', 'INGORED EVENT: Process was destroyed');\n                        return;\n                    }\n                }\n                if (options.modal && parentIsWindow) {\n                    parentObj._toggleDisabled(false);\n                }\n                callback.apply(null, arguments);\n            }\n            const win = typeof className === 'string' ? new OSjs.Dialogs[className](args, cb) : className(args, cb);\n            if (!parentObj) {\n                const wm = WindowManager.instance;\n                wm.addWindow(win, true);\n            } else if (parentObj instanceof Window) {\n                win._on('destroy', () => {\n                    if (parentObj) {\n                        parentObj._focus();\n                    }\n                });\n                parentObj._addChild(win, true);\n            } else if (parentObj instanceof Application) {\n                parentObj._addWindow(win);\n            }\n            if (options.modal && parentIsWindow) {\n                parentObj._toggleDisabled(true);\n            }\n            win._focus();\n            return win;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/splash',[],function () {\n    'use strict';\n    class SplashScreen {\n        constructor() {\n            this.$el = document.getElementById('LoadingScreen');\n            this.$progress = this.$el ? this.$el.querySelector('.progress') : null;\n        }\n        watermark(config) {\n            if (config.Watermark.enabled) {\n                var ver = config.Version || 'unknown version';\n                var html = config.Watermark.lines || [];\n                var el = document.createElement('osjs-watermark');\n                el.setAttribute('aria-hidden', 'true');\n                el.innerHTML = html.join('<br />').replace(/%VERSION%/, ver);\n                document.body.appendChild(el);\n            }\n        }\n        show() {\n            if (this.$el) {\n                this.$el.style.display = 'block';\n            }\n        }\n        hide() {\n            if (this.$el) {\n                this.$el.style.display = 'none';\n            }\n        }\n        update(p, c) {\n            if (this.$progress) {\n                let per = c ? 0 : 100;\n                if (c) {\n                    per = p / c * 100;\n                }\n                this.$progress.style.width = String(per) + '%';\n            }\n        }\n    }\n    return new SplashScreen();\n});\ndefine('skylark-osjsv2-client/gui/notification',[\n    '../utils/events',\n    '../core/window-manager'\n], function (Events, WindowManager) {\n    'use strict';\n    class Notification {\n        constructor() {\n            this.$notifications = null;\n            this.visibles = 0;\n        }\n        create(opts) {\n            opts = opts || {};\n            opts.icon = opts.icon || null;\n            opts.title = opts.title || null;\n            opts.message = opts.message || '';\n            opts.onClick = opts.onClick || function () {\n            };\n            if (!this.$notifications) {\n                this.$notifications = document.createElement('corewm-notifications');\n                this.$notifications.setAttribute('role', 'log');\n                document.body.appendChild(this.$notifications);\n            }\n            if (typeof opts.timeout === 'undefined') {\n                opts.timeout = 5000;\n            }\n            console.debug('CoreWM::notification()', opts);\n            const container = document.createElement('corewm-notification');\n            let classNames = [''];\n            let timeout = null;\n            let animationCallback = null;\n            const _remove = () => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                container.onclick = null;\n                const _removeDOM = () => {\n                    Events.$unbind(container);\n                    if (container.parentNode) {\n                        container.parentNode.removeChild(container);\n                    }\n                    this.visibles--;\n                    if (this.visibles <= 0) {\n                        this.$notifications.style.display = 'none';\n                    }\n                };\n                const anim = WindowManager.instance.getSetting('animations');\n                if (anim) {\n                    container.setAttribute('data-hint', 'closing');\n                    animationCallback = () => _removeDOM();\n                } else {\n                    container.style.display = 'none';\n                    _removeDOM();\n                }\n            };\n            if (opts.icon) {\n                const icon = document.createElement('img');\n                icon.alt = '';\n                icon.src = opts.icon;\n                classNames.push('HasIcon');\n                container.appendChild(icon);\n            }\n            if (opts.title) {\n                const title = document.createElement('div');\n                title.className = 'Title';\n                title.appendChild(document.createTextNode(opts.title));\n                classNames.push('HasTitle');\n                container.appendChild(title);\n            }\n            if (opts.message) {\n                const message = document.createElement('div');\n                message.className = 'Message';\n                const lines = opts.message.split('\\n');\n                lines.forEach(function (line, idx) {\n                    message.appendChild(document.createTextNode(line));\n                    if (idx < lines.length - 1) {\n                        message.appendChild(document.createElement('br'));\n                    }\n                });\n                classNames.push('HasMessage');\n                container.appendChild(message);\n            }\n            this.visibles++;\n            if (this.visibles > 0) {\n                this.$notifications.style.display = 'block';\n            }\n            container.setAttribute('aria-label', String(opts.title));\n            container.setAttribute('role', 'alert');\n            container.className = classNames.join(' ');\n            container.onclick = function (ev) {\n                _remove();\n                opts.onClick(ev);\n            };\n            let preventTimeout;\n            function _onanimationend(ev) {\n                if (typeof animationCallback === 'function') {\n                    clearTimeout(preventTimeout);\n                    preventTimeout = setTimeout(function () {\n                        animationCallback(ev);\n                        animationCallback = false;\n                    }, 10);\n                }\n            }\n            Events.$bind(container, 'transitionend', _onanimationend);\n            Events.$bind(container, 'animationend', _onanimationend);\n            const space = WindowManager.instance.getWindowSpace(true);\n            this.$notifications.style.marginTop = String(space.top) + 'px';\n            this.$notifications.appendChild(container);\n            if (opts.timeout) {\n                timeout = setTimeout(function () {\n                    _remove();\n                }, opts.timeout);\n            }\n        }\n        createIcon(name, opts) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    return pitem.createNotification(name, opts);\n                }\n            }\n            return null;\n        }\n        destroyIcon(name) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    pitem.removeNotification(name);\n                    return true;\n                }\n            }\n            return false;\n        }\n        getIcon(name) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    return pitem.getNotification(name);\n                }\n            }\n            return null;\n        }\n    }\n    return new Notification();\n});\ndefine('skylark-osjsv2-client/dialogs/alert',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class AlertDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('AlertDialog', {\n                title: args.title || Locales._('DIALOG_ALERT_TITLE'),\n                icon: 'status/dialog-warning.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'alertdialog');\n            this._find('Message').set('value', this.args.message, true);\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/applicationchooser',[\n    '../core/dialog',\n    '../core/package-manager',\n    '../core/theme',\n    '../utils/misc',\n    '../core/locales'\n], function (DialogWindow, PackageManager, Theme, Utils, Locales) {\n    'use strict';\n    return class ApplicationChooserDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('ApplicationChooserDialog', {\n                title: args.title || Locales._('DIALOG_APPCHOOSER_TITLE'),\n                width: 400,\n                height: 400\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const cols = [{ label: Locales._('LBL_NAME') }];\n            const rows = [];\n            const metadata = PackageManager.getPackages();\n            (this.args.list || []).forEach(name => {\n                const iter = metadata[name];\n                if (iter && iter.type === 'application') {\n                    const label = [iter.name];\n                    if (iter.description) {\n                        label.push(iter.description);\n                    }\n                    rows.push({\n                        value: iter,\n                        columns: [{\n                                label: label.join(' - '),\n                                icon: Theme.getIcon(iter.icon, null, name),\n                                value: JSON.stringify(iter)\n                            }]\n                    });\n                }\n            });\n            this._find('ApplicationList').set('columns', cols).add(rows).on('activate', ev => {\n                this.onClose(ev, 'ok');\n            });\n            let file = '<unknown file>';\n            let label = '<unknown mime>';\n            if (this.args.file) {\n                file = Utils.format('{0} ({1})', this.args.file.filename, this.args.file.mime);\n                label = Locales._('DIALOG_APPCHOOSER_SET_DEFAULT', this.args.file.mime);\n            }\n            this._find('FileName').set('value', file);\n            this._find('SetDefault').set('label', label);\n            return root;\n        }\n        onClose(ev, button) {\n            let result = null;\n            if (button === 'ok') {\n                const useDefault = this._find('SetDefault').get('value');\n                const selected = this._find('ApplicationList').get('value');\n                if (selected && selected.length) {\n                    result = selected[0].data.className;\n                }\n                if (!result) {\n                    DialogWindow.create('Alert', { message: Locales._('DIALOG_APPCHOOSER_NO_SELECTION') }, null, this);\n                    return;\n                }\n                result = {\n                    name: result,\n                    useDefault: useDefault\n                };\n            }\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/colors',[],function () {\n    'use strict';\n    function convertToRGB(hex) {\n        const rgb = parseInt(hex.replace('#', ''), 16);\n        const val = {};\n        val.r = (rgb & 255 << 16) >> 16;\n        val.g = (rgb & 255 << 8) >> 8;\n        val.b = rgb & 255;\n        return val;\n    }\n    function convertToHEX(r, g, b) {\n        if (typeof r === 'object') {\n            g = r.g;\n            b = r.b;\n            r = r.r;\n        }\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            throw new Error('Invalid RGB supplied to convertToHEX()');\n        }\n        const hex = [\n            parseInt(r, 10).toString(16),\n            parseInt(g, 10).toString(16),\n            parseInt(b, 10).toString(16)\n        ];\n        Object.keys(hex).forEach(i => {\n            if (hex[i].length === 1) {\n                hex[i] = '0' + hex[i];\n            }\n        });\n        return '#' + hex.join('').toUpperCase();\n    }\n    function invertHEX(hex) {\n        let color = parseInt(hex.replace('#', ''), 16);\n        color = 16777215 ^ color;\n        color = color.toString(16);\n        color = ('000000' + color).slice(-6);\n        return '#' + color;\n    }\n    return {\n        convertToRGB: convertToRGB,\n        convertToHEX: convertToHEX,\n        invertHEX: invertHEX\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/color',[\n    '../core/dialog',\n    '../utils/misc',\n    '../utils/colors',\n    '../core/locales'\n], function (DialogWindow, Utils, Colors, Locales) {\n    'use strict';\n    function getColor(rgb) {\n        let hex = rgb;\n        if (typeof rgb === 'string') {\n            hex = rgb;\n            rgb = Colors.convertToRGB(rgb);\n            rgb.a = null;\n        } else {\n            if (typeof rgb.a === 'undefined') {\n                rgb.a = null;\n            } else {\n                if (rgb.a > 1) {\n                    rgb.a /= 100;\n                }\n            }\n            rgb = rgb || {\n                r: 0,\n                g: 0,\n                b: 0,\n                a: 100\n            };\n            hex = Colors.convertToHEX(rgb.r, rgb.g, rgb.b);\n        }\n        return [\n            rgb,\n            hex\n        ];\n    }\n    return class ColorDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            const [rgb, hex] = getColor(args.color);\n            super('ColorDialog', {\n                title: args.title || Locales._('DIALOG_COLOR_TITLE'),\n                icon: 'apps/preferences-desktop-theme.png',\n                width: 400,\n                height: rgb.a !== null ? 300 : 220\n            }, args, callback);\n            this.color = {\n                r: rgb.r,\n                g: rgb.g,\n                b: rgb.b,\n                a: rgb.a,\n                hex: hex\n            };\n        }\n        init() {\n            const root = super.init(...arguments);\n            const updateHex = update => {\n                this._find('LabelRed').set('value', Locales._('DIALOG_COLOR_R', this.color.r));\n                this._find('LabelGreen').set('value', Locales._('DIALOG_COLOR_G', this.color.g));\n                this._find('LabelBlue').set('value', Locales._('DIALOG_COLOR_B', this.color.b));\n                this._find('LabelAlpha').set('value', Locales._('DIALOG_COLOR_A', this.color.a));\n                if (update) {\n                    this.color.hex = Colors.convertToHEX(this.color.r, this.color.g, this.color.b);\n                }\n                let value = this.color.hex;\n                if (this.color.a !== null && !isNaN(this.color.a)) {\n                    value = Utils.format('rgba({0}, {1}, {2}, {3})', this.color.r, this.color.g, this.color.b, this.color.a);\n                }\n                this._find('ColorPreview').set('value', value);\n            };\n            this._find('ColorSelect').on('change', ev => {\n                this.color = ev.detail;\n                this._find('Red').set('value', this.color.r);\n                this._find('Green').set('value', this.color.g);\n                this._find('Blue').set('value', this.color.b);\n                updateHex(true);\n            });\n            this._find('Red').on('change', ev => {\n                this.color.r = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.r);\n            this._find('Green').on('change', ev => {\n                this.color.g = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.g);\n            this._find('Blue').on('change', ev => {\n                this.color.b = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.b);\n            this._find('Alpha').on('change', ev => {\n                this.color.a = parseInt(ev.detail, 10) / 100;\n                updateHex(true);\n            }).set('value', this.color.a * 100);\n            if (this.color.a === null) {\n                this._find('AlphaContainer').hide();\n                this._find('AlphaLabelContainer').hide();\n            }\n            updateHex(false, this.color.a !== null);\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, button === 'ok' ? this.color : null);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/confirm',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class ConfirmDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                buttons: [\n                    'yes',\n                    'no',\n                    'cancel'\n                ]\n            }, args);\n            super('ConfirmDialog', {\n                title: args.title || Locales._('DIALOG_CONFIRM_TITLE'),\n                icon: 'status/dialog-question.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const msg = DialogWindow.parseMessage(this.args.message);\n            this._find('Message').empty().append(msg);\n            const buttonMap = {\n                yes: 'ButtonYes',\n                no: 'ButtonNo',\n                cancel: 'ButtonCancel'\n            };\n            const hide = [];\n            [\n                'yes',\n                'no',\n                'cancel'\n            ].forEach(b => {\n                if (this.args.buttons.indexOf(b) < 0) {\n                    hide.push(b);\n                }\n            });\n            hide.forEach(b => {\n                this._find(buttonMap[b]).hide();\n            });\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/error',[\n    '../core/dialog',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, Locales, Config) {\n    'use strict';\n    return class ErrorDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            const exception = args.exception || {};\n            let error = '';\n            if (exception.stack) {\n                error = exception.stack;\n            } else {\n                if (Object.keys(exception).length) {\n                    error = exception.name;\n                    error += '\\nFilename: ' + exception.fileName || '<unknown>';\n                    error += '\\nLine: ' + exception.lineNumber;\n                    error += '\\nMessage: ' + exception.message;\n                    if (exception.extMessage) {\n                        error += '\\n' + exception.extMessage;\n                    }\n                }\n            }\n            super('ErrorDialog', {\n                title: args.title || Locales._('DIALOG_ERROR_TITLE'),\n                icon: 'status/dialog-error.png',\n                width: 400,\n                height: error ? 400 : 200\n            }, args, callback);\n            this._sound = 'ERROR';\n            this._soundVolume = 1;\n            this.traceMessage = error;\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'alertdialog');\n            const msg = DialogWindow.parseMessage(this.args.message);\n            this._find('Message').empty().append(msg);\n            this._find('Summary').set('value', this.args.error);\n            this._find('Trace').set('value', this.traceMessage);\n            if (!this.traceMessage) {\n                this._find('Trace').hide();\n                this._find('TraceLabel').hide();\n            }\n            if (this.args.bugreport) {\n                this._find('ButtonBugReport').on('click', () => {\n                    let title = '';\n                    let body = [];\n                    if (Config.getConfig('BugReporting.options.issue')) {\n                        const obj = {};\n                        const keys = [\n                            'userAgent',\n                            'platform',\n                            'language',\n                            'appVersion'\n                        ];\n                        keys.forEach(k => {\n                            obj[k] = navigator[k];\n                        });\n                        title = Config.getConfig('BugReporting.options.title');\n                        body = [\n                            '**' + Config.getConfig('BugReporting.options.message').replace('%VERSION%', Config.getConfig('Version')) + ':**',\n                            '\\n',\n                            '> ' + this.args.message,\n                            '\\n',\n                            '> ' + (this.args.error || 'Unknown error'),\n                            '\\n',\n                            '## Expected behaviour',\n                            '\\n',\n                            '## Actual behaviour',\n                            '\\n',\n                            '## Steps to reproduce the error',\n                            '\\n',\n                            '## (Optinal) Browser and OS information',\n                            '\\n',\n                            '```\\n' + JSON.stringify(obj) + '\\n```'\n                        ];\n                        if (this.traceMessage) {\n                            body.push('\\n## Stack Trace \\n```\\n' + this.traceMessage + '\\n```\\n');\n                        }\n                    }\n                    const url = Config.getConfig('BugReporting.url').replace('%TITLE%', encodeURIComponent(title)).replace('%BODY%', encodeURIComponent(body.join('\\n')));\n                    window.open(url);\n                });\n            } else {\n                this._find('ButtonBugReport').hide();\n            }\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileinfo',[\n    '../core/dialog',\n    '../vfs/fs',\n    '../core/locales'\n], function (DialogWindow, VFS, Locales) {\n    'use strict';\n    return class FileInfoDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('FileInfoDialog', {\n                title: args.title || Locales._('DIALOG_FILEINFO_TITLE'),\n                width: 400,\n                height: 400\n            }, args, callback);\n            if (!this.args.file) {\n                throw new Error('You have to select a file for FileInfo');\n            }\n        }\n        init() {\n            const root = super.init(...arguments);\n            const txt = this._find('Info').set('value', Locales._('LBL_LOADING'));\n            const file = this.args.file;\n            VFS.fileinfo(file).then(data => {\n                const info = [];\n                Object.keys(data).forEach(i => {\n                    if (i === 'exif') {\n                        info.push(i + ':\\n\\n' + data[i]);\n                    } else {\n                        info.push(i + ':\\n\\t' + data[i]);\n                    }\n                });\n                txt.set('value', info.join('\\n\\n'));\n                return true;\n            }).catch(error => {\n                txt.set('value', Locales._('DIALOG_FILEINFO_ERROR_LOOKUP_FMT', file.path));\n            });\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/file',[\n    '../core/dialog',\n    '../gui/element',\n    '../vfs/file',\n    '../core/settings-manager',\n    '../core/mount-manager',\n    '../utils/fs',\n    '../utils/misc',\n    '../vfs/fs',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, GUIElement, FileMetadata, SettingsManager, MountManager, FS, Utils, VFS, Locales, Config) {\n    'use strict';\n    return class FileDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                file: null,\n                type: 'open',\n                path: Config.getDefaultPath(),\n                filename: '',\n                filetypes: [],\n                extension: '',\n                mime: 'application/octet-stream',\n                filter: [],\n                mfilter: [],\n                select: null,\n                multiple: false\n            }, args);\n            args.multiple = args.type === 'save' ? false : args.multiple === true;\n            if (args.path && args.path instanceof FileMetadata) {\n                args.path = FS.dirname(args.path.path);\n            }\n            if (args.file && args.file.path) {\n                args.path = FS.dirname(args.file.path);\n                args.filename = args.file.filename;\n                args.mime = args.file.mime;\n                if (args.filetypes.length) {\n                    const setTo = args.filetypes[0];\n                    args.filename = FS.replaceFileExtension(args.filename, setTo.extension);\n                    args.mime = setTo.mime;\n                }\n            }\n            const title = args.title || Locales._(args.type === 'save' ? 'DIALOG_FILE_SAVE' : 'DIALOG_FILE_OPEN');\n            const icon = args.type === 'open' ? 'actions/document-open.png' : 'actions/documentsave-as.png';\n            super('FileDialog', {\n                title: title,\n                icon: icon,\n                width: 600,\n                height: 400\n            }, args, callback);\n            this.selected = null;\n            this.path = args.path;\n            this.settingsWatch = SettingsManager.watch('VFS', () => {\n                this.changePath();\n            });\n        }\n        destroy() {\n            try {\n                SettingsManager.unwatch(this.settingsWatch);\n            } catch (e) {\n            }\n            return super.destroy(...arguments);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const view = this._find('FileView');\n            view.set('filter', this.args.filter);\n            view.set('filetype', this.args.select || '');\n            view.set('defaultcolumns', 'true');\n            const filename = this._find('Filename');\n            const home = this._find('HomeButton');\n            const mlist = this._find('ModuleSelect');\n            const checkEmptyInput = () => {\n                let disable = false;\n                if (this.args.select !== 'dir') {\n                    disable = !filename.get('value').length;\n                }\n                this._find('ButtonOK').set('disabled', disable);\n            };\n            this._toggleLoading(true);\n            view.set('multiple', this.args.multiple);\n            filename.set('value', this.args.filename || '');\n            this._find('ButtonMkdir').on('click', () => {\n                DialogWindow.create('Input', {\n                    message: Locales._('DIALOG_FILE_MKDIR_MSG', this.path),\n                    value: 'New folder'\n                }, (ev, btn, value) => {\n                    if (btn === 'ok' && value) {\n                        const path = FS.pathJoin(this.path, value);\n                        VFS.mkdir(new FileMetadata(path, 'dir')).then(() => {\n                            return this.changePath(path);\n                        }).catch(err => {\n                            OSjs.error(Locales._('DIALOG_FILE_ERROR'), Locales._('ERR_VFSMODULE_MKDIR'), err);\n                        });\n                    }\n                }, this);\n            });\n            home.on('click', () => {\n                const dpath = Config.getDefaultPath();\n                this.changePath(dpath);\n            });\n            view.on('activate', ev => {\n                this.selected = null;\n                if (this.args.type !== 'save') {\n                    filename.set('value', '');\n                }\n                if (ev && ev.detail && ev.detail.entries) {\n                    const activated = ev.detail.entries[0];\n                    if (activated) {\n                        this.selected = new FileMetadata(activated.data);\n                        if (this.selected.type !== 'dir') {\n                            filename.set('value', this.selected.filename);\n                        }\n                        this.checkSelection(ev, true);\n                    }\n                }\n            });\n            view.on('select', ev => {\n                this.selected = null;\n                if (ev && ev.detail && ev.detail.entries) {\n                    const activated = ev.detail.entries[0];\n                    if (activated) {\n                        this.selected = new FileMetadata(activated.data);\n                        if (this.selected.type !== 'dir') {\n                            filename.set('value', this.selected.filename);\n                        }\n                    }\n                }\n                checkEmptyInput();\n            });\n            if (this.args.type === 'save') {\n                const filetypes = [];\n                this.args.filetypes.forEach(f => {\n                    filetypes.push({\n                        label: Utils.format('{0} (.{1} {2})', f.label, f.extension, f.mime),\n                        value: f.extension\n                    });\n                });\n                const ft = this._find('Filetype').add(filetypes).on('change', ev => {\n                    const newinput = FS.replaceFileExtension(filename.get('value'), ev.detail);\n                    filename.set('value', newinput);\n                });\n                if (filetypes.length <= 1) {\n                    new GUIElement(ft.$element.parentNode).hide();\n                }\n                filename.on('enter', ev => {\n                    this.selected = null;\n                    this.checkSelection(ev);\n                });\n                filename.on('change', ev => {\n                    checkEmptyInput();\n                });\n                filename.on('keyup', ev => {\n                    checkEmptyInput();\n                });\n            } else {\n                if (this.args.select !== 'dir') {\n                    this._find('ButtonMkdir').hide();\n                }\n                this._find('FileInput').hide();\n            }\n            const rootPath = MountManager.getModuleFromPath(this.path).option('root');\n            const modules = MountManager.getModules().filter(m => {\n                if (!this.args.mfilter.length) {\n                    return true;\n                }\n                return this.args.mfilter.every(fn => fn(m));\n            }).map(m => {\n                return {\n                    label: m.option('title') + (m.isReadOnly() ? Utils.format(' ({0})', Locales._('LBL_READONLY')) : ''),\n                    value: m.option('root')\n                };\n            });\n            mlist.clear().add(modules).set('value', rootPath);\n            mlist.on('change', ev => {\n                this.changePath(ev.detail, true);\n            });\n            this.changePath();\n            checkEmptyInput();\n            return root;\n        }\n        changePath(dir, fromDropdown) {\n            const view = this._find('FileView');\n            const lastDir = this.path;\n            const resetLastSelected = () => {\n                try {\n                    const rootPath = MountManager.getModuleFromPath(lastDir).option('root');\n                    this._find('ModuleSelect').set('value', rootPath);\n                } catch (e) {\n                    console.warn('FileDialog::changePath()', 'resetLastSelection()', e);\n                }\n            };\n            this._toggleLoading(true);\n            view.chdir({\n                path: dir || this.path,\n                done: error => {\n                    if (error) {\n                        if (fromDropdown) {\n                            resetLastSelected();\n                        }\n                    } else {\n                        if (dir) {\n                            this.path = dir;\n                        }\n                    }\n                    this.selected = null;\n                    this._toggleLoading(false);\n                }\n            });\n        }\n        checkFileExtension() {\n            const filename = this._find('Filename');\n            let mime = this.args.mime;\n            let input = filename.get('value');\n            if (this.args.filetypes.length) {\n                if (!input && this.args.filename) {\n                    input = this.args.filename;\n                }\n                if (input.length) {\n                    const extension = input.split('.').pop();\n                    let found = false;\n                    this.args.filetypes.forEach(f => {\n                        if (f.extension === extension) {\n                            found = f;\n                        }\n                        return !!found;\n                    });\n                    found = found || this.args.filetypes[0];\n                    input = FS.replaceFileExtension(input, found.extension);\n                    mime = found.mime;\n                }\n            }\n            return {\n                filename: input,\n                mime: mime\n            };\n        }\n        checkSelection(ev, wasActivated) {\n            if (this.selected && this.selected.type === 'dir') {\n                if (wasActivated) {\n                    this.changePath(this.selected.path);\n                    return false;\n                }\n            }\n            if (this.args.type === 'save') {\n                let check = this.checkFileExtension();\n                if (!this.path || !check.filename) {\n                    OSjs.error(Locales._('DIALOG_FILE_ERROR'), Locales._('DIALOG_FILE_MISSING_FILENAME'));\n                    return false;\n                }\n                this.selected = new FileMetadata(this.path.replace(/^\\//, '') + '/' + check.filename, check.mime);\n                this._toggleDisabled(true);\n                VFS.exists(this.selected).then(result => {\n                    this._toggleDisabled(false);\n                    if (this._destroyed) {\n                        return false;\n                    }\n                    if (result) {\n                        this._toggleDisabled(true);\n                        if (this.selected) {\n                            DialogWindow.create('Confirm', {\n                                buttons: [\n                                    'yes',\n                                    'no'\n                                ],\n                                message: Locales._('DIALOG_FILE_OVERWRITE', this.selected.filename)\n                            }, (ev, button) => {\n                                this._toggleDisabled(false);\n                                if (button === 'yes' || button === 'ok') {\n                                    this.closeCallback(ev, 'ok', this.selected);\n                                }\n                            }, this);\n                        }\n                    } else {\n                        this.closeCallback(ev, 'ok', this.selected);\n                    }\n                    return true;\n                }).catch(error => {\n                    this._toggleDisabled(false);\n                    if (this._destroyed) {\n                        return;\n                    }\n                    OSjs.error(Locales._('DIALOG_FILE_ERROR'), Locales._('DIALOG_FILE_MISSING_FILENAME'));\n                });\n                return false;\n            } else {\n                if (!this.selected && this.args.select !== 'dir') {\n                    OSjs.error(Locales._('DIALOG_FILE_ERROR'), Locales._('DIALOG_FILE_MISSING_SELECTION'));\n                    return false;\n                }\n                let res = this.selected;\n                if (!res && this.args.select === 'dir') {\n                    res = new FileMetadata({\n                        filename: FS.filename(this.path),\n                        path: this.path,\n                        type: 'dir'\n                    });\n                }\n                this.closeCallback(ev, 'ok', res);\n            }\n            return true;\n        }\n        onClose(ev, button) {\n            if (button === 'ok' && !this.checkSelection(ev)) {\n                return;\n            }\n            this.closeCallback(ev, button, this.selected);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileprogress',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class FileProgressDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('FileProgressDialog', {\n                title: args.title || Locales._('DIALOG_FILEPROGRESS_TITLE'),\n                icon: 'actions/document-send.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n            this.busy = !!args.filename;\n        }\n        init() {\n            const root = super.init(...arguments);\n            if (this.args.message) {\n                this._find('Message').set('value', this.args.message, true);\n            }\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, null);\n        }\n        setProgress(p, close = true) {\n            const pb = this._find('Progress');\n            if (pb) {\n                pb.set('progress', p);\n            }\n            if (close && p >= 100) {\n                this._close(true);\n            }\n        }\n        _close(force) {\n            if (!force && this.busy) {\n                return false;\n            }\n            return super._close();\n        }\n        _onKeyEvent(ev) {\n            if (!this.busy) {\n                super._onKeyEvent(...arguments);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileupload',[\n    '../core/dialog',\n    '../vfs/fs',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, VFS, Locales, Config) {\n    'use strict';\n    return class FileUploadDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                dest: Config.getDefaultPath(),\n                progress: {},\n                file: null\n            }, args);\n            if (args.destination) {\n                args.dest = args.destination;\n            }\n            if (!args.dest) {\n                args.dest = Config.getDefaultPath();\n            }\n            super('FileUploadDialog', {\n                title: args.title || Locales._('DIALOG_UPLOAD_TITLE'),\n                icon: 'actions/document-new.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const message = this._find('Message');\n            const maxSize = Config.getConfig('VFS.MaxUploadSize');\n            message.set('value', Locales._('DIALOG_UPLOAD_DESC', this.args.dest, maxSize), true);\n            const input = this._find('File');\n            if (this.args.file) {\n                this.setFile(this.args.file, input);\n            } else {\n                input.on('change', ev => {\n                    this.setFile(ev.detail, input);\n                });\n            }\n            return root;\n        }\n        setFile(file, input) {\n            let progressDialog;\n            const error = (msg, ev) => {\n                OSjs.error(Locales._('DIALOG_UPLOAD_FAILED'), Locales._('DIALOG_UPLOAD_FAILED_MSG'), msg || Locales._('DIALOG_UPLOAD_FAILED_UNKNOWN'));\n                progressDialog._close(true);\n                this.onClose(ev, 'cancel');\n            };\n            if (file) {\n                let fileSize = 0;\n                if (file.size > 1024 * 1024) {\n                    fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';\n                } else {\n                    fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';\n                }\n                if (input) {\n                    input.set('disabled', true);\n                }\n                this._find('ButtonCancel').set('disabled', true);\n                const desc = Locales._('DIALOG_UPLOAD_MSG_FMT', file.name, file.type, fileSize, this.args.dest);\n                progressDialog = DialogWindow.create('FileProgress', {\n                    message: desc,\n                    dest: this.args.dest,\n                    filename: file.name,\n                    mime: file.type,\n                    size: fileSize\n                }, (ev, button) => {\n                }, this);\n                VFS.upload({\n                    files: [file],\n                    destination: this.args.dest\n                }, {\n                    onprogress: ev => {\n                        if (ev.lengthComputable) {\n                            const p = Math.round(ev.loaded * 100 / ev.total);\n                            progressDialog.setProgress(p);\n                        }\n                    }\n                }).then(() => {\n                    progressDialog._close(true);\n                    return this.onClose(null, 'ok', file);\n                }).catch(error);\n                setTimeout(() => {\n                    if (progressDialog) {\n                        progressDialog._focus();\n                    }\n                }, 100);\n            }\n        }\n        onClose(ev, button, result) {\n            result = result || null;\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/font',[\n    '../core/dialog',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, Locales, Config) {\n    'use strict';\n    return class FontDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                fontName: Config.getConfig('Fonts.default'),\n                fontSize: 12,\n                fontColor: '#000000',\n                backgroundColor: '#ffffff',\n                fonts: Config.getConfig('Fonts.list'),\n                minSize: 6,\n                maxSize: 30,\n                text: 'The quick brown fox jumps over the lazy dog',\n                unit: 'px'\n            }, args);\n            if (args.unit === 'null' || args.unit === 'unit') {\n                args.unit = '';\n            }\n            super('FontDialog', {\n                title: args.title || Locales._('DIALOG_FONT_TITLE'),\n                width: 400,\n                height: 300\n            }, args, callback);\n            this.selection = {\n                fontName: args.fontName,\n                fontSize: args.fontSize + args.unit\n            };\n        }\n        init() {\n            const root = super.init(...arguments);\n            const preview = this._find('FontPreview');\n            const sizes = [];\n            const fonts = [];\n            for (let i = this.args.minSize; i < this.args.maxSize; i++) {\n                sizes.push({\n                    value: i,\n                    label: i\n                });\n            }\n            for (let j = 0; j < this.args.fonts.length; j++) {\n                fonts.push({\n                    value: this.args.fonts[j],\n                    label: this.args.fonts[j]\n                });\n            }\n            const updatePreview = () => {\n                preview.querySelector('textarea').style.fontFamily = this.selection.fontName;\n                preview.querySelector('textarea').style.fontSize = this.selection.fontSize;\n            };\n            const listFonts = this._find('FontName');\n            listFonts.add(fonts).set('value', this.args.fontName);\n            listFonts.on('change', ev => {\n                this.selection.fontName = ev.detail;\n                updatePreview();\n            });\n            const listSizes = this._find('FontSize');\n            listSizes.add(sizes).set('value', this.args.fontSize);\n            listSizes.on('change', ev => {\n                this.selection.fontSize = ev.detail + this.args.unit;\n                updatePreview();\n            });\n            preview.$element.style.color = this.args.fontColor;\n            preview.$element.style.backgroundColor = this.args.backgroundColor;\n            preview.set('value', this.args.text);\n            if (this.args.fontSize < 0) {\n                this._find('FontSizeContainer').hide();\n            }\n            updatePreview();\n            return root;\n        }\n        onClose(ev, button) {\n            const result = button === 'ok' ? this.selection : null;\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/input',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class InputDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('InputDialog', {\n                title: args.title || Locales._('DIALOG_INPUT_TITLE'),\n                icon: 'status/dialog-information.png',\n                width: 400,\n                height: 120\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            if (this.args.message) {\n                const msg = DialogWindow.parseMessage(this.args.message);\n                this._find('Message').empty().append(msg);\n            }\n            const input = this._find('Input');\n            input.set('placeholder', this.args.placeholder || '');\n            input.set('value', this.args.value || '');\n            input.on('enter', ev => {\n                this.onClose(ev, 'ok');\n            });\n            return root;\n        }\n        _focus() {\n            if (super._focus(...arguments)) {\n                this._find('Input').focus();\n                return true;\n            }\n            return false;\n        }\n        onClose(ev, button) {\n            const result = this._find('Input').get('value');\n            this.closeCallback(ev, button, button === 'ok' ? result : null);\n        }\n        setRange(range) {\n            const input = this._find('Input');\n            if (input.$element) {\n                input.$element.querySelector('input').select(range);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transport',[\n    'skylark-axios',\n    '../core/locales'\n], function (axios, Locales) {\n    'use strict';\n    return class Transport {\n        request(method, args, options, mount) {\n            const readOnly = [\n                'upload',\n                'unlink',\n                'write',\n                'mkdir',\n                'move',\n                'trash',\n                'untrash',\n                'emptyTrash'\n            ];\n            if (mount.isReadOnly()) {\n                if (readOnly.indexOf(method) !== -1) {\n                    return Promise.reject(new Error(Locales._('ERR_VFSMODULE_READONLY')));\n                }\n            }\n            const newArgs = args.concat([\n                options,\n                mount\n            ]);\n            return this[method](...newArgs);\n        }\n        scandir(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        read(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        write(file, data, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        unlink(src, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        copy(src, dest, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        move(src, dest, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        exists(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        fileinfo(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        mkdir(dir, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        upload(file, dest, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        download(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item).then(url => {\n                    return axios({\n                        responseType: 'arraybuffer',\n                        url: url,\n                        method: 'GET'\n                    }).then(result => {\n                        return resolve(result.data);\n                    }).catch(error => {\n                        reject(error.message);\n                    });\n                }).catch(reject);\n            });\n        }\n        url(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        find(file, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        trash(file, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        untrash(file, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        emptyTrash(options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        freeSpace(root, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/web',[\n    'skylark-axios',\n    '../transport',\n    '../../core/connection',\n    '../../utils/fs'\n], function (axios, Transport, Connection, FS) {\n    'use strict';\n    return class WebTransport extends Transport {\n        _request(url, responseType, method, options) {\n            return new Promise((resolve, reject) => {\n                if (!options.cors) {\n                    const binary = options.type === 'text' ? false : responseType === 'arraybuffer';\n                    Connection.request('curl', {\n                        url: url,\n                        method: method,\n                        binary: binary\n                    }).then(result => {\n                        if (binary) {\n                            return FS.dataSourceToAb(result.body, 'application/octet-stream', (err, ab) => {\n                                return err ? reject(err) : resolve(ab);\n                            });\n                        }\n                        return resolve(result.body);\n                    }).catch(reject);\n                } else {\n                    axios({\n                        responseType: responseType,\n                        url: url,\n                        method: method\n                    }).then(response => {\n                        return resolve(responseType === null ? response.statusText : response.data);\n                    }).catch(e => reject(new Error(e.message || e)));\n                }\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                const root = mount.option('root');\n                const url = item.path.replace(/\\/?$/, '/_scandir.json');\n                this._request(url, 'json', 'GET', options).then(response => {\n                    return resolve(response.map(iter => {\n                        iter.path = root + iter.path.replace(/^\\//, '');\n                        return iter;\n                    }));\n                }).catch(reject);\n            });\n        }\n        read(item, options) {\n            const mime = item.mime || 'application/octet-stream';\n            return new Promise((resolve, reject) => {\n                this._request(item.path, 'arraybuffer', 'GET', options).then(response => {\n                    if (options.cors) {\n                        if (options.type === 'text') {\n                            resolve(response);\n                        } else {\n                            FS.dataSourceToAb(response, 'application/octet-stream', (err, ab) => {\n                                return err ? reject(err) : resolve(ab);\n                            });\n                        }\n                        return true;\n                    }\n                    if (options.type === 'text') {\n                        FS.abToText(response, mime, (err, txt) => {\n                            if (err) {\n                                reject(new Error(err));\n                            } else {\n                                resolve(txt);\n                            }\n                        });\n                        return true;\n                    }\n                    return resolve(response);\n                }).catch(reject);\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this._request(item.path, null, 'HEAD').then(response => {\n                    return resolve(response.toUpperCase() === 'OK');\n                }).catch(reject);\n            });\n        }\n        url(item) {\n            return Promise.resolve(item.path);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/osjs',[\n    '../file',\n    '../../utils/fs',\n    '../../core/connection',\n    '../transport',\n    '../../core/config',\n    '../../core/locales'\n], function (FileMetadata, FS, Connection, Transport, Config, Locales) {\n    'use strict';\n    return class OSjsTransport extends Transport {\n        _request(method, args, options) {\n            return Connection.request('FS:' + method, args, options);\n        }\n        _requestUpload(dest, file, options) {\n            options = options || {};\n            dest = dest instanceof FileMetadata ? dest.path : dest;\n            if (typeof file.size !== 'undefined') {\n                const maxSize = Config.getConfig('VFS.MaxUploadSize');\n                if (maxSize > 0) {\n                    const bytes = file.size;\n                    if (bytes > maxSize) {\n                        const msg = Locales._('DIALOG_UPLOAD_TOO_BIG_FMT', FS.humanFileSize(maxSize));\n                        return Promise.reject(new Error(msg));\n                    }\n                }\n            }\n            const fd = new FormData();\n            fd.append('path', dest);\n            if (file) {\n                fd.append('filename', file.filename);\n            }\n            if (options) {\n                Object.keys(options).forEach(key => {\n                    if (key !== 'meta' && typeof options[key] !== 'function') {\n                        fd.append(key, String(options[key]));\n                    }\n                });\n            }\n            if (file instanceof window.ArrayBuffer) {\n                fd.append('size', String(file.byteLength));\n            }\n            FS.addFormFile(fd, 'upload', file, options.meta);\n            return this._request('upload', fd, options);\n        }\n        scandir(item, options) {\n            options = options || {};\n            const args = {\n                path: item.path,\n                options: { shortcuts: options.shortcuts }\n            };\n            return new Promise((resolve, reject) => {\n                this._request('scandir', args, options).then(result => {\n                    return resolve(result.map(i => new FileMetadata(i)));\n                }).catch(reject);\n            });\n        }\n        read(item, options) {\n            return this._request('get', { path: item.path }, options);\n        }\n        write(file, data, options) {\n            options = options || {};\n            options.meta = file;\n            options.overwrite = true;\n            options.onprogress = options.onprogress || function () {\n            };\n            const parentfile = new FileMetadata(FS.dirname(file.path), file.mime);\n            return this._requestUpload(parentfile, data, options);\n        }\n        unlink(src) {\n            return this._request('unlink', { path: src.path });\n        }\n        copy(src, dest, options) {\n            return this._request('copy', {\n                src: src.path,\n                dest: dest.path\n            }, options);\n        }\n        move(src, dest, options) {\n            return this._request('move', {\n                src: src.path,\n                dest: dest.path\n            }, options);\n        }\n        exists(item) {\n            return this._request('exists', { path: item.path });\n        }\n        fileinfo(item) {\n            return this._request('fileinfo', { path: item.path });\n        }\n        mkdir(dir) {\n            return this._request('mkdir', { path: dir.path });\n        }\n        upload(dest, data, options) {\n            return this._requestUpload(dest, data, options);\n        }\n        url(item, options) {\n            if (typeof item === 'string') {\n                item = new FileMetadata(item);\n            }\n            return Promise.resolve(Connection.instance.getVFSPath(item, options));\n        }\n        find(file, options) {\n            return this._request('find', {\n                path: file.path,\n                args: options\n            });\n        }\n        trash(file) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        untrash(file) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        emptyTrash() {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        freeSpace(root) {\n            return this._request('freeSpace', { root: root });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/dist',[\n    './osjs',\n    '../../core/mount-manager',\n    '../../core/config',\n    '../../core/locales'\n], function ( OSjsTransport, MountManager, Config, Locales) {\n    'use strict';\n    return class DistTransport extends OSjsTransport {\n        request(method, args, options) {\n            if ([\n                    'url',\n                    'scandir',\n                    'read'\n                ].indexOf(method) === -1) {\n                return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n            }\n            return super.request(...arguments);\n        }\n        url(item) {\n            const root = Config.getBrowserPath();\n            const module = MountManager.getModuleFromPath(item.path);\n            const url = item.path.replace(module.option('match'), root).replace(/^\\/+/, '/');\n            return Promise.resolve(url);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/applications',[\n    '../../core/package-manager',\n    '../transport',\n    '../file',\n    '../../core/locales'\n], function ( PackageManager, Transport, FileMetadata, Locales) {\n    'use strict';\n    return class ApplicationTransport extends Transport {\n        request(method, args, options) {\n            if (['scandir'].indexOf(method) === -1) {\n                return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n            }\n            return super.request(...arguments);\n        }\n        scandir() {\n            const metadata = PackageManager.getPackages(); \n            const files = [];\n            Object.keys(metadata).forEach(m => {\n                const iter = metadata[m];\n                if (iter.type !== 'extension') {\n                    files.push(new FileMetadata({\n                        filename: iter.name,\n                        type: 'application',\n                        path: 'applications:///' + m,\n                        mime: 'osjs/application'\n                    }, 'osjs/application'));\n                }\n            });\n            return Promise.resolve(files);\n        }\n        url(item) {\n            return Promise.resolve(item.path);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/webdav',[\n    'skylark-axios',\n    '../../core/connection',\n    '../../utils/fs',\n    '../../utils/misc',\n    '../transport',\n    '../file',\n    '../../core/config',\n    '../../core/locales'\n], function (axios, Connection, FS, Utils, Transport, FileMetadata, Config, Locales) {\n    'use strict';\n    function getTargetPath(item, mount) {\n        return item.path.replace(mount.option('match'), '');\n    }\n    function getTargetUrl(mount, file, moduleOptions) {\n        let baseUrl = moduleOptions.host;\n        if (!moduleOptions.cors) {\n            baseUrl = Utils.parseurl(moduleOptions.host, {\n                username: moduleOptions.username,\n                password: moduleOptions.password\n            }).url;\n        }\n        const basename = getTargetPath(file, mount);\n        return baseUrl.replace(/\\/?$/, basename.replace(/^\\/?/, '/'));\n    }\n    function getFilePath(c, ns, mount) {\n        const moduleOptions = mount.option('options') || {};\n        const uri = Utils.parseurl(moduleOptions.host).path;\n        try {\n            let path = c.getElementsByTagNameNS(ns, 'href')[0].textContent;\n            return path.substr(uri.length - 1, path.length);\n        } catch (e) {\n            console.warn(e);\n        }\n        return '/';\n    }\n    function getFileMime(type, c, ns) {\n        if (type === 'file') {\n            try {\n                return c.getElementsByTagNameNS(ns, 'getcontenttype')[0].textContent || 'application/octet-stream';\n            } catch (e) {\n                return 'application/octet-stream';\n            }\n        }\n        return null;\n    }\n    function getFileId(type, c, ns) {\n        try {\n            return c.getElementsByTagNameNS(ns, 'getetag')[0].textContent;\n        } catch (e) {\n        }\n        return null;\n    }\n    function getFileSize(type, c, ns) {\n        if (type === 'file') {\n            try {\n                return parseInt(c.getElementsByTagNameNS(ns, 'getcontentlength')[0].textContent, 10) || 0;\n            } catch (e) {\n            }\n        }\n        return 0;\n    }\n    function parseListing(doc, item, mount) {\n        const root = mount.option('root');\n        const moduleOptions = mount.option('options') || {};\n        const reqpath = getTargetPath(item, mount);\n        let ns = moduleOptions.ns || 'DAV';\n        if (ns.substr(-1) !== ':') {\n            ns += ':';\n        }\n        return (doc.children || []).map(c => {\n            let path = getFilePath(c, ns, mount);\n            let type = 'file';\n            if (path.match(/\\/$/)) {\n                type = 'dir';\n                path = path.replace(/\\/$/, '') || '/';\n            }\n            if (path === reqpath) {\n                return false;\n            }\n            return new FileMetadata({\n                id: getFileId(type, c, ns),\n                path: root + path.replace(/^\\//, ''),\n                filename: FS.filename(path),\n                size: getFileSize(type, c, ns),\n                mime: getFileMime(type, c, ns),\n                type: type\n            });\n        }).filter(iter => iter !== false);\n    }\n    function parseResponse(body) {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(body, 'application/xml');\n        return doc.firstChild;\n    }\n    return class WebDAVTransport extends Transport {\n        _request(method, args, options, mount, raw) {\n            const mime = args.mime || 'application/octet-stream';\n            const file = new FileMetadata(args, mime);\n            const moduleOptions = mount.option('options') || {};\n            const headers = {};\n            const url = getTargetUrl(mount, file, moduleOptions);\n            if (args.dest) {\n                const dest = new FileMetadata(args.dest, mime);\n                headers.Destination = getTargetUrl(mount, dest, moduleOptions);\n            }\n            if (mime) {\n                headers['Content-Type'] = mime;\n            }\n            return new Promise((resolve, reject) => {\n                if (moduleOptions.cors) {\n                    const aopts = {\n                        url: url,\n                        responseType: raw === true ? 'arraybuffer' : 'text',\n                        method: method,\n                        headers: headers,\n                        data: args.data,\n                        auth: {\n                            username: moduleOptions.username,\n                            password: moduleOptions.password\n                        }\n                    };\n                    axios(aopts).then(response => {\n                        return resolve(response.data);\n                    }).catch(e => reject(new Error(e.message || e)));\n                } else {\n                    const copts = {\n                        url: url,\n                        method: method,\n                        binary: raw === true,\n                        mime: mime,\n                        headers: headers\n                    };\n                    Connection.request('curl', copts).then(response => {\n                        const code = response.httpCode;\n                        if (!response) {\n                            return reject(new Error(Locales._('ERR_VFS_REMOTEREAD_EMPTY')));\n                        } else if ([\n                                200,\n                                201,\n                                203,\n                                204,\n                                205,\n                                207\n                            ].indexOf(code) < 0) {\n                            const error = new Error(Locales._('ERR_VFSMODULE_XHR_ERROR') + ': ' + code);\n                            error.httpCode = code;\n                            return reject(error);\n                        }\n                        if (raw === true) {\n                            return FS.dataSourceToAb(response.body, mime, (err, ab) => {\n                                return err ? reject(new Error(err)) : resolve(ab);\n                            });\n                        }\n                        return resolve(parseResponse(response.body));\n                    }).catch(reject);\n                }\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this._request('PROPFIND', { path: item.path }, options, mount).then(doc => {\n                    resolve(doc ? parseListing(doc, item, mount).map(iter => new FileMetadata(iter)) : []);\n                }).catch(reject);\n            });\n        }\n        read(item, options, mount) {\n            return this._request('GET', {\n                path: item.path,\n                mime: item.mime\n            }, options, mount, true);\n        }\n        write(item, data, options, mount) {\n            return this._request('PUT', {\n                path: item.path,\n                data: data,\n                mime: item.mime\n            }, options, mount);\n        }\n        unlink(item, options, mount) {\n            return this._request('DELETE', { path: item.path }, options, mount);\n        }\n        copy(src, dest, options, mount) {\n            return this._request('COPY', {\n                path: src.path,\n                dest: dest.path\n            }, options, mount);\n        }\n        move(src, dest, options, mount) {\n            return this._request('MOVE', {\n                path: src.path,\n                dest: dest.path\n            }, options, mount);\n        }\n        exists(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this._request('PROPFIND', { path: item.path }, options, mount).then(() => {\n                    resolve(false);\n                }).catch(err => {\n                    if (err.httpCode === 404) {\n                        resolve(false);\n                    } else {\n                        console.warn(err);\n                        resolve(true);\n                    }\n                });\n            });\n        }\n        mkdir(item, options, mount) {\n            return this._request('MKCOL', { path: item.path }, options, mount);\n        }\n        url(item, options, mount) {\n            const moduleOptions = mount.option('options') || {};\n            let requestUrl = getTargetUrl(mount, item, moduleOptions);\n            if (!moduleOptions.cors) {\n                requestUrl = Config.getConfig('Connection.FSURI') + '/read?path=' + encodeURIComponent(requestUrl);\n            }\n            return Promise.resolve(requestUrl);\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/service-notification-icon',[\n    '../gui/notification',\n    '../core/theme',\n    '../gui/menu',\n    '../core/locales'\n], function (Notification, Theme, Menu, Locales) {\n    'use strict';\n    class ServiceNotificationIcon {\n        constructor() {\n            this.entries = {};\n            this.size = 0;\n            this.notif = null;\n        }\n        init() {\n            const show = ev => {\n                this.displayMenu(ev);\n                return false;\n            };\n            this.notif = Notification.createIcon('ServiceNotificationIcon', {\n                image: Theme.getIcon('status/dialog-password.png'),\n                onContextMenu: show,\n                onClick: show,\n                onInited: (el, img) => {\n                    this._updateIcon();\n                }\n            });\n            this._updateIcon();\n        }\n        destroy() {\n            Notification.destroyIcon('ServiceNotificationIcon');\n            this.size = 0;\n            this.entries = {};\n            this.notif = null;\n        }\n        _updateIcon() {\n            if (this.notif) {\n                if (this.notif.$container) {\n                    this.notif.$container.style.display = this.size ? 'inline-block' : 'none';\n                }\n                this.notif.setTitle(Locales._('SERVICENOTIFICATION_TOOLTIP', this.size.toString()));\n            }\n        }\n        displayMenu(ev) {\n            const menu = [];\n            const entries = this.entries;\n            Object.keys(entries).forEach(name => {\n                menu.push({\n                    title: name,\n                    menu: entries[name]\n                });\n            });\n            Menu.create(menu, ev);\n        }\n        add(name, menu) {\n            if (!this.entries[name]) {\n                this.entries[name] = menu;\n                this.size++;\n                this._updateIcon();\n            }\n        }\n        remove(name) {\n            if (this.entries[name]) {\n                delete this.entries[name];\n                this.size--;\n                this._updateIcon();\n            }\n        }\n    }\n    return new ServiceNotificationIcon();\n});\ndefine('skylark-osjsv2-client/helpers/qs',[],function(){\r\n  'use strict';\r\n\r\n\r\n\r\n  /**\r\n   * A response from a web request\r\n   *\r\n   * @param {Number} statusCode\r\n   * @param {Object} headers\r\n   * @param {Buffer} body\r\n   * @param {String} url\r\n   */\r\n  function Response(statusCode, headers, body, url) {\r\n    if (typeof statusCode !== 'number') {\r\n      throw new TypeError('statusCode must be a number but was ' + (typeof statusCode));\r\n    }\r\n    if (headers === null) {\r\n      throw new TypeError('headers cannot be null');\r\n    }\r\n    if (typeof headers !== 'object') {\r\n      throw new TypeError('headers must be an object but was ' + (typeof headers));\r\n    }\r\n    this.statusCode = statusCode;\r\n    this.headers = {};\r\n    for (var key in headers) {\r\n      this.headers[key.toLowerCase()] = headers[key];\r\n    }\r\n    this.body = body;\r\n    this.url = url;\r\n  }\r\n\r\n  Response.prototype.getBody = function (encoding) {\r\n    if (this.statusCode >= 300) {\r\n      var err = new Error('Server responded with status code '\r\n                      + this.statusCode + ':\\n' + this.body.toString());\r\n      err.statusCode = this.statusCode;\r\n      err.headers = this.headers;\r\n      err.body = this.body;\r\n      err.url = this.url;\r\n      throw err;\r\n    }\r\n    return encoding ? this.body.toString(encoding) : this.body;\r\n  };\r\n\r\n  return Response;\r\n});\ndefine('skylark-osjsv2-client/helpers/handle-qs',['./qs'],function(qs){\r\n  var parse = qs.parse;\r\n  var stringify = qs.stringify;\r\n\r\n  return function handleQs(url, query) {\r\n    url = url.split('?');\r\n    var start = url[0];\r\n    var qs = (url[1] || '').split('#')[0];\r\n    var end = url[1] && url[1].split('#').length > 1 ? '#' + url[1].split('#')[1] : '';\r\n\r\n    var baseQs = parse(qs);\r\n    for (var i in query) {\r\n      baseQs[i] = query[i];\r\n    }\r\n    qs = stringify(baseQs);\r\n    if (qs !== '') {\r\n      qs = '?' + qs;\r\n    }\r\n    return start + qs + end;\r\n  }\r\n});\ndefine('skylark-osjsv2-client/helpers/then-jsonp',['./handle-qs'],function(handleQs){\r\n  'use strict';\r\n\r\n  var jsonpID = 0;\r\n\r\n  var queues = {};\r\n\r\n  function pquest(method, url, options, callback) {\r\n    var result = new Promise(function (resolve, reject) {\r\n\r\n      // check types of arguments\r\n\r\n      if (typeof method !== 'string') {\r\n        throw new TypeError('The method must be a string.');\r\n      }\r\n      if (typeof url !== 'string') {\r\n        throw new TypeError('The URL/path must be a string.');\r\n      }\r\n      if (typeof options === 'function') {\r\n        callback = options;\r\n        options = {};\r\n      }\r\n      if (options === null || options === undefined) {\r\n        options = {};\r\n      }\r\n      if (typeof options !== 'object') {\r\n        throw new TypeError('Options must be an object (or null).');\r\n      }\r\n      if (typeof callback !== 'function') {\r\n        callback = undefined;\r\n      }\r\n\r\n      if (options.body) {\r\n        throw new TypeError('JSONP does not support requests that have bodies');\r\n      }\r\n      if (options.headers) {\r\n        throw new TypeError('JSONP does not support requests that specify headers');\r\n      }\r\n      if (options.followRedirects === false) {\r\n        throw new TypeError('JSONP does not support requests that do not follow redirects');\r\n      }\r\n\r\n      options.qs = options.qs || {};\r\n      if (options.json) {\r\n        Object.keys(options.json).forEach(function (key) {\r\n          options.qs[key] = options.json[key];\r\n        });\r\n        delete options.json;\r\n      }\r\n\r\n      var callbackName = options.callbackName || 'then_jsonp_' + (++jsonpID);\r\n\r\n      if (options.callbackParameter !== false) {\r\n        options.qs[options.callbackParameter || 'callback'] = callbackName;\r\n      }\r\n      if (method.toLowerCase() !== 'get') {\r\n        options.qs[options.methodParameter || 'method'] = method;\r\n      }\r\n\r\n      if (queues[callbackName]) {\r\n        queues[callbackName].push(run);\r\n      } else {\r\n        queues[callbackName] = [];\r\n        run();\r\n      }\r\n\r\n      function run() {\r\n        // handle query string\r\n        if (options.qs) {\r\n          url = handleQs(url, options.qs);\r\n        }\r\n\r\n        var script = document.createElement('script');\r\n        var head = document.getElementsByTagName('head')[0] || document.documentElement;\r\n        var abortTimeout;\r\n        var done = false;\r\n        function onComplete(success) {\r\n          if (!done) {\r\n            done = true;\r\n            script.onload = script.onreadystatechange = script.onerror = null;\r\n            clearTimeout(abortTimeout);\r\n            if (callbackName in window) {\r\n              if (success) delete window[callbackName];\r\n              else window[callbackName] = function () {};\r\n            }\r\n            if (script && script.parentNode) {\r\n              script.parentNode.removeChild(script);\r\n            }\r\n            if (queues[callbackName].length) queues[callbackName].shift()();\r\n            else delete queues[callbackName];\r\n          }\r\n        }\r\n        script.onload = script.onreadystatechange = function () {\r\n          if (!this.readyState || this.readyState === \"loaded\" || this.readyState === \"complete\") {\r\n            onComplete();\r\n            setTimeout(function () {\r\n              reject(new Error('JSONP callback should already have been called'));\r\n            }, 100);\r\n          }\r\n        };\r\n        script.onerror = function () {\r\n          onComplete();\r\n          reject(new Error('JSONP request failed'));\r\n        };\r\n        window[callbackName] = function (result) {\r\n          onComplete(true);\r\n          resolve(result);\r\n        };\r\n        abortTimeout = setTimeout(function(){\r\n          onComplete();\r\n          reject(new Error('JSONP timed out'));\r\n        }, options.timeout || 10000);\r\n\r\n        script.src = url;\r\n        script.async = true;\r\n\r\n        head.appendChild(script);\r\n      }\r\n    });\r\n    result.getBody = function () {\r\n      return result.then(function (res) { return res.getBody(); });\r\n    };\r\n    return result.nodeify(callback);\r\n  }\r\n\r\n  return pquest;\r\n});\ndefine('skylark-osjsv2-client/helpers/google-api',[\n    '../core/mount-manager',\n    './service-notification-icon',\n    '../utils/preloader',\n    '../core/locales',\n    '../core/config',\n    './then-jsonp'\n], function (MountManager, ServiceNotificationIcon, Preloader, Locales, b, jsonp) {\n    'use strict';\n    const gapi = window.gapi = window.gapi || {};\n    let SingletonInstance = null;\n    class GoogleAPI {\n        constructor(clientId) {\n            this.clientId = clientId;\n            this.accessToken = null;\n            this.userId = null;\n            this.preloaded = false;\n            this.authenticated = false;\n            this.loaded = [];\n            this.preloads = [{\n                    type: 'javascript',\n                    src: 'https://apis.google.com/js/api.js'\n                }];\n        }\n        destroy() {\n        }\n        init(callback) {\n            callback = callback || function () {\n            };\n            if (this.preloaded) {\n                callback(false, true);\n            } else {\n                Preloader.preload(this.preloads).then(result => {\n                    if (result.failed.length) {\n                        this.preloaded = true;\n                    }\n                    callback(result.failed.join('\\n'));\n                }).catch(callback);\n            }\n        }\n        load(load, scope, client, callback) {\n            const auth = cb => {\n                this.authenticate(scope, (error, result) => {\n                    if (error) {\n                        cb(error);\n                    } else {\n                        if (!this.authenticated) {\n                            cb(Locales._('GAPI_AUTH_FAILURE'));\n                            return;\n                        }\n                        cb(false, result);\n                    }\n                });\n            };\n            const loadAll = finished => {\n                const lload = [];\n                load.forEach(i => {\n                    if (this.loaded.indexOf(i) === -1) {\n                        lload.push(i);\n                    }\n                });\n                let current = 0;\n                let total = lload.length;\n                console.debug('GoogleAPI::load()', load, '=>', lload, scope);\n                const _load = (iter, cb) => {\n                    let args = [];\n                    let name = null;\n                    if (iter instanceof Array) {\n                        if (iter.length > 0 && iter.length < 3) {\n                            args = args.concat(iter);\n                            name = iter[0];\n                        }\n                    } else {\n                        args.push(iter);\n                        name = iter;\n                    }\n                    args.push((a, b, c, d) => {\n                        this.loaded.push(name);\n                        cb.call(this, a, b, c, d);\n                    });\n                    if (client) {\n                        gapi.client.load.apply(gapi, args);\n                    } else {\n                        gapi.load.apply(gapi, args);\n                    }\n                };\n                function _next() {\n                    if (current >= total) {\n                        finished();\n                    } else {\n                        _load(lload[current], () => {\n                            _next();\n                        });\n                        current++;\n                    }\n                }\n                _next();\n            };\n            this.init(error => {\n                if (error) {\n                    callback(error);\n                    return;\n                }\n                if (!window.gapi || !gapi.load) {\n                    callback(Locales._('GAPI_LOAD_FAILURE'));\n                    return;\n                }\n                auth(error => {\n                    if (error) {\n                        callback(error);\n                        return;\n                    }\n                    loadAll((error, result) => {\n                        callback(error, result, SingletonInstance);\n                    });\n                });\n            });\n        }\n        signOut(cb) {\n            cb = cb || function () {\n            };\n            console.info('GoogleAPI::signOut()');\n            if (this.authenticated) {\n                try {\n                    gapi.auth.signOut();\n                } catch (e) {\n                    console.warn('GoogleAPI::signOut()', 'failed', e);\n                    console.warn(e.stack);\n                }\n                this.authenticated = false;\n                ServiceNotificationIcon.remove('Google API');\n            }\n            MountManager.remove('GoogleDrive');\n            cb(false, true);\n        }\n        revoke(callback) {\n            console.info('GoogleAPI::revoke()');\n            if (!this.accessToken) {\n                callback(false);\n                return;\n            }\n            const url = 'https://accounts.google.com/o/oauth2/revoke?token=' + this.accessToken;\n            jsonp('GET', url).then(() => callback(true)).catch(() => callback(false));\n        }\n        authenticate(scope, callback) {\n            console.info('GoogleAPI::authenticate()');\n            callback = callback || function () {\n            };\n            const getUserId = cb => {\n                cb = cb || function () {\n                };\n                gapi.client.load('oauth2', 'v2', () => {\n                    gapi.client.oauth2.userinfo.get().execute(resp => {\n                        console.info('GoogleAPI::authenticate() => getUserId()', resp);\n                        cb(resp.id);\n                    });\n                });\n            };\n            const login = (immediate, cb) => {\n                console.info('GoogleAPI::authenticate() => login()', immediate);\n                cb = cb || function () {\n                };\n                gapi.auth.authorize({\n                    client_id: this.clientId,\n                    scope: scope,\n                    user_id: this.userId,\n                    immediate: immediate\n                }, cb);\n            };\n            const createRingNotification = () => {\n                ServiceNotificationIcon.remove('Google API');\n                ServiceNotificationIcon.add('Google API', [\n                    {\n                        title: Locales._('GAPI_SIGN_OUT'),\n                        onClick: () => {\n                            this.signOut();\n                        }\n                    },\n                    {\n                        title: Locales._('GAPI_REVOKE'),\n                        onClick: () => {\n                            this.revoke(() => {\n                                this.signOut();\n                            });\n                        }\n                    }\n                ]);\n            };\n            const handleAuthResult = (authResult, immediate) => {\n                console.info('GoogleAPI::authenticate() => handleAuthResult()', authResult);\n                if (authResult.error) {\n                    if (authResult.error_subtype === 'origin_mismatch' || authResult.error_subtype === 'access_denied' && !immediate) {\n                        const msg = Locales._('GAPI_AUTH_FAILURE_FMT', authResult.error, authResult.error_subtype);\n                        callback(msg);\n                        return;\n                    }\n                }\n                if (authResult && !authResult.error) {\n                    getUserId(id => {\n                        this.userId = id;\n                        if (id) {\n                            createRingNotification();\n                            this.authenticated = true;\n                            this.accessToken = authResult.access_token || null;\n                            callback(false, true);\n                        } else {\n                            callback(false, false);\n                        }\n                    });\n                } else {\n                    login(false, res => {\n                        handleAuthResult(res, false);\n                    });\n                }\n            };\n            gapi.load('auth:client', result => {\n                if (result && result.error) {\n                    const msg = Locales._('GAPI_AUTH_FAILURE_FMT', result.error, result.error_subtype);\n                    callback(msg);\n                    return;\n                }\n                login(true, res => {\n                    handleAuthResult(res, true);\n                });\n            });\n        }\n    }\n    function instance() {\n        return SingletonInstance;\n    }\n    function create(args, callback) {\n        const load = args.load || [];\n        const scope = args.scope || [];\n        const client = args.client === true;\n        function _run() {\n            SingletonInstance.load(load, scope, client, callback);\n        }\n        if (SingletonInstance) {\n            _run();\n            return;\n        }\n        let clientId = null;\n        try {\n            clientId = b.getConfig('GoogleAPI.ClientId');\n        } catch (e) {\n            console.warn('getGoogleAPI()', e, e.stack);\n        }\n        if (!clientId) {\n            callback(Locales._('GAPI_DISABLED'));\n            return;\n        }\n        SingletonInstance = new GoogleAPI(clientId);\n        _run();\n    }\n    return {\n        instance: instance,\n        create: create\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/google-drive',[\n    'skylark-axios',\n    '../transport',\n    '../file',\n    '../filedataurl',\n    '../../core/mount-manager',\n    '../../core/locales',\n    '../../helpers/google-api',\n    '../../utils/fs'\n], function (axios, Transport, FileMetadata, FileDataURL, MountManager, Locales, GoogleAPI, FS) {\n    'use strict';\n    const CACHE_CLEAR_TIMEOUT = 7000;\n    let gapi = window.gapi = window.gapi || {};\n    let _authenticated;\n    let _clearCacheTimeout;\n    let _rootFolderId;\n    let _treeCache;\n    function createDirectoryList(dir, list, item, options, match) {\n        const result = [];\n        const rdir = dir.replace(match, '/').replace(/\\/+/g, '/');\n        const isOnRoot = rdir === '/';\n        function createItem(iter, i) {\n            let path = dir;\n            if (iter.title === '..') {\n                path = FS.dirname(dir);\n            } else {\n                if (!isOnRoot) {\n                    path += '/';\n                }\n                path += iter.title;\n            }\n            let fileType = iter.mimeType === 'application/vnd.google-apps.folder' ? 'dir' : iter.kind === 'drive#file' ? 'file' : 'dir';\n            if (iter.mimeType === 'application/vnd.google-apps.trash') {\n                fileType = 'trash';\n            }\n            return new FileMetadata({\n                filename: iter.title,\n                path: path,\n                id: iter.id,\n                size: iter.quotaBytesUsed || 0,\n                mime: iter.mimeType === 'application/vnd.google-apps.folder' ? null : iter.mimeType,\n                type: fileType\n            });\n        }\n        if (list) {\n            list.forEach((iter, i) => {\n                if (!iter) {\n                    return;\n                }\n                result.push(createItem(iter, i));\n            });\n        }\n        return result ? result : [];\n    }\n    function getAllDirectoryFiles(item, callback) {\n        console.debug('GoogleDrive::*getAllDirectoryFiles()', item);\n        function retrieveAllFiles(cb) {\n            if (_clearCacheTimeout) {\n                clearTimeout(_clearCacheTimeout);\n                _clearCacheTimeout = null;\n            }\n            if (_treeCache) {\n                console.info('USING CACHE FROM PREVIOUS FETCH!');\n                cb(false, _treeCache);\n                return;\n            }\n            console.info('UPDATING CACHE');\n            let list = [];\n            function retrievePageOfFiles(request, result) {\n                request.execute(resp => {\n                    if (resp.error) {\n                        console.warn('GoogleDrive::getAllDirectoryFiles()', 'error', resp);\n                    }\n                    result = result.concat(resp.items);\n                    const nextPageToken = resp.nextPageToken;\n                    if (nextPageToken) {\n                        request = gapi.client.drive.files.list({ pageToken: nextPageToken });\n                        retrievePageOfFiles(request, result);\n                    } else {\n                        _treeCache = result;\n                        cb(false, result);\n                    }\n                });\n            }\n            try {\n                const initialRequest = gapi.client.drive.files.list({});\n                retrievePageOfFiles(initialRequest, list);\n            } catch (e) {\n                console.warn('GoogleDrive::getAllDirectoryFiles() exception', e, e.stack);\n                console.warn('THIS ERROR OCCURS WHEN MULTIPLE REQUESTS FIRE AT ONCE ?!');\n                cb(false, list);\n            }\n        }\n        function getFilesBelongingTo(list, root, cb) {\n            const idList = {};\n            const parentList = {};\n            list.forEach(iter => {\n                if (iter) {\n                    idList[iter.id] = iter;\n                    const parents = [];\n                    if (iter.parents) {\n                        iter.parents.forEach(piter => {\n                            if (piter) {\n                                parents.push(piter.id);\n                            }\n                        });\n                    }\n                    parentList[iter.id] = parents;\n                }\n            });\n            let resolves = FS.getPathFromVirtual(root).replace(/^\\/+/, '').split('/');\n            resolves = resolves.filter(el => {\n                return el !== '';\n            });\n            let currentParentId = _rootFolderId;\n            let isOnRoot = !resolves.length;\n            function _getFileList(foundId) {\n                const result = [];\n                if (!isOnRoot) {\n                    result.push({\n                        title: '..',\n                        path: FS.dirname(root),\n                        id: item.id,\n                        quotaBytesUsed: 0,\n                        mimeType: 'application/vnd.google-apps.folder'\n                    });\n                }\n                list.forEach(iter => {\n                    if (iter && parentList[iter.id] && parentList[iter.id].indexOf(foundId) !== -1) {\n                        result.push(iter);\n                    }\n                });\n                return result;\n            }\n            function _nextDir(completed) {\n                let current = resolves.shift();\n                let done = resolves.length <= 0;\n                let found;\n                if (isOnRoot) {\n                    found = currentParentId;\n                } else {\n                    if (current) {\n                        list.forEach(iter => {\n                            if (iter) {\n                                if (iter.title === current && parentList[iter.id] && parentList[iter.id].indexOf(currentParentId) !== -1) {\n                                    currentParentId = iter.id;\n                                    found = iter.id;\n                                }\n                            }\n                        });\n                    }\n                }\n                if (done) {\n                    completed(found);\n                } else {\n                    _nextDir(completed);\n                }\n            }\n            _nextDir(foundId => {\n                if (foundId && idList[foundId]) {\n                    cb(false, _getFileList(foundId));\n                    return;\n                } else {\n                    if (isOnRoot) {\n                        cb(false, _getFileList(currentParentId));\n                        return;\n                    }\n                }\n                cb('Could not list directory');\n            });\n        }\n        function doRetrieve() {\n            retrieveAllFiles((error, list) => {\n                const root = item.path;\n                if (error) {\n                    callback(error, false, root);\n                    return;\n                }\n                getFilesBelongingTo(list, root, (error, response) => {\n                    console.groupEnd();\n                    _clearCacheTimeout = setTimeout(() => {\n                        console.info('Clearing GoogleDrive filetree cache!');\n                        _treeCache = null;\n                    }, CACHE_CLEAR_TIMEOUT);\n                    console.debug('GoogleDrive::*getAllDirectoryFiles()', '=>', response);\n                    callback(error, response, root);\n                });\n            });\n        }\n        console.group('GoogleDrive::*getAllDirectoryFiles()');\n        if (!_rootFolderId) {\n            const request = gapi.client.drive.about.get();\n            request.execute(resp => {\n                if (!resp || !resp.rootFolderId) {\n                    callback(Locales._('ERR_VFSMODULE_ROOT_ID'));\n                    return;\n                }\n                _rootFolderId = resp.rootFolderId;\n                doRetrieve();\n            });\n        } else {\n            doRetrieve();\n        }\n    }\n    function getFileFromPath(dir, type, callback) {\n        if (dir instanceof FileMetadata) {\n            dir = dir.path;\n        }\n        const tmpItem = new FileMetadata({\n            filename: FS.filename(dir),\n            type: 'dir',\n            path: FS.dirname(dir)\n        });\n        console.debug('GoogleDrive::*getFileIdFromPath()', dir, type, tmpItem);\n        getAllDirectoryFiles(tmpItem, (error, list, ldir) => {\n            if (error) {\n                callback(error);\n                return;\n            }\n            let found = null;\n            list.forEach(iter => {\n                if (iter.title === FS.filename(dir)) {\n                    if (type) {\n                        if (iter.mimeType === type) {\n                            found = iter;\n                            return false;\n                        }\n                    } else {\n                        found = iter;\n                    }\n                }\n                return true;\n            });\n            callback(false, found);\n        });\n    }\n    function getParentPathId(item, callback) {\n        const dir = FS.dirname(item.path);\n        const type = 'application/vnd.google-apps.folder';\n        console.debug('GoogleDrive::*getParentPathId()', item);\n        getFileFromPath(dir, type, (error, item) => {\n            if (error) {\n                callback(error);\n            } else {\n                callback(false, item ? item.id : null);\n            }\n        });\n    }\n    function createBoundary(file, data, callback) {\n        const boundary = '-------314159265358979323846';\n        const delimiter = '\\r\\n--' + boundary + '\\r\\n';\n        const close_delim = '\\r\\n--' + boundary + '--';\n        const contentType = file.mime || 'text/plain';\n        function createBody(result) {\n            const metadata = {\n                title: file.filename,\n                mimeType: contentType\n            };\n            const base64Data = result;\n            const multipartRequestBody = delimiter + 'Content-Type: application/json\\r\\n\\r\\n' + JSON.stringify(metadata) + delimiter + 'Content-Type: ' + contentType + '\\r\\n' + 'Content-Transfer-Encoding: base64\\r\\n' + '\\r\\n' + base64Data + close_delim;\n            return multipartRequestBody;\n        }\n        const reqContentType = \"multipart/mixed; boundary='\" + boundary + \"'\";\n        if (data instanceof FileDataURL) {\n            callback(false, {\n                contentType: reqContentType,\n                body: createBody(data.toBase64())\n            });\n        } else {\n            FS.abToBinaryString(data, contentType, (error, response) => {\n                callback(error, error ? false : {\n                    contentType: reqContentType,\n                    body: createBody(btoa(response))\n                });\n            });\n        }\n    }\n    function setFolder(item, pid, callback) {\n        console.info('GoogleDrive::setFolder()', item, pid);\n        pid = pid || 'root';\n        function _clearFolders(cb) {\n            item.parents.forEach((p, i) => {\n                const request = gapi.client.drive.children.delete({\n                    folderId: p.id,\n                    childId: item.id\n                });\n                request.execute(resp => {\n                    if (i >= item.parents.length - 1) {\n                        cb();\n                    }\n                });\n            });\n        }\n        function _setFolder(rootId, cb) {\n            const request = gapi.client.drive.children.insert({\n                folderId: pid,\n                resource: { id: item.id }\n            });\n            request.execute(resp => {\n                console.info('GoogleDrive::setFolder()', '=>', resp);\n                callback(false, true);\n            });\n        }\n        _clearFolders(() => {\n            _setFolder(pid, callback);\n        });\n    }\n    return class GoogleDriveTransport extends Transport {\n        _init() {\n            if (_authenticated) {\n                return Promise.resolve();\n            }\n            return new Promise((resolve, reject) => {\n                GoogleAPI.create({\n                    scope: [\n                        'https://www.googleapis.com/auth/drive.install',\n                        'https://www.googleapis.com/auth/drive.file',\n                        'openid'\n                    ],\n                    load: [\n                        'drive-realtime',\n                        'drive-share'\n                    ]\n                }, (err, res) => {\n                    gapi.client.load('drive', 'v2', err => {\n                        if (!err) {\n                            _authenticated = true;\n                        }\n                        return err ? reject(new Error(err)) : resolve(true);\n                    });\n                });\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                getAllDirectoryFiles(item, (error, list, dir) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        const result = createDirectoryList(dir, list, item, options, mount.option('match'));\n                        resolve(result);\n                    }\n                });\n            });\n        }\n        read(item, options, mount) {\n            const read = ritem => new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.get({ fileId: ritem.id });\n                request.execute(file => {\n                    if (file && file.id) {\n                        let accessToken = gapi.auth.getToken().access_token;\n                        axios({\n                            url: file.downloadUrl,\n                            method: 'GET',\n                            responseType: 'arraybuffer',\n                            headers: { 'Authorization': 'Bearer ' + accessToken }\n                        }).then(response => {\n                            return resolve(response.data);\n                        }).catch(error => {\n                            reject(new Error(Locales._('ERR_VFSMODULE_XHR_ERROR') + ' - ' + error.message));\n                        });\n                    } else {\n                        reject(new Error(Locales._('ERR_VFSMODULE_NOSUCH')));\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                if (item.downloadUrl) {\n                    read(item).then(resolve).catch(reject);\n                } else {\n                    getFileFromPath(item.path, item.mime, function (error, response) {\n                        if (error) {\n                            reject(new Error(error));\n                        } else if (!response) {\n                            reject(new Error(Locales._('ERR_VFSMODULE_NOSUCH')));\n                        } else {\n                            read(response).then(resolve).catch(reject);\n                        }\n                    });\n                }\n            });\n        }\n        write(file, data) {\n            const write = (parentId, fileId) => new Promise((resolve, reject) => {\n                let uri = '/upload/drive/v2/files';\n                let method = 'POST';\n                if (fileId) {\n                    uri = '/upload/drive/v2/files/' + fileId;\n                    method = 'PUT';\n                }\n                createBoundary(file, data, (error, fileData) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        const request = gapi.client.request({\n                            path: uri,\n                            method: method,\n                            params: { uploadType: 'multipart' },\n                            headers: { 'Content-Type': fileData.contentType },\n                            body: fileData.body\n                        });\n                        request.execute(resp => {\n                            _treeCache = null;\n                            if (resp && resp.id) {\n                                if (parentId) {\n                                    setFolder(resp, parentId, (err, res) => {\n                                        return err ? reject(new Error(err)) : resolve(res);\n                                    });\n                                } else {\n                                    resolve(true);\n                                }\n                            } else {\n                                reject(Locales._('ERR_VFSMODULE_NOSUCH'));\n                            }\n                        });\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                getParentPathId(file, (error, id) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else if (file.id) {\n                        write(id, file.id).then(resolve).catch(reject);\n                    } else {\n                        this.exists(file).then(exists => {\n                            return write(id, exists ? exists.id : null).then(resolve).catch(reject);\n                        }).catch(() => {\n                            write(id, null).then(resolve).catch(reject);\n                        });\n                    }\n                });\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.copy({\n                    fileId: src.id,\n                    resource: { title: FS.filename(dest.path) }\n                });\n                request.execute(resp => {\n                    if (resp.id) {\n                        getParentPathId(dest, (error, parentId) => {\n                            if (error) {\n                                console.warn(error);\n                                resolve(true);\n                            } else {\n                                _treeCache = null;\n                                setFolder(resp, parentId, (err, res) => {\n                                    return err ? reject(new Error(err)) : resolve(res);\n                                });\n                            }\n                        });\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.patch({\n                    fileId: src.id,\n                    resource: { title: FS.filename(dest.path) }\n                });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        _treeCache = null;\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                const req = new FileMetadata(FS.dirname(item.path));\n                this.scandir(req).then(result => {\n                    const found = result.find(iter => iter.path === item.path);\n                    if (found) {\n                        const file = new FileMetadata(item.path, found.mimeType);\n                        file.id = found.id;\n                        file.title = found.title;\n                        return resolve(file);\n                    }\n                    return resolve(false);\n                }).catch(reject);\n            });\n        }\n        fileinfo(item) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.get({ fileId: item.id });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        const useKeys = [\n                            'createdDate',\n                            'id',\n                            'lastModifyingUser',\n                            'lastViewedByMeDate',\n                            'markedViewedByMeDate',\n                            'mimeType',\n                            'modifiedByMeDate',\n                            'modifiedDate',\n                            'title',\n                            'alternateLink'\n                        ];\n                        const info = {};\n                        useKeys.forEach(k => {\n                            info[k] = resp[k];\n                        });\n                        resolve(info);\n                    } else {\n                        reject(Locales._('ERR_VFSMODULE_NOSUCH'));\n                    }\n                });\n            });\n        }\n        url(item) {\n            return new Promise((resolve, reject) => {\n                if (!item || !item.id) {\n                    reject(new Error('url() expects a File ref with Id'));\n                } else {\n                    const request = gapi.client.drive.files.get({ fileId: item.id });\n                    request.execute(resp => {\n                        if (resp && resp.webContentLink) {\n                            resolve(resp.webContentLink);\n                        } else {\n                            const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                            reject(new Error(msg));\n                        }\n                    });\n                }\n            });\n        }\n        mkdir(dir) {\n            const mkdir = parents => new Promise((resolve, reject) => {\n                const request = gapi.client.request({\n                    'path': '/drive/v2/files',\n                    'method': 'POST',\n                    'body': JSON.stringify({\n                        title: dir.filename,\n                        parents: parents,\n                        mimeType: 'application/vnd.google-apps.folder'\n                    })\n                });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        _treeCache = null;\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                const module = MountManager.getModuleFromPath(dir.path);\n                const dirDest = FS.getPathFromVirtual(FS.dirname(dir.path));\n                const rootDest = FS.getPathFromVirtual(module.option('root'));\n                if (dirDest !== rootDest) {\n                    getParentPathId(dir, (error, id) => {\n                        if (error || !id) {\n                            reject(new Error(Locales._('ERR_VFSMODULE_PARENT_FMT', error || Locales._('ERR_VFSMODULE_PARENT'))));\n                        } else {\n                            mkdir([{ id: id }]).then(resolve).catch(reject);\n                        }\n                    });\n                } else {\n                    mkdir(null).then(resolve).catch(reject);\n                }\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        trash(file) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.trash({ fileId: file.id });\n                request.execute(resp => {\n                    if (resp.id) {\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        untrash(file) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.untrash({ fileId: file.id });\n                request.execute(resp => {\n                    if (resp.id) {\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        emptyTrash() {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.emptyTrash({});\n                request.execute(resp => {\n                    if (resp && resp.message) {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    } else {\n                        resolve(true);\n                    }\n                });\n            });\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n        unlink(src) {\n            const unlink = s => {\n                _treeCache = null;\n                return new Promise((resolve, reject) => {\n                    const request = gapi.client.drive.files.delete({ fileId: s.id });\n                    request.execute(resp => {\n                        if (resp && typeof resp.result === 'object') {\n                            resolve(true);\n                        } else {\n                            const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                            reject(new Error(msg));\n                        }\n                    });\n                });\n            };\n            if (!src.id) {\n                return new Promise((resolve, reject) => {\n                    getFileFromPath(src.path, src.mime, (error, response) => {\n                        if (error) {\n                            reject(new Error(error));\n                        } else if (!response) {\n                            reject(new Error(Locales._('ERR_VFSMODULE_NOSUCH')));\n                        } else {\n                            unlink(response).then(resolve).catch(reject);\n                        }\n                    });\n                });\n            }\n            return unlink(src);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/windows-live-api',[\n    '../core/mount-manager',\n    './service-notification-icon',\n    '../utils/preloader',\n    '../core/locales',\n    '../core/config'\n], function (MountManager, ServiceNotificationIcon, Preloader, Locales, Config) {\n    'use strict';\n    const redirectURI = window.location.href.replace(/\\/$/, '') + '/windows-live-oauth.html';\n    let SingletonInstance = null;\n    class WindowsLiveAPI {\n        constructor(clientId) {\n            this.hasSession = false;\n            this.clientId = clientId;\n            this.loaded = false;\n            this.inited = false;\n            this.accessToken = null;\n            this.lastScope = null;\n            this.preloads = [{\n                    type: 'javascript',\n                    src: '//js.live.net/v5.0/wl.js'\n                }];\n        }\n        destroy() {\n        }\n        init(callback) {\n            callback = callback || function () {\n            };\n            if (this.loaded) {\n                callback(false, true);\n            } else {\n                Preloader.preload(this.preloads).then(result => {\n                    if (!result.failed.length) {\n                        this.loaded = true;\n                    }\n                    callback(result.failed.join('\\n'));\n                }).catch(() => callback());\n            }\n        }\n        load(scope, callback) {\n            console.debug('WindowsLiveAPI::load()', scope);\n            let WL = window.WL || {};\n            const _login = () => {\n                const lastScope = (this.lastScope || []).sort();\n                const currScope = (scope || []).sort();\n                if (this.hasSession && lastScope.toString() === currScope.toString()) {\n                    callback(false, true);\n                    return;\n                }\n                this.login(scope, (error, response) => {\n                    if (error) {\n                        callback(error);\n                        return;\n                    }\n                    setTimeout(() => {\n                        callback(false, true);\n                    }, 10);\n                });\n            };\n            this.init(error => {\n                if (error) {\n                    callback(error);\n                    return;\n                }\n                if (!window.WL) {\n                    callback(Locales._('WLAPI_LOAD_FAILURE'));\n                    return;\n                }\n                WL = window.WL || {};\n                if (this.inited) {\n                    _login();\n                } else {\n                    this.inited = true;\n                    WL.Event.subscribe('auth.login', (a, b, c, d) => {\n                        this.onLogin(a, b, c, d);\n                    });\n                    WL.Event.subscribe('auth.logout', (a, b, c, d) => {\n                        this.onLogout(a, b, c, d);\n                    });\n                    WL.Event.subscribe('wl.log', (a, b, c, d) => {\n                        this.onLog(a, b, c, d);\n                    });\n                    WL.Event.subscribe('auth.sessionChange', (a, b, c, d) => {\n                        this.onSessionChange(a, b, c, d);\n                    });\n                    WL.init({\n                        client_id: this.clientId,\n                        display: 'popup',\n                        redirect_uri: redirectURI\n                    }).then(result => {\n                        console.debug('WindowsLiveAPI::load()', '=>', result);\n                        if (result.session) {\n                            this.accessToken = result.session.access_token || null;\n                        }\n                        if (result.status === 'connected') {\n                            callback(false, true);\n                        } else if (result.status === 'success') {\n                            _login();\n                        } else {\n                            callback(Locales._('WLAPI_INIT_FAILED_FMT', result.status.toString()));\n                        }\n                    }, result => {\n                        console.error('WindowsLiveAPI::load()', 'init() error', result);\n                        callback(result.error_description);\n                    });\n                }\n            });\n        }\n        _removeRing() {\n            ServiceNotificationIcon.remove('Windows Live API');\n        }\n        logout(callback) {\n            callback = callback || function () {\n            };\n            const WL = window.WL || {};\n            if (this.hasSession) {\n                callback(false, false);\n            }\n            WL.Event.unsubscribe('auth.logout');\n            WL.Event.subscribe('auth.logout', () => {\n                this._removeRing();\n                WL.Event.unsubscribe('auth.logout');\n                callback(false, true);\n            });\n            WL.logout();\n            MountManager.remove('OneDrive');\n        }\n        login(scope, callback) {\n            const WL = window.WL || {};\n            if (this.hasSession) {\n                callback(false, true);\n                return;\n            }\n            WL.login({\n                scope: scope,\n                redirect_uri: redirectURI\n            }).then(result => {\n                if (result.status === 'connected') {\n                    callback(false, true);\n                } else {\n                    callback(Locales._('WLAPI_LOGIN_FAILED'));\n                }\n            }, result => {\n                callback(Locales._('WLAPI_LOGIN_FAILED_FMT', result.error_description));\n            });\n        }\n        onSessionChange() {\n            console.warn('WindowsLiveAPI::onSessionChange()', arguments);\n            const WL = window.WL || {};\n            const session = WL.getSession();\n            if (session) {\n                this.hasSession = true;\n            } else {\n                this.hasSession = false;\n            }\n        }\n        onLogin() {\n            console.warn('WindowsLiveAPI::onLogin()', arguments);\n            this.hasSession = true;\n            ServiceNotificationIcon.add('Windows Live API', [{\n                    title: Locales._('WLAPI_SIGN_OUT'),\n                    onClick: () => {\n                        this.logout();\n                    }\n                }]);\n        }\n        onLogout() {\n            console.warn('WindowsLiveAPI::onLogout()', arguments);\n            this.hasSession = false;\n            this._removeRing();\n        }\n        onLog() {\n            console.debug('WindowsLiveAPI::onLog()', arguments);\n        }\n    }\n    function instance() {\n        return SingletonInstance;\n    }\n    function create(args, callback) {\n        args = args || {};\n        function _run() {\n            const scope = args.scope;\n            SingletonInstance.load(scope, error => {\n                callback(error ? error : false, SingletonInstance);\n            });\n        }\n        if (SingletonInstance) {\n            _run();\n            return;\n        }\n        let clientId = null;\n        try {\n            clientId = Config.getConfig('WindowsLiveAPI.ClientId');\n        } catch (e) {\n            console.warn('getWindowsLiveAPI()', e, e.stack);\n        }\n        if (!clientId) {\n            callback(Locales._('WLAPI_DISABLED'));\n            return;\n        }\n        SingletonInstance = new WindowsLiveAPI(clientId);\n        _run();\n    }\n    return {\n        instance: instance,\n        create: create\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/onedrive',[\n    'skylark-axios',\n    '../transport',\n    '../file',\n    '../../core/config',\n    '../../core/locales',\n    '../../helpers/windows-live-api',\n    '../../utils/fs',\n    '../fs'\n], function ( Promise, Transport, FileMetadata, a, Locales, WindowsLiveAPI, FS, VFS) {\n    'use strict';\n    let _isMounted = false;\n    let _mimeCache;\n    function onedriveCall(args, callback) {\n        console.debug('OneDrive::*onedriveCall()', args);\n        const WL = window.WL || {};\n        WL.api(args).then(response => {\n            callback(false, response);\n        }, responseFailed => {\n            console.error('OneDrive::*onedriveCall()', 'error', responseFailed, args);\n            callback(responseFailed.error.message);\n        });\n    }\n    function getItemType(iter) {\n        let type = 'file';\n        if (iter.type === 'folder' || iter.type === 'album') {\n            type = 'dir';\n        }\n        return type;\n    }\n    function getItemMime(iter) {\n        if (!_mimeCache) {\n            _mimeCache = a.getConfig('MIME.mapping', {});\n        }\n        let mime = null;\n        if (getItemType(iter) !== 'dir') {\n            mime = 'application/octet-stream';\n            let ext = FS.filext(iter.name);\n            if (ext.length) {\n                ext = '.' + ext;\n                if (_mimeCache[ext]) {\n                    mime = _mimeCache[ext];\n                }\n            }\n        }\n        return mime;\n    }\n    function getMetadataFromItem(dir, item, root) {\n        const par = dir.replace(/^\\/+/, '').replace(/\\/+$/, '');\n        const path = root + (par ? par + '/' : par) + item.name;\n        const itemFile = new FileMetadata({\n            id: item.id,\n            filename: item.name,\n            size: item.size || 0,\n            path: path,\n            mime: getItemMime(item),\n            type: getItemType(item)\n        });\n        return itemFile;\n    }\n    function createDirectoryList(dir, list, item, options, root) {\n        const result = [];\n        if (dir !== '/') {\n            result.push(new FileMetadata({\n                id: item.id,\n                filename: '..',\n                path: FS.dirname(item.path),\n                size: 0,\n                type: 'dir'\n            }));\n        }\n        list.forEach(iter => {\n            result.push(getMetadataFromItem(dir, iter, root));\n        });\n        return result;\n    }\n    function getFilesInFolder(folderId, callback) {\n        onedriveCall({\n            path: folderId + '/files',\n            method: 'GET'\n        }, (error, response) => {\n            if (error) {\n                callback(error);\n                return;\n            }\n            console.debug('OneDrive::*getFilesInFolder()', '=>', response);\n            callback(false, response.data || []);\n        });\n    }\n    function resolvePath(item, callback, useParent) {\n        if (!useParent) {\n            if (item.id) {\n                callback(false, item.id);\n                return;\n            }\n        }\n        let path = FS.getPathFromVirtual(item.path).replace(/\\/+/, '/');\n        if (useParent) {\n            path = FS.dirname(path);\n        }\n        if (path === '/') {\n            callback(false, 'me/skydrive');\n            return;\n        }\n        const resolves = path.replace(/^\\/+/, '').split('/');\n        const isOnRoot = !resolves.length;\n        let currentParentId = 'me/skydrive';\n        function _nextDir(completed) {\n            const current = resolves.shift();\n            const done = resolves.length <= 0;\n            let found;\n            if (isOnRoot) {\n                found = currentParentId;\n            } else {\n                if (current) {\n                    getFilesInFolder(currentParentId, (error, list) => {\n                        list = list || [];\n                        let lfound;\n                        if (!error) {\n                            list.forEach(iter => {\n                                if (iter) {\n                                    if (iter.name === current) {\n                                        lfound = iter.id;\n                                    }\n                                }\n                            });\n                            if (lfound) {\n                                currentParentId = lfound;\n                            }\n                        } else {\n                            console.warn('OneDrive', 'resolvePath()', 'getFilesInFolder() error', error);\n                        }\n                        if (done) {\n                            completed(lfound);\n                        } else {\n                            _nextDir(completed);\n                        }\n                    });\n                    return;\n                }\n            }\n            if (done) {\n                completed(found);\n            } else {\n                _nextDir(completed);\n            }\n        }\n        _nextDir(foundId => {\n            if (foundId) {\n                callback(false, foundId);\n            } else {\n                callback(Locales._('ONEDRIVE_ERR_RESOLVE'));\n            }\n        });\n    }\n    return class OneDriveTransport extends Transport {\n        _init() {\n            return new Promise((resolve, reject) => {\n                const iargs = {\n                    scope: [\n                        'wl.signin',\n                        'wl.skydrive',\n                        'wl.skydrive_update'\n                    ]\n                };\n                if (_isMounted) {\n                    resolve(true);\n                } else {\n                    WindowsLiveAPI.create(iargs, error => {\n                        if (error) {\n                            reject(new Error(error));\n                        } else {\n                            _isMounted = true;\n                            resolve(true);\n                        }\n                    });\n                }\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                const relativePath = FS.getPathFromVirtual(item.path);\n                resolvePath(item, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                getFilesInFolder(response.id, (error, list) => {\n                                    if (error) {\n                                        reject(new Error(error));\n                                    } else {\n                                        const fileList = createDirectoryList(relativePath, list, item, options, mount.option('root'));\n                                        resolve(fileList);\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        read(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item).then(url => {\n                    const file = new FileMetadata(url, item.mime);\n                    VFS.read(file, options).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        write(file, data) {\n            return new Promise((resolve, reject) => {\n                const inst = WindowsLiveAPI.instance();\n                const url = 'https://apis.live.net/v5.0/me/skydrive/files?access_token=' + inst.accessToken;\n                const fd = new FormData();\n                FS.addFormFile(fd, 'file', data, file);\n                axios({\n                    url: url,\n                    method: 'POST',\n                    responseType: 'json',\n                    data: fd\n                }).then(response => {\n                    const result = response.data;\n                    if (result && result.id) {\n                        return resolve(result.id);\n                    }\n                    return reject(new Error(Locales._('ERR_APP_UNKNOWN_ERROR')));\n                }).catch(reject);\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                dest = new FileMetadata(FS.dirname(dest.path));\n                resolvePath(src, (error, srcDrivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        resolvePath(dest, (error, dstDrivePath) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                onedriveCall({\n                                    path: srcDrivePath,\n                                    method: 'COPY',\n                                    body: { destination: dstDrivePath }\n                                }, (error, response) => {\n                                    return error ? reject(new Error(error)) : resolve(true);\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                dest = new FileMetadata(FS.dirname(dest.path));\n                resolvePath(src, (error, srcDrivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        resolvePath(dest, (error, dstDrivePath) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                onedriveCall({\n                                    path: srcDrivePath,\n                                    method: 'MOVE',\n                                    body: { destination: dstDrivePath }\n                                }, (error, response) => {\n                                    return error ? reject(new Error(error)) : resolve(true);\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this.fileinfo(item).then(() => resolve(true)).catch(() => resolve(false));\n            });\n        }\n        fileinfo(item) {\n            return new Promise((resolve, reject) => {\n                resolvePath(item, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                const useKeys = [\n                                    'created_time',\n                                    'id',\n                                    'link',\n                                    'name',\n                                    'type',\n                                    'updated_time',\n                                    'upload_location',\n                                    'description',\n                                    'client_updated_time'\n                                ];\n                                const info = {};\n                                useKeys.forEach(k => {\n                                    info[k] = response[k];\n                                });\n                                resolve(info);\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        url(item) {\n            return new Promise((resolve, reject) => {\n                resolvePath(item, function (error, drivePath) {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath + '/content',\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                resolve(response.location);\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        mkdir(dir) {\n            return new Promise((resolve, reject) => {\n                resolvePath(dir, (error, drivePath) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'POST',\n                            body: { name: dir.filename }\n                        }, (error, response) => {\n                            return error ? reject(new Error(error)) : resolve(true);\n                        });\n                    }\n                }, true);\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n        unlink(src) {\n            return new Promise((resolve, reject) => {\n                resolvePath(src, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'DELETE'\n                        }, (error, response) => {\n                            return error ? reject(new Error(error)) : resolve(true);\n                        });\n                    }\n                });\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/dropbox',[\n    '../transport',\n    '../../utils/preloader',\n    '../../core/config',\n    '../file',\n    '../../utils/misc',\n    '../../core/locales',\n    '../../utils/fs'\n], function (Transport, Preloader, Config, FileMetadata, b, Locales, FS) {\n    'use strict';\n    const AUTH_TIMEOUT = 1000 * 30;\n    const MAX_RESULTS = 100;\n    return class DropboxTransport extends Transport {\n        constructor() {\n            super(...arguments);\n            this.loaded = false;\n            this.authed = false;\n            this.dbx = null;\n        }\n        _loadDependencies() {\n            if (this.loaded) {\n                return Promise.resolve(true);\n            }\n            return new Promise((resolve, reject) => {\n                Preloader.preload(['https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js']).then(() => {\n                    if (window.Dropbox) {\n                        this.loaded = true;\n                        return resolve(true);\n                    }\n                    return reject(new Error(Locales._('ERR_DROPBOX_API')));\n                }).catch(err => {\n                    this.loaded = true;\n                    return reject(err);\n                });\n            });\n        }\n        _createClient(clientId) {\n            if (this.authed) {\n                return Promise.resolve(true);\n            }\n            return new Promise((resolve, reject) => {\n                let timedOut;\n                let loginTimeout;\n                this.dbx = new window.Dropbox({ clientId: clientId });\n                const redirectUrl = window.location.href.replace(/\\/?$/, '/') + 'dropbox-oauth.html';\n                const callbackName = '__osjs__dropbox_callback__';\n                window[callbackName] = url => {\n                    clearTimeout(loginTimeout);\n                    if (timedOut) {\n                        return;\n                    }\n                    const params = b.urlparams(url, true);\n                    if (params.access_token) {\n                        this.authed = true;\n                        this.dbx = new window.Dropbox({ accessToken: params.access_token });\n                        resolve(true);\n                    } else {\n                        reject(new Error(Locales._('ERR_DROPBOX_AUTH')));\n                    }\n                };\n                const authUrl = this.dbx.getAuthenticationUrl(redirectUrl);\n                loginTimeout = setTimeout(() => {\n                    timedOut = true;\n                    reject(new Error(Locales._('ERR_DROPBOX_AUTH')));\n                }, AUTH_TIMEOUT);\n                window.open(authUrl);\n            });\n        }\n        _init() {\n            const clientId = Config.getConfig('DropboxAPI.ClientKey');\n            if (!clientId) {\n                return Promise.reject(new Error(Locales._('ERR_DROPBOX_KEY')));\n            }\n            return new Promise((resolve, reject) => {\n                this._loadDependencies().then(() => {\n                    return this._createClient(clientId).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(err => {\n                        if (typeof err !== 'string' && !(err instanceof Error)) {\n                            if (err.status && err.response && err.error) {\n                                return reject(new Error(err.error.error_summary));\n                            }\n                        }\n                        return reject(err);\n                    });\n                }).catch(reject);\n            });\n        }\n        _createMetadata(root, iter) {\n            return {\n                id: iter.id,\n                filename: iter.name,\n                path: FS.pathJoin(root, iter.path_display),\n                type: iter['.tag'] === 'folder' ? 'dir' : 'file',\n                size: iter.size || 0\n            };\n        }\n        find(file, options, a, mount) {\n            const root = FS.getPathFromVirtual(file.path);\n            return new Promise((resolve, reject) => {\n                this.dbx.filesSearch({\n                    path: root === '/' ? '' : root,\n                    query: options.query,\n                    max_results: MAX_RESULTS,\n                    mode: { '.tag': 'filename' }\n                }).then(response => {\n                    return resolve(response.matches.map(iter => {\n                        return this._createMetadata(mount.option('root'), iter.metadata);\n                    }));\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            const root = FS.getPathFromVirtual(item.path);\n            let result = [];\n            const scandir = cursor => new Promise((resolve, reject) => {\n                const m = cursor ? 'filesListFolderContinue' : 'filesListFolder';\n                const a = cursor ? { cursor } : { path: root === '/' ? '' : root };\n                this.dbx[m](a).then(response => {\n                    const found = (response.entries || []).map(iter => {\n                        return this._createMetadata(mount.option('root'), iter);\n                    });\n                    result = result.concat(found);\n                    if (response.has_more && response.cursor) {\n                        return scandir(response.cursor).then(resolve).catch(reject);\n                    }\n                    return resolve(result);\n                }).catch(reject);\n            });\n            return scandir(null);\n        }\n        read(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item, { dl: 0 }).then(url => {\n                    this.dbx.sharingGetSharedLinkFile({ url }).then(data => {\n                        return resolve(data.fileBlob);\n                    }).catch(reject);\n                }).catch(reject);\n            });\n        }\n        write(file, data) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesUpload({\n                    path: FS.getPathFromVirtual(file.path),\n                    mode: { '.tag': 'overwrite' },\n                    contents: data\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesCopy({\n                    from_path: FS.getPathFromVirtual(src.path),\n                    to_path: FS.getPathFromVirtual(dest.path)\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesMove({\n                    from_path: FS.getPathFromVirtual(src.path),\n                    to_path: FS.getPathFromVirtual(dest.path)\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this.fileinfo(item).then(() => resolve(true)).catch(() => resolve(false));\n            });\n        }\n        fileinfo(item) {\n            return this.dbx.filesGetMetadata({ path: FS.getPathFromVirtual(item.path) });\n        }\n        url(item, options) {\n            const visibility = 'public';\n            const hasLink = () => new Promise((resolve, reject) => {\n                this.dbx.sharingGetSharedLinks({ path: FS.getPathFromVirtual(item.path) }).then(response => {\n                    if (response.links.length) {\n                        const found = response.links.find(iter => iter.visibility['.tag'] === visibility);\n                        const dl = typeof options.dl === 'undefined' ? 1 : options.dl;\n                        if (found) {\n                            return resolve(found.url.replace('dl=0', 'dl=' + String(dl)));\n                        }\n                    }\n                    return resolve(false);\n                }).catch(reject);\n            });\n            const newLink = () => new Promise((resolve, reject) => {\n                this.dbx.sharingCreateSharedLinkWithSettings({\n                    path: FS.getPathFromVirtual(item.path),\n                    settings: { requested_visibility: visibility }\n                }).then(response => {\n                    return resolve(response.url);\n                }).catch(reject);\n            });\n            return new Promise((resolve, reject) => {\n                hasLink().then(url => {\n                    if (url) {\n                        console.warn('ALREADY HAS URL', url);\n                        return resolve(url);\n                    }\n                    console.warn('CREATING NEW URL');\n                    return newLink().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        mkdir(dir) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesCreateFolder({ path: FS.getPathFromVirtual(dir.path) }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        freeSpace(root) {\n            return new Promise((resolve, reject) => {\n                this.dbx.usersGetSpaceUsage().then(response => {\n                    try {\n                        if (response.allocation && typeof response.allocation.individual !== 'undefined') {\n                            return resolve(response.allocation.individual.allocated);\n                        }\n                    } catch (e) {\n                        console.warn(e);\n                    }\n                    return resolve(-1);\n                }).catch(reject);\n            });\n        }\n        unlink(src) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesDelete({ path: FS.getPathFromVirtual(src.path) }).then(() => resolve(true)).catch(reject);\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/init',[\n    './locales',\n    './mount-manager',\n    './settings-manager',\n    './package-manager',\n    './search-engine',\n    './authenticator',\n    './window-manager',\n    './dialog',\n    './storage',\n    './process',\n    './theme',\n    './connection',\n    '../helpers/hooks',\n    './config',\n    '../gui/splash',\n    '../utils/misc',\n    '../gui/menu',\n    '../gui/notification',\n    '../utils/preloader',\n    '../dialogs/alert',\n    '../dialogs/applicationchooser',\n    '../dialogs/color',\n    '../dialogs/confirm',\n    '../dialogs/error',\n    '../dialogs/fileinfo',\n    '../dialogs/file',\n    '../dialogs/fileprogress',\n    '../dialogs/fileupload',\n    '../dialogs/font',\n    '../dialogs/input',\n    \"../vfs/fs\",\n    \"../vfs/transports/web\",\n    \"../vfs/transports/osjs\",\n    \"../vfs/transports/dist\",\n    \"../vfs/transports/applications\",\n    \"../vfs/transports/webdav\",\n    \"../vfs/transports/google-drive\",\n    \"../vfs/transports/onedrive\",\n    \"../vfs/transports/dropbox\"\n\n\n], function (\n    Locales, \n    MountManager, \n    SettingsManager, \n    PackageManager, \n    SearchEngine, \n    Authenticator, \n    WindowManager, \n    DialogWindow, \n    Storage, \n    Process, \n    Theme, \n    Connection, \n    Hooks, \n    Config, \n    SplashScreen, \n    Utils, \n    Menu, \n    Notification,\n    Preloader, \n    AlertDialog, \n    ApplicationChooserDialog, \n    ColorDialog, \n    ConfirmDialog, \n    ErrorDialog, \n    FileInfoDialog, \n    FileDialog, \n    FileProgressDialog, \n    FileUploadDialog, \n    FontDialog, \n    InputDialog,\n    VFS,\n    WebTransport,\n    OsjsTransport,\n    DistTransport,\n    ApplicationTransport,\n    WebdavTransport,\n    GdriveTransport,\n    OnedriveTransport,\n    DropboxTransport\n) {\n    'use strict';\n\n   const  OSJS_DEBUG = false;\n\n    Promise.each = function(arr, fn) { // take an array and a function // added by lwf\n      // invalid input\n      if(!Array.isArray(arr)) return Promise.reject(new Error(\"Non array passed to each\"));\n      // empty case\n      if(arr.length === 0) return Promise.resolve(); \n      return arr.reduce(function(prev, cur,idx) { \n        return prev.then(() => fn(cur,idx))\n      }, Promise.resolve());\n    }\n\n    function loadTransports() {\n        const result = {\n            'web' : WebdavTransport.default,\n            'osjs' : OnedriveTransport.default,\n            'dist' : DistTransport.default,\n            'applications' : ApplicationTransport.default,\n            'webdav' : WebdavTransport.default,\n            'google-drive' : GdriveTransport.default,\n            'onedrive' : OnedriveTransport.default,\n            'dropbox' : DropboxTransport.default\n        };\n\n        return result;\n    }\n\n    let hasBooted = false;\n    let hasShutDown = false;\n    function onError(title, message, error, exception, bugreport) {\n        bugreport = (() => {\n            if (Config.getConfig('BugReporting.enabled')) {\n                return typeof bugreport === 'undefined' ? false : bugreport ? true : false;\n            }\n            return false;\n        })();\n        function _dialog() {\n            const wm = WindowManager.instance;\n            if (wm && wm._fullyLoaded) {\n                try {\n                    DialogWindow.create('Error', {\n                        title: title,\n                        message: message,\n                        error: error,\n                        exception: exception,\n                        bugreport: bugreport\n                    });\n                    return true;\n                } catch (e) {\n                    console.warn('An error occured while creating Error Dialog', e);\n                    console.warn('stack', e.stack);\n                }\n            }\n            return false;\n        }\n        Menu.blur();\n        if (exception instanceof Error && (exception.message.match(/^Script Error/i) && String(exception.lineNumber).match(/^0/))) {\n            console.error('VENDOR ERROR', {\n                title: title,\n                message: message,\n                error: error,\n                exception: exception\n            });\n            return;\n        } else {\n            console.error(title, message, error, exception);\n        }\n        const testMode = OSJS_DEBUG && window.location.hash.match(/mocha=true/);\n        if (!testMode) {\n            if (!_dialog()) {\n                window.alert(title + '\\n\\n' + message + '\\n\\n' + error);\n            }\n        }\n    }\n    const initPreloading = config => new Promise((resolve, reject) => {\n        const flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n        Preloader.preload(flatten(config.Preloads)).then(result => {\n            return resolve();\n        }).catch(reject);\n    });\n    const initHandlers = config => new Promise((resolve, reject) => {\n        const options = config.Connection;\n        console.log({\n            authenticator: options.Authenticator,\n            connection: options.Connection,\n            storage: options.Storage\n        });\n        let Authenticator, Connection, Storage;\n        let connectionName = options.Connection.split('+').indexOf('ws') !== -1 ? 'ws' : 'http';\n        try {\n            Authenticator = OSjs.require('core/auth/' + options.Authenticator); // modified by lwf\n            Connection = OSjs.require('core/connections/' + connectionName); // modified by lwf\n            Storage = OSjs.require('core/storage/' + options.Storage ); // modified by lwf\n        } catch (e) {\n            reject(e);\n            return;\n        }\n        const connection = new Connection();\n        const authenticator = new Authenticator();\n        const storage = new Storage();\n        Promise.each([\n            connection,\n            storage,\n            authenticator\n        ], iter => {\n            return iter.init();\n        }).then(resolve).catch(reject);\n    });\n    const initVFS = config => new Promise((resolve, reject) => {\n        const mountPoints = SettingsManager.instance('VFS').get('mounts', []);\n        MountManager.init(loadTransports).then(res => {  // modified by lwf\n            return MountManager.addList(mountPoints).then(res => {\n                return resolve(res);\n            }).catch(e => {\n                console.warn('A module failed to load!', e);\n                resolve();\n            });\n        }).catch(reject);\n    });\n    const initSettingsManager = config => new Promise((resolve, reject) => {\n        const pools = config.SettingsManager || {};\n        Object.keys(pools).forEach(function (poolName) {\n            console.debug('initSettingsManager()', 'initializes pool', poolName, pools[poolName]);\n            SettingsManager.instance(poolName, pools[poolName] || {});\n        });\n        resolve();\n    });\n    const initPackageManager = config => new Promise((resolve, reject) => {\n        const list = config.PreloadOnBoot || [];\n        let metadata = {};\n        try {\n            metadata = OSjs.getManifest();\n        } catch (e) {\n        }\n        const auth = Authenticator.instance;\n        PackageManager.init(Authenticator,VFS,metadata, auth.isStandalone).then(() => { //modified by lwf\n            return Promise.each(list, iter => {\n                return new Promise(next => {\n                    var pkg = PackageManager.getPackage(iter);\n                    if (pkg && pkg.preload) {\n                        Preloader.preload(pkg.preload).then(next).catch(() => next());\n                    } else {\n                        next();\n                    }\n                });\n            }).then(resolve).catch(reject);\n        }).catch(reject);\n    });\n    const initExtensions = config => new Promise((resolve, reject) => {\n        const packages = PackageManager.getPackages(); \n        const preloadExtensions = () => new Promise((resolve, reject) => {\n            let preloads = [];\n            Object.keys(packages).forEach(k => {\n                const iter = packages[k];\n                if (iter.type === 'extension' && iter.preload) {\n                    preloads = preloads.concat(iter.preload);\n                }\n            });\n            if (preloads.length) {\n                Preloader.preload(preloads).then(resolve).catch(() => resolve());\n            } else {\n                resolve();\n            }\n        });\n        const launchExtensions = () => new Promise((resolve, reject) => {\n            const exts = Object.keys(OSjs.Extensions);\n            Promise.each(exts, entry => {\n                return new Promise((yes, no) => {\n                    try {\n                        const m = packages[entry];\n                        let promise = OSjs.Extensions[entry].init(m);\n                        if (!(promise instanceof Promise)) {\n                            promise = Promise.resolve(true);\n                        }\n                        promise.then(yes).catch(err => {\n                            console.error(err);\n                            return yes(false);\n                        });\n                    } catch (e) {\n                        console.warn('Extension init failed', e.stack, e);\n                        yes(false);\n                    }\n                });\n            }).then(resolve).catch(err => {\n                console.warn(err);\n                reject(new Error(err));\n            });\n        });\n        preloadExtensions().then(() => {\n            return launchExtensions().then(resolve).catch(reject);\n        }).catch(() => resolve());\n    });\n    const initSearchEngine = config => new Promise((resolve, reject) => {\n        SearchEngine.init().then(resolve).catch(reject);\n    });\n    const initGUI = config => new Promise((resolve, reject) => {\n        const guiElements = [\n            'containers',\n            'visual',\n            'tabs',\n            'richtext',\n            'misc',\n            'inputs',\n            'treeview',\n            'listview',\n            'iconview',\n            'fileview',\n            'menus'\n        ];\n        guiElements.forEach(f => {\n            const gel = OSjs.require('gui/elements/' + f); // modified by lwf\n            Object.keys(gel).forEach(name => {\n                gel[name].register();\n            });\n        });\n        OSjs.error = onError;\n        OSjs.Dialogs.Alert = AlertDialog;\n        OSjs.Dialogs.ApplicationChooser = ApplicationChooserDialog;\n        OSjs.Dialogs.Color = ColorDialog;\n        OSjs.Dialogs.Confirm = ConfirmDialog;\n        OSjs.Dialogs.Error = ErrorDialog;\n        OSjs.Dialogs.File = FileDialog;\n        OSjs.Dialogs.FileInfo = FileInfoDialog;\n        OSjs.Dialogs.FileProgress = FileProgressDialog;\n        OSjs.Dialogs.FileUpload = FileUploadDialog;\n        OSjs.Dialogs.Font = FontDialog;\n        OSjs.Dialogs.Input = InputDialog;\n        Theme.init(VFS); // modified by lwf\n        resolve();\n    });\n    const initWindowManager = config => new Promise((resolve, reject) => {\n        const wmConfig = config.WindowManager;\n        if (!wmConfig || !wmConfig.exec) {\n            reject(new Error(Locales._('ERR_CORE_INIT_NO_WM')));\n        } else {\n            Process.create(wmConfig.exec, wmConfig.args || {}).then(app => {\n                return app.setup().then(resolve).catch(reject);\n            }).catch(error => {\n                reject(new Error(Locales._('ERR_CORE_INIT_WM_FAILED_FMT', error)));\n            });\n        }\n    });\n    const initMocha = config => new Promise((resolve, reject) => {\n        const div = document.createElement('div');\n        div.id = 'mocha';\n        document.body.appendChild(div);\n        document.body.style.overflow = 'auto';\n        document.body.style.backgroundColor = '#ffffff';\n        Preloader.preload([\n            '/test.css',\n            '/test.js'\n        ]).then(() => {\n            OSjs.runTests();\n        });\n        resolve(true);\n    });\n    function initSession(config) {\n        console.debug('initSession()');\n        var list = [];\n        try {\n            list = config.AutoStart;\n        } catch (e) {\n            console.warn('initSession()->autostart()', 'exception', e, e.stack);\n        }\n        var checkMap = {};\n        var skipMap = [];\n        list.forEach(function (iter, idx) {\n            if (typeof iter === 'string') {\n                iter = list[idx] = { name: iter };\n            }\n            if (skipMap.indexOf(iter.name) === -1) {\n                if (!checkMap[iter.name]) {\n                    checkMap[iter.name] = idx;\n                    skipMap.push(iter.name);\n                }\n            }\n        });\n        return new Promise(resolve => {\n            Storage.instance.getLastSession(SettingsManager).then(adds => {  // modified by lwf\n                adds.forEach(function (iter) {\n                    if (typeof checkMap[iter.name] === 'undefined') {\n                        list.push(iter);\n                    } else {\n                        if (iter.args) {\n                            var refid = checkMap[iter.name];\n                            var ref = list[refid];\n                            if (!ref.args) {\n                                ref.args = {};\n                            }\n                            ref.args = Utils.mergeObject(ref.args, iter.args);\n                        }\n                    }\n                });\n                console.info('initSession()->autostart()', list);\n                return Process.createFromArray(list).then(resolve).catch(resolve);\n            }).catch(err => {\n                console.warn(err);\n                resolve();\n            });\n        });\n    }\n    function onMessage(ev) {\n        if (ev && ev.data && typeof ev.data.message !== 'undefined' && typeof ev.data.pid === 'number') {\n            console.debug('window::message()', ev.data);\n            var proc = Process.getProcess(ev.data.pid);\n            if (proc) {\n                if (typeof proc.onPostMessage === 'function') {\n                    proc.onPostMessage(ev.data.message, ev);\n                }\n                if (typeof proc._getWindow === 'function') {\n                    var win = proc._getWindow(ev.data.wid, 'wid');\n                    if (win) {\n                        win.onPostMessage(ev.data.message, ev);\n                    }\n                }\n            }\n        }\n    }\n    function start() {\n        if (hasBooted || hasShutDown) {\n            return;\n        }\n        hasBooted = true;\n        console.info('Starting OS.js');\n        const config = OSjs.getConfig();\n        const testMode = OSJS_DEBUG && window.location.hash.match(/mocha=true/);\n        const total = 9;\n        Locales.init(config.Locale, config.LocaleOptions, config.Languages);\n        SplashScreen.watermark(config);\n        SplashScreen.show();\n        Hooks.triggerHook('initialize');\n        Promise.each([\n            initPreloading,\n            initHandlers,\n            initVFS,\n            initSettingsManager,\n            initPackageManager,\n            initExtensions,\n            initSearchEngine,\n            initGUI,\n            testMode ? initMocha : initWindowManager\n        ], (fn, index) => {\n            return new Promise((resolve, reject) => {\n                console.group('Initializing', index + 1, 'of', total);\n                SplashScreen.update(index, total);\n                return fn(config).then(res => {\n                    console.groupEnd();\n                    return resolve(res);\n                }).catch(err => {\n                    console.warn(err);\n                    console.groupEnd();\n                    return reject(new Error(err));\n                });\n            });\n        }).then(() => {\n            console.info('Done!');\n            window.addEventListener('message', onMessage, false);\n            Hooks.triggerHook('initialized');\n            SplashScreen.hide();\n            if (!testMode) {\n                Theme.playSound('LOGIN');\n                var wm = WindowManager.instance;\n                if (wm) {\n                    wm._fullyLoaded = true;\n                }\n                initSession(config).then(() => {\n                    return Hooks.triggerHook('sessionLoaded');\n                });\n            }\n            return true;\n        }).catch(err => {\n            const title = Locales._('ERR_CORE_INIT_FAILED');\n            const message = Locales._('ERR_CORE_INIT_FAILED_DESC');\n            alert(title + '\\n\\n' + message);\n            console.error(title, message, err);\n        });\n    }\n    function stop(restart = false) {\n        if (hasShutDown || !hasBooted) {\n            return;\n        }\n        hasShutDown = true;\n        hasBooted = false;\n        window.removeEventListener('message', onMessage, false);\n        const wm = WindowManager.instance;\n        if (wm) {\n            wm.toggleFullscreen();\n        }\n        Preloader.clear();\n        Menu.blur();\n        Process.killAll();\n        SearchEngine.destroy();\n        PackageManager.destroy();\n        Authenticator.instance.destroy();\n        Storage.instance.destroy();\n        Connection.instance.destroy();\n        Hooks.triggerHook('shutdown');\n        console.warn('OS.js was shut down!');\n        if (!restart && Config.getConfig('ReloadOnShutdown') === true) {\n            window.location.reload();\n        }\n    }\n    function restart(save = false) {\n        const lout = cb => Authenticator.instance.logout().then(cb).catch(cb);\n        const saveFunction = save && Storage.instance ? function (cb) {\n            Storage.instance.saveSession().then(() => lout(cb)).catch(() => lout(cb));\n        } : lout;\n        saveFunction(function () {\n            console.clear();\n            stop(true);\n            start();\n        });\n    }\n    function logout() {\n        const storage = Storage.instance;\n        const wm = WindowManager.instance;\n        function signOut(save) {\n            Theme.playSound('LOGOUT');\n            const lout = cb => Authenticator.instance.logout().then(cb).catch(cb);\n            if (save) {\n                storage.saveSession(Process,SettingsManager).then(() => lout(stop)).catch(() => lout(stop)); // modified by lwf\n            } else {\n                lout(stop);\n            }\n        }\n        if (wm) {\n            const user = Authenticator.instance.getUser() || { name: Locales._('LBL_UNKNOWN') };\n            DialogWindow.create('Confirm', {\n                title: Locales._('DIALOG_LOGOUT_TITLE'),\n                message: Locales._('DIALOG_LOGOUT_MSG_FMT', user.name)\n            }, function (ev, btn) {\n                if ([\n                        'no',\n                        'yes'\n                    ].indexOf(btn) !== -1) {\n                    signOut(btn === 'yes');\n                }\n            });\n        } else {\n            signOut(true);\n        }\n    }\n    function running() {\n        return !hasShutDown;\n    }\n    return {\n        start: start,\n        stop: stop,\n        restart: restart,\n        logout: logout,\n        running: running\n    };\n});\ndefine('skylark-osjsv2-client/utils/pepjs',[], function () { \r\n  'use strict';\r\n\r\n  /**\r\n   * This is the constructor for new PointerEvents.\r\n   *\r\n   * New Pointer Events must be given a type, and an optional dictionary of\r\n   * initialization properties.\r\n   *\r\n   * Due to certain platform requirements, events returned from the constructor\r\n   * identify as MouseEvents.\r\n   *\r\n   * @constructor\r\n   * @param {String} inType The type of the event to create.\r\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\r\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\r\n   */\r\n  var MOUSE_PROPS = [\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n    'pageX',\r\n    'pageY'\r\n  ];\r\n\r\n  var MOUSE_DEFAULTS = [\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  function PointerEvent(inType, inDict) {\r\n    inDict = inDict || Object.create(null);\r\n\r\n    var e = document.createEvent('Event');\r\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\r\n\r\n    // define inherited MouseEvent properties\r\n    // skip bubbles and cancelable since they're set above in initEvent()\r\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\r\n      p = MOUSE_PROPS[i];\r\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\r\n    }\r\n    e.buttons = inDict.buttons || 0;\r\n\r\n    // Spec requires that pointers without pressure specified use 0.5 for down\r\n    // state and 0 for up state.\r\n    var pressure = 0;\r\n\r\n    if (inDict.pressure && e.buttons) {\r\n      pressure = inDict.pressure;\r\n    } else {\r\n      pressure = e.buttons ? 0.5 : 0;\r\n    }\r\n\r\n    // add x/y properties aliased to clientX/Y\r\n    e.x = e.clientX;\r\n    e.y = e.clientY;\r\n\r\n    // define the properties of the PointerEvent interface\r\n    e.pointerId = inDict.pointerId || 0;\r\n    e.width = inDict.width || 0;\r\n    e.height = inDict.height || 0;\r\n    e.pressure = pressure;\r\n    e.tiltX = inDict.tiltX || 0;\r\n    e.tiltY = inDict.tiltY || 0;\r\n    e.twist = inDict.twist || 0;\r\n    e.tangentialPressure = inDict.tangentialPressure || 0;\r\n    e.pointerType = inDict.pointerType || '';\r\n    e.hwTimestamp = inDict.hwTimestamp || 0;\r\n    e.isPrimary = inDict.isPrimary || false;\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * This module implements a map of pointer states\r\n   */\r\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\r\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\r\n\r\n  function SparseArrayMap() {\r\n    this.array = [];\r\n    this.size = 0;\r\n  }\r\n\r\n  SparseArrayMap.prototype = {\r\n    set: function(k, v) {\r\n      if (v === undefined) {\r\n        return this.delete(k);\r\n      }\r\n      if (!this.has(k)) {\r\n        this.size++;\r\n      }\r\n      this.array[k] = v;\r\n    },\r\n    has: function(k) {\r\n      return this.array[k] !== undefined;\r\n    },\r\n    delete: function(k) {\r\n      if (this.has(k)) {\r\n        delete this.array[k];\r\n        this.size--;\r\n      }\r\n    },\r\n    get: function(k) {\r\n      return this.array[k];\r\n    },\r\n    clear: function() {\r\n      this.array.length = 0;\r\n      this.size = 0;\r\n    },\r\n\r\n    // return value, key, map\r\n    forEach: function(callback, thisArg) {\r\n      return this.array.forEach(function(v, k) {\r\n        callback.call(thisArg, v, k, this);\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  var CLONE_PROPS = [\r\n\r\n    // MouseEvent\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n\r\n    // DOM Level 3\r\n    'buttons',\r\n\r\n    // PointerEvent\r\n    'pointerId',\r\n    'width',\r\n    'height',\r\n    'pressure',\r\n    'tiltX',\r\n    'tiltY',\r\n    'pointerType',\r\n    'hwTimestamp',\r\n    'isPrimary',\r\n\r\n    // event instance\r\n    'type',\r\n    'target',\r\n    'currentTarget',\r\n    'which',\r\n    'pageX',\r\n    'pageY',\r\n    'timeStamp'\r\n  ];\r\n\r\n  var CLONE_DEFAULTS = [\r\n\r\n    // MouseEvent\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n\r\n    // DOM Level 3\r\n    0,\r\n\r\n    // PointerEvent\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    '',\r\n    0,\r\n    false,\r\n\r\n    // event instance\r\n    '',\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  var BOUNDARY_EVENTS = {\r\n    'pointerover': 1,\r\n    'pointerout': 1,\r\n    'pointerenter': 1,\r\n    'pointerleave': 1\r\n  };\r\n\r\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\r\n\r\n  /**\r\n   * This module is for normalizing events. Mouse and Touch events will be\r\n   * collected here, and fire PointerEvents that have the same semantics, no\r\n   * matter the source.\r\n   * Events fired:\r\n   *   - pointerdown: a pointing is added\r\n   *   - pointerup: a pointer is removed\r\n   *   - pointermove: a pointer is moved\r\n   *   - pointerover: a pointer crosses into an element\r\n   *   - pointerout: a pointer leaves an element\r\n   *   - pointercancel: a pointer will no longer generate events\r\n   */\r\n  var dispatcher = {\r\n    pointermap: new PointerMap(),\r\n    eventMap: Object.create(null),\r\n    captureInfo: Object.create(null),\r\n\r\n    // Scope objects for native events.\r\n    // This exists for ease of testing.\r\n    eventSources: Object.create(null),\r\n    eventSourceList: [],\r\n    /**\r\n     * Add a new event source that will generate pointer events.\r\n     *\r\n     * `inSource` must contain an array of event names named `events`, and\r\n     * functions with the names specified in the `events` array.\r\n     * @param {string} name A name for the event source\r\n     * @param {Object} source A new source of platform events.\r\n     */\r\n    registerSource: function(name, source) {\r\n      var s = source;\r\n      var newEvents = s.events;\r\n      if (newEvents) {\r\n        newEvents.forEach(function(e) {\r\n          if (s[e]) {\r\n            this.eventMap[e] = s[e].bind(s);\r\n          }\r\n        }, this);\r\n        this.eventSources[name] = s;\r\n        this.eventSourceList.push(s);\r\n      }\r\n    },\r\n    register: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.register.call(es, element);\r\n      }\r\n    },\r\n    unregister: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.unregister.call(es, element);\r\n      }\r\n    },\r\n    contains: /*scope.external.contains || */function(container, contained) {\r\n      try {\r\n        return container.contains(contained);\r\n      } catch (ex) {\r\n\r\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\r\n        return false;\r\n      }\r\n    },\r\n\r\n    // EVENTS\r\n    down: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerdown', inEvent);\r\n    },\r\n    move: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointermove', inEvent);\r\n    },\r\n    up: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerup', inEvent);\r\n    },\r\n    enter: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerenter', inEvent);\r\n    },\r\n    leave: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerleave', inEvent);\r\n    },\r\n    over: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerover', inEvent);\r\n    },\r\n    out: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerout', inEvent);\r\n    },\r\n    cancel: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointercancel', inEvent);\r\n    },\r\n    leaveOut: function(event) {\r\n      this.out(event);\r\n      this.propagate(event, this.leave, false);\r\n    },\r\n    enterOver: function(event) {\r\n      this.over(event);\r\n      this.propagate(event, this.enter, true);\r\n    },\r\n\r\n    // LISTENER LOGIC\r\n    eventHandler: function(inEvent) {\r\n\r\n      // This is used to prevent multiple dispatch of pointerevents from\r\n      // platform events. This can happen when two elements in different scopes\r\n      // are set up to create pointer events, which is relevant to Shadow DOM.\r\n      if (inEvent._handledByPE) {\r\n        return;\r\n      }\r\n      var type = inEvent.type;\r\n      var fn = this.eventMap && this.eventMap[type];\r\n      if (fn) {\r\n        fn(inEvent);\r\n      }\r\n      inEvent._handledByPE = true;\r\n    },\r\n\r\n    // set up event listeners\r\n    listen: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.addEvent(target, e);\r\n      }, this);\r\n    },\r\n\r\n    // remove event listeners\r\n    unlisten: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.removeEvent(target, e);\r\n      }, this);\r\n    },\r\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\r\n      target.addEventListener(eventName, this.boundHandler);\r\n    },\r\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\r\n      target.removeEventListener(eventName, this.boundHandler);\r\n    },\r\n\r\n    // EVENT CREATION AND TRACKING\r\n    /**\r\n     * Creates a new Event of type `inType`, based on the information in\r\n     * `inEvent`.\r\n     *\r\n     * @param {string} inType A string representing the type of event to create\r\n     * @param {Event} inEvent A platform event with a target\r\n     * @return {Event} A PointerEvent of type `inType`\r\n     */\r\n    makeEvent: function(inType, inEvent) {\r\n\r\n      // relatedTarget must be null if pointer is captured\r\n      if (this.captureInfo[inEvent.pointerId]) {\r\n        inEvent.relatedTarget = null;\r\n      }\r\n      var e = new PointerEvent(inType, inEvent);\r\n      if (inEvent.preventDefault) {\r\n        e.preventDefault = inEvent.preventDefault;\r\n      }\r\n      e._target = e._target || inEvent.target;\r\n      return e;\r\n    },\r\n\r\n    // make and dispatch an event in one call\r\n    fireEvent: function(inType, inEvent) {\r\n      var e = this.makeEvent(inType, inEvent);\r\n      return this.dispatchEvent(e);\r\n    },\r\n    /**\r\n     * Returns a snapshot of inEvent, with writable properties.\r\n     *\r\n     * @param {Event} inEvent An event that contains properties to copy.\r\n     * @return {Object} An object containing shallow copies of `inEvent`'s\r\n     *    properties.\r\n     */\r\n    cloneEvent: function(inEvent) {\r\n      var eventCopy = Object.create(null);\r\n      var p;\r\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\r\n        p = CLONE_PROPS[i];\r\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\r\n\r\n        // Work around SVGInstanceElement shadow tree\r\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\r\n        // This is the behavior implemented by Firefox.\r\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\r\n          if (eventCopy[p] instanceof SVGElementInstance) {\r\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\r\n          }\r\n        }\r\n      }\r\n\r\n      // keep the semantics of preventDefault\r\n      if (inEvent.preventDefault) {\r\n        eventCopy.preventDefault = function() {\r\n          inEvent.preventDefault();\r\n        };\r\n      }\r\n      return eventCopy;\r\n    },\r\n    getTarget: function(inEvent) {\r\n      var capture = this.captureInfo[inEvent.pointerId];\r\n      if (!capture) {\r\n        return inEvent._target;\r\n      }\r\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\r\n        return capture;\r\n      }\r\n    },\r\n    propagate: function(event, fn, propagateDown) {\r\n      var target = event.target;\r\n      var targets = [];\r\n\r\n      // Order of conditions due to document.contains() missing in IE.\r\n      while (target !== document && !target.contains(event.relatedTarget)) {\r\n        targets.push(target);\r\n        target = target.parentNode;\r\n\r\n        // Touch: Do not propagate if node is detached.\r\n        if (!target) {\r\n          return;\r\n        }\r\n      }\r\n      if (propagateDown) {\r\n        targets.reverse();\r\n      }\r\n      targets.forEach(function(target) {\r\n        event.target = target;\r\n        fn.call(this, event);\r\n      }, this);\r\n    },\r\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\r\n      if (this.captureInfo[inPointerId]) {\r\n        this.releaseCapture(inPointerId, skipDispatch);\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = inTarget;\r\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\r\n      document.addEventListener('pointerup', this.implicitRelease);\r\n      document.addEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('gotpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = inTarget;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    releaseCapture: function(inPointerId, skipDispatch) {\r\n      var t = this.captureInfo[inPointerId];\r\n      if (!t) {\r\n        return;\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = undefined;\r\n      document.removeEventListener('pointerup', this.implicitRelease);\r\n      document.removeEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('lostpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = t;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    /**\r\n     * Dispatches the event to its target.\r\n     *\r\n     * @param {Event} inEvent The event to be dispatched.\r\n     * @return {Boolean} True if an event handler returns true, false otherwise.\r\n     */\r\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\r\n      var t = this.getTarget(inEvent);\r\n      if (t) {\r\n        return t.dispatchEvent(inEvent);\r\n      }\r\n    },\r\n    asyncDispatchEvent: function(inEvent) {\r\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\r\n    }\r\n  };\r\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\r\n\r\n  var targeting = {\r\n    shadow: function(inEl) {\r\n      if (inEl) {\r\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\r\n      }\r\n    },\r\n    canTarget: function(shadow) {\r\n      return shadow && Boolean(shadow.elementFromPoint);\r\n    },\r\n    targetingShadow: function(inEl) {\r\n      var s = this.shadow(inEl);\r\n      if (this.canTarget(s)) {\r\n        return s;\r\n      }\r\n    },\r\n    olderShadow: function(shadow) {\r\n      var os = shadow.olderShadowRoot;\r\n      if (!os) {\r\n        var se = shadow.querySelector('shadow');\r\n        if (se) {\r\n          os = se.olderShadowRoot;\r\n        }\r\n      }\r\n      return os;\r\n    },\r\n    allShadows: function(element) {\r\n      var shadows = [];\r\n      var s = this.shadow(element);\r\n      while (s) {\r\n        shadows.push(s);\r\n        s = this.olderShadow(s);\r\n      }\r\n      return shadows;\r\n    },\r\n    searchRoot: function(inRoot, x, y) {\r\n      if (inRoot) {\r\n        var t = inRoot.elementFromPoint(x, y);\r\n        var st, sr;\r\n\r\n        // is element a shadow host?\r\n        sr = this.targetingShadow(t);\r\n        while (sr) {\r\n\r\n          // find the the element inside the shadow root\r\n          st = sr.elementFromPoint(x, y);\r\n          if (!st) {\r\n\r\n            // check for older shadows\r\n            sr = this.olderShadow(sr);\r\n          } else {\r\n\r\n            // shadowed element may contain a shadow root\r\n            var ssr = this.targetingShadow(st);\r\n            return this.searchRoot(ssr, x, y) || st;\r\n          }\r\n        }\r\n\r\n        // light dom element is the target\r\n        return t;\r\n      }\r\n    },\r\n    owner: function(element) {\r\n      var s = element;\r\n\r\n      // walk up until you hit the shadow root or document\r\n      while (s.parentNode) {\r\n        s = s.parentNode;\r\n      }\r\n\r\n      // the owner element is expected to be a Document or ShadowRoot\r\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\r\n        s = document;\r\n      }\r\n      return s;\r\n    },\r\n    findTarget: function(inEvent) {\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n\r\n      // if the listener is in the shadow root, it is much faster to start there\r\n      var s = this.owner(inEvent.target);\r\n\r\n      // if x, y is not in this root, fall back to document search\r\n      if (!s.elementFromPoint(x, y)) {\r\n        s = document;\r\n      }\r\n      return this.searchRoot(s, x, y);\r\n    }\r\n  };\r\n\r\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\r\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\r\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\r\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\r\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\r\n  var SELECTOR = '[touch-action]';\r\n  var OBSERVER_INIT = {\r\n    subtree: true,\r\n    childList: true,\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: ['touch-action']\r\n  };\r\n\r\n  function Installer(add, remove, changed, binder) {\r\n    this.addCallback = add.bind(binder);\r\n    this.removeCallback = remove.bind(binder);\r\n    this.changedCallback = changed.bind(binder);\r\n    if (MO) {\r\n      this.observer = new MO(this.mutationWatcher.bind(this));\r\n    }\r\n  }\r\n\r\n  Installer.prototype = {\r\n    watchSubtree: function(target) {\r\n\r\n      // Only watch scopes that can target find, as these are top-level.\r\n      // Otherwise we can see duplicate additions and removals that add noise.\r\n      //\r\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\r\n      // a removal without an insertion when a node is redistributed among\r\n      // shadows. Since it all ends up correct in the document, watching only\r\n      // the document will yield the correct mutations to watch.\r\n      if (this.observer && targeting.canTarget(target)) {\r\n        this.observer.observe(target, OBSERVER_INIT);\r\n      }\r\n    },\r\n    enableOnSubtree: function(target) {\r\n      this.watchSubtree(target);\r\n      if (target === document && document.readyState !== 'complete') {\r\n        this.installOnLoad();\r\n      } else {\r\n        this.installNewSubtree(target);\r\n      }\r\n    },\r\n    installNewSubtree: function(target) {\r\n      forEach(this.findElements(target), this.addElement, this);\r\n    },\r\n    findElements: function(target) {\r\n      if (target.querySelectorAll) {\r\n        return target.querySelectorAll(SELECTOR);\r\n      }\r\n      return [];\r\n    },\r\n    removeElement: function(el) {\r\n      this.removeCallback(el);\r\n    },\r\n    addElement: function(el) {\r\n      this.addCallback(el);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      this.changedCallback(el, oldValue);\r\n    },\r\n    concatLists: function(accum, list) {\r\n      return accum.concat(toArray(list));\r\n    },\r\n\r\n    // register all touch-action = none nodes on document load\r\n    installOnLoad: function() {\r\n      document.addEventListener('readystatechange', function() {\r\n        if (document.readyState === 'complete') {\r\n          this.installNewSubtree(document);\r\n        }\r\n      }.bind(this));\r\n    },\r\n    isElement: function(n) {\r\n      return n.nodeType === Node.ELEMENT_NODE;\r\n    },\r\n    flattenMutationTree: function(inNodes) {\r\n\r\n      // find children with touch-action\r\n      var tree = map(inNodes, this.findElements, this);\r\n\r\n      // make sure the added nodes are accounted for\r\n      tree.push(filter(inNodes, this.isElement));\r\n\r\n      // flatten the list\r\n      return tree.reduce(this.concatLists, []);\r\n    },\r\n    mutationWatcher: function(mutations) {\r\n      mutations.forEach(this.mutationHandler, this);\r\n    },\r\n    mutationHandler: function(m) {\r\n      if (m.type === 'childList') {\r\n        var added = this.flattenMutationTree(m.addedNodes);\r\n        added.forEach(this.addElement, this);\r\n        var removed = this.flattenMutationTree(m.removedNodes);\r\n        removed.forEach(this.removeElement, this);\r\n      } else if (m.type === 'attributes') {\r\n        this.elementChanged(m.target, m.oldValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  function shadowSelector(v) {\r\n    return 'body /shadow-deep/ ' + selector(v);\r\n  }\r\n  function selector(v) {\r\n    return '[touch-action=\"' + v + '\"]';\r\n  }\r\n  function rule(v) {\r\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\r\n  }\r\n  var attrib2css = [\r\n    'none',\r\n    'auto',\r\n    'pan-x',\r\n    'pan-y',\r\n    {\r\n      rule: 'pan-x pan-y',\r\n      selectors: [\r\n        'pan-x pan-y',\r\n        'pan-y pan-x'\r\n      ]\r\n    }\r\n  ];\r\n  var styles = '';\r\n\r\n  // only install stylesheet if the browser has touch action support\r\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\r\n\r\n  // only add shadow selectors if shadowdom is supported\r\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\r\n\r\n  function applyAttributeStyles() {\r\n    if (hasNativePE) {\r\n      attrib2css.forEach(function(r) {\r\n        if (String(r) === r) {\r\n          styles += selector(r) + rule(r) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += shadowSelector(r) + rule(r) + '\\n';\r\n          }\r\n        } else {\r\n          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\r\n          }\r\n        }\r\n      });\r\n\r\n      var el = document.createElement('style');\r\n      el.textContent = styles;\r\n      document.head.appendChild(el);\r\n    }\r\n  }\r\n\r\n  var pointermap = dispatcher.pointermap;\r\n\r\n  // radius around touchend that swallows mouse events\r\n  var DEDUP_DIST = 25;\r\n\r\n  // left, middle, right, back, forward\r\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\r\n\r\n  var HAS_BUTTONS = false;\r\n  try {\r\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\r\n  } catch (e) {}\r\n\r\n  // handler block for native mouse events\r\n  var mouseEvents = {\r\n    POINTER_ID: 1,\r\n    POINTER_TYPE: 'mouse',\r\n    events: [\r\n      'mousedown',\r\n      'mousemove',\r\n      'mouseup',\r\n      'mouseover',\r\n      'mouseout'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    lastTouches: [],\r\n\r\n    // collide with the global mouse listener\r\n    isEventSimulatedFromTouch: function(inEvent) {\r\n      var lts = this.lastTouches;\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\r\n\r\n        // simulated mouse events will be swallowed near a primary touchend\r\n        var dx = Math.abs(x - t.x);\r\n        var dy = Math.abs(y - t.y);\r\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n    prepareEvent: function(inEvent) {\r\n      var e = dispatcher.cloneEvent(inEvent);\r\n\r\n      // forward mouse preventDefault\r\n      var pd = e.preventDefault;\r\n      e.preventDefault = function() {\r\n        inEvent.preventDefault();\r\n        pd();\r\n      };\r\n      e.pointerId = this.POINTER_ID;\r\n      e.isPrimary = true;\r\n      e.pointerType = this.POINTER_TYPE;\r\n      return e;\r\n    },\r\n    prepareButtonsForMove: function(e, inEvent) {\r\n      var p = pointermap.get(this.POINTER_ID);\r\n\r\n      // Update buttons state after possible out-of-document mouseup.\r\n      if (inEvent.which === 0 || !p) {\r\n        e.buttons = 0;\r\n      } else {\r\n        e.buttons = p.buttons;\r\n      }\r\n      inEvent.buttons = e.buttons;\r\n    },\r\n    mousedown: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\r\n          if (p) { e.buttons |= p.buttons; }\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        if (!p || p.buttons === 0) {\r\n          dispatcher.down(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mousemove: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.move(e);\r\n      }\r\n    },\r\n    mouseup: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          var up = BUTTON_TO_BUTTONS[e.button];\r\n\r\n          // Produces wrong state of buttons in Browsers without `buttons` support\r\n          // when a mouse button that was pressed outside the document is released\r\n          // inside and other buttons are still pressed down.\r\n          e.buttons = p ? p.buttons & ~up : 0;\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n\r\n        // Support: Firefox <=44 only\r\n        // FF Ubuntu includes the lifted button in the `buttons` property on\r\n        // mouseup.\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\r\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\r\n        if (e.buttons === 0) {\r\n          dispatcher.up(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mouseover: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.enterOver(e);\r\n      }\r\n    },\r\n    mouseout: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        dispatcher.leaveOut(e);\r\n      }\r\n    },\r\n    cancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.deactivateMouse();\r\n    },\r\n    deactivateMouse: function() {\r\n      pointermap.delete(this.POINTER_ID);\r\n    }\r\n  };\r\n\r\n  var captureInfo = dispatcher.captureInfo;\r\n  var findTarget = targeting.findTarget.bind(targeting);\r\n  var allShadows = targeting.allShadows.bind(targeting);\r\n  var pointermap$1 = dispatcher.pointermap;\r\n\r\n  // This should be long enough to ignore compat mouse events made by touch\r\n  var DEDUP_TIMEOUT = 2500;\r\n  var CLICK_COUNT_TIMEOUT = 200;\r\n  var ATTRIB = 'touch-action';\r\n  var INSTALLER;\r\n\r\n  // handler block for native touch events\r\n  var touchEvents = {\r\n    events: [\r\n      'touchstart',\r\n      'touchmove',\r\n      'touchend',\r\n      'touchcancel'\r\n    ],\r\n    register: function(target) {\r\n      INSTALLER.enableOnSubtree(target);\r\n    },\r\n    unregister: function() {\r\n\r\n      // TODO(dfreedman): is it worth it to disconnect the MO?\r\n    },\r\n    elementAdded: function(el) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      if (st) {\r\n        el._scrollType = st;\r\n        dispatcher.listen(el, this.events);\r\n\r\n        // set touch-action on shadows as well\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n          dispatcher.listen(s, this.events);\r\n        }, this);\r\n      }\r\n    },\r\n    elementRemoved: function(el) {\r\n      el._scrollType = undefined;\r\n      dispatcher.unlisten(el, this.events);\r\n\r\n      // remove touch-action from shadow\r\n      allShadows(el).forEach(function(s) {\r\n        s._scrollType = undefined;\r\n        dispatcher.unlisten(s, this.events);\r\n      }, this);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      var oldSt = this.touchActionToScrollType(oldValue);\r\n\r\n      // simply update scrollType if listeners are already established\r\n      if (st && oldSt) {\r\n        el._scrollType = st;\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n        }, this);\r\n      } else if (oldSt) {\r\n        this.elementRemoved(el);\r\n      } else if (st) {\r\n        this.elementAdded(el);\r\n      }\r\n    },\r\n    scrollTypes: {\r\n      EMITTER: 'none',\r\n      XSCROLLER: 'pan-x',\r\n      YSCROLLER: 'pan-y',\r\n      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\r\n    },\r\n    touchActionToScrollType: function(touchAction) {\r\n      var t = touchAction;\r\n      var st = this.scrollTypes;\r\n      if (t === 'none') {\r\n        return 'none';\r\n      } else if (t === st.XSCROLLER) {\r\n        return 'X';\r\n      } else if (t === st.YSCROLLER) {\r\n        return 'Y';\r\n      } else if (st.SCROLLER.exec(t)) {\r\n        return 'XY';\r\n      }\r\n    },\r\n    POINTER_TYPE: 'touch',\r\n    firstTouch: null,\r\n    isPrimaryTouch: function(inTouch) {\r\n      return this.firstTouch === inTouch.identifier;\r\n    },\r\n    setPrimaryTouch: function(inTouch) {\r\n\r\n      // set primary touch if there no pointers, or the only pointer is the mouse\r\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\r\n        this.firstTouch = inTouch.identifier;\r\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\r\n        this.scrolling = false;\r\n        this.cancelResetClickCount();\r\n      }\r\n    },\r\n    removePrimaryPointer: function(inPointer) {\r\n      if (inPointer.isPrimary) {\r\n        this.firstTouch = null;\r\n        this.firstXY = null;\r\n        this.resetClickCount();\r\n      }\r\n    },\r\n    clickCount: 0,\r\n    resetId: null,\r\n    resetClickCount: function() {\r\n      var fn = function() {\r\n        this.clickCount = 0;\r\n        this.resetId = null;\r\n      }.bind(this);\r\n      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\r\n    },\r\n    cancelResetClickCount: function() {\r\n      if (this.resetId) {\r\n        clearTimeout(this.resetId);\r\n      }\r\n    },\r\n    typeToButtons: function(type) {\r\n      var ret = 0;\r\n      if (type === 'touchstart' || type === 'touchmove') {\r\n        ret = 1;\r\n      }\r\n      return ret;\r\n    },\r\n    touchToPointer: function(inTouch) {\r\n      var cte = this.currentTouchEvent;\r\n      var e = dispatcher.cloneEvent(inTouch);\r\n\r\n      // We reserve pointerId 1 for Mouse.\r\n      // Touch identifiers can start at 0.\r\n      // Add 2 to the touch identifier for compatibility.\r\n      var id = e.pointerId = inTouch.identifier + 2;\r\n      e.target = captureInfo[id] || findTarget(e);\r\n      e.bubbles = true;\r\n      e.cancelable = true;\r\n      e.detail = this.clickCount;\r\n      e.button = 0;\r\n      e.buttons = this.typeToButtons(cte.type);\r\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\r\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\r\n      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\r\n      e.isPrimary = this.isPrimaryTouch(inTouch);\r\n      e.pointerType = this.POINTER_TYPE;\r\n\r\n      // forward modifier keys\r\n      e.altKey = cte.altKey;\r\n      e.ctrlKey = cte.ctrlKey;\r\n      e.metaKey = cte.metaKey;\r\n      e.shiftKey = cte.shiftKey;\r\n\r\n      // forward touch preventDefaults\r\n      var self = this;\r\n      e.preventDefault = function() {\r\n        self.scrolling = false;\r\n        self.firstXY = null;\r\n        cte.preventDefault();\r\n      };\r\n      return e;\r\n    },\r\n    processTouches: function(inEvent, inFunction) {\r\n      var tl = inEvent.changedTouches;\r\n      this.currentTouchEvent = inEvent;\r\n      for (var i = 0, t; i < tl.length; i++) {\r\n        t = tl[i];\r\n        inFunction.call(this, this.touchToPointer(t));\r\n      }\r\n    },\r\n\r\n    // For single axis scrollers, determines whether the element should emit\r\n    // pointer events or behave as a scroller\r\n    shouldScroll: function(inEvent) {\r\n      if (this.firstXY) {\r\n        var ret;\r\n        var scrollAxis = inEvent.currentTarget._scrollType;\r\n        if (scrollAxis === 'none') {\r\n\r\n          // this element is a touch-action: none, should never scroll\r\n          ret = false;\r\n        } else if (scrollAxis === 'XY') {\r\n\r\n          // this element should always scroll\r\n          ret = true;\r\n        } else {\r\n          var t = inEvent.changedTouches[0];\r\n\r\n          // check the intended scroll axis, and other axis\r\n          var a = scrollAxis;\r\n          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\r\n          var da = Math.abs(t['client' + a] - this.firstXY[a]);\r\n          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\r\n\r\n          // if delta in the scroll axis > delta other axis, scroll instead of\r\n          // making events\r\n          ret = da >= doa;\r\n        }\r\n        this.firstXY = null;\r\n        return ret;\r\n      }\r\n    },\r\n    findTouch: function(inTL, inId) {\r\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\r\n        if (t.identifier === inId) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n\r\n    // In some instances, a touchstart can happen without a touchend. This\r\n    // leaves the pointermap in a broken state.\r\n    // Therefore, on every touchstart, we remove the touches that did not fire a\r\n    // touchend event.\r\n    // To keep state globally consistent, we fire a\r\n    // pointercancel for this \"abandoned\" touch\r\n    vacuumTouches: function(inEvent) {\r\n      var tl = inEvent.touches;\r\n\r\n      // pointermap.size should be < tl.length here, as the touchstart has not\r\n      // been processed yet.\r\n      if (pointermap$1.size >= tl.length) {\r\n        var d = [];\r\n        pointermap$1.forEach(function(value, key) {\r\n\r\n          // Never remove pointerId == 1, which is mouse.\r\n          // Touch identifiers are 2 smaller than their pointerId, which is the\r\n          // index in pointermap.\r\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\r\n            var p = value.out;\r\n            d.push(p);\r\n          }\r\n        }, this);\r\n        d.forEach(this.cancelOut, this);\r\n      }\r\n    },\r\n    touchstart: function(inEvent) {\r\n      this.vacuumTouches(inEvent);\r\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\r\n      this.dedupSynthMouse(inEvent);\r\n      if (!this.scrolling) {\r\n        this.clickCount++;\r\n        this.processTouches(inEvent, this.overDown);\r\n      }\r\n    },\r\n    overDown: function(inPointer) {\r\n      pointermap$1.set(inPointer.pointerId, {\r\n        target: inPointer.target,\r\n        out: inPointer,\r\n        outTarget: inPointer.target\r\n      });\r\n      dispatcher.enterOver(inPointer);\r\n      dispatcher.down(inPointer);\r\n    },\r\n    touchmove: function(inEvent) {\r\n      if (!this.scrolling) {\r\n        if (this.shouldScroll(inEvent)) {\r\n          this.scrolling = true;\r\n          this.touchcancel(inEvent);\r\n        } else {\r\n          inEvent.preventDefault();\r\n          this.processTouches(inEvent, this.moveOverOut);\r\n        }\r\n      }\r\n    },\r\n    moveOverOut: function(inPointer) {\r\n      var event = inPointer;\r\n      var pointer = pointermap$1.get(event.pointerId);\r\n\r\n      // a finger drifted off the screen, ignore it\r\n      if (!pointer) {\r\n        return;\r\n      }\r\n      var outEvent = pointer.out;\r\n      var outTarget = pointer.outTarget;\r\n      dispatcher.move(event);\r\n      if (outEvent && outTarget !== event.target) {\r\n        outEvent.relatedTarget = event.target;\r\n        event.relatedTarget = outTarget;\r\n\r\n        // recover from retargeting by shadow\r\n        outEvent.target = outTarget;\r\n        if (event.target) {\r\n          dispatcher.leaveOut(outEvent);\r\n          dispatcher.enterOver(event);\r\n        } else {\r\n\r\n          // clean up case when finger leaves the screen\r\n          event.target = outTarget;\r\n          event.relatedTarget = null;\r\n          this.cancelOut(event);\r\n        }\r\n      }\r\n      pointer.out = event;\r\n      pointer.outTarget = event.target;\r\n    },\r\n    touchend: function(inEvent) {\r\n      this.dedupSynthMouse(inEvent);\r\n      this.processTouches(inEvent, this.upOut);\r\n    },\r\n    upOut: function(inPointer) {\r\n      if (!this.scrolling) {\r\n        dispatcher.up(inPointer);\r\n        dispatcher.leaveOut(inPointer);\r\n      }\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    touchcancel: function(inEvent) {\r\n      this.processTouches(inEvent, this.cancelOut);\r\n    },\r\n    cancelOut: function(inPointer) {\r\n      dispatcher.cancel(inPointer);\r\n      dispatcher.leaveOut(inPointer);\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    cleanUpPointer: function(inPointer) {\r\n      pointermap$1.delete(inPointer.pointerId);\r\n      this.removePrimaryPointer(inPointer);\r\n    },\r\n\r\n    // prevent synth mouse events from creating pointer events\r\n    dedupSynthMouse: function(inEvent) {\r\n      var lts = mouseEvents.lastTouches;\r\n      var t = inEvent.changedTouches[0];\r\n\r\n      // only the primary finger will synth mouse events\r\n      if (this.isPrimaryTouch(t)) {\r\n\r\n        // remember x/y of last touch\r\n        var lt = { x: t.clientX, y: t.clientY };\r\n        lts.push(lt);\r\n        var fn = (function(lts, lt) {\r\n          var i = lts.indexOf(lt);\r\n          if (i > -1) {\r\n            lts.splice(i, 1);\r\n          }\r\n        }).bind(null, lts, lt);\r\n        setTimeout(fn, DEDUP_TIMEOUT);\r\n      }\r\n    }\r\n  };\r\n\r\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\r\n    touchEvents.elementChanged, touchEvents);\r\n\r\n  var pointermap$2 = dispatcher.pointermap;\r\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\r\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\r\n  var msEvents = {\r\n    events: [\r\n      'MSPointerDown',\r\n      'MSPointerMove',\r\n      'MSPointerUp',\r\n      'MSPointerOut',\r\n      'MSPointerOver',\r\n      'MSPointerCancel',\r\n      'MSGotPointerCapture',\r\n      'MSLostPointerCapture'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    POINTER_TYPES: [\r\n      '',\r\n      'unavailable',\r\n      'touch',\r\n      'pen',\r\n      'mouse'\r\n    ],\r\n    prepareEvent: function(inEvent) {\r\n      var e = inEvent;\r\n      if (HAS_BITMAP_TYPE) {\r\n        e = dispatcher.cloneEvent(inEvent);\r\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\r\n      }\r\n      return e;\r\n    },\r\n    cleanup: function(id) {\r\n      pointermap$2.delete(id);\r\n    },\r\n    MSPointerDown: function(inEvent) {\r\n      pointermap$2.set(inEvent.pointerId, inEvent);\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.down(e);\r\n    },\r\n    MSPointerMove: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.move(e);\r\n    },\r\n    MSPointerUp: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.up(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSPointerOut: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.leaveOut(e);\r\n    },\r\n    MSPointerOver: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.enterOver(e);\r\n    },\r\n    MSPointerCancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSLostPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    },\r\n    MSGotPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    }\r\n  };\r\n\r\n  function applyPolyfill() {\r\n\r\n    // only activate if this platform does not have pointer events\r\n    if (!window.PointerEvent) {\r\n      window.PointerEvent = PointerEvent;\r\n\r\n      if (window.navigator.msPointerEnabled) {\r\n        var tp = window.navigator.msMaxTouchPoints;\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: tp,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('ms', msEvents);\r\n      } else {\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: 0,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('mouse', mouseEvents);\r\n        if (window.ontouchstart !== undefined) {\r\n          dispatcher.registerSource('touch', touchEvents);\r\n        }\r\n      }\r\n\r\n      dispatcher.register(document);\r\n    }\r\n  }\r\n\r\n  var n = window.navigator;\r\n  var s;\r\n  var r;\r\n  var h;\r\n  function assertActive(id) {\r\n    if (!dispatcher.pointermap.has(id)) {\r\n      var error = new Error('InvalidPointerId');\r\n      error.name = 'InvalidPointerId';\r\n      throw error;\r\n    }\r\n  }\r\n  function assertConnected(elem) {\r\n    var parent = elem.parentNode;\r\n    while (parent && parent !== elem.ownerDocument) {\r\n      parent = parent.parentNode;\r\n    }\r\n    if (!parent) {\r\n      var error = new Error('InvalidStateError');\r\n      error.name = 'InvalidStateError';\r\n      throw error;\r\n    }\r\n  }\r\n  function inActiveButtonState(id) {\r\n    var p = dispatcher.pointermap.get(id);\r\n    return p.buttons !== 0;\r\n  }\r\n  if (n.msPointerEnabled) {\r\n    s = function(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this, true);\r\n        this.msSetPointerCapture(pointerId);\r\n      }\r\n    };\r\n    r = function(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId, true);\r\n      this.msReleasePointerCapture(pointerId);\r\n    };\r\n  } else {\r\n    s = function setPointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this);\r\n      }\r\n    };\r\n    r = function releasePointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId);\r\n    };\r\n  }\r\n  h = function hasPointerCapture(pointerId) {\r\n    return !!dispatcher.captureInfo[pointerId];\r\n  };\r\n\r\n  function applyPolyfill$1() {\r\n    if (window.Element && !Element.prototype.setPointerCapture) {\r\n      Object.defineProperties(Element.prototype, {\r\n        'setPointerCapture': {\r\n          value: s\r\n        },\r\n        'releasePointerCapture': {\r\n          value: r\r\n        },\r\n        'hasPointerCapture': {\r\n          value: h\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  applyAttributeStyles();\r\n  applyPolyfill();\r\n  applyPolyfill$1();\r\n\r\n  var pointerevents = {\r\n    dispatcher: dispatcher,\r\n    Installer: Installer,\r\n    PointerEvent: PointerEvent,\r\n    PointerMap: PointerMap,\r\n    targetFinding: targeting\r\n  };\r\n\r\n  return pointerevents;\r\n\r\n});\ndefine('skylark-osjsv2-client/boot',[\n    './core/init',\n    \"./utils/pepjs\"\n], function (Init) {\n    'use strict';\n    window.OSjs = Object.assign({\n        error: (title, message, error, exception, bugreport) => {\n            console.error(title, message, error, exception);\n        },\n        runTests: () => {\n        },\n        getConfig: () => {\n            return {};\n        },\n        getManifest: () => {\n            return {};\n        },\n        Themes: {},\n        Dialogs: {},\n        Locales: {},\n        Extensions: {},\n        Applications: {}\n    }, window.OSjs || {});\n    window.OSjs.require = n => {\n        const mod = require('skylark-osjsv2-client/' + n);\n        return mod;\n        //return mod && mod.default ? mod.default : mod;\n    };\n    if (document.readyState !== 'loading') {\n        Init.start();\n    } else {\n        document.addEventListener('DOMContentLoaded', () => Init.start());\n    }\n});\ndefine('skylark-osjsv2-client/locales/en_EN',[],function() {\nreturn {\n    'ERR_FILE_OPEN': 'Error opening file',\n    'ERR_WM_NOT_RUNNING': 'Window manager is not running',\n    'ERR_FILE_OPEN_FMT': \"The file '**{0}**' could not be opened\",\n    'ERR_APP_MIME_NOT_FOUND_FMT': \"Could not find any Applications with support for '{0}' files\",\n    'ERR_APP_LAUNCH_FAILED': 'Failed to launch Application',\n    'ERR_APP_LAUNCH_FAILED_FMT': 'An error occured while trying to launch: {0}',\n    'ERR_APP_CONSTRUCT_FAILED_FMT': \"Application '{0}' construct failed: {1}\",\n    'ERR_APP_INIT_FAILED_FMT': \"Application '{0}' init() failed: {1}\",\n    'ERR_APP_RESOURCES_MISSING_FMT': \"Application resources missing for '{0}' or it failed to load!\",\n    'ERR_APP_PRELOAD_FAILED_FMT': \"Application '{0}' preloading failed: \\n{1}\",\n    'ERR_APP_LAUNCH_ALREADY_RUNNING_FMT': \"The application '{0}' is already launched and allows only one instance!\",\n    'ERR_APP_LAUNCH_MANIFEST_FAILED_FMT': \"Failed to launch '{0}'. Application manifest data not found!\",\n    'ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT': \"Failed to launch '{0}'. Your browser does not support: {1}\",\n    'ERR_NO_WM_RUNNING': 'No window manager is running',\n    'ERR_CORE_INIT_FAILED': 'Failed to initialize OS.js',\n    'ERR_CORE_INIT_FAILED_DESC': 'An error occured while initializing OS.js',\n    'ERR_CORE_INIT_NO_WM': 'Cannot launch OS.js: No window manager defined!',\n    'ERR_CORE_INIT_WM_FAILED_FMT': 'Cannot launch OS.js: Failed to launch Window Manager: {0}',\n    'ERR_CORE_INIT_PRELOAD_FAILED': 'Cannot launch OS.js: Failed to preload resources...',\n    'ERR_JAVASCRIPT_EXCEPTION': 'JavaScript Error Report',\n    'ERR_JAVACSRIPT_EXCEPTION_DESC': 'An unexpected error occured, maybe a bug.',\n    'ERR_APP_API_ERROR': 'Application API error',\n    'ERR_APP_API_ERROR_DESC_FMT': \"Application {0} failed to perform operation '{1}'\",\n    'ERR_APP_MISSING_ARGUMENT_FMT': 'Missing argument: {0}',\n    'ERR_APP_UNKNOWN_ERROR': 'Unknown error',\n    'ERR_OPERATION_TIMEOUT': 'Operation Timeout',\n    'ERR_OPERATION_TIMEOUT_FMT': 'Operation Timeout ({0})',\n    'ERR_ARGUMENT_FMT': \"'{0}' expects '{1}' to be a '{2}', '{3}' given\",\n    'ERR_INVALID_LOCATION': 'Invalid location',\n    'ERR_WIN_DUPLICATE_FMT': \"You already have a Window named '{0}'\",\n    'WINDOW_MINIMIZE': 'Minimize',\n    'WINDOW_MAXIMIZE': 'Maximize',\n    'WINDOW_RESTORE': 'Restore',\n    'WINDOW_CLOSE': 'Close',\n    'WINDOW_ONTOP_ON': 'Ontop (Enable)',\n    'WINDOW_ONTOP_OFF': 'Ontop (Disable)',\n    'TITLE_SIGN_OUT': 'Sign out',\n    'TITLE_SIGNED_IN_AS_FMT': 'Signed in as: {0}',\n    'ERR_LOGIN_FMT': 'Login error: {0}',\n    'ERR_LOGIN_INVALID': 'Invalid login',\n    'ERR_NO_SESSION': 'No session was created by the server. Do you want to retry login?',\n    'MSG_SESSION_WARNING': 'Are you sure you want to quit OS.js? All unsaved settings and application data will be lost!',\n    'BUGREPORT_MSG': 'Please report this if you think this is a bug.\\nInclude a brief description on how the error occured, and if you can; how to replicate it',\n    'SERVICENOTIFICATION_TOOLTIP': 'Logged into external services: {0}',\n    'CONNECTION_LOST': 'Connection to the server was lost. Reconnecting...',\n    'CONNECTION_RESTORED': 'Connection to the server was restored',\n    'CONNECTION_RESTORE_FAILED': 'Failed to re-establish connection. Trying again.',\n    'CONNECTION_ERROR': 'Connection error',\n    'ERR_UTILS_XHR_FATAL': 'Fatal Error',\n    'ERR_UTILS_XHR_FMT': 'AJAX/XHR Error: {0}',\n    'DIALOG_LOGOUT_TITLE': 'Log out (Exit)',\n    'DIALOG_LOGOUT_MSG_FMT': \"Logging out user '{0}'.\\nDo you want to save current session?\",\n    'DIALOG_CLOSE': 'Close',\n    'DIALOG_CANCEL': 'Cancel',\n    'DIALOG_APPLY': 'Apply',\n    'DIALOG_OK': 'OK',\n    'DIALOG_ALERT_TITLE': 'Alert Dialog',\n    'DIALOG_COLOR_TITLE': 'Color Dialog',\n    'DIALOG_COLOR_R': 'Red: {0}',\n    'DIALOG_COLOR_G': 'Green: {0}',\n    'DIALOG_COLOR_B': 'Blue: {0}',\n    'DIALOG_COLOR_A': 'Alpha: {0}',\n    'DIALOG_CONFIRM_TITLE': 'Confirm Dialog',\n    'DIALOG_ERROR_TITLE': 'Error',\n    'DIALOG_ERROR_MESSAGE': 'Message',\n    'DIALOG_ERROR_SUMMARY': 'Summary',\n    'DIALOG_ERROR_TRACE': 'Trace',\n    'DIALOG_ERROR_BUGREPORT': 'Report Bug',\n    'DIALOG_FILE_SAVE': 'Save',\n    'DIALOG_FILE_OPEN': 'Open',\n    'DIALOG_FILE_MKDIR': 'New Folder',\n    'DIALOG_FILE_MKDIR_MSG': 'Create a new directory in **{0}**',\n    'DIALOG_FILE_OVERWRITE': \"Are you sure you want to overwrite the file '{0}'?\",\n    'DIALOG_FILE_MNU_VIEWTYPE': 'View type',\n    'DIALOG_FILE_MNU_LISTVIEW': 'List View',\n    'DIALOG_FILE_MNU_TREEVIEW': 'Tree View',\n    'DIALOG_FILE_MNU_ICONVIEW': 'Icon View',\n    'DIALOG_FILE_ERROR': 'FileDialog Error',\n    'DIALOG_FILE_ERROR_SCANDIR': \"Failed listing directory '{0}' because an error occured\",\n    'DIALOG_FILE_ERROR_FIND': \"Failed searching directory '{0}' because an error occured\",\n    'DIALOG_FILE_MISSING_FILENAME': 'You need to select a file or enter new filename!',\n    'DIALOG_FILE_MISSING_SELECTION': 'You need to select a file!',\n    'DIALOG_FILEINFO_TITLE': 'File Information',\n    'DIALOG_FILEINFO_LOADING': 'Loading file information for: {0}',\n    'DIALOG_FILEINFO_ERROR': 'FileInformationDialog Error',\n    'DIALOG_FILEINFO_ERROR_LOOKUP': 'Failed to get file information for **{0}**',\n    'DIALOG_FILEINFO_ERROR_LOOKUP_FMT': 'Failed to get file information for: {0}',\n    'DIALOG_INPUT_TITLE': 'Input Dialog',\n    'DIALOG_FILEPROGRESS_TITLE': 'File Operation Progress',\n    'DIALOG_FILEPROGRESS_LOADING': 'Loading...',\n    'DIALOG_UPLOAD_TITLE': 'Upload Dialog',\n    'DIALOG_UPLOAD_DESC': 'Upload file to **{0}**.<br />Maximum size: {1} bytes',\n    'DIALOG_UPLOAD_MSG_FMT': \"Uploading '{0}' ({1} {2}) to {3}\",\n    'DIALOG_UPLOAD_MSG': 'Uploading file...',\n    'DIALOG_UPLOAD_FAILED': 'Upload failed',\n    'DIALOG_UPLOAD_FAILED_MSG': 'The upload has failed',\n    'DIALOG_UPLOAD_FAILED_UNKNOWN': 'Reason unknown...',\n    'DIALOG_UPLOAD_FAILED_CANCELLED': 'Cancelled by user...',\n    'DIALOG_UPLOAD_TOO_BIG': 'File is too big',\n    'DIALOG_UPLOAD_TOO_BIG_FMT': 'File is too big, exceeds {0}',\n    'DIALOG_FONT_TITLE': 'Font Dialog',\n    'DIALOG_APPCHOOSER_TITLE': 'Choose Application',\n    'DIALOG_APPCHOOSER_MSG': 'Choose an application to open',\n    'DIALOG_APPCHOOSER_NO_SELECTION': 'You need to select an application',\n    'DIALOG_APPCHOOSER_SET_DEFAULT': 'Use as default application for {0}',\n    'GAPI_DISABLED': 'GoogleAPI Module not configured or disabled',\n    'GAPI_SIGN_OUT': 'Sign out from Google API Services',\n    'GAPI_REVOKE': 'Revoke permissions and Sign Out',\n    'GAPI_AUTH_FAILURE': 'Google API Authentication failed or did not take place',\n    'GAPI_AUTH_FAILURE_FMT': 'Failed to authenticate: {0}:{1}',\n    'GAPI_LOAD_FAILURE': 'Failed to load Google API',\n    'WLAPI_DISABLED': 'Windows Live API module not configured or disabled',\n    'WLAPI_SIGN_OUT': 'Sign out from Window Live API',\n    'WLAPI_LOAD_FAILURE': 'Failed to load Windows Live API',\n    'WLAPI_LOGIN_FAILED': 'Failed to log into Windows Live API',\n    'WLAPI_LOGIN_FAILED_FMT': 'Failed to log into Windows Live API: {0}',\n    'WLAPI_INIT_FAILED_FMT': 'Windows Live API returned {0} status',\n    'IDB_MISSING_DBNAME': 'Cannot create IndexedDB without Database Name',\n    'IDB_NO_SUCH_ITEM': 'No such item',\n    'ERR_VFS_FATAL': 'Fatal Error',\n    'ERR_VFS_UNAVAILABLE': 'Not available',\n    'ERR_VFS_FILE_ARGS': 'File expects at least one argument',\n    'ERR_VFS_NUM_ARGS': 'Not enough arguments',\n    'ERR_VFS_EXPECT_FILE': 'Expects a file-object',\n    'ERR_VFS_EXPECT_SRC_FILE': 'Expects a source file-object',\n    'ERR_VFS_EXPECT_DST_FILE': 'Expects a destination file-object',\n    'ERR_VFS_FILE_EXISTS': 'Destination already exists',\n    'ERR_VFS_TARGET_NOT_EXISTS': 'Target does not exist',\n    'ERR_VFS_TRANSFER_FMT': 'An error occured while transfering between storage: {0}',\n    'ERR_VFS_UPLOAD_NO_DEST': 'Cannot upload a file without a destination',\n    'ERR_VFS_UPLOAD_NO_FILES': 'Cannot upload without any files defined',\n    'ERR_VFS_UPLOAD_FAIL_FMT': 'File upload failed: {0}',\n    'ERR_VFS_UPLOAD_CANCELLED': 'File upload was cancelled',\n    'ERR_VFS_DOWNLOAD_NO_FILE': 'Cannot download a path without a path',\n    'ERR_VFS_DOWNLOAD_FAILED': 'An error occured while downloading: {0}',\n    'ERR_VFS_REMOTEREAD_EMPTY': 'Response was empty',\n    'ERR_VFS_NO_MIME_DETECT': 'No mime type detected',\n    'ERR_VFSMODULE_INVALID': 'Invalid VFS Module',\n    'ERR_VFSMODULE_INVALID_FMT': 'Invalid VFS Module: {0}',\n    'ERR_VFSMODULE_INVALID_METHOD': 'Invalid VFS Method',\n    'ERR_VFSMODULE_INVALID_METHOD_FMT': 'Invalid VFS Method: {0}',\n    'ERR_VFSMODULE_INVALID_TYPE': 'Invalid VFS Module type',\n    'ERR_VFSMODULE_INVALID_TYPE_FMT': 'Invalid VFS Module type: {0}',\n    'ERR_VFSMODULE_INVALID_CONFIG': 'Invalid VFS Module configuration',\n    'ERR_VFSMODULE_INVALID_CONFIG_FMT': 'Invalid VFS Module configuration: {0}',\n    'ERR_VFSMODULE_ALREADY_MOUNTED': 'VFS Module already mounted',\n    'ERR_VFSMODULE_ALREADY_MOUNTED_FMT': \"VFS Module '{0}' already mounted\",\n    'ERR_VFSMODULE_NOT_MOUNTED': 'VFS Module not mounted',\n    'ERR_VFSMODULE_NOT_MOUNTED_FMT': \"VFS Module '{0}' not mounted\",\n    'ERR_VFSMODULE_EXCEPTION': 'VFS Module Exception',\n    'ERR_VFSMODULE_EXCEPTION_FMT': 'VFS Module Exception: {0}',\n    'ERR_VFSMODULE_NOT_FOUND_FMT': 'No VFS Module matches {0}. Wrong path or format ?',\n    'ERR_VFSMODULE_READONLY': 'This VFS Module is read-only',\n    'ERR_VFSMODULE_READONLY_FMT': 'This VFS Module is read-only: {0}',\n    'TOOLTIP_VFS_DOWNLOAD_NOTIFICATION': 'Downloading file',\n    'ERR_VFSMODULE_XHR_ERROR': 'XHR Error',\n    'ERR_VFSMODULE_ROOT_ID': 'Failed to find root folder id',\n    'ERR_VFSMODULE_NOSUCH': 'File does not exist',\n    'ERR_VFSMODULE_PARENT': 'No such parent',\n    'ERR_VFSMODULE_PARENT_FMT': 'Failed to look up parent: {0}',\n    'ERR_VFSMODULE_SCANDIR': 'Failed to scan directory',\n    'ERR_VFSMODULE_SCANDIR_FMT': 'Failed to scan directory: {0}',\n    'ERR_VFSMODULE_READ': 'Failed to read file',\n    'ERR_VFSMODULE_READ_FMT': 'Failed to read file: {0}',\n    'ERR_VFSMODULE_WRITE': 'Failed to write file',\n    'ERR_VFSMODULE_WRITE_FMT': 'Failed to write file: {0}',\n    'ERR_VFSMODULE_COPY': 'Failed to copy',\n    'ERR_VFSMODULE_COPY_FMT': 'Failed to copy: {0}',\n    'ERR_VFSMODULE_UNLINK': 'Failed to unlink file',\n    'ERR_VFSMODULE_UNLINK_FMT': 'Failed to unlink file: {0}',\n    'ERR_VFSMODULE_MOVE': 'Failed to move file',\n    'ERR_VFSMODULE_MOVE_FMT': 'Failed to move file: {0}',\n    'ERR_VFSMODULE_EXIST': 'Failed to check file existence',\n    'ERR_VFSMODULE_EXIST_FMT': 'Failed to check file existence: {0}',\n    'ERR_VFSMODULE_FILEINFO': 'Failed to get file information',\n    'ERR_VFSMODULE_FILEINFO_FMT': 'Failed to get file information: {0}',\n    'ERR_VFSMODULE_MKDIR': 'Failed to create directory',\n    'ERR_VFSMODULE_MKDIR_FMT': 'Failed to create directory: {0}',\n    'ERR_VFSMODULE_MKFILE': 'Failed to create file',\n    'ERR_VFSMODULE_MKFILE_FMT': 'Failed to create file: {0}',\n    'ERR_VFSMODULE_URL': 'Failed to get URL for file',\n    'ERR_VFSMODULE_URL_FMT': 'Failed to get URL for file: {0}',\n    'ERR_VFSMODULE_TRASH': 'Failed to move file to trash',\n    'ERR_VFSMODULE_TRASH_FMT': 'Failed to move file to trash: {0}',\n    'ERR_VFSMODULE_UNTRASH': 'Failed to move file out of trash',\n    'ERR_VFSMODULE_UNTRASH_FMT': 'Failed to move file out of trash: {0}',\n    'ERR_VFSMODULE_EMPTYTRASH': 'Failed to empty trash',\n    'ERR_VFSMODULE_EMPTYTRASH_FMT': 'Failed to empty trash: {0}',\n    'ERR_VFSMODULE_FIND': 'Failed to search',\n    'ERR_VFSMODULE_FIND_FMT': 'Failed to search: {0}',\n    'ERR_VFSMODULE_FREESPACE': 'Failed to get free space',\n    'ERR_VFSMODULE_FREESPACE_FMT': 'Failed to get free space: {0}',\n    'ERR_VFSMODULE_EXISTS': 'Failed to check if exists',\n    'ERR_VFSMODULE_EXISTS_FMT': 'Failed to check if exists: {0}',\n    'ERR_DROPBOX_API': 'Failed to load Dropbox API',\n    'ERR_DROPBOX_AUTH': 'Failed to authenticate via Dropbox',\n    'ERR_DROPBOX_KEY': 'No Dropbox client key configured',\n    'DROPBOX_NOTIFICATION_TITLE': 'You are signed in to Dropbox API',\n    'DROPBOX_SIGN_OUT': 'Sign out from Google API Services',\n    'ONEDRIVE_ERR_RESOLVE': 'Failed to resolve path: item not found',\n    'ZIP_PRELOAD_FAIL': 'Failed to load zip.js',\n    'ZIP_VENDOR_FAIL': 'zip.js library was not found. Did it load properly?',\n    'ZIP_NO_RESOURCE': 'No zip resource was given',\n    'ZIP_NO_PATH': 'No path given',\n    'SEARCH_LOADING': 'Searching...',\n    'SEARCH_NO_RESULTS': 'No results found',\n    'ERR_PACKAGE_EXISTS': 'Package installation directory already exists. Cannot continue!',\n    'ERR_PACKAGE_MANIFEST': 'Failed to load package manifest',\n    'ERR_PACKAGE_ENUM_FAILED': 'Failed to get package list. Make sure you\\'re not using \"Private Mode\" as this might case problems.',\n    'ERR_FILE_APP_OPEN': 'Cannot open file',\n    'ERR_FILE_APP_OPEN_FMT': 'The file {0} could not be opened because the mime {1} is not supported',\n    'ERR_FILE_APP_OPEN_ALT_FMT': 'The file {0} could not be opened: {1}',\n    'ERR_FILE_APP_SAVE_ALT_FMT': 'The file {0} could not be saved: {1}',\n    'ERR_GENERIC_APP_FMT': '{0} Application Error',\n    'ERR_GENERIC_APP_ACTION_FMT': \"Failed to perform action '{0}'\",\n    'ERR_GENERIC_APP_UNKNOWN': 'Unknown Error',\n    'ERR_GENERIC_APP_REQUEST': 'An error occured while handling your request',\n    'ERR_GENERIC_APP_FATAL_FMT': 'Fatal Error: {0}',\n    'MSG_GENERIC_APP_DISCARD': 'Discard changes?',\n    'MSG_FILE_CHANGED': 'The file has changed. Reload?',\n    'MSG_APPLICATION_WARNING': 'Application Warning',\n    'MSG_MIME_OVERRIDE': 'The filetype \"{0}\" is not supported, using \"{1}\" instead.',\n    'ERR_OPEN_LOCATION': 'Failed to open location',\n    'ERR_OPEN_LOCATION_FMT': 'Failed to open location: {0}',\n    'LBL_UNKNOWN': 'Unknown',\n    'LBL_APPEARANCE': 'Appearance',\n    'LBL_USER': 'User',\n    'LBL_NAME': 'Name',\n    'LBL_APPLY': 'Apply',\n    'LBL_FILENAME': 'Filename',\n    'LBL_PATH': 'Path',\n    'LBL_SIZE': 'Size',\n    'LBL_TYPE': 'Type',\n    'LBL_MIME': 'MIME',\n    'LBL_LOADING': 'Loading',\n    'LBL_SETTINGS': 'Settings',\n    'LBL_ADD_FILE': 'Add file',\n    'LBL_COMMENT': 'Comment',\n    'LBL_ACCOUNT': 'Account',\n    'LBL_CONNECT': 'Connect',\n    'LBL_ONLINE': 'Online',\n    'LBL_OFFLINE': 'Offline',\n    'LBL_AWAY': 'Away',\n    'LBL_BUSY': 'Busy',\n    'LBL_CHAT': 'Chat',\n    'LBL_HELP': 'Help',\n    'LBL_ABOUT': 'About',\n    'LBL_PANELS': 'Panels',\n    'LBL_LOCALES': 'Locales',\n    'LBL_THEME': 'Theme',\n    'LBL_COLOR': 'Color',\n    'LBL_PID': 'PID',\n    'LBL_KILL': 'Kill',\n    'LBL_ALIVE': 'Alive',\n    'LBL_INDEX': 'Index',\n    'LBL_ADD': 'Add',\n    'LBL_FONT': 'Font',\n    'LBL_YES': 'Yes',\n    'LBL_NO': 'No',\n    'LBL_CANCEL': 'Cancel',\n    'LBL_TOP': 'Top',\n    'LBL_LEFT': 'Left',\n    'LBL_RIGHT': 'Right',\n    'LBL_BOTTOM': 'Bottom',\n    'LBL_CENTER': 'Center',\n    'LBL_FILE': 'File',\n    'LBL_NEW': 'New',\n    'LBL_OPEN': 'Open',\n    'LBL_SAVE': 'Save',\n    'LBL_SAVEAS': 'Save as...',\n    'LBL_CLOSE': 'Close',\n    'LBL_MKDIR': 'Create directory',\n    'LBL_UPLOAD': 'Upload',\n    'LBL_VIEW': 'View',\n    'LBL_EDIT': 'Edit',\n    'LBL_RENAME': 'Rename',\n    'LBL_DELETE': 'Delete',\n    'LBL_OPENWITH': 'Open With ...',\n    'LBL_ICONVIEW': 'Icon View',\n    'LBL_TREEVIEW': 'Tree View',\n    'LBL_LISTVIEW': 'List View',\n    'LBL_REFRESH': 'Refresh',\n    'LBL_VIEWTYPE': 'View type',\n    'LBL_BOLD': 'Bold',\n    'LBL_ITALIC': 'Italic',\n    'LBL_UNDERLINE': 'Underline',\n    'LBL_REGULAR': 'Regular',\n    'LBL_STRIKE': 'Strike',\n    'LBL_INDENT': 'Indent',\n    'LBL_OUTDENT': 'Outdate',\n    'LBL_UNDO': 'Undo',\n    'LBL_REDO': 'Redo',\n    'LBL_CUT': 'Cut',\n    'LBL_UNLINK': 'Unlink',\n    'LBL_COPY': 'Copy',\n    'LBL_PASTE': 'Paste',\n    'LBL_INSERT': 'Insert',\n    'LBL_IMAGE': 'Image',\n    'LBL_LINK': 'Link',\n    'LBL_DISCONNECT': 'Disconnect',\n    'LBL_APPLICATIONS': 'Applications',\n    'LBL_ADD_FOLDER': 'Add folder',\n    'LBL_INFORMATION': 'Information',\n    'LBL_TEXT_COLOR': 'Text Color',\n    'LBL_BACK_COLOR': 'Back Color',\n    'LBL_RESET_DEFAULT': 'Reset to defaults',\n    'LBL_DOWNLOAD_COMP': 'Download to computer',\n    'LBL_ORDERED_LIST': 'Ordered List',\n    'LBL_BACKGROUND_IMAGE': 'Background Image',\n    'LBL_BACKGROUND_COLOR': 'Background Color',\n    'LBL_UNORDERED_LIST': 'Unordered List',\n    'LBL_STATUS': 'Status',\n    'LBL_READONLY': 'Read-Only',\n    'LBL_CREATED': 'Created',\n    'LBL_MODIFIED': 'Modified',\n    'LBL_SHOW_COLUMNS': 'Show Columns',\n    'LBL_MOVE': 'Move',\n    'LBL_OPTIONS': 'Options',\n    'LBL_OK': 'OK',\n    'LBL_DIRECTORY': 'Directory',\n    'LBL_CREATE': 'Create',\n    'LBL_BUGREPORT': 'Bugreport',\n    'LBL_INSTALL': 'Install',\n    'LBL_UPDATE': 'Update',\n    'LBL_REMOVE': 'Remove',\n    'LBL_SHOW_SIDEBAR': 'Show sidebar',\n    'LBL_SHOW_NAVIGATION': 'Show navigation',\n    'LBL_SHOW_HIDDENFILES': 'Show hidden files',\n    'LBL_SHOW_FILEEXTENSIONS': 'Show file extensions',\n    'LBL_MOUNT': 'Mount',\n    'LBL_DESCRIPTION': 'Description',\n    'LBL_USERNAME': 'Username',\n    'LBL_PASSWORD': 'Password',\n    'LBL_HOST': 'Host',\n    'LBL_NAMESPACE': 'Namespace',\n    'LBL_SEARCH': 'Search',\n    'LBL_BACK': 'Back',\n    'LBL_ICONS': 'Icons',\n    'LBL_ICON': 'Icon',\n    'LBL_UNINSTALL': 'Uninstall',\n    'LBL_REGENERATE': 'Regenerate',\n    'LBL_DESKTOP': 'Desktop',\n    'LBL_WINDOWMANAGER': 'Window Manager',\n    'LBL_HOTKEY': 'Hotkey',\n    'LBL_HOTKEYS': 'Hotkeys',\n    'LBL_MOUNTS': 'Mounts',\n    'LBL_ID': 'ID',\n    'LBL_APPLICATION': 'Application',\n    'LBL_SCOPE': 'Scope',\n    'LBL_HIDE': 'Hide',\n    'LBL_REPOSITORY': 'Repository',\n    'LBL_VERSION': 'Version',\n    'LBL_AUTHOR': 'Author',\n    'LBL_GROUPS': 'Groups',\n    'LBL_AUTOHIDE': 'Autohide',\n    'LBL_PERSONAL': 'Personal',\n    'LBL_SYSTEM': 'System',\n    'LBL_STARTING': 'Starting',\n    'LBL_SOUNDS': 'Sounds',\n    'LBL_STORE': 'Store',\n    'LBL_LOCALE': 'Locale',\n    'LBL_PACKAGE': 'Package',\n    'LBL_PACKAGES': 'Packages',\n    'LBL_INPUT': 'Input',\n    'LBL_MISC': 'Misc',\n    'LBL_OTHER': 'Other',\n    'LBL_USERS': 'Users',\n    'LBL_FONTS': 'Fonts',\n    'LBL_OPEN_LOCATION': 'Open Location',\n    'LBL_HOME': 'Home',\n    'LBL_WIDGET': 'Widget',\n    'LBL_WIDGETS': 'Widgets',\n    'LBL_LOCK': 'Lock',\n    'LBL_UNLOCK': 'Unlock',\n    'LBL_WARNING': 'Warning',\n    'LBL_INFO': 'Info',\n    'LBL_POSITION': 'Position',\n    'LBL_OPACITY': 'Opactiy',\n    'LBL_ITEMS': 'Items',\n    'LBL_ONTOP': 'On top',\n    'LBL_BACKGROUND': 'Background',\n    'LBL_QUIT': 'Quit',\n    'LBL_EXIT': 'Exit',\n    'LBL_WINDOWS': 'Windows'\n};\n});\n\ndefine('skylark-osjsv2-client/core/auth/database',[\n\t'../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class DatabaseAuthenticator extends Authenticator {\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/demo',[\n    '../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class DemoAuthenticator extends Authenticator {\n        _getSettings() {\n            let settings = {};\n            let key;\n            for (let i = 0; i < localStorage.length; i++) {\n                key = localStorage.key(i);\n                if (key.match(/^OSjs\\//)) {\n                    try {\n                        settings[key.replace(/^OSjs\\//, '')] = JSON.parse(localStorage.getItem(key));\n                    } catch (e) {\n                        console.warn('DemoAuthenticator::login()', e, e.stack);\n                    }\n                }\n            }\n            return settings;\n        }\n        login(login) {\n            return new Promise((resolve, reject) => {\n                super.login(login).then(result => {\n                    result.userSettings = this._getSettings();\n                    return resolve(result);\n                }).catch(reject);\n            });\n        }\n        createUI() {\n            return this.requestLogin({\n                username: 'demo',\n                password: 'demo'\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/pam',[\n\t'../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class PAMAuthenticator extends Authenticator {\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/standalone',[\n    './demo'\n], function (DemoAuthenticator) {\n    'use strict';\n    return class StandaloneAuthenticator extends DemoAuthenticator {\n        constructor() {\n            super();\n            this.isStandalone = true;\n        }\n        login(login) {\n            return Promise.resolve({\n                userData: {\n                    id: 1,\n                    username: 'root',\n                    name: 'Administrator User',\n                    groups: ['admin']\n                },\n                userSettings: this._getSettings(),\n                blacklistedPackages: []\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/http',[\n    '../../vfs/fs',\n    '../../vfs/file',\n    '../connection'\n], function (VFS, FileMetadata, Connection) {\n    'use strict';\n    return class HttpConnection extends Connection {\n        onVFSRequestCompleted(module, method, args, result, appRef) {\n            if ([\n                    'upload',\n                    'write',\n                    'mkdir',\n                    'copy',\n                    'move',\n                    'unlink'\n                ].indexOf(method) !== -1) {\n                const arg = method === 'move' ? {\n                    source: args[0] instanceof FileMetadata ? args[0] : null,\n                    destination: args[1] instanceof FileMetadata ? args[1] : null\n                } : args[method === 'copy' ? 1 : 0];\n                VFS.triggerWatch(method, arg, appRef);\n            }\n            return super.onVFSRequestCompleted(...arguments);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/standalone',[\n    './http'\n], function (HttpConnection) {\n    'use strict';\n    return class StandaloneConnection extends HttpConnection {\n        createRequest(method, args, options) {\n            if (method === 'packages') {\n                return Promise.resolve({ result: OSjs.getManifest() });\n            }\n            return Promise.reject(new Error('You are currently running locally and cannot perform this operation!'));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/ws',[\n    '../config',\n    '../locales',\n    '../../vfs/fs',\n    '../../vfs/file',\n    '../connection'\n], function (Config, Locales, VFS, FileMetadata, Connection) {\n    'use strict';\n    return class WSConnection extends Connection {\n        constructor() {\n            super(...arguments);\n            const port = Config.getConfig('Connection.WSPort');\n            const path = Config.getConfig('Connection.WSPath') || '';\n            let url = window.location.protocol.replace('http', 'ws') + '//' + window.location.host;\n            if (port !== 'upgrade') {\n                if (url.match(/:\\d+$/)) {\n                    url = url.replace(/:\\d+$/, '');\n                }\n                url += ':' + port;\n            }\n            url += path;\n            this.ws = null;\n            this.wsurl = url;\n            this.wsqueue = {};\n            this.destroying = false;\n        }\n        destroy() {\n            if (!this.destroying) {\n                if (this.ws) {\n                    this.ws.close();\n                }\n                this.ws = null;\n                this.wsqueue = {};\n            }\n            this.destroying = true;\n            return super.destroy.apply(this, arguments);\n        }\n        init() {\n            this.destroying = false;\n            return new Promise((resolve, reject) => {\n                this._connect(false, (err, res) => {\n                    if (err) {\n                        reject(err instanceof Error ? err : new Error(err));\n                    } else {\n                        resolve(res);\n                    }\n                });\n            });\n        }\n        _connect(reconnect, callback) {\n            if (this.destroying || this.ws && !reconnect) {\n                return;\n            }\n            console.info('Trying WebSocket Connection', this.wsurl);\n            let connected = false;\n            this.ws = new WebSocket(this.wsurl);\n            this.ws.onopen = function (ev) {\n                connected = true;\n                setTimeout(() => callback(false), 0);\n            };\n            this.ws.onmessage = ev => {\n                console.debug('websocket open', ev);\n                const data = JSON.parse(ev.data);\n                const idx = data._index;\n                this._onmessage(idx, data);\n            };\n            this.ws.onerror = ev => {\n                console.error('websocket error', ev);\n            };\n            this.ws.onclose = ev => {\n                console.debug('websocket close', ev);\n                if (!connected && ev.code !== 3001) {\n                    callback(Locales._('CONNECTION_ERROR'));\n                    return;\n                }\n                this._onclose();\n            };\n        }\n        _onmessage(idx, data) {\n            if (typeof idx === 'undefined') {\n                this.message(data);\n            } else {\n                if (this.wsqueue[idx]) {\n                    delete data._index;\n                    this.wsqueue[idx](false, data);\n                    delete this.wsqueue[idx];\n                }\n            }\n        }\n        _onclose(reconnecting) {\n            if (this.destroying) {\n                return;\n            }\n            this.onOffline(reconnecting);\n            this.ws = null;\n            setTimeout(() => {\n                this._connect(true, err => {\n                    if (err) {\n                        this._onclose((reconnecting || 0) + 1);\n                    } else {\n                        this.onOnline();\n                    }\n                });\n            }, reconnecting ? 10000 : 1000);\n        }\n        message(data) {\n            if (data.action === 'vfs:watch') {\n                VFS.triggerWatch(data.args.event, new FileMetadata(data.args.file));\n            }\n            if (this._evHandler) {\n                this._evHandler.emit(data.action, data.args);\n            }\n        }\n        createRequest(method, args, options) {\n            if (!this.ws) {\n                return Promise.reject(new Error('No websocket connection'));\n            }\n            if ([\n                    'FS:upload',\n                    'FS:get',\n                    'logout'\n                ].indexOf(method) !== -1) {\n                return super.createRequest(...arguments);\n            }\n            const idx = this.index++;\n            const base = method.match(/^FS:/) ? '/FS/' : '/API/';\n            try {\n                this.ws.send(JSON.stringify({\n                    _index: idx,\n                    path: base + method.replace(/^FS:/, ''),\n                    args: args\n                }));\n            } catch (e) {\n                return Promise.reject(e);\n            }\n            return new Promise((resolve, reject) => {\n                this.wsqueue[idx] = function (err, res) {\n                    return err ? reject(err) : resolve(res);\n                };\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/database',[\n\t'../storage'\n], function (Storage) {\n    'use strict';\n    return class DatabaseStorage extends Storage {\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/demo',[\n    '../config',\n    '../storage'\n], function (Config, Storage) {\n    'use strict';\n    return class DemoStorage extends Storage {\n        init() {\n            const curr = Config.getConfig('Version');\n            const version = localStorage.getItem('__version__');\n            if (curr !== version) {\n                localStorage.clear();\n            }\n            localStorage.setItem('__version__', String(curr));\n            return Promise.resolve();\n        }\n        saveSettings(pool, storage) {\n            Object.keys(storage).forEach(key => {\n                if (pool && key !== pool) {\n                    return;\n                }\n                try {\n                    localStorage.setItem('OSjs/' + key, JSON.stringify(storage[key]));\n                } catch (e) {\n                    console.warn('DemoStorage::settings()', e, e.stack);\n                }\n            });\n            return Promise.resolve();\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/standalone',[\n\t'./demo'\n], function (DemoStorage) {\n    'use strict';\n    return class StandaloneStorage extends DemoStorage {\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/system',[\n\t'../storage'\n], function (Storage) {\n    'use strict';\n    return class SystemStorage extends Storage {\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/containers',[\n    '../../utils/gui',\n    '../../utils/events',\n    '../element'\n], function (GUI, Events, GUIElement) {\n    'use strict';\n    function toggleState(el, expanded) {\n        if (typeof expanded === 'undefined') {\n            expanded = el.getAttribute('data-expanded') !== 'false';\n            expanded = !expanded;\n        }\n        el.setAttribute('aria-expanded', String(expanded));\n        el.setAttribute('data-expanded', String(expanded));\n        return expanded;\n    }\n    class GUIPanedView extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-paned-view',\n                type: 'container',\n                allowedChildren: ['gui-paned-view-container']\n            }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            if (evName === 'resize') {\n                evName = '_' + evName;\n            }\n            Events.$bind(el, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const orient = el.getAttribute('data-orientation') || 'horizontal';\n            function bindResizer(resizer, idx, cel) {\n                const resizeEl = resizer.previousElementSibling;\n                if (!resizeEl) {\n                    return;\n                }\n                let startWidth = resizeEl.offsetWidth;\n                let startHeight = resizeEl.offsetHeight;\n                let minSize = 16;\n                let maxSize = Number.MAX_VALUE;\n                GUI.createDrag(resizer, ev => {\n                    startWidth = resizeEl.offsetWidth;\n                    startHeight = resizeEl.offsetHeight;\n                    minSize = parseInt(cel.getAttribute('data-min-size'), 10) || minSize;\n                    const max = parseInt(cel.getAttribute('data-max-size'), 10);\n                    if (!max) {\n                        const totalSize = resizer.parentNode[orient === 'horizontal' ? 'offsetWidth' : 'offsetHeight'];\n                        const totalContainers = resizer.parentNode.querySelectorAll('gui-paned-view-container').length;\n                        const totalSpacers = resizer.parentNode.querySelectorAll('gui-paned-view-handle').length;\n                        maxSize = totalSize - totalContainers * 16 - totalSpacers * 8;\n                    }\n                }, (ev, diff) => {\n                    const newWidth = startWidth + diff.x;\n                    const newHeight = startHeight + diff.y;\n                    let flex;\n                    if (orient === 'horizontal') {\n                        if (!isNaN(newWidth) && newWidth > 0 && newWidth >= minSize && newWidth <= maxSize) {\n                            flex = newWidth.toString() + 'px';\n                        }\n                    } else {\n                        if (!isNaN(newHeight) && newHeight > 0 && newHeight >= minSize && newHeight <= maxSize) {\n                            flex = newHeight.toString() + 'px';\n                        }\n                    }\n                    if (flex) {\n                        resizeEl.style.webkitFlexBasis = flex;\n                        resizeEl.style.mozFflexBasis = flex;\n                        resizeEl.style.msFflexBasis = flex;\n                        resizeEl.style.oFlexBasis = flex;\n                        resizeEl.style.flexBasis = flex;\n                    }\n                }, ev => {\n                    el.dispatchEvent(new CustomEvent('_resize', { detail: { index: idx } }));\n                });\n            }\n            el.querySelectorAll('gui-paned-view-container').forEach((cel, idx) => {\n                if (idx % 2) {\n                    const resizer = document.createElement('gui-paned-view-handle');\n                    resizer.setAttribute('role', 'separator');\n                    cel.parentNode.insertBefore(resizer, cel);\n                    bindResizer(resizer, idx, cel);\n                }\n            });\n            return this;\n        }\n    }\n    class GUIPanedViewContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-paned-view-container',\n                type: 'container',\n                allowedParents: ['gui-paned-view']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIButtonBar extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-button-bar',\n                type: 'container'\n            }, this);\n        }\n        build() {\n            this.$element.setAttribute('role', 'toolbar');\n            return this;\n        }\n    }\n    class GUIToolBar extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-toolbar',\n                type: 'container'\n            }, this);\n        }\n        build() {\n            this.$element.setAttribute('role', 'toolbar');\n            return this;\n        }\n    }\n    class GUIGrid extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid',\n                type: 'container',\n                allowedChildren: ['gui-grid-row']\n            }, this);\n        }\n        build() {\n            const rows = this.$element.querySelectorAll('gui-grid-row');\n            const p = 100 / rows.length;\n            rows.forEach(r => {\n                r.style.height = String(p) + '%';\n            });\n            return this;\n        }\n    }\n    class GUIGridRow extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid-row',\n                type: 'container',\n                allowedChildren: ['gui-grid-entry'],\n                allowedParents: ['gui-grid-row']\n            }, this);\n        }\n    }\n    class GUIGridEntry extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid-entry',\n                type: 'container',\n                allowedParents: ['gui-grid-row']\n            }, this);\n        }\n    }\n    class GUIVBox extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-vbox',\n                type: 'container',\n                allowedChildren: ['gui-vbox-container']\n            }, this);\n        }\n    }\n    class GUIVBoxContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-vbox-container',\n                type: 'container',\n                allowedParents: ['gui-vbox']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIHBox extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-hbox',\n                type: 'container',\n                allowedChildren: ['gui-hbox-container']\n            }, this);\n        }\n    }\n    class GUIHBoxContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-hbox-container',\n                type: 'container',\n                allowedParents: ['gui-hbox']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIExpander extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-expander',\n                type: 'container'\n            }, this);\n        }\n        set(param, value) {\n            if (param === 'expanded') {\n                return toggleState(this.$element, value === true);\n            }\n            return super.set(...arguments);\n        }\n        on(evName, callback, params) {\n            if (['change'].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const lbltxt = el.getAttribute('data-label') || '';\n            const label = document.createElement('gui-expander-label');\n            Events.$bind(label, 'pointerdown', ev => {\n                el.dispatchEvent(new CustomEvent('_change', { detail: { expanded: toggleState(el) } }));\n            }, false);\n            label.appendChild(document.createTextNode(lbltxt));\n            el.setAttribute('role', 'toolbar');\n            el.setAttribute('aria-expanded', 'true');\n            el.setAttribute('data-expanded', 'true');\n            if (el.children.length) {\n                el.insertBefore(label, el.children[0]);\n            } else {\n                el.appendChild(label);\n            }\n            return this;\n        }\n    }\n    return {\n        GUIPanedView: GUIPanedView,\n        GUIPanedViewContainer: GUIPanedViewContainer,\n        GUIButtonBar: GUIButtonBar,\n        GUIToolBar: GUIToolBar,\n        GUIGrid: GUIGrid,\n        GUIGridRow: GUIGridRow,\n        GUIGridEntry: GUIGridEntry,\n        GUIVBox: GUIVBox,\n        GUIVBoxContainer: GUIVBoxContainer,\n        GUIHBox: GUIHBox,\n        GUIHBoxContainer: GUIHBoxContainer,\n        GUIExpander: GUIExpander\n    };\n});\ndefine('skylark-osjsv2-client/utils/clipboard',[],function () {\n    'use strict';\n    let _CLIPBOARD;\n    function setClipboard(data) {\n        console.debug('setClipboard()', data);\n        _CLIPBOARD = data;\n    }\n    function getClipboard() {\n        return _CLIPBOARD;\n    }\n    return {\n        setClipboard: setClipboard,\n        getClipboard: getClipboard\n    };\n});\ndefine('skylark-osjsv2-client/gui/dataview',[\n    '../utils/gui',\n    '../utils/dom',\n    '../utils/events',\n    '../utils/clipboard',\n    '../utils/keycodes',\n    '../vfs/file',\n    './element'\n], function (GUI, DOM, Events, Clipboard, Keycodes, FileMetadata, GUIElement) {\n    'use strict';\n    const _classMap = { 'gui-list-view': 'gui-list-view-row' };\n    function getEntryTagName(type) {\n        if (typeof type !== 'string') {\n            type = type.tagName.toLowerCase();\n        }\n        let className = _classMap[type];\n        if (!className) {\n            className = type + '-entry';\n        }\n        return className;\n    }\n    function getEntryFromEvent(ev, header) {\n        const t = ev.target;\n        const tn = t.tagName.toLowerCase();\n        if (tn.match(/(view|textarea|body)$/)) {\n            return null;\n        } else if (tn === 'gui-list-view-column' && !header) {\n            return t.parentNode;\n        }\n        return t;\n    }\n    function isHeader(ev, row) {\n        row = row || getEntryFromEvent(ev);\n        return row && row.parentNode.tagName === 'GUI-LIST-VIEW-HEAD';\n    }\n    function handleItemSelection(ev, item, idx, className, selected, root, multipleSelect) {\n        root = root || item.parentNode;\n        if (isHeader(null, item)) {\n            return multipleSelect ? [] : null;\n        }\n        if (idx === -1) {\n            root.querySelectorAll(getEntryTagName(root)).forEach(function (e) {\n                DOM.$removeClass(e, 'gui-active');\n            });\n            selected = [];\n        } else {\n            if (!multipleSelect || !ev.shiftKey) {\n                root.querySelectorAll(className).forEach(function (i) {\n                    DOM.$removeClass(i, 'gui-active');\n                });\n                selected = [];\n            }\n            const findex = selected.indexOf(idx);\n            if (findex >= 0) {\n                selected.splice(findex, 1);\n                DOM.$removeClass(item, 'gui-active');\n            } else {\n                selected.push(idx);\n                DOM.$addClass(item, 'gui-active');\n            }\n        }\n        selected.sort(function (a, b) {\n            return a - b;\n        });\n        return selected;\n    }\n    function handleKeyPress(cls, el, ev) {\n        const map = {};\n        const key = ev.keyCode;\n        const type = el.tagName.toLowerCase();\n        const className = getEntryTagName(type);\n        const root = el.querySelector(type + '-body');\n        const entries = root.querySelectorAll(className);\n        const count = entries.length;\n        if (!count) {\n            return;\n        }\n        if (key === Keycodes.ENTER) {\n            el.dispatchEvent(new CustomEvent('_activate', { detail: { entries: cls.values() } }));\n            return;\n        }\n        map[Keycodes.C] = function (ev) {\n            if (ev.ctrlKey) {\n                const selected = cls.values();\n                if (selected && selected.length) {\n                    const data = [];\n                    selected.forEach(function (s) {\n                        if (s && s.data) {\n                            data.push(new FileMetadata(s.data.path, s.data.mime));\n                        }\n                    });\n                    Clipboard.setClipboard(data);\n                }\n            }\n        };\n        const selected = el._selected.concat() || [];\n        const first = selected.length ? selected[0] : 0;\n        const last = selected.length > 1 ? selected[selected.length - 1] : first;\n        let current = 0;\n        function select() {\n            const item = entries[current];\n            if (item) {\n                el._selected = handleItemSelection(ev, item, current, className, selected, root, ev.shiftKey);\n                cls.scrollIntoView(item);\n            }\n        }\n        function getRowSize() {\n            let d = 0;\n            let lastTop = -1;\n            entries.forEach(function (e) {\n                if (lastTop === -1) {\n                    lastTop = e.offsetTop;\n                }\n                if (lastTop !== e.offsetTop) {\n                    return false;\n                }\n                lastTop = e.offsetTop;\n                d++;\n                return true;\n            });\n            return d;\n        }\n        function handleKey() {\n            function next() {\n                current = Math.min(last + 1, count);\n                select();\n            }\n            function prev() {\n                current = Math.max(0, first - 1);\n                select();\n            }\n            if (type === 'gui-tree-view' || type === 'gui-list-view') {\n                map[Keycodes.UP] = prev;\n                map[Keycodes.DOWN] = next;\n            } else {\n                map[Keycodes.UP] = function () {\n                    current = Math.max(0, first - getRowSize());\n                    select();\n                };\n                map[Keycodes.DOWN] = function () {\n                    current = Math.max(last, last + getRowSize());\n                    select();\n                };\n                map[Keycodes.LEFT] = prev;\n                map[Keycodes.RIGHT] = next;\n            }\n            if (map[key]) {\n                map[key](ev);\n            }\n        }\n        handleKey();\n    }\n    function getValueParameter(r) {\n        const value = r.getAttribute('data-value');\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n        }\n        return value;\n    }\n    function matchValueByKey(r, val, key, idx) {\n        const value = r.getAttribute('data-value');\n        if (!key && (val === idx || val === value)) {\n            return r;\n        } else {\n            try {\n                const json = JSON.parse(value);\n                if (typeof json[key] === 'object' ? json[key] === val : String(json[key]) === String(val)) {\n                    return r;\n                }\n            } catch (e) {\n            }\n        }\n        return false;\n    }\n    return class UIDataView extends GUIElement {\n        clear(body) {\n            const el = this.$element;\n            if (!arguments.length) {\n                body = el;\n            }\n            el.querySelectorAll(getEntryTagName(el)).forEach(row => {\n                Events.$unbind(row);\n            });\n            DOM.$empty(body);\n            body.scrollTop = 0;\n            el._selected = [];\n            return this;\n        }\n        add(entries, oncreate) {\n            oncreate = oncreate || function () {\n            };\n            if (!(entries instanceof Array)) {\n                entries = [entries];\n            }\n            entries.forEach(el => {\n                oncreate(this, el);\n            });\n            return this;\n        }\n        patch(entries, className, body, oncreate, oninit) {\n            let single = false;\n            if (!(entries instanceof Array)) {\n                entries = [entries];\n                single = true;\n            }\n            let inView = {};\n            body.querySelectorAll(className).forEach(row => {\n                const id = row.getAttribute('data-id');\n                if (id !== null) {\n                    inView[id] = row;\n                }\n            });\n            entries.forEach(entry => {\n                let insertBefore;\n                if (typeof entry.id !== 'undefined' && entry.id !== null) {\n                    if (inView[entry.id]) {\n                        insertBefore = inView[entry.id];\n                        delete inView[entry.id];\n                    }\n                    const row = oncreate(this, entry);\n                    if (row) {\n                        if (insertBefore) {\n                            if (DOM.$hasClass(insertBefore, 'gui-active')) {\n                                DOM.$addClass(row, 'gui-active');\n                            }\n                            body.insertBefore(row, insertBefore);\n                            UIDataView.prototype.remove.call(this, null, className, insertBefore, body);\n                        } else {\n                            body.appendChild(row);\n                        }\n                        oninit(this, row);\n                    }\n                }\n            });\n            if (!single) {\n                Object.keys(inView).forEach(k => {\n                    UIDataView.prototype.remove.call(this, null, className, inView[k]);\n                });\n            }\n            inView = {};\n            this.updateActiveSelection(className);\n            return this;\n        }\n        remove(args, className, target, parentEl) {\n            args = args || [];\n            parentEl = parentEl || this.$element;\n            if (target) {\n                DOM.$remove(target);\n            } else if (typeof args[1] === 'undefined' && typeof args[0] === 'number') {\n                DOM.$remove(parentEl.querySelectorAll(className)[args[0]]);\n            } else {\n                const findId = args[0];\n                const findKey = args[1] || 'id';\n                const q = 'data-' + findKey + '=\"' + findId + '\"';\n                parentEl.querySelectorAll(className + '[' + q + ']').forEach(DOM.$remove);\n            }\n            this.updateActiveSelection(className);\n            return this;\n        }\n        updateActiveSelection(className) {\n            const active = [];\n            this.$element.querySelectorAll(className + '.gui-active').forEach(cel => {\n                active.push(DOM.$index(cel));\n            });\n            this.$element._active = active;\n        }\n        scrollIntoView(element) {\n            const el = this.$element;\n            const pos = DOM.$position(element, el);\n            let marginTop = 0;\n            if (el.tagName.toLowerCase() === 'gui-list-view') {\n                const header = el.querySelector('gui-list-view-head');\n                if (header) {\n                    marginTop = header.offsetHeight;\n                }\n            }\n            const scrollSpace = el.scrollTop + el.offsetHeight - marginTop;\n            const scrollTop = el.scrollTop + marginTop;\n            const elTop = pos.top - marginTop;\n            if (pos !== null && (elTop > scrollSpace || elTop < scrollTop)) {\n                el.scrollTop = elTop;\n                return true;\n            }\n            return false;\n        }\n        bindEntryEvents(row, className) {\n            const el = this.$element;\n            function createDraggable() {\n                let value = row.getAttribute('data-value');\n                if (value !== null) {\n                    try {\n                        value = JSON.parse(value);\n                    } catch (e) {\n                    }\n                }\n                let source = row.getAttribute('data-draggable-source');\n                if (source === null) {\n                    source = GUI.getWindowId(el);\n                    if (source !== null) {\n                        source = { wid: source };\n                    }\n                }\n                GUI.createDraggable(row, {\n                    type: el.getAttribute('data-draggable-type') || row.getAttribute('data-draggable-type'),\n                    source: source,\n                    data: value\n                });\n                let tooltip = row.getAttribute('data-tooltip');\n                if (tooltip && !row.getAttribute('title')) {\n                    row.setAttribute('title', tooltip);\n                }\n            }\n            el.dispatchEvent(new CustomEvent('_render', {\n                detail: {\n                    element: row,\n                    data: GUI.getViewNodeValue(row)\n                }\n            }));\n            if (el.getAttribute('data-draggable') === 'true') {\n                createDraggable();\n            }\n        }\n        getSelected(entries) {\n            const selected = [];\n            entries.forEach((iter, idx) => {\n                if (DOM.$hasClass(iter, 'gui-active')) {\n                    selected.push({\n                        index: idx,\n                        data: GUI.getViewNodeValue(iter)\n                    });\n                }\n            });\n            return selected;\n        }\n        getEntry(entries, val, key, asValue) {\n            if (val) {\n                let result = null;\n                entries.forEach((r, idx) => {\n                    if (!result && matchValueByKey(r, val, key, idx)) {\n                        result = r;\n                    }\n                });\n                return asValue && result ? getValueParameter(result) : result;\n            }\n            if (asValue && entries) {\n                try {\n                    return entries.map(iter => {\n                        return getValueParameter(iter);\n                    });\n                } catch (e) {\n                    console.warn(e);\n                }\n            }\n            return entries;\n        }\n        setSelected(body, entries, val, key, opts) {\n            const select = [];\n            const el = this.$element;\n            let scrollIntoView = false;\n            if (typeof opts === 'object') {\n                scrollIntoView = opts.scroll === true;\n            }\n            const sel = (r, idx) => {\n                select.push(idx);\n                DOM.$addClass(r, 'gui-active');\n                if (scrollIntoView) {\n                    this.scrollIntoView(r);\n                }\n            };\n            entries.forEach((r, idx) => {\n                DOM.$removeClass(r, 'gui-active');\n                if (matchValueByKey(r, val, key, idx)) {\n                    sel(r, idx);\n                }\n            });\n            el._selected = select;\n        }\n        build(applyArgs) {\n            const el = this.$element;\n            el._selected = [];\n            el.scrollTop = 0;\n            DOM.$addClass(el, 'gui-data-view');\n            const singleClick = el.getAttribute('data-single-click') === 'true';\n            let moved;\n            let wasResized = false;\n            let multipleSelect = el.getAttribute('data-multiple');\n            multipleSelect = multipleSelect === null || multipleSelect === 'true';\n            const select = ev => {\n                if (moved || wasResized) {\n                    return false;\n                }\n                const row = getEntryFromEvent(ev);\n                if (!row) {\n                    return false;\n                }\n                const className = row.tagName.toLowerCase();\n                if (isHeader(null, row)) {\n                    const col = getEntryFromEvent(ev, true);\n                    if (col) {\n                        let sortBy = col.getAttribute('data-sortby');\n                        if (sortBy) {\n                            let sortDir = col.getAttribute('data-sortdir');\n                            let resetDir = sortDir === 'desc';\n                            sortDir = sortDir === 'asc' ? 'desc' : resetDir ? null : 'asc';\n                            sortBy = resetDir ? null : sortBy;\n                            col.setAttribute('data-sortdir', sortDir);\n                            el.setAttribute('data-sortby', sortBy || '');\n                            el.setAttribute('data-sortdir', sortDir || '');\n                            el.dispatchEvent(new CustomEvent('_sort', {\n                                detail: {\n                                    sortDir: sortDir,\n                                    sortBy: sortBy\n                                }\n                            }));\n                        }\n                    }\n                    return false;\n                }\n                if (className === 'gui-tree-view-expander') {\n                    this.expand({\n                        ev: ev,\n                        entry: row.parentNode\n                    });\n                    return true;\n                }\n                const idx = DOM.$index(row);\n                el._selected = handleItemSelection(ev, row, idx, className, el._selected, el, multipleSelect);\n                el.dispatchEvent(new CustomEvent('_select', { detail: { entries: this.values() } }));\n                return true;\n            };\n            const activate = ev => {\n                if (moved || isHeader(ev)) {\n                    return;\n                }\n                if (singleClick) {\n                    if (select(ev) === false) {\n                        return;\n                    }\n                } else {\n                    if (!getEntryFromEvent(ev)) {\n                        return;\n                    }\n                }\n                el.dispatchEvent(new CustomEvent('_activate', { detail: { entries: this.values() } }));\n            };\n            const context = ev => {\n                if (isHeader(ev)) {\n                    return;\n                }\n                select(ev);\n                el.dispatchEvent(new CustomEvent('_contextmenu', {\n                    detail: {\n                        entries: this.values(),\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                }));\n            };\n            if (!el.querySelector('textarea.gui-focus-element') && !el.getAttribute('no-selection')) {\n                const underlay = document.createElement('textarea');\n                underlay.setAttribute('aria-label', '');\n                underlay.setAttribute('aria-hidden', 'true');\n                underlay.setAttribute('readonly', 'true');\n                underlay.className = 'gui-focus-element';\n                Events.$bind(underlay, 'focus', ev => {\n                    ev.preventDefault();\n                    DOM.$addClass(el, 'gui-element-focused');\n                });\n                Events.$bind(underlay, 'blur', ev => {\n                    ev.preventDefault();\n                    DOM.$removeClass(el, 'gui-element-focused');\n                });\n                Events.$bind(underlay, 'keydown', ev => {\n                    ev.preventDefault();\n                    handleKeyPress(this, el, ev);\n                });\n                Events.$bind(underlay, 'keypress', ev => {\n                    ev.preventDefault();\n                });\n                Events.$bind(el, 'pointerdown,touchstart', ev => {\n                    moved = false;\n                    const target = ev.target;\n                    wasResized = target && target.tagName === 'GUI-LIST-VIEW-COLUMN-RESIZER';\n                }, true);\n                Events.$bind(el, 'touchmove', ev => {\n                    moved = true;\n                }, true);\n                if (singleClick) {\n                    Events.$bind(el, 'click', activate, true);\n                } else {\n                    Events.$bind(el, 'click', select, true);\n                    Events.$bind(el, 'dblclick', activate, true);\n                }\n                Events.$bind(el, 'contextmenu', ev => {\n                    ev.preventDefault();\n                    context(ev);\n                    return false;\n                }, true);\n                this.on('select', ev => {\n                    if (DOM.$hasClass(el, 'gui-element-focused')) {\n                        return;\n                    }\n                    const oldTop = el.scrollTop;\n                    underlay.focus();\n                    el.scrollTop = oldTop;\n                    setTimeout(() => {\n                        el.scrollTop = oldTop;\n                    }, 2);\n                }, true);\n                el.appendChild(underlay);\n            }\n        }\n        focus() {\n            try {\n                const underlay = this.$element.querySelector('.gui-focus-element');\n                underlay.focus();\n            } catch (e) {\n                console.warn(e, e.stack);\n            }\n        }\n        blur() {\n            try {\n                const underlay = this.$element.querySelector('.gui-focus-element');\n                underlay.blur();\n            } catch (e) {\n                console.warn(e, e.stack);\n            }\n        }\n        values() {\n            return [];\n        }\n        on(evName, callback, params) {\n            if ([\n                    'activate',\n                    'select',\n                    'expand',\n                    'contextmenu',\n                    'render',\n                    'drop',\n                    'sort'\n                ].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/date',[],function () {\n    'use strict';\n    class ExtendedDate {\n        constructor(date) {\n            if (date) {\n                if (date instanceof Date) {\n                    this.date = date;\n                } else if (date instanceof ExtendedDate) {\n                    this.date = date.date;\n                } else if (typeof date === 'string') {\n                    this.date = new Date(date);\n                }\n            }\n            if (!this.date) {\n                this.date = new Date();\n            }\n        }\n        static get config() {\n            return { defaultFormat: 'isoDateTime' };\n        }\n        static get dayNames() {\n            return [\n                'Sun',\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thu',\n                'Fri',\n                'Sat',\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Saturday'\n            ];\n        }\n        static get monthNames() {\n            return [\n                'Jan',\n                'Feb',\n                'Mar',\n                'Apr',\n                'May',\n                'Jun',\n                'Jul',\n                'Aug',\n                'Sep',\n                'Oct',\n                'Nov',\n                'Dec',\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December'\n            ];\n        }\n        get() {\n            return this.date;\n        }\n        format(fmt) {\n            return ExtendedDate.format(this, fmt);\n        }\n        getFirstDayInMonth(fmt) {\n            return ExtendedDate.getFirstDayInMonth(fmt, null, null, this);\n        }\n        getLastDayInMonth(fmt) {\n            return ExtendedDate.getLastDayInMonth(fmt, null, null, this);\n        }\n        getDaysInMonth() {\n            return ExtendedDate.getDaysInMonth(null, null, this);\n        }\n        getWeekNumber() {\n            return ExtendedDate.getWeekNumber(this);\n        }\n        isWithinMonth(from, to) {\n            return ExtendedDate.isWithinMonth(this, from, to);\n        }\n        getDayOfTheYear() {\n            return ExtendedDate.getDayOfTheYear();\n        }\n        static format(date, fmt) {\n            return format(fmt, date);\n        }\n        static getPreviousMonth(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            let current;\n            if (now.getMonth() === 0) {\n                current = new Date(now.getFullYear() - 1, 11, now.getDate());\n            } else {\n                current = new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n            }\n            return new ExtendedDate(current);\n        }\n        static getNextMonth(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            let current;\n            if (now.getMonth() === 11) {\n                current = new Date(now.getFullYear() + 1, 0, now.getDate());\n            } else {\n                current = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n            }\n            return new ExtendedDate(current);\n        }\n        static getFirstDayInMonth(fmt, y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 1);\n            if (fmt === true) {\n                return date.getDate();\n            }\n            return fmt ? format(fmt, date) : new ExtendedDate(date);\n        }\n        static getLastDayInMonth(fmt, y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 0);\n            if (fmt === true) {\n                return date.getDate();\n            }\n            return fmt ? format(fmt, date) : new ExtendedDate(date);\n        }\n        static getDaysInMonth(y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 0);\n            return parseInt(date.getDate(), 10);\n        }\n        static getWeekNumber(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            const d = new Date(+now);\n            d.setHours(0, 0, 0);\n            d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n            return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 86400000 + 1) / 7);\n        }\n        static getDayName(index, shrt) {\n            if (index < 0 || index === null || typeof index === 'undefined') {\n                return filter(ExtendedDate.dayNames, index, shrt, 7);\n            }\n            shrt = shrt ? 0 : 1;\n            const idx = index + (shrt + 7);\n            return ExtendedDate.dayNames[idx];\n        }\n        static getMonthName(index, shrt) {\n            if (index < 0 || index === null || typeof index === 'undefined') {\n                return filter(ExtendedDate.monthNames, index, shrt, 12);\n            }\n            shrt = shrt ? 0 : 1;\n            const idx = index + (shrt + 12);\n            return ExtendedDate.monthNames[idx];\n        }\n        static isWithinMonth(now, from, to) {\n            if (now.getFullYear() >= from.getFullYear() && now.getMonth() >= from.getMonth()) {\n                if (now.getFullYear() <= to.getFullYear() && now.getMonth() <= to.getMonth()) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        static getDayOfTheYear() {\n            const now = new Date();\n            const start = new Date(now.getFullYear(), 0, 0);\n            const diff = now - start;\n            const oneDay = 1000 * 60 * 60 * 24;\n            return Math.floor(diff / oneDay);\n        }\n    };\n    const methods = [\n        'UTC',\n        'toString',\n        'now',\n        'parse',\n        'getDate',\n        'getDay',\n        'getFullYear',\n        'getHours',\n        'getMilliseconds',\n        'getMinutes',\n        'getMonth',\n        'getSeconds',\n        'getTime',\n        'getTimezoneOffset',\n        'getUTCDate',\n        'getUTCDay',\n        'getUTCFullYear',\n        'getUTCHours',\n        'getUTCMilliseconds',\n        'getUTCMinutes',\n        'getUTCMonth',\n        'getUTCSeconds',\n        'getYear',\n        'setDate',\n        'setFullYear',\n        'setHours',\n        'setMilliseconds',\n        'setMinutes',\n        'setMonth',\n        'setSeconds',\n        'setTime',\n        'setUTCDate',\n        'setUTCFullYear',\n        'setUTCHours',\n        'setUTCMilliseconds',\n        'setUTCMinutes',\n        'setUTCMonth',\n        'setUTCSeconds',\n        'setYear',\n        'toDateString',\n        'toGMTString',\n        'toISOString',\n        'toJSON',\n        'toLocaleDateString',\n        'toLocaleFormat',\n        'toLocaleString',\n        'toLocaleTimeString',\n        'toSource',\n        'toString',\n        'toTimeString',\n        'toUTCString',\n        'valueOf'\n    ];\n    methods.forEach(function (m) {\n        ExtendedDate.prototype[m] = function () {\n            return this.date[m].apply(this.date, arguments);\n        };\n    });\n    function formatDate(date, format, utc) {\n        utc = utc === true;\n        function pad(val, len) {\n            val = String(val);\n            len = len || 2;\n            while (val.length < len) {\n                val = '0' + val;\n            }\n            return val;\n        }\n        const defaultFormats = {\n            'default': 'Y-m-d H:i:s',\n            shortDate: 'm/d/y',\n            mediumDate: 'M d, Y',\n            longDate: 'F d, Y',\n            fullDate: 'l, F d, Y',\n            shortTime: 'h:i A',\n            mediumTime: 'h:i:s A',\n            longTime: 'h:i:s A T',\n            isoDate: 'Y-m-d',\n            isoTime: 'H:i:s',\n            isoDateTime: 'Y-m-d H:i:s'\n        };\n        format = defaultFormats[format] || format;\n        if (!(date instanceof ExtendedDate)) {\n            date = new ExtendedDate(date);\n        }\n        const map = {\n            d: function (s) {\n                return pad(map.j(s));\n            },\n            D: function (s) {\n                return ExtendedDate.dayNames[utc ? date.getUTCDay() : date.getDay()];\n            },\n            j: function (s) {\n                return utc ? date.getUTCDate() : date.getDate();\n            },\n            l: function (s) {\n                return ExtendedDate.dayNames[(utc ? date.getUTCDay() : date.getDay()) + 7];\n            },\n            w: function (s) {\n                return utc ? date.getUTCDay() : date.getDay();\n            },\n            z: function (s) {\n                return date.getDayOfTheYear();\n            },\n            S: function (s) {\n                const d = utc ? date.getUTCDate() : date.getDate();\n                return [\n                    'th',\n                    'st',\n                    'nd',\n                    'rd'\n                ][d % 10 > 3 ? 0 : (d % 100 - d % 10 !== 10) * d % 10];\n            },\n            W: function (s) {\n                return date.getWeekNumber();\n            },\n            F: function (s) {\n                return ExtendedDate.monthNames[(utc ? date.getUTCMonth() : date.getMonth()) + 12];\n            },\n            m: function (s) {\n                return pad(map.n(s));\n            },\n            M: function (s) {\n                return ExtendedDate.monthNames[utc ? date.getUTCMonth() : date.getMonth()];\n            },\n            n: function (s) {\n                return (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n            },\n            t: function (s) {\n                return date.getDaysInMonth();\n            },\n            Y: function (s) {\n                return utc ? date.getUTCFullYear() : date.getFullYear();\n            },\n            y: function (s) {\n                return String(map.Y(s)).slice(2);\n            },\n            a: function (s) {\n                return map.G(s) < 12 ? 'am' : 'pm';\n            },\n            A: function (s) {\n                return map.a(s).toUpperCase();\n            },\n            g: function (s) {\n                return map.G(s) % 12 || 12;\n            },\n            G: function (s) {\n                return utc ? date.getUTCHours() : date.getHours();\n            },\n            h: function (s) {\n                return pad(map.g(s));\n            },\n            H: function (s) {\n                return pad(map.G(s));\n            },\n            i: function (s) {\n                return pad(utc ? date.getUTCMinutes() : date.getMinutes());\n            },\n            s: function (s) {\n                return pad(utc ? date.getUTCSeconds() : date.getSeconds());\n            },\n            O: function (s) {\n                const tzo = -date.getTimezoneOffset();\n                const dif = tzo >= 0 ? '+' : '-';\n                function ppad(num) {\n                    const norm = Math.abs(Math.floor(num));\n                    return (norm < 10 ? '0' : '') + norm;\n                }\n                const str = dif + ppad(tzo / 60) + ':' + ppad(tzo % 60);\n                return str;\n            },\n            T: function (s) {\n                if (utc) {\n                    return 'UTC';\n                }\n                const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n                const zones = String(date.date).match(timezone) || [''];\n                return zones.pop().replace(/(\\+|\\-)[0-9]+$/, '');\n            },\n            U: function (s) {\n                return date.getTime();\n            }\n        };\n        const result = [];\n        format.split('').forEach(function (s) {\n            result.push(map[s] ? map[s]() : s);\n        });\n        return result.join('');\n    }\n\n    function filter(from, index, shrt, toindex) {\n        const list = [];\n        for (let i = shrt ? 0 : toindex; i < from.length; i++) {\n            list.push(from[i]);\n        }\n        return list;\n    }\n    function format(fmt, date) {\n        let utc;\n        if (typeof fmt === 'undefined' || !fmt) {\n            fmt = ExtendedDate.config.defaultFormat;\n        } else {\n            if (typeof fmt !== 'string') {\n                utc = fmt.utc;\n                fmt = fmt.format;\n            } else {\n                utc = ExtendedDate.config.utc;\n            }\n        }\n        return formatDate(date, fmt, utc);\n    }\n    function _now(now) {\n        return now ? now instanceof ExtendedDate ? now.date : now : new Date();\n    }\n    function _y(y, now) {\n        return typeof y === 'undefined' || y === null || y < 0 ? now.getFullYear() : y;\n    }\n    function _m(m, now) {\n        return typeof m === 'undefined' || m === null || m < 0 ? now.getMonth() : m;\n    }\n    return ExtendedDate;\n});\ndefine('skylark-osjsv2-client/gui/elements/fileview',[\n    '../../utils/fs',\n    '../../vfs/fs',\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/misc',\n    '../../utils/events',\n    '../menu',\n    '../element',\n    '../dataview',\n    '../../core/package-manager',\n    '../../core/settings-manager',\n    '../../vfs/file',\n    '../../helpers/date',\n    '../../core/theme',\n    '../../core/locales',\n    '../../core/config'\n], function (\n    FS, \n    VFS, \n    DOM, \n    GUI, \n    Utils, \n    Events, \n    Menu, \n    GUIElement, \n    GUIDataView, \n    PackageManager, \n    SettingsManager, \n    FileMetadata, \n    DateExtended, \n    Theme, \n    Locales, \n    Config\n) {\n    'use strict';\n    let _iconSizes = { 'gui-icon-view': '32x32' };\n    function getFileIcon(iter, size) {\n        if (iter.icon && typeof iter.icon === 'object') {\n            if (iter.icon.application) {\n                return PackageManager.getPackageResource(iter.icon.filename, iter.icon.application);\n            }\n            return Theme.getIcon(iter.icon.filename, size, iter.icon.application);\n        }\n        const icon = 'status/dialog-question.png';\n        return Theme.getFileIcon(iter, size, icon);\n    }\n    function getFileSize(iter) {\n        let filesize = '';\n        if (iter.type !== 'dir' && iter.size >= 0) {\n            filesize = FS.humanFileSize(iter.size);\n        }\n        return filesize;\n    }\n    const removeExtension = (() => {\n        let mimeConfig;\n        return (str, opts) => {\n            if (!mimeConfig) {\n                mimeConfig = Config.getConfig('MIME.mapping');\n            }\n            if (opts.extensions === false) {\n                let ext = FS.filext(str);\n                if (ext) {\n                    ext = '.' + ext;\n                    if (mimeConfig[ext]) {\n                        str = str.substr(0, str.length - ext.length);\n                    }\n                }\n            }\n            return str;\n        };\n    })();\n    function getDateFromStamp(stamp) {\n        if (typeof stamp === 'string') {\n            let date = null;\n            try {\n                date = new Date(stamp);\n            } catch (e) {\n            }\n            if (date) {\n                return DateExtended.format(date);\n            }\n        }\n        return stamp;\n    }\n    function getListViewColumns(cls, iter, opts) {\n        opts = opts || {};\n        const columnMapping = {\n            filename: {\n                label: 'LBL_FILENAME',\n                icon: () => {\n                    return getFileIcon(iter);\n                },\n                value: () => {\n                    return removeExtension(iter.filename, opts);\n                }\n            },\n            mime: {\n                label: 'LBL_MIME',\n                size: '100px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return iter.mime;\n                }\n            },\n            mtime: {\n                label: 'LBL_MODIFIED',\n                size: '160px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getDateFromStamp(iter.mtime);\n                }\n            },\n            ctime: {\n                label: 'LBL_CREATED',\n                size: '160px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getDateFromStamp(iter.ctime);\n                }\n            },\n            size: {\n                label: 'LBL_SIZE',\n                size: '120px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getFileSize(iter);\n                }\n            }\n        };\n        let defColumns = [\n            'filename',\n            'mime',\n            'size'\n        ];\n        let useColumns = defColumns;\n        if (!opts.defaultcolumns) {\n            const vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n            const scandirOptions = vfsOptions.scandir || {};\n            useColumns = scandirOptions.columns || defColumns;\n        }\n        const columns = [];\n        const sortBy = cls.$element.getAttribute('data-sortby');\n        const sortDir = cls.$element.getAttribute('data-sortdir');\n        useColumns.forEach((key, idx) => {\n            const map = columnMapping[key];\n            if (iter) {\n                columns.push({\n                    sortBy: key,\n                    label: map.value(),\n                    icon: map.icon(),\n                    textalign: idx === 0 ? 'left' : 'right'\n                });\n            } else {\n                columns.push({\n                    sortBy: key,\n                    sortDir: key === sortBy ? sortDir : null,\n                    label: Locales._(map.label),\n                    size: map.size || '',\n                    resizable: idx > 0,\n                    textalign: idx === 0 ? 'left' : 'right'\n                });\n            }\n        });\n        return columns;\n    }\n    function scandir(dir, opts, cb, oncreate) {\n        const file = new FileMetadata(dir);\n        file.type = 'dir';\n        const scanopts = {\n            backlink: opts.backlink,\n            showDotFiles: opts.dotfiles === true,\n            showFileExtensions: opts.extensions === true,\n            mimeFilter: opts.filter || [],\n            typeFilter: opts.filetype || null,\n            sortBy: opts.sortby,\n            sortDir: opts.sortdir\n        };\n        VFS.scandir(file, scanopts).then(result => {\n            const list = [];\n            const summary = {\n                size: 0,\n                directories: 0,\n                files: 0,\n                hidden: 0\n            };\n            function isHidden(iter) {\n                return (iter.filename || '').substr(0) === '.';\n            }\n            (result || []).forEach(iter => {\n                list.push(oncreate(iter));\n                summary.size += iter.size || 0;\n                summary.directories += iter.type === 'dir' ? 1 : 0;\n                summary.files += iter.type !== 'dir' ? 1 : 0;\n                summary.hidden += isHidden(iter) ? 1 : 0;\n            });\n            cb(false, list, summary);\n        }).catch(cb);\n    }\n    function readdir(cls, dir, done, sopts) {\n        const childView = cls.getChildView();\n        if (!childView) {\n            return;\n        }\n        sopts = sopts || {};\n        const vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n        const scandirOptions = vfsOptions.scandir || {};\n        const el = cls.$element;\n        const target = childView.$element;\n        const tagName = target.tagName.toLowerCase();\n        el.setAttribute('data-path', dir);\n        const opts = {\n            filter: null,\n            backlink: sopts.backlink\n        };\n        function setOption(s, d, c, cc) {\n            if (el.hasAttribute(s)) {\n                opts[d] = c(el.getAttribute(s));\n            } else {\n                opts[d] = (cc || function () {\n                })();\n            }\n        }\n        setOption('data-sortby', 'sortby', val => {\n            return val;\n        });\n        setOption('data-sortdir', 'sortdir', val => {\n            return val;\n        });\n        setOption('data-dotfiles', 'dotfiles', val => {\n            return val === 'true';\n        }, () => {\n            return scandirOptions.showHiddenFiles === true;\n        });\n        setOption('data-extensions', 'extensions', val => {\n            return val === 'true';\n        }, () => {\n            return scandirOptions.showFileExtensions === true;\n        });\n        setOption('data-filetype', 'filetype', val => {\n            return val;\n        });\n        setOption('data-defaultcolumns', 'defaultcolumns', val => {\n            return val === 'true';\n        });\n        try {\n            opts.filter = JSON.parse(el.getAttribute('data-filter'));\n        } catch (e) {\n        }\n        scandir(dir, opts, (error, result, summary) => {\n            if (tagName === 'gui-list-view') {\n                cls.getChildView().set('zebra', true);\n                if (sopts.headers !== false) {\n                    cls.getChildView().set('columns', getListViewColumns(cls, null, opts));\n                }\n            }\n            done(error, result, summary);\n        }, iter => {\n            const tooltip = Utils.format('{0}\\n{1}\\n{2} {3}', iter.type.toUpperCase(), iter.filename, getFileSize(iter), iter.mime || '');\n            function _createEntry() {\n                const row = {\n                    value: iter,\n                    id: iter.id || removeExtension(iter.filename, opts),\n                    label: iter.filename,\n                    tooltip: tooltip,\n                    icon: getFileIcon(iter, _iconSizes[tagName] || '16x16')\n                };\n                if (tagName === 'gui-tree-view' && iter.type === 'dir') {\n                    if (iter.filename !== '..') {\n                        row.entries = [{ label: 'Loading...' }];\n                    }\n                }\n                return row;\n            }\n            if (tagName !== 'gui-list-view') {\n                return _createEntry();\n            }\n            return {\n                value: iter,\n                id: iter.id || iter.filename,\n                tooltip: tooltip,\n                columns: getListViewColumns(cls, iter, opts)\n            };\n        });\n    }\n    class GUIFileView extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-file-view' }, this);\n        }\n        on(evName, callback, params) {\n            if ([\n                    'activate',\n                    'select',\n                    'contextmenu',\n                    'sort'\n                ].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            const el = this.$element;\n            if (evName === '_contextmenu') {\n                el.setAttribute('data-has-contextmenu', 'true');\n            }\n            Events.$bind(el, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            if (param === 'type') {\n                const firstChild = el.children[0];\n                if (firstChild && firstChild.tagName.toLowerCase() === value) {\n                    return true;\n                }\n                el.setAttribute('data-type', value);\n                this.buildChildView();\n                if (typeof arg === 'undefined' || arg === true) {\n                    this.chdir({ path: el.getAttribute('data-path') });\n                }\n                return this;\n            } else if ([\n                    'filter',\n                    'dotfiles',\n                    'filetype',\n                    'extensions',\n                    'defaultcolumns',\n                    'sortby',\n                    'sortdir'\n                ].indexOf(param) >= 0) {\n                GUI.setProperty(el, param, value);\n                return this;\n            }\n            const childView = this.getChildView();\n            if (childView) {\n                return childView.set.apply(childView, arguments);\n            }\n            return GUIDataView.prototype.set.apply(this, arguments);\n        }\n        build() {\n            if (this.childView) {\n                return this;\n            }\n            this.buildChildView();\n            const el = this.$element;\n            Events.$bind(el, '_expand', ev => {\n                const target = ev.detail.element;\n                if (target.getAttribute('data-was-rendered')) {\n                    return;\n                }\n                if (ev.detail.expanded) {\n                    const entry = ev.detail.entries[0].data;\n                    target.setAttribute('data-was-rendered', String(true));\n                    readdir(this, entry.path, (error, result, summary) => {\n                        if (!error) {\n                            target.querySelectorAll('gui-tree-view-entry').forEach(e => {\n                                DOM.$remove(e);\n                            });\n                            const childView = this.getChildView();\n                            if (childView) {\n                                childView.add({\n                                    entries: result,\n                                    parentNode: target\n                                });\n                            }\n                        }\n                    }, { backlink: false });\n                }\n            });\n            return this;\n        }\n        values() {\n            const childView = this.getChildView();\n            if (childView) {\n                return childView.values();\n            }\n            return null;\n        }\n        contextmenu(ev) {\n            const vfsOptions = SettingsManager.instance('VFS');\n            const scandirOptions = vfsOptions.get('scandir') || {};\n            function setOption(opt, toggle) {\n                const opts = { scandir: {} };\n                opts.scandir[opt] = toggle;\n                vfsOptions.set(null, opts, true);\n            }\n            Menu.create([\n                {\n                    title: Locales._('LBL_SHOW_HIDDENFILES'),\n                    type: 'checkbox',\n                    checked: scandirOptions.showHiddenFiles === true,\n                    onClick: () => {\n                        setOption('showHiddenFiles', !scandirOptions.showHiddenFiles);\n                    }\n                },\n                {\n                    title: Locales._('LBL_SHOW_FILEEXTENSIONS'),\n                    type: 'checkbox',\n                    checked: scandirOptions.showFileExtensions === true,\n                    onClick: () => {\n                        setOption('showFileExtensions', !scandirOptions.showFileExtensions);\n                    }\n                }\n            ], ev);\n        }\n        chdir(args) {\n            let childView = this.getChildView();\n            if (!childView) {\n                childView = this.buildChildView();\n            }\n            const cb = args.done || function () {\n            };\n            const dir = args.path || Config.getDefaultPath();\n            const child = childView;\n            const el = this.$element;\n            clearTimeout(el._readdirTimeout);\n            el._readdirTimeout = setTimeout(() => {\n                readdir(this, dir, (error, result, summary) => {\n                    if (error) {\n                        OSjs.error(Locales._('ERR_VFSMODULE_XHR_ERROR'), Locales._('ERR_VFSMODULE_SCANDIR_FMT', dir), error);\n                    } else {\n                        child.clear();\n                        child.add(result);\n                    }\n                    cb(error, summary);\n                }, args.opts);\n            }, 50);\n        }\n        getChildViewType() {\n            let type = this.$element.getAttribute('data-type') || 'list-view';\n            if (!type.match(/^gui\\-/)) {\n                type = 'gui-' + type;\n            }\n            return type;\n        }\n        getChildView() {\n            return GUIElement.createFromNode(this.$element.children[0]);\n        }\n        buildChildView() {\n            const el = this.$element;\n            const type = this.getChildViewType();\n            const childView = this.getChildView();\n            if (childView) {\n                if (childView.$element && childView.$element.tagName.toLowerCase() === type) {\n                    return null;\n                }\n            }\n            DOM.$empty(el);\n            const nel = GUIElement.create(type, {\n                'draggable': true,\n                'draggable-type': 'file'\n            });\n            nel.build();\n            nel.on('select', ev => {\n                el.dispatchEvent(new CustomEvent('_select', { detail: ev.detail }));\n            });\n            nel.on('activate', ev => {\n                el.dispatchEvent(new CustomEvent('_activate', { detail: ev.detail }));\n            });\n            nel.on('sort', ev => {\n                el.setAttribute('data-sortby', String(ev.detail.sortBy));\n                el.setAttribute('data-sortdir', String(ev.detail.sortDir));\n                this.chdir({\n                    sopts: { headers: false },\n                    path: el.getAttribute('data-path')\n                });\n                el.dispatchEvent(new CustomEvent('_sort', { detail: ev.detail }));\n            });\n            nel.on('contextmenu', ev => {\n                if (!el.hasAttribute('data-has-contextmenu') || el.hasAttribute('data-has-contextmenu') === 'false') {\n                    this.contextmenu(ev);\n                }\n                el.dispatchEvent(new CustomEvent('_contextmenu', { detail: ev.detail }));\n            });\n            if (type === 'gui-tree-view') {\n                nel.on('expand', ev => {\n                    el.dispatchEvent(new CustomEvent('_expand', { detail: ev.detail }));\n                });\n            }\n            el.setAttribute('role', 'region');\n            el.appendChild(nel.$element);\n            return nel;\n        }\n    }\n    return { GUIFileView: GUIFileView };\n});\ndefine('skylark-osjsv2-client/gui/elements/iconview',[\n    '../../utils/gui',\n    '../dataview'\n], function (GUI, GUIDataView) {\n    'use strict';\n    function createEntry(cls, e) {\n        const entry = GUI.createElement('gui-icon-view-entry', e);\n        return entry;\n    }\n    function initEntry(cls, cel) {\n        const icon = cel.getAttribute('data-icon');\n        const label = GUI.getLabel(cel);\n        const dicon = document.createElement('div');\n        const dimg = document.createElement('img');\n        dimg.src = icon;\n        dicon.appendChild(dimg);\n        const dlabel = document.createElement('div');\n        const dspan = document.createElement('span');\n        dspan.appendChild(document.createTextNode(label));\n        dlabel.appendChild(dspan);\n        cls.bindEntryEvents(cel, 'gui-icon-view-entry');\n        cel.setAttribute('role', 'listitem');\n        cel.appendChild(dicon);\n        cel.appendChild(dlabel);\n    }\n    class GUIIconView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-icon-view'\n            }, this);\n        }\n        values() {\n            return this.getSelected(this.$element.querySelectorAll('gui-icon-view-entry'));\n        }\n        build() {\n            const el = this.$element;\n            let body = el.querySelector('gui-icon-view-body');\n            const found = !!body;\n            if (!found) {\n                body = document.createElement('gui-icon-view-body');\n                el.appendChild(body);\n            }\n            el.querySelectorAll('gui-icon-view-entry').forEach((cel, idx) => {\n                if (!found) {\n                    body.appendChild(cel);\n                }\n                initEntry(this, cel);\n            });\n            el.setAttribute('role', 'list');\n            return super.build(...arguments);\n        }\n        get(param, value, arg, asValue) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-icon-view-body');\n                const rows = body.querySelectorAll('gui-icon-view-entry');\n                return this.getEntry(rows, value, arg, asValue);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            if (param === 'selected' || param === 'value') {\n                if (body) {\n                    this.setSelected(body, body.querySelectorAll('gui-icon-view-entry'), value, arg);\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.add(entries, (cls, e) => {\n                const entry = createEntry(this, e);\n                body.appendChild(entry);\n                initEntry(this, entry);\n            });\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.clear(body);\n        }\n        remove(entries) {\n            return super.remove(entries, 'gui-icon-view-entry');\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.patch(entries, 'gui-icon-view-entry', body, createEntry, initEntry);\n        }\n    }\n    return { GUIIconView: GUIIconView };\n});\ndefine('skylark-osjsv2-client/gui/elements/inputs',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/clipboard',\n    '../../utils/events',\n    '../../utils/keycodes',\n    '../element',\n    '../../core/locales'\n], function (DOM, GUI, Clipboard, Events, Keycodes, GUIElement, locales) {\n    'use strict';\n    let _buttonCount = 0;\n    function createInputOfType(el, type) {\n        const group = el.getAttribute('data-group');\n        const placeholder = el.getAttribute('data-placeholder');\n        const disabled = String(el.getAttribute('data-disabled')) === 'true';\n        const value = el.childNodes.length ? el.childNodes[0].nodeValue : null;\n        DOM.$empty(el);\n        const input = document.createElement(type === 'textarea' ? 'textarea' : 'input');\n        const attribs = {\n            value: null,\n            type: type,\n            tabindex: -1,\n            placeholder: placeholder,\n            disabled: disabled ? 'disabled' : null,\n            name: group ? group + '[]' : null\n        };\n        [\n            'autocomplete',\n            'autocorrect',\n            'autocapitalize',\n            'spellcheck'\n        ].forEach(a => {\n            attribs[a] = el.getAttribute('data-' + a) || 'false';\n        });\n        function _bindDefaults() {\n            if ([\n                    'range',\n                    'slider'\n                ].indexOf(type) >= 0) {\n                attribs.min = el.getAttribute('data-min');\n                attribs.max = el.getAttribute('data-max');\n                attribs.step = el.getAttribute('data-step');\n            } else if ([\n                    'radio',\n                    'checkbox'\n                ].indexOf(type) >= 0) {\n                if (el.getAttribute('data-value') === 'true') {\n                    attribs.checked = 'checked';\n                }\n            } else if ([\n                    'text',\n                    'password',\n                    'textarea'\n                ].indexOf(type) >= 0) {\n                attribs.value = value || '';\n            }\n            Object.keys(attribs).forEach(a => {\n                if (attribs[a] !== null) {\n                    if (a === 'value') {\n                        input.value = attribs[a];\n                    } else {\n                        input.setAttribute(a, attribs[a]);\n                    }\n                }\n            });\n        }\n        function _bindEvents() {\n            if (type === 'text' || type === 'password' || type === 'textarea') {\n                Events.$bind(input, 'keydown', ev => {\n                    if (ev.keyCode === Keycodes.ENTER) {\n                        input.dispatchEvent(new CustomEvent('_enter', { detail: input.value }));\n                    } else if (ev.keyCode === Keycodes.C && ev.ctrlKey) {\n                        Clipboard.setClipboard(input.value);\n                    }\n                    if (type === 'textarea' && ev.keyCode === Keycodes.TAB) {\n                        ev.preventDefault();\n                        input.value += '\\t';\n                    }\n                }, false);\n            }\n        }\n        function _create() {\n            _bindDefaults();\n            _bindEvents();\n            GUI.createInputLabel(el, type, input);\n            const rolemap = {\n                'TEXTAREA': () => {\n                    return 'textbox';\n                },\n                'INPUT': i => {\n                    const typemap = {\n                        'range': 'slider',\n                        'text': 'textbox',\n                        'password': 'textbox'\n                    };\n                    return typemap[i.type] || i.type;\n                }\n            };\n            if (rolemap[el.tagName]) {\n                input.setAttribute('role', rolemap[el.tagName](input));\n            }\n            input.setAttribute('aria-label', el.getAttribute('title') || '');\n            el.setAttribute('role', 'region');\n            el.setAttribute('aria-disabled', String(disabled));\n            Events.$bind(input, 'change', ev => {\n                let value = input.value;\n                if (type === 'radio' || type === 'checkbox') {\n                    value = input.checked;\n                }\n                input.dispatchEvent(new CustomEvent('_change', { detail: value }));\n            }, false);\n        }\n        _create();\n    }\n    function addToSelectBox(el, entries) {\n        const target = el.querySelector('select');\n        if (!(entries instanceof Array)) {\n            entries = [entries];\n        }\n        entries.forEach(e => {\n            const opt = document.createElement('option');\n            opt.setAttribute('role', 'option');\n            opt.setAttribute('value', e.value);\n            opt.appendChild(document.createTextNode(e.label));\n            target.appendChild(opt);\n        });\n    }\n    function removeFromSelectBox(el, what) {\n        const target = el.querySelector('select');\n        target.querySelectorAll('option').forEach(opt => {\n            if (String(opt.value) === String(what)) {\n                DOM.$remove(opt);\n                return false;\n            }\n            return true;\n        });\n    }\n    function createSelectInput(el, multiple) {\n        const disabled = el.getAttribute('data-disabled') !== null;\n        const selected = el.getAttribute('data-selected');\n        const select = document.createElement('select');\n        if (multiple) {\n            select.setAttribute('size', el.getAttribute('data-size') || 2);\n            multiple = el.getAttribute('data-multiple') === 'true';\n        }\n        if (multiple) {\n            select.setAttribute('multiple', 'multiple');\n        }\n        if (disabled) {\n            select.setAttribute('disabled', 'disabled');\n        }\n        if (selected !== null) {\n            select.selectedIndex = selected;\n        }\n        el.querySelectorAll('gui-select-option').forEach(sel => {\n            const value = sel.getAttribute('data-value') || '';\n            const label = sel.childNodes.length ? sel.childNodes[0].nodeValue : '';\n            const option = document.createElement('option');\n            option.setAttribute('role', 'option');\n            option.setAttribute('value', value);\n            option.appendChild(document.createTextNode(label));\n            if (sel.getAttribute('selected')) {\n                option.setAttribute('selected', 'selected');\n            }\n            select.appendChild(option);\n            sel.parentNode.removeChild(sel);\n        });\n        Events.$bind(select, 'change', ev => {\n            select.dispatchEvent(new CustomEvent('_change', { detail: select.value }));\n        }, false);\n        select.setAttribute('role', 'listbox');\n        select.setAttribute('aria-label', el.getAttribute('title') || '');\n        el.setAttribute('aria-disabled', String(disabled));\n        el.setAttribute('role', 'region');\n        el.appendChild(select);\n    }\n    function setSwitchValue(val, input, button) {\n        if (val !== true) {\n            input.removeAttribute('checked');\n            DOM.$removeClass(button, 'gui-active');\n            button.innerHTML = '0';\n        } else {\n            input.setAttribute('checked', 'checked');\n            DOM.$addClass(button, 'gui-active');\n            button.innerHTML = '1';\n        }\n    }\n    class _GUIInput extends GUIElement {\n        on(evName, callback, params) {\n            if (evName === 'enter') {\n                evName = '_enter';\n            } else if (evName === 'change') {\n                evName = '_change';\n            }\n            const target = this.$element.querySelector('textarea, input, select');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n    }\n    class GUILabel extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-label' }, this);\n        }\n        set(param, value, isHTML) {\n            const el = this.$element;\n            if (param === 'value' || param === 'label') {\n                el.setAttribute('data-label', String(value));\n                const lbl = el.querySelector('label');\n                DOM.$empty(lbl);\n                if (isHTML) {\n                    lbl.innerHTML = value;\n                } else {\n                    lbl.appendChild(document.createTextNode(value));\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const label = GUI.getValueLabel(el, true);\n            const lbl = document.createElement('label');\n            lbl.appendChild(document.createTextNode(label));\n            el.setAttribute('role', 'heading');\n            el.setAttribute('data-label', String(label));\n            el.appendChild(lbl);\n            return this;\n        }\n    }\n    class GUITextarea extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-textarea',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'textarea');\n            return this;\n        }\n        set(param, value) {\n            const el = this.$element;\n            if (el && param === 'scrollTop') {\n                if (typeof value !== 'number') {\n                    value = el.firstChild.scrollHeight;\n                }\n                el.firstChild.scrollTop = value;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n    }\n    class GUIText extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-text',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'text');\n            return this;\n        }\n    }\n    class GUIPassword extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-password',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'password');\n            return this;\n        }\n    }\n    class GUIFileUpload extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-file-upload',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            const input = document.createElement('input');\n            input.setAttribute('role', 'button');\n            input.setAttribute('type', 'file');\n            input.onchange = ev => {\n                input.dispatchEvent(new CustomEvent('_change', { detail: input.files[0] }));\n            };\n            this.$element.appendChild(input);\n            return this;\n        }\n    }\n    class GUIRadio extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-radio',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'radio');\n            return this;\n        }\n    }\n    class GUICheckbox extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-checkbox',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'checkbox');\n            return this;\n        }\n    }\n    class GUISwitch extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-switch',\n                type: 'input'\n            }, this);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                const button = this.$element.querySelector('button');\n                setSwitchValue(value, input, button);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const input = document.createElement('input');\n            input.type = 'checkbox';\n            el.appendChild(input);\n            const inner = document.createElement('div');\n            const button = document.createElement('button');\n            inner.appendChild(button);\n            GUI.createInputLabel(el, 'switch', inner);\n            function toggleValue(v) {\n                let val = false;\n                if (typeof v === 'undefined') {\n                    val = !!input.checked;\n                    val = !val;\n                } else {\n                    val = v;\n                }\n                setSwitchValue(val, input, button);\n            }\n            Events.$bind(inner, 'pointerup', ev => {\n                ev.preventDefault();\n                const disabled = el.getAttribute('data-disabled') !== null;\n                if (!disabled) {\n                    toggleValue();\n                }\n            }, false);\n            toggleValue(false);\n            return this;\n        }\n    }\n    class GUIButton extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-button',\n                type: 'input'\n            }, this);\n        }\n        set(param, value, isHTML) {\n            if (param === 'value' || param === 'label') {\n                const lbl = this.$element.querySelector('button');\n                DOM.$empty(lbl);\n                if (isHTML) {\n                    lbl.innerHTML = value;\n                } else {\n                    lbl.appendChild(document.createTextNode(value));\n                }\n                lbl.setAttribute('aria-label', value);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        create(params) {\n            const label = params.label;\n            if (params.label) {\n                delete params.label;\n            }\n            const el = GUI.createElement('gui-button', params);\n            if (label) {\n                el.appendChild(document.createTextNode(label));\n            }\n            return el;\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('button');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const icon = el.getAttribute('data-icon');\n            const disabled = el.getAttribute('data-disabled') !== null;\n            const group = el.getAttribute('data-group');\n            const label = GUI.getValueLabel(el);\n            const input = document.createElement('button');\n            function setGroup(g) {\n                if (g) {\n                    input.setAttribute('name', g + '[' + _buttonCount + ']');\n                    Events.$bind(input, 'pointerup', () => {\n                        let root = el;\n                        while (root.parentNode) {\n                            if (root.tagName.toLowerCase() === 'application-window-content') {\n                                break;\n                            }\n                            root = root.parentNode;\n                        }\n                        DOM.$addClass(input, 'gui-active');\n                        root.querySelectorAll('gui-button[data-group=\"' + g + '\"] > button').forEach(b => {\n                            if (b.name === input.name) {\n                                return;\n                            }\n                            DOM.$removeClass(b, 'gui-active');\n                        });\n                    });\n                }\n            }\n            function setImage() {\n                if (icon && icon !== 'null') {\n                    const tip = locales._(el.getAttribute('data-tooltip') || '');\n                    const img = document.createElement('img');\n                    img.src = icon;\n                    img.alt = tip;\n                    img.title = tip;\n                    if (input.firstChild) {\n                        input.insertBefore(img, input.firstChild);\n                    } else {\n                        input.appendChild(img);\n                    }\n                    DOM.$addClass(el, 'gui-has-image');\n                }\n            }\n            function setLabel() {\n                if (label) {\n                    DOM.$addClass(el, 'gui-has-label');\n                }\n                input.appendChild(document.createTextNode(label));\n                input.setAttribute('aria-label', label);\n            }\n            if (disabled) {\n                input.setAttribute('disabled', 'disabled');\n            }\n            setLabel();\n            setImage();\n            setGroup(group);\n            _buttonCount++;\n            el.setAttribute('role', 'navigation');\n            el.appendChild(input);\n            return this;\n        }\n    }\n    class _GUISelect extends _GUIInput {\n        add(arg) {\n            addToSelectBox(this.$element, arg);\n            return this;\n        }\n        remove(arg) {\n            removeFromSelectBox(this.$element, arg);\n            return this;\n        }\n        clear() {\n            const target = this.$element.querySelector('select');\n            DOM.$empty(target);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const multiple = el.tagName.toLowerCase() === 'gui-select-list';\n            createSelectInput(el, multiple);\n            return this;\n        }\n    }\n    class GUISelect extends _GUISelect {\n        static register() {\n            return super.register({\n                tagName: 'gui-select',\n                type: 'input'\n            }, this);\n        }\n    }\n    class GUISelectList extends _GUISelect {\n        static register() {\n            return super.register({\n                tagName: 'gui-select-list',\n                type: 'input'\n            }, this);\n        }\n    }\n    class GUISlider extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-slider',\n                type: 'input'\n            }, this);\n        }\n        get(param) {\n            const val = GUIElement.getProperty(this.$element, param); // modified by lwf\n            if (param === 'value') {\n                return parseInt(val, 10);\n            }\n            return val;\n        }\n        build() {\n            createInputOfType(this.$element, 'range');\n            return this;\n        }\n    }\n    class GUIInputModal extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-input-modal',\n                type: 'input'\n            }, this);\n        }\n        on(evName, callback, params) {\n            if (evName === 'open') {\n                evName = '_open';\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        get(param) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                return input.value;\n            }\n            return super.get(...arguments);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                input.removeAttribute('disabled');\n                input.value = value;\n                input.setAttribute('disabled', 'disabled');\n                input.setAttribute('aria-disabled', 'true');\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const container = document.createElement('div');\n            const input = document.createElement('input');\n            input.type = 'text';\n            input.setAttribute('disabled', 'disabled');\n            const button = document.createElement('button');\n            button.innerHTML = '...';\n            Events.$bind(button, 'pointerup', ev => {\n                el.dispatchEvent(new CustomEvent('_open', { detail: input.value }));\n            }, false);\n            container.appendChild(input);\n            container.appendChild(button);\n            el.appendChild(container);\n            return this;\n        }\n    }\n    return {\n        GUILabel: GUILabel,\n        GUITextarea: GUITextarea,\n        GUIText: GUIText,\n        GUIPassword: GUIPassword,\n        GUIFileUpload: GUIFileUpload,\n        GUIRadio: GUIRadio,\n        GUICheckbox: GUICheckbox,\n        GUISwitch: GUISwitch,\n        GUIButton: GUIButton,\n        GUISelect: GUISelect,\n        GUISelectList: GUISelectList,\n        GUISlider: GUISlider,\n        GUIInputModal: GUIInputModal\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/listview',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../dataview'\n], function (DOM, GUI, Events, GUIDataView) {\n    'use strict';\n    function createFakeHeader(el) {\n        function createResizers() {\n            const fhead = el.querySelector('gui-list-view-fake-head');\n            const head = el.querySelector('gui-list-view-head');\n            const fcols = fhead.querySelectorAll('gui-list-view-column');\n            const cols = head.querySelectorAll('gui-list-view-column');\n            fhead.querySelectorAll('gui-list-view-column-resizer').forEach(rel => {\n                DOM.$remove(rel);\n            });\n            cols.forEach((col, idx) => {\n                const attr = col.getAttribute('data-resizable');\n                if (attr === 'true') {\n                    const fcol = fcols[idx];\n                    const resizer = document.createElement('gui-list-view-column-resizer');\n                    fcol.appendChild(resizer);\n                    let startWidth = 0;\n                    let maxWidth = 0;\n                    let widthOffset = 16;\n                    let minWidth = widthOffset;\n                    let tmpEl = null;\n                    GUI.createDrag(resizer, ev => {\n                        startWidth = col.offsetWidth;\n                        minWidth = widthOffset;\n                        maxWidth = el.offsetWidth - el.children.length * widthOffset;\n                    }, (ev, diff) => {\n                        const newWidth = startWidth - diff.x;\n                        if (!isNaN(newWidth) && newWidth > minWidth && newWidth < maxWidth) {\n                            col.style.width = String(newWidth) + 'px';\n                            fcol.style.width = String(newWidth) + 'px';\n                        }\n                        tmpEl = DOM.$remove(tmpEl);\n                    });\n                }\n            });\n        }\n        const fh = el.querySelector('gui-list-view-fake-head gui-list-view-head');\n        DOM.$empty(fh);\n        const row = el.querySelector('gui-list-view-head gui-list-view-row');\n        if (row) {\n            fh.appendChild(row.cloneNode(true));\n            createResizers();\n        }\n    }\n    function initRow(cls, row) {\n        const el = cls.$element;\n        row.querySelectorAll('gui-list-view-column').forEach((cel, idx) => {\n            const icon = cel.getAttribute('data-icon');\n            if (icon && icon !== 'null') {\n                DOM.$addClass(cel, 'gui-has-image');\n                cel.style.backgroundImage = 'url(' + icon + ')';\n            }\n            const text = cel.firstChild;\n            if (text && text.nodeType === 3) {\n                const span = document.createElement('span');\n                span.appendChild(document.createTextNode(text.nodeValue));\n                cel.insertBefore(span, text);\n                cel.removeChild(text);\n            }\n            if (el._columns[idx] && !el._columns[idx].visible) {\n                cel.style.display = 'none';\n            }\n            cel.setAttribute('role', 'listitem');\n        });\n        cls.bindEntryEvents(row, 'gui-list-view-row');\n    }\n    function createEntry(cls, v, head) {\n        const label = v.label || '';\n        if (v.label) {\n            delete v.label;\n        }\n        let setSize = null;\n        if (v.size) {\n            setSize = v.size;\n            delete v.size;\n        }\n        const nel = GUI.createElement('gui-list-view-column', v);\n        if (setSize) {\n            nel.style.width = setSize;\n        }\n        if (typeof label === 'function') {\n            nel.appendChild(label.call(nel, nel, v));\n        } else {\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(label));\n            nel.appendChild(span);\n        }\n        return nel;\n    }\n    function createRow(cls, e) {\n        e = e || {};\n        if (e.columns) {\n            const row = GUI.createElement('gui-list-view-row', e, ['columns']);\n            e.columns.forEach(se => {\n                row.appendChild(createEntry(cls, se));\n            });\n            return row;\n        }\n        return null;\n    }\n    class GUIListView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-list-view'\n            }, this);\n        }\n        values() {\n            const body = this.$element.querySelector('gui-list-view-body');\n            const values = this.getSelected(body.querySelectorAll('gui-list-view-row'));\n            return values;\n        }\n        get(param, value, arg, asValue) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-list-view-body');\n                const rows = body.querySelectorAll('gui-list-view-row');\n                return this.getEntry(rows, value, arg, asValue);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            if (param === 'columns') {\n                const head = el.querySelector('gui-list-view-head');\n                const row = document.createElement('gui-list-view-row');\n                DOM.$empty(head);\n                el._columns = [];\n                value.forEach(v => {\n                    v.visible = typeof v.visible === 'undefined' || v.visible === true;\n                    const nel = createEntry(this, v, true);\n                    el._columns.push(v);\n                    if (!v.visible) {\n                        nel.style.display = 'none';\n                    }\n                    row.appendChild(nel);\n                });\n                head.appendChild(row);\n                createFakeHeader(el);\n                return this;\n            } else if (param === 'selected' || param === 'value') {\n                const body = el.querySelector('gui-list-view-body');\n                this.setSelected(body, body.querySelectorAll('gui-list-view-row'), value, arg, arg2);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.add(entries, (cls, e) => {\n                const cbCreated = e.onCreated || function () {\n                };\n                const row = createRow(this, e);\n                if (row) {\n                    body.appendChild(row);\n                    initRow(this, row);\n                }\n                cbCreated(row);\n            });\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.clear(body);\n        }\n        remove(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.remove(entries, 'gui-list-view-row', null, body);\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.patch(entries, 'gui-list-view-row', body, createRow, initRow);\n        }\n        build() {\n            const el = this.$element;\n            el._columns = [];\n            let inner = el.querySelector('gui-list-view-inner');\n            let head = el.querySelector('gui-list-view-head');\n            let body = el.querySelector('gui-list-view-body');\n            function moveIntoInner(cel) {\n                if (cel.parentNode.tagName !== 'GUI-LIST-VIEW-INNER') {\n                    inner.appendChild(cel);\n                }\n            }\n            let fakeHead = el.querySelector('gui-list-view-fake-head');\n            if (!fakeHead) {\n                fakeHead = document.createElement('gui-list-view-fake-head');\n                const fakeHeadInner = document.createElement('gui-list-view-inner');\n                fakeHeadInner.appendChild(document.createElement('gui-list-view-head'));\n                fakeHead.appendChild(fakeHeadInner);\n            }\n            if (!inner) {\n                inner = document.createElement('gui-list-view-inner');\n                el.appendChild(inner);\n            }\n            (function _createBody() {\n                if (body) {\n                    moveIntoInner(body);\n                } else {\n                    body = document.createElement('gui-list-view-body');\n                    inner.appendChild(body);\n                }\n                body.setAttribute('role', 'group');\n            }());\n            (function _createHead() {\n                if (head) {\n                    moveIntoInner(head);\n                } else {\n                    head = document.createElement('gui-list-view-head');\n                    inner.insertBefore(head, body);\n                }\n                head.setAttribute('role', 'group');\n            }());\n            el.setAttribute('role', 'list');\n            el.appendChild(fakeHead);\n            Events.$bind(el, 'scroll', ev => {\n                fakeHead.style.top = el.scrollTop + 'px';\n            }, false);\n            const hcols = el.querySelectorAll('gui-list-view-head gui-list-view-column');\n            hcols.forEach((cel, idx) => {\n                const vis = cel.getAttribute('data-visible');\n                const iter = {\n                    visible: vis === null || vis === 'true',\n                    size: cel.getAttribute('data-size')\n                };\n                if (iter.size) {\n                    cel.style.width = iter.size;\n                }\n                el._columns.push(iter);\n                if (!iter.visible) {\n                    cel.style.display = 'none';\n                }\n            });\n            createFakeHeader(el);\n            el.querySelectorAll('gui-list-view-body gui-list-view-row').forEach(row => {\n                initRow(this, row);\n            });\n            return super.build(...arguments);\n        }\n    }\n    return { GUIListView: GUIListView };\n});\ndefine('skylark-osjsv2-client/gui/elements/menus',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../menu',\n    '../element'\n], function (DOM, GUI, Events, Menu, GUIElement) {\n    'use strict';\n    let debounce;\n    function getSelectionEventAttribs(mel, didx) {\n        const id = mel.getAttribute('data-id');\n        let idx = DOM.$index(mel);\n        if (!didx) {\n            idx = parseInt(mel.getAttribute('data-index'), 10);\n        }\n        const result = {\n            index: idx,\n            id: id\n        };\n        Array.prototype.slice.call(mel.attributes).forEach(item => {\n            if (item.name.match(/^data\\-/)) {\n                const an = item.name.replace(/^data\\-/, '');\n                if (typeof result[an] === 'undefined') {\n                    result[an] = item.value;\n                }\n            }\n        });\n        return result;\n    }\n    function getEventName(evName) {\n        if ([\n                'select',\n                'click'\n            ].indexOf(evName) !== -1) {\n            return '_select';\n        }\n        return evName;\n    }\n    function runChildren(pel, level, winRef, cb) {\n        level = level || 0;\n        cb = cb || function () {\n        };\n        if (pel.children) {\n            pel.children.forEach((child, i) => {\n                if (child && child.tagName.toLowerCase() === 'gui-menu-entry') {\n                    GUIElement.createFromNode(child).build(null, winRef);\n                    cb(child, level);\n                }\n            });\n        }\n    }\n    function onEntryClick(ev, pos, target, original) {\n        const isExpander = !!target.querySelector('gui-menu');\n        if (!isExpander) {\n            const dispatcher = (original || target).querySelector('label');\n            dispatcher.dispatchEvent(new CustomEvent('_select', { detail: getSelectionEventAttribs(target, true) }));\n        }\n    }\n    function createTyped(child, par) {\n        const type = child.getAttribute('data-type');\n        const value = child.getAttribute('data-checked') === 'true';\n        let input = null;\n        if (type) {\n            const group = child.getAttribute('data-group');\n            input = document.createElement('input');\n            input.type = type;\n            input.name = group ? group + '[]' : '';\n            if (value) {\n                input.setAttribute('checked', 'checked');\n            }\n            par.setAttribute('role', 'menuitem' + type);\n            par.appendChild(input);\n        }\n    }\n    class GUIMenuEntry extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu-entry' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            const target = this.$element.querySelector('gui-menu-entry > label');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(arg, winRef) {\n            const child = this.$element;\n            if (arguments.length < 2) {\n                return this;\n            }\n            child.setAttribute('role', 'menuitem' + (child.getAttribute('data-type') || ''));\n            const label = GUI.getLabel(child);\n            const icon = GUI.getIcon(child, winRef);\n            child.setAttribute('aria-label', label);\n            const span = document.createElement('label');\n            if (icon) {\n                child.style.backgroundImage = 'url(' + icon + ')';\n                DOM.$addClass(span, 'gui-has-image');\n            }\n            child.appendChild(span);\n            createTyped(child, span);\n            if (child.getAttribute('data-labelhtml') === 'true') {\n                span.innerHTML = label;\n            } else {\n                span.appendChild(document.createTextNode(label));\n            }\n            if (child.querySelector('gui-menu')) {\n                DOM.$addClass(child, 'gui-menu-expand');\n                child.setAttribute('aria-haspopup', 'true');\n            } else {\n                child.setAttribute('aria-haspopup', 'false');\n            }\n            return this;\n        }\n    }\n    class GUIMenu extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            Events.$bind(this.$element, evName, function (ev) {\n                if (ev.target.tagName === 'LABEL') {\n                    callback.apply(new GUIElement(ev.target.parentNode), arguments);\n                }\n            }, true);\n            return this;\n        }\n        show(ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            const newNode = this.$element.cloneNode(true);\n            Menu.create(null, ev, newNode);\n        }\n        set(param, value, arg) {\n            if (param === 'checked') {\n                const found = this.$element.querySelector('gui-menu-entry[data-id=\"' + value + '\"]');\n                if (found) {\n                    const input = found.querySelector('input');\n                    if (input) {\n                        if (arg) {\n                            input.setAttribute('checked', 'checked');\n                        } else {\n                            input.removeAttribute('checked');\n                        }\n                    }\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build(customMenu, winRef) {\n            const el = this.$element;\n            el.setAttribute('role', 'menu');\n            try {\n                runChildren(el, 0, winRef, (child, level) => {\n                    if (customMenu) {\n                        if (child) {\n                            const submenus = child.getElementsByTagName('gui-menu');\n                            submenus.forEach(sub => {\n                                if (sub) {\n                                    runChildren(sub, level + 1, winRef);\n                                }\n                            });\n                        }\n                    }\n                });\n            } catch (e) {\n                console.warn(e);\n            }\n            if (!customMenu) {\n                Events.$bind(el, 'click', (ev, pos) => {\n                    clearTimeout(debounce);\n                    debounce = setTimeout(() => {\n                        debounce = clearTimeout(debounce);\n                        Menu.clickWrapper(ev, pos, onEntryClick);\n                    }, 1);\n                }, true);\n            }\n            return this;\n        }\n    }\n    class GUIMenuBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu-bar' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            this.$element.querySelectorAll('gui-menu-bar-entry').forEach(target => {\n                Events.$bind(target, evName, callback.bind(this), params);\n            });\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            el.setAttribute('role', 'menubar');\n            function updateChildren(sm, level) {\n                if (sm && sm.children) {\n                    const children = sm.children;\n                    let child;\n                    for (let i = 0; i < children.length; i++) {\n                        child = children[i];\n                        if (child.tagName === 'GUI-MENU-ENTRY') {\n                            child.setAttribute('aria-haspopup', String(!!child.firstChild));\n                            updateChildren(child.firstChild, level + 1);\n                        }\n                    }\n                }\n            }\n            function _onClick(ev) {\n                ev.preventDefault();\n                const mel = ev.target;\n                const submenu = mel.querySelector('gui-menu');\n                if (mel.getAttribute('data-disabled') === 'true') {\n                    return;\n                }\n                mel.querySelectorAll('gui-menu-entry').forEach(c => {\n                    DOM.$removeClass(c, 'gui-hover');\n                });\n                if (submenu) {\n                    Menu.setActive(ev => {\n                        if (ev instanceof window.Event) {\n                            ev.stopPropagation();\n                        }\n                        DOM.$removeClass(mel, 'gui-active');\n                    });\n                }\n                if (DOM.$hasClass(mel, 'gui-active')) {\n                    if (submenu) {\n                        DOM.$removeClass(mel, 'gui-active');\n                    }\n                } else {\n                    if (submenu) {\n                        DOM.$addClass(mel, 'gui-active');\n                    }\n                    mel.dispatchEvent(new CustomEvent('_select', { detail: getSelectionEventAttribs(mel) }));\n                }\n            }\n            el.querySelectorAll('gui-menu-bar-entry').forEach((mel, idx) => {\n                const label = GUI.getLabel(mel);\n                const span = document.createElement('span');\n                span.appendChild(document.createTextNode(label));\n                mel.setAttribute('role', 'menuitem');\n                mel.insertBefore(span, mel.firstChild);\n                const submenu = mel.querySelector('gui-menu');\n                Menu.clamp(submenu);\n                mel.setAttribute('aria-haspopup', String(!!submenu));\n                mel.setAttribute('data-index', String(idx));\n                updateChildren(submenu, 2);\n            });\n            Events.$bind(el, 'click', ev => {\n                if (ev.target.tagName === 'GUI-MENU-BAR-ENTRY') {\n                    _onClick(ev);\n                }\n            }, true);\n            return this;\n        }\n    }\n    return {\n        GUIMenuEntry: GUIMenuEntry,\n        GUIMenuBar: GUIMenuBar,\n        GUIMenu: GUIMenu\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/misc',[\n    '../../utils/dom',\n    '../../utils/events',\n    '../../utils/colors',\n    '../element'\n], function (DOM, Events, Colors, GUIElement) {\n    'use strict';\n    class GUIColorBox extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-color-box' }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            const target = el.querySelector('div');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value) {\n            if (param === 'value') {\n                this.$element.firstChild.style.backgroundColor = value;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const inner = document.createElement('div');\n            this.$element.appendChild(inner);\n            return this;\n        }\n    }\n    class GUIColorSwatch extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-color-swatch' }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            const target = el.querySelector('canvas');\n            if (evName === 'select' || evName === 'change') {\n                evName = '_change';\n            }\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const cv = document.createElement('canvas');\n            cv.width = 100;\n            cv.height = 100;\n            const ctx = cv.getContext('2d');\n            let gradient = ctx.createLinearGradient(0, 0, ctx.canvas.width, 0);\n            function getColor(ev) {\n                const pos = DOM.$position(cv);\n                const cx = typeof ev.offsetX === 'undefined' ? ev.clientX - pos.left : ev.offsetX;\n                const cy = typeof ev.offsetY === 'undefined' ? ev.clientY - pos.top : ev.offsetY;\n                if (isNaN(cx) || isNaN(cy)) {\n                    return null;\n                }\n                const data = ctx.getImageData(cx, cy, 1, 1).data;\n                return {\n                    r: data[0],\n                    g: data[1],\n                    b: data[2],\n                    hex: Colors.convertToHEX(data[0], data[1], data[2])\n                };\n            }\n            gradient.addColorStop(0, 'rgb(255,   0,   0)');\n            gradient.addColorStop(0.15, 'rgb(255,   0, 255)');\n            gradient.addColorStop(0.33, 'rgb(0,     0, 255)');\n            gradient.addColorStop(0.49, 'rgb(0,   255, 255)');\n            gradient.addColorStop(0.67, 'rgb(0,   255,   0)');\n            gradient.addColorStop(0.84, 'rgb(255, 255,   0)');\n            gradient.addColorStop(1, 'rgb(255,   0,   0)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            gradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n            gradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n            gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0)');\n            gradient.addColorStop(0.5, 'rgba(0,     0,   0, 0)');\n            gradient.addColorStop(1, 'rgba(0,     0,   0, 1)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            Events.$bind(cv, 'pointerdown', ev => {\n                const c = getColor(ev);\n                if (c) {\n                    cv.dispatchEvent(new CustomEvent('_change', { detail: c }));\n                }\n            }, false);\n            el.appendChild(cv);\n            return this;\n        }\n    }\n    class GUIIframe extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-iframe' }, this);\n        }\n        static get _tagName() {\n            let isStandalone = false;\n            try {\n                isStandalone = window.navigator.standalone || window.matchMedia('(display-mode: standalone)').matches;\n            } catch (e) {\n            }\n            return isStandalone ? 'webview' : 'iframe';\n        }\n        set(key, val) {\n            if (key === 'src') {\n                this.$element.querySelector(GUIIframe._tagName).src = val;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const src = el.getAttribute('data-src') || 'about:blank';\n            const iframe = document.createElement(GUIIframe._tagName);\n            iframe.src = src;\n            iframe.setAttribute('border', 0);\n            el.appendChild(iframe);\n            return this;\n        }\n    }\n    class GUIProgressBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-progress-bar' }, this);\n        }\n        set(param, value) {\n            const el = this.$element;\n            el.setAttribute('data-' + param, value);\n            if (param === 'progress' || param === 'value') {\n                value = parseInt(value, 10);\n                value = Math.max(0, Math.min(100, value));\n                el.setAttribute('aria-label', String(value));\n                el.setAttribute('aria-valuenow', String(value));\n                el.querySelector('div').style.width = value.toString() + '%';\n                el.querySelector('span').innerHTML = value + '%';\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            let p = el.getAttribute('data-progress') || 0;\n            p = Math.max(0, Math.min(100, p));\n            const percentage = p.toString() + '%';\n            const progress = document.createElement('div');\n            progress.style.width = percentage;\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(percentage));\n            el.setAttribute('role', 'progressbar');\n            el.setAttribute('aria-valuemin', 0);\n            el.setAttribute('aria-valuemax', 100);\n            el.setAttribute('aria-label', 0);\n            el.setAttribute('aria-valuenow', 0);\n            el.appendChild(progress);\n            el.appendChild(span);\n            return this;\n        }\n    }\n    class GUIStatusBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-statusbar' }, this);\n        }\n        set(param, value) {\n            if (param === 'label' || param === 'value') {\n                const span = this.$element.getElementsByTagName('gui-statusbar-label')[0];\n                if (span) {\n                    DOM.$empty(span);\n                    span.innerHTML = value;\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build(args, win) {\n            const el = this.$element;\n            const span = document.createElement('gui-statusbar-label');\n            let lbl = el.getAttribute('data-label') || el.getAttribute('data-value');\n            if (!lbl) {\n                lbl = (() => {\n                    let textNodes = [];\n                    let node, value;\n                    for (let i = 0; i < el.childNodes.length; i++) {\n                        node = el.childNodes[i];\n                        if (node.nodeType === Node.TEXT_NODE) {\n                            value = node.nodeValue.replace(/\\s+/g, '').replace(/^\\s+/g, '');\n                            if (value.length > 0) {\n                                textNodes.push(value);\n                            }\n                            el.removeChild(node);\n                            i++;\n                        }\n                    }\n                    return textNodes.join(' ');\n                })();\n            }\n            span.innerHTML = lbl;\n            el.setAttribute('role', 'log');\n            el.appendChild(span);\n            return this;\n        }\n    }\n    return {\n        GUIColorBox: GUIColorBox,\n        GUIColorSwatch: GUIColorSwatch,\n        GUIIframe: GUIIframe,\n        GUIProgressBar: GUIProgressBar,\n        GUIStatusBar: GUIStatusBar\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/richtext',[\n    '../../utils/dom',\n    '../../utils/events',\n    '../../core/theme',\n    '../element'\n], function (DOM, Events, Theme, GUIElement) {\n    'use strict';\n    function getDocument(el, iframe) {\n        iframe = iframe || el.querySelector('iframe');\n        return iframe.contentDocument || iframe.contentWindow.document;\n    }\n    function getDocumentData(el) {\n        try {\n            const doc = getDocument(el);\n            return doc.body.innerHTML;\n        } catch (error) {\n            console.error('gui-richtext', 'getDocumentData()', error.stack, error);\n        }\n        return '';\n    }\n    function destroyFixInterval(el) {\n        el._fixTry = 0;\n        el._fixInterval = clearInterval(el._fixInterval);\n    }\n    function createFixInterval(el, doc, text) {\n        if (el._fixTry > 10) {\n            el._fixTry = 0;\n            return;\n        }\n        el._fixInterval = setInterval(() => {\n            try {\n                if (text) {\n                    doc.body.innerHTML = text;\n                }\n                destroyFixInterval(el);\n            } catch (error) {\n                console.warn('gui-richtext', 'setDocumentData()', error.stack, error, '... trying again');\n            }\n            el._fixTry++;\n        }, 100);\n    }\n    function setDocumentData(el, text) {\n        destroyFixInterval(el);\n        text = text || '';\n        const themeName = Theme.getStyleTheme();\n        const themeSrc = '/themes.css';\n        let editable = el.getAttribute('data-editable');\n        editable = editable === null || editable === 'true';\n        function onMouseDown(ev) {\n            function insertTextAtCursor(text) {\n                let sel, range;\n                if (window.getSelection) {\n                    sel = window.getSelection();\n                    if (sel.getRangeAt && sel.rangeCount) {\n                        range = sel.getRangeAt(0);\n                        range.deleteContents();\n                        range.insertNode(document.createTextNode(text));\n                    }\n                } else if (document.selection && document.selection.createRange) {\n                    document.selection.createRange().text = text;\n                }\n            }\n            if (ev.keyCode === 9) {\n                insertTextAtCursor('\\xA0');\n                ev.preventDefault();\n            }\n        }\n        const script = onMouseDown.toString() + ';window.addEventListener(\"keydown\", onMouseDown)';\n        let template = '<!DOCTYPE html><html><head><link rel=\"stylesheet\" type=\"text/css\" href=\"' + themeSrc + '\" /><script>' + script + '</script></head><body contentEditable=\"true\" data-style-theme=\"' + themeName + '\"></body></html>';\n        if (!editable) {\n            template = template.replace(' contentEditable=\"true\"', '');\n        }\n        const doc = getDocument(el);\n        doc.open();\n        doc.write(template);\n        doc.close();\n        createFixInterval(el, doc, text);\n    }\n    class GUIRichText extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-richtext' }, this);\n        }\n        on(evName, callback, params) {\n            if (['selection'].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const text = el.childNodes.length ? el.childNodes[0].nodeValue : '';\n            DOM.$empty(el);\n            const iframe = document.createElement('iframe');\n            iframe.setAttribute('border', 0);\n            iframe.onload = () => {\n                iframe.contentWindow.addEventListener('selectstart', () => {\n                    el.dispatchEvent(new CustomEvent('_selection', { detail: {} }));\n                });\n                iframe.contentWindow.addEventListener('pointerup', () => {\n                    el.dispatchEvent(new CustomEvent('_selection', { detail: {} }));\n                });\n            };\n            el.appendChild(iframe);\n            setTimeout(() => {\n                try {\n                    setDocumentData(el, text);\n                } catch (e) {\n                    console.warn('gui-richtext', 'build()', e);\n                }\n            }, 1);\n            return this;\n        }\n        command() {\n            try {\n                const doc = getDocument(this.$element);\n                if (doc && doc.execCommand) {\n                    return doc.execCommand.apply(doc, arguments);\n                }\n            } catch (e) {\n                console.warn('gui-richtext call() warning', e.stack, e);\n            }\n            return this;\n        }\n        query() {\n            try {\n                const doc = getDocument(this.$element);\n                if (doc && doc.queryCommandValue) {\n                    return doc.queryCommandValue.apply(doc, arguments);\n                }\n            } catch (e) {\n                console.warn('gui-richtext call() warning', e.stack, e);\n            }\n            return null;\n        }\n        get(param, value) {\n            if (param === 'value') {\n                return getDocumentData(this.$element);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                setDocumentData(this.$element, value);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n    }\n    return { GUIRichText: GUIRichText };\n});\ndefine('skylark-osjsv2-client/gui/elements/tabs',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../element'\n], function (DOM, GUI, Events, GUIElement) {\n    'use strict';\n    function toggleActive(el, eidx, idx) {\n        DOM.$removeClass(el, 'gui-active');\n        if (eidx === idx) {\n            DOM.$addClass(el, 'gui-active');\n        }\n    }\n    function selectTab(el, tabs, ev, idx, tab) {\n        tabs.querySelectorAll('li').forEach((tel, eidx) => {\n            toggleActive(tel, eidx, idx);\n        });\n        el.querySelectorAll('gui-tab-container').forEach((tel, eidx) => {\n            toggleActive(tel, eidx, idx);\n        });\n        DOM.$addClass(tab, 'gui-active');\n        el.dispatchEvent(new CustomEvent('_change', { detail: { index: idx } }));\n    }\n    function findTab(el, tabs, idx) {\n        let found = null;\n        if (typeof idx === 'number') {\n            found = idx;\n        } else {\n            tabs.querySelectorAll('li').forEach((iter, i) => {\n                if (found === null && iter.firstChild.textContent === idx) {\n                    found = i;\n                }\n            });\n        }\n        return found;\n    }\n    function removeTab(el, tabs, idx) {\n        const found = findTab(el, tabs, idx);\n        if (found !== null) {\n            tabs.children[found].remove();\n            el.querySelectorAll('gui-tab-container')[found].remove();\n        }\n    }\n    function createTab(el, tabs, label, prog) {\n        const tab = document.createElement('li');\n        const idx = tabs.children.length;\n        Events.$bind(tab, 'pointerdown', ev => {\n            selectTab(el, tabs, ev, idx, tab);\n        }, false);\n        tab.setAttribute('role', 'tab');\n        tab.setAttribute('aria-label', label);\n        tab.appendChild(document.createTextNode(label));\n        tabs.appendChild(tab);\n        if (prog) {\n            const tel = document.createElement('gui-tab-container');\n            tel.setAttribute('data-label', label);\n            tel.setAttribute('role', 'tabpanel');\n            el.appendChild(tel);\n        }\n    }\n    class GUITabs extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-tabs' }, this);\n        }\n        on(evName, callback, params) {\n            if ([\n                    'select',\n                    'activate'\n                ].indexOf(evName) !== -1) {\n                evName = 'change';\n            }\n            if (evName === 'change') {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value) {\n            if ([\n                    'current',\n                    'selected',\n                    'active'\n                ].indexOf(param) !== -1) {\n                const el = this.$element;\n                const tabs = el.querySelector('ul');\n                const found = findTab(el, tabs, value);\n                if (found !== null) {\n                    selectTab(el, tabs, null, found, tabs[found]);\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        get(param, value) {\n            if ([\n                    'current',\n                    'selected',\n                    'active'\n                ].indexOf(param) !== -1) {\n                const cur = this.$element.querySelector('ul > li[class=\"gui-active\"]');\n                return DOM.$index(cur);\n            }\n            return super.get(...arguments);\n        }\n        add(newtabs) {\n            const el = this.$element;\n            const tabs = el.querySelector('ul');\n            if (!(newtabs instanceof Array)) {\n                newtabs = [newtabs];\n            }\n            newtabs.forEach(label => {\n                createTab(el, tabs, label, true);\n            });\n            return this;\n        }\n        remove(removetabs) {\n            const el = this.$element;\n            const tabs = el.querySelector('ul');\n            if (!(removetabs instanceof Array)) {\n                removetabs = [removetabs];\n            }\n            removetabs.forEach(id => {\n                removeTab(el, tabs, id);\n            });\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const tabs = document.createElement('ul');\n            el.querySelectorAll('gui-tab-container').forEach((tel, idx) => {\n                createTab(el, tabs, GUI.getLabel(tel));\n                tel.setAttribute('role', 'tabpanel');\n            });\n            tabs.setAttribute('role', 'tablist');\n            el.setAttribute('role', 'navigation');\n            if (el.children.length) {\n                el.insertBefore(tabs, el.children[0]);\n            } else {\n                el.appendChild(tabs);\n            }\n            const currentTab = parseInt(el.getAttribute('data-selected-index'), 10) || 0;\n            selectTab(el, tabs, null, currentTab);\n            return this;\n        }\n    }\n    return { GUITabs: GUITabs };\n});\ndefine('skylark-osjsv2-client/gui/elements/treeview',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../dataview'\n], function (DOM, GUI, GUIDataView) {\n    'use strict';\n    function createEntry(cls, e) {\n        const entry = GUI.createElement('gui-tree-view-entry', e, ['entries']);\n        return entry;\n    }\n    function handleItemExpand(ev, el, root, expanded) {\n        if (typeof expanded === 'undefined') {\n            expanded = !DOM.$hasClass(root, 'gui-expanded');\n        }\n        DOM.$removeClass(root, 'gui-expanded');\n        if (expanded) {\n            DOM.$addClass(root, 'gui-expanded');\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            if (children[i].tagName.toLowerCase() === 'gui-tree-view-entry') {\n                children[i].style.display = expanded ? 'block' : 'none';\n            }\n        }\n        const selected = {\n            index: DOM.$index(root),\n            data: GUI.getViewNodeValue(root)\n        };\n        root.setAttribute('data-expanded', String(expanded));\n        root.setAttribute('aria-expanded', String(expanded));\n        el.dispatchEvent(new CustomEvent('_expand', {\n            detail: {\n                entries: [selected],\n                expanded: expanded,\n                element: root\n            }\n        }));\n    }\n    function initEntry(cls, sel) {\n        const el = cls.$element;\n        if (sel._rendered) {\n            return;\n        }\n        sel._rendered = true;\n        const icon = sel.getAttribute('data-icon');\n        const label = GUI.getLabel(sel);\n        const expanded = el.getAttribute('data-expanded') === 'true';\n        const next = sel.querySelector('gui-tree-view-entry');\n        const container = document.createElement('div');\n        const dspan = document.createElement('span');\n        function onDndEnter(ev) {\n            ev.stopPropagation();\n            DOM.$addClass(sel, 'dnd-over');\n        }\n        function onDndLeave(ev) {\n            DOM.$removeClass(sel, 'dnd-over');\n        }\n        if (icon) {\n            dspan.style.backgroundImage = 'url(' + icon + ')';\n            DOM.$addClass(dspan, 'gui-has-image');\n        }\n        dspan.appendChild(document.createTextNode(label));\n        container.appendChild(dspan);\n        if (next) {\n            DOM.$addClass(sel, 'gui-expandable');\n            const expander = document.createElement('gui-tree-view-expander');\n            sel.insertBefore(container, next);\n            sel.insertBefore(expander, container);\n        } else {\n            sel.appendChild(container);\n        }\n        if (String(sel.getAttribute('data-draggable')) === 'true') {\n            GUI.createDraggable(container, (() => {\n                let data = {};\n                try {\n                    data = JSON.parse(sel.getAttribute('data-value'));\n                } catch (e) {\n                }\n                return { data: data };\n            })());\n        }\n        if (String(sel.getAttribute('data-droppable')) === 'true') {\n            let timeout;\n            GUI.createDroppable(container, {\n                onEnter: onDndEnter,\n                onOver: onDndEnter,\n                onLeave: onDndLeave,\n                onDrop: onDndLeave,\n                onItemDropped: (ev, eel, item) => {\n                    ev.stopPropagation();\n                    ev.preventDefault();\n                    timeout = clearTimeout(timeout);\n                    timeout = setTimeout(() => {\n                        DOM.$removeClass(sel, 'dnd-over');\n                    }, 10);\n                    let dval = {};\n                    try {\n                        dval = JSON.parse(eel.parentNode.getAttribute('data-value'));\n                    } catch (e) {\n                    }\n                    el.dispatchEvent(new CustomEvent('_drop', {\n                        detail: {\n                            src: item.data,\n                            dest: dval\n                        }\n                    }));\n                }\n            });\n        }\n        handleItemExpand(null, el, sel, expanded);\n        cls.bindEntryEvents(sel, 'gui-tree-view-entry');\n    }\n    class GUITreeView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-tree-view'\n            }, this);\n        }\n        values() {\n            const el = this.$element;\n            return this.getSelected(el.querySelectorAll('gui-tree-view-entry'));\n        }\n        build(applyArgs) {\n            const el = this.$element;\n            let body = el.querySelector('gui-tree-view-body');\n            let found = !!body;\n            if (!body) {\n                body = document.createElement('gui-tree-view-body');\n                el.appendChild(body);\n            }\n            body.setAttribute('role', 'group');\n            el.setAttribute('role', 'tree');\n            el.setAttribute('aria-multiselectable', body.getAttribute('data-multiselect') || 'false');\n            el.querySelectorAll('gui-tree-view-entry').forEach((sel, idx) => {\n                sel.setAttribute('aria-expanded', 'false');\n                if (!found) {\n                    body.appendChild(sel);\n                }\n                sel.setAttribute('role', 'treeitem');\n                initEntry(this, sel);\n            });\n            return super.build(...arguments);\n        }\n        get(param, value, arg) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-tree-view-body');\n                return this.getEntry(body.querySelectorAll('gui-tree-view-entry'), value, arg);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            const body = el.querySelector('gui-tree-view-body');\n            if (param === 'selected' || param === 'value') {\n                this.setSelected(body, body.querySelectorAll('gui-tree-view-entry'), value, arg, arg2);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            return super.clear(body);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            let parentNode = body;\n            const recurse = (a, root, level) => {\n                super.add(a, (cls, e) => {\n                    if (e) {\n                        if (e.parentNode) {\n                            delete e.parentNode;\n                        }\n                        const entry = createEntry(this, e);\n                        root.appendChild(entry);\n                        if (e.entries) {\n                            recurse(e.entries, entry, level + 1);\n                        }\n                        initEntry(this, entry);\n                    }\n                });\n            };\n            if (typeof entries === 'object' && !(entries instanceof Array) && Object.keys(entries).length) {\n                parentNode = entries.parentNode || body;\n                entries = entries.entries || [];\n            }\n            recurse(entries, parentNode, 0);\n            return this;\n        }\n        remove(entries) {\n            return super.remove(entries, 'gui-tree-view-entry');\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            return super.patch(entries, 'gui-list-view-entry', body, createEntry, initEntry);\n        }\n        expand(entry) {\n            handleItemExpand(entry.ev, this.$element, entry.entry);\n            return this;\n        }\n    }\n    return { GUITreeView: GUITreeView };\n});\ndefine('skylark-osjsv2-client/gui/elements/visual',[\n    '../../utils/events',\n    '../element'\n], function (Events, GUIElement) {\n    'use strict';\n    function createVisualElement(el, nodeType, applyArgs) {\n        applyArgs = applyArgs || {};\n        if (typeof applyArgs !== 'object') {\n            console.error('Derp', 'applyArgs was not an object ?!');\n            applyArgs = {};\n        }\n        const img = document.createElement(nodeType);\n        const src = el.getAttribute('data-src');\n        const controls = el.getAttribute('data-controls');\n        if (controls) {\n            img.setAttribute('controls', 'controls');\n        }\n        const autoplay = el.getAttribute('data-autoplay');\n        if (autoplay) {\n            img.setAttribute('autoplay', 'autoplay');\n        }\n        Object.keys(applyArgs).forEach(function (k) {\n            let val = applyArgs[k];\n            if (typeof val === 'function') {\n                k = k.replace(/^on/, '');\n                if ((nodeType === 'video' || nodeType === 'audio') && k === 'load') {\n                    k = 'loadedmetadata';\n                }\n                Events.$bind(img, k, val.bind(img), false);\n            } else {\n                if (typeof applyArgs[k] === 'boolean') {\n                    val = val ? 'true' : 'false';\n                }\n                img.setAttribute(k, val);\n            }\n        });\n        img.src = src || 'about:blank';\n        el.appendChild(img);\n    }\n    class GUIAudio extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-audio' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('audio');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'audio', applyArgs);\n            return this;\n        }\n    }\n    class GUIVideo extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-video' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('video');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'video', applyArgs);\n            return this;\n        }\n    }\n    class GUIImage extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-image' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('img');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'img', applyArgs);\n            return this;\n        }\n    }\n    class GUICanvas extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-canvas' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('canvas');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const canvas = document.createElement('canvas');\n            this.$element.appendChild(canvas);\n            return this;\n        }\n    }\n    return {\n        GUIAudio: GUIAudio,\n        GUIVideo: GUIVideo,\n        GUIImage: GUIImage,\n        GUICanvas: GUICanvas\n    };\n});\ndefine('skylark-osjsv2-client/helpers/default-application-window',[\n    '../vfs/file',\n    '../core/window',\n    '../core/dialog',\n    '../core/locales'\n], function (FileMetadata, Window, DialogWindow, Locales) {\n    'use strict';\n    return class DefaultApplicationWindow extends Window {\n        constructor(name, args, app, file) {\n            super(...arguments);\n            this.hasClosingDialog = false;\n            this.currentFile = file ? new FileMetadata(file) : null;\n            this.hasChanged = false;\n        }\n        destroy() {\n            super.destroy(...arguments);\n            this.currentFile = null;\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            return root;\n        }\n        _inited() {\n            const result = Window.prototype._inited.apply(this, arguments);\n            const app = this._app;\n            const menuMap = {\n                MenuNew: () => {\n                    app.newDialog(this.currentFile, this);\n                },\n                MenuSave: () => {\n                    app.saveDialog(this.currentFile, this);\n                },\n                MenuSaveAs: () => {\n                    app.saveDialog(this.currentFile, this, true);\n                },\n                MenuOpen: () => {\n                    app.openDialog(this.currentFile, this);\n                },\n                MenuClose: () => {\n                    this._close();\n                }\n            };\n            this._find('SubmenuFile').on('select', ev => {\n                if (menuMap[ev.detail.id]) {\n                    menuMap[ev.detail.id]();\n                }\n            });\n            this._find('MenuSave').set('disabled', true);\n            if (this.currentFile) {\n                if (!this._app.openFile(this.currentFile, this)) {\n                    this.currentFile = null;\n                }\n            }\n            return result;\n        }\n        _onDndEvent(ev, type, item, args) {\n            if (!Window.prototype._onDndEvent.apply(this, arguments)) {\n                return;\n            }\n            if (type === 'itemDrop' && item) {\n                const data = item.data;\n                if (data && data.type === 'file' && data.mime) {\n                    this._app.openFile(new FileMetadata(data), this);\n                }\n            }\n        }\n        _close() {\n            if (this.hasClosingDialog) {\n                return;\n            }\n            if (this.hasChanged) {\n                this.hasClosingDialog = true;\n                this.checkHasChanged(discard => {\n                    this.hasClosingDialog = false;\n                    if (discard) {\n                        this.hasChanged = false;\n                        this._close();\n                    }\n                });\n                return;\n            }\n            Window.prototype._close.apply(this, arguments);\n        }\n        checkHasChanged(cb) {\n            if (this.hasChanged) {\n                DialogWindow.create('Confirm', {\n                    buttons: [\n                        'yes',\n                        'no'\n                    ],\n                    message: Locales._('MSG_GENERIC_APP_DISCARD')\n                }, function (ev, button) {\n                    cb(button === 'ok' || button === 'yes');\n                }, {\n                    parent: this,\n                    modal: true\n                });\n                return;\n            }\n            cb(true);\n        }\n        showFile(file, content) {\n            this.updateFile(file);\n        }\n        updateFile(file) {\n            this.currentFile = file || null;\n            this.hasChanged = false;\n            if (this._scheme) {\n                this._find('MenuSave').set('disabled', !file);\n            }\n            if (file) {\n                this._setTitle(file.filename, true);\n            } else {\n                this._setTitle();\n            }\n        }\n        getFileData() {\n            return null;\n        }\n        _onKeyEvent(ev, type, shortcut) {\n            if (shortcut === 'SAVE') {\n                this._app.saveDialog(this.currentFile, this, !this.currentFile);\n                return false;\n            } else if (shortcut === 'SAVEAS') {\n                this._app.saveDialog(this.currentFile, this, true);\n                return false;\n            } else if (shortcut === 'OPEN') {\n                this._app.openDialog(this.currentFile, this);\n                return false;\n            }\n            return Window.prototype._onKeyEvent.apply(this, arguments);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/default-application',[\n    '../core/application',\n    '../core/dialog',\n    '../vfs/file',\n    '../vfs/fs',\n    '../utils/fs',\n    '../core/locales'\n], function (Application, DialogWindow, FileMetadata, VFS, FS, Locales) {\n    'use strict';\n    return class DefaultApplication extends Application {\n        constructor(name, args, metadata, opts) {\n            super(...arguments);\n            this.defaultOptions = Object.assign({}, {\n                readData: true,\n                rawData: false,\n                extension: '',\n                mime: 'application/octet-stream',\n                filetypes: [],\n                filename: 'New file'\n            }, opts);\n        }\n        destroy() {\n            super.destroy(...arguments);\n        }\n        _onMessage(msg, obj, args) {\n            super._onMessage(...arguments);\n            const current = this._getArgument('file');\n            const win = this._getWindow(this.__mainwindow);\n            if (msg === 'vfs' && args.source !== null && args.source !== this.__pid && args.file) {\n                if (win && current && current.path === args.file.path) {\n                    DialogWindow.create('Confirm', {\n                        buttons: [\n                            'yes',\n                            'no'\n                        ],\n                        message: Locales._('MSG_FILE_CHANGED')\n                    }, (ev, button) => {\n                        if (button === 'ok' || button === 'yes') {\n                            this.openFile(new FileMetadata(args.file), win);\n                        }\n                    }, {\n                        parent: win,\n                        modal: true\n                    });\n                }\n            }\n        }\n        openFile(file, win) {\n            if (!file) {\n                return false;\n            }\n            const onError = error => {\n                if (error) {\n                    OSjs.error(this.__label, Locales._('ERR_FILE_APP_OPEN'), Locales._('ERR_FILE_APP_OPEN_ALT_FMT', file.path, error));\n                    return true;\n                }\n                return false;\n            };\n            const onDone = result => {\n                this._setArgument('file', file);\n                win.showFile(file, result);\n            };\n            const check = this.__metadata.mime || [];\n            if (!FS.checkAcceptMime(file.mime, check)) {\n                OSjs.error(this.__label, Locales._('ERR_FILE_APP_OPEN'), Locales._('ERR_FILE_APP_OPEN_FMT', file.path, file.mime));\n                return false;\n            }\n            win._toggleLoading(true);\n            function callbackVFS(error, result) {\n                win._toggleLoading(false);\n                if (onError(error)) {\n                    return;\n                }\n                onDone(result);\n            }\n            if (this.defaultOptions.readData) {\n                VFS.read(file, { type: this.defaultOptions.rawData ? 'binary' : 'text' }, this).then(res => callbackVFS(false, res)).catch(err => callbackVFS(err));\n            } else {\n                VFS.url(file).then(res => callbackVFS(false, res)).catch(err => callbackVFS(err));\n            }\n            return true;\n        }\n        saveFile(file, value, win) {\n            if (!file) {\n                return;\n            }\n            win._toggleLoading(true);\n            VFS.write(file, value || '', null, this).then(() => {\n                this._setArgument('file', file);\n                win.updateFile(file);\n                return true;\n            }).catch(error => {\n                OSjs.error(this.__label, Locales._('ERR_FILE_APP_SAVE'), Locales._('ERR_FILE_APP_SAVE_ALT_FMT', file.path, error));\n            }).finally(() => {\n                win._toggleLoading(false);\n            });\n        }\n        saveDialog(file, win, saveAs, cb) {\n            const value = win.getFileData();\n            if (!saveAs) {\n                this.saveFile(file, value, win);\n                return;\n            }\n            DialogWindow.create('File', {\n                file: file,\n                filename: file ? file.filename : this.defaultOptions.filename,\n                filetypes: this.defaultOptions.filetypes,\n                filter: this.__metadata.mime,\n                extension: this.defaultOptions.extension,\n                mime: this.defaultOptions.mime,\n                type: 'save'\n            }, (ev, button, result) => {\n                if (button === 'ok') {\n                    this.saveFile(result, value, win);\n                }\n                if (typeof cb === 'function') {\n                    cb(ev, button, result);\n                }\n            }, {\n                parent: win,\n                modal: true\n            });\n        }\n        openDialog(file, win) {\n            const openDialog = () => {\n                DialogWindow.create('File', {\n                    file: file,\n                    filter: this.__metadata.mime\n                }, (ev, button, result) => {\n                    if (button === 'ok' && result) {\n                        this.openFile(new FileMetadata(result), win);\n                    }\n                }, {\n                    parent: win,\n                    modal: true\n                });\n            };\n            win.checkHasChanged(discard => {\n                if (discard) {\n                    openDialog();\n                }\n            });\n        }\n        newDialog(path, win) {\n            win.checkHasChanged(discard => {\n                if (discard) {\n                    this._setArgument('file', null);\n                    win.showFile(null, null);\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/iframe-application-window',['../core/window'], function (Window) {\n    'use strict';\n    let IFRAME_COUNT = 0;\n    return class IFrameApplicationWindow extends Window {\n        constructor(name, opts, app) {\n            opts = Object.assign({}, {\n                src: 'about:blank',\n                focus: function () {\n                },\n                blur: function () {\n                },\n                icon: null,\n                title: 'IframeApplicationWindow',\n                width: 320,\n                height: 240,\n                allow_resize: false,\n                allow_restore: false,\n                allow_maximize: false\n            }, opts);\n            super('IFrameApplicationWindow', opts, app);\n            this._iwin = null;\n            this._frame = null;\n        }\n        destroy() {\n            this.postMessage('Window::destroy');\n            return super.destroy(...arguments);\n        }\n        init(wmRef, app) {\n            const root = super.init(...arguments);\n            root.style.overflow = 'visible';\n            const id = 'IframeApplicationWindow' + IFRAME_COUNT.toString();\n            const iframe = document.createElement('iframe');\n            iframe.setAttribute('border', 0);\n            iframe.id = id;\n            iframe.className = 'IframeApplicationFrame';\n            iframe.addEventListener('load', () => {\n                this._iwin = iframe.contentWindow;\n                this.postMessage('Window::init');\n            });\n            this.setLocation(this._opts.src, iframe);\n            root.appendChild(iframe);\n            this._frame = iframe;\n            try {\n                this._iwin = iframe.contentWindow;\n            } catch (e) {\n            }\n            if (this._iwin) {\n                this._iwin.focus();\n            }\n            this._frame.focus();\n            this._opts.focus(this._frame, this._iwin);\n            IFRAME_COUNT++;\n            return root;\n        }\n        _blur() {\n            if (super._blur(...arguments)) {\n                if (this._iwin) {\n                    this._iwin.blur();\n                }\n                if (this._frame) {\n                    this._frame.blur();\n                }\n                this._opts.blur(this._frame, this._iwin);\n                return true;\n            }\n            return false;\n        }\n        _focus() {\n            if (super._focus(...arguments)) {\n                if (this._iwin) {\n                    this._iwin.focus();\n                }\n                if (this._frame) {\n                    this._frame.focus();\n                }\n                this._opts.focus(this._frame, this._iwin);\n                return true;\n            }\n            return false;\n        }\n        postMessage(message) {\n            if (this._iwin && this._app) {\n                console.debug('IFrameApplicationWindow::postMessage()', message);\n                this._iwin.postMessage({\n                    message: message,\n                    pid: this._app.__pid,\n                    wid: this._wid\n                }, window.location.href);\n            }\n        }\n        onPostMessage(message, ev) {\n            console.debug('IFrameApplicationWindow::onPostMessage()', message);\n        }\n        setLocation(src, iframe) {\n            iframe = iframe || this._frame;\n            const oldbefore = window.onbeforeunload;\n            window.onbeforeunload = null;\n            iframe.src = src;\n            window.onbeforeunload = oldbefore;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/iframe-application',[\n    './iframe-application-window',\n    '../core/application'\n], function (IFrameApplicationWindow, Application) {\n    'use strict';\n    return class IFrameApplication extends Application {\n        constructor(name, args, metadata, opts) {\n            super(...arguments);\n            this.options = Object.assign({}, {\n                icon: '',\n                title: 'IframeApplicationWindow'\n            }, opts);\n            this.options.src = this._getResource(this.options.src);\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            const name = this.__pname + 'Window';\n            this._addWindow(new IFrameApplicationWindow(name, this.options, this));\n        }\n        onPostMessage(message, ev) {\n            console.debug('IFrameApplication::onPostMessage()', message);\n            const _response = (err, res) => {\n                this.postMessage({\n                    id: message.id,\n                    method: message.method,\n                    error: err,\n                    result: Object.assign({}, res)\n                });\n            };\n            if (typeof message.id === 'number' && message.method) {\n                if (this[message.method]) {\n                    this[message.method](message.args || {}, _response);\n                } else {\n                    _response('No such method');\n                }\n            }\n        }\n        postMessage(message) {\n            const win = this._getMainWindow();\n            if (win) {\n                win.postMessage(message);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/main',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"./boot\",\r\n\t\"./locales/en_EN\",\r\n\t\"./core/auth/database\",\r\n\t\"./core/auth/demo\",\r\n\t\"./core/auth/pam\",\r\n\t\"./core/auth/standalone\",\r\n\t\"./core/connections/http\",\r\n\t\"./core/connections/standalone\",\r\n\t\"./core/connections/ws\",\r\n\t\"./core/storage/database\",\r\n\t\"./core/storage/demo\",\r\n\t\"./core/storage/standalone\",\r\n\t\"./core/storage/system\",\r\n\t\"./gui/elements/containers\",\r\n\t\"./gui/elements/fileview\",\r\n\t\"./gui/elements/iconview\",\r\n\t\"./gui/elements/inputs\",\r\n\t\"./gui/elements/listview\",\r\n\t\"./gui/elements/menus\",\r\n\t\"./gui/elements/misc\",\r\n\t\"./gui/elements/richtext\",\r\n\t\"./gui/elements/tabs\",\r\n\t\"./gui/elements/treeview\",\r\n\t\"./gui/elements/visual\",\r\n\t\"./helpers/default-application-window\",\r\n\t\"./helpers/default-application\",\r\n\t\"./helpers/event-handler\",\r\n\t\"./helpers/handle-qs\",\r\n\t\"./helpers/hooks\",\r\n\t\"./helpers/iframe-application-window\",\r\n\t\"./helpers/iframe-application\",\r\n\t\"./helpers/settings-fragment\",\r\n\t\"./helpers/window-behaviour\",\r\n\r\n],function(){\r\n\treturn {};\r\n});\ndefine('skylark-osjsv2-client', ['skylark-osjsv2-client/main'], function (main) { return main; });\n\n"]}