{"version":3,"sources":["skylark-osjsv2-client.js"],"names":["define","format","args","Array","prototype","slice","call","arguments","replace","match","number","parseurl","url","modify","protocol","split","splitted","tmp","proto","window","location","host","shift","path","join","parts","username","authstr","String","password","push","_parts","urlparams","search","hash","indexOf","reduce","params","key","val","Object","assign","[object Object]","decodeURIComponent","argumentDefaults","defaults","undef","keys","forEach","mergeObject","obj1","obj2","opts","p","hasOwnProperty","overwrite","constructor","e","cloneObject","o","alternative","_clone","i","map","iter","k","JSON","parse","stringify","value","tagName","undefined","misc","DefaultLocale","CurrentLocale","CurrentRTL","_","userLocale","systemLocale","OSjs","require","console","warn","s","a","length","apply","stack","__","l","getLocale","setLocale","locale","major","html","document","querySelector","setAttribute","info","createLocalizer","locales","unshift","init","options","languages","names","RTL","Locales","name","this","events","n","debug","cb","thisArg","Function","TypeError","added","_register","RegExp","test","index","splice","applyArgs","fn","loaders","loaderGraze","$container","createElement","parentNode","body","appendChild","el","title","icon","img","src","setTimeout","style","display","clearTimeout","remove","isObject","item","isArray","exports","from","obj","getJSON","defaultValue","setJSON","json","result","ns","queue","isTree","prune","guess","guessValue","newTree","resulted","getNewTree","mergeDeep","target","source","removeNulls","SimpleJSON","getConfig","config","getDefaultPath","fallback","getBrowserPath","app","str","getUserLocale","loc","navigator","userLanguage","language","nb","es","ru","en","minor","toUpperCase","axios","EventHandler","Loader","Config","progressHandler","ev","onprogress","lengthComputable","loaded","total","_instance","instance","offline","_evHandler","onlineFn","onOnline","offlineFn","onOffline","onLine","addEventListener","Promise","resolve","removeEventListener","destroy","base","defaultDist","substr","q","encodeURIComponent","mount","method","response","appRef","emit","reconnecting","reject","Error","raw","requestOptions","createRequestOptions","data","ignore","onUploadProgress","onDownloadProgress","appendRequestOptions","then","error","catch","message","realMethod","responseType","getVFSPath","func","on","idx","off","m","create","indicator","createRequest","err","finally","Connection","saveTimeout","pool","storage","request","settings","Process","SettingsManager","getProcesses","filter","proc","_getSessionData","set","res","get","list","__resume__","__windows__","windows","Misc","SettingsFragment","poolName","sm","_sm","_pool","_settings","ret","save","triggerWatch","changed","callback","nestedSetting","every","Storage","defaultSettings","watches","promise","saveableStorage","saveSettings","mergeDefaults","watch","Utils","filename","pop","_abToSomething","arrayBuffer","mime","blob","Blob","type","r","FileReader","onerror","onloadend","getPathFromVirtual","getPathProtocol","orig","href","filext","d","ext","toLowerCase","dirname","f","pstr","prot","_parentDir","humanFileSize","bytes","si","units","thresh","u","toFixed","escapeFilename","trim","replaceFileExtension","rep","spl","replaceFilename","newname","pathJoin","prefix","getPart","getFilenameRange","range","min","max","btoaUrlsafe","btoa","atobUrlsafe","atob","btoaUtf","_unescape","unescape","x","fromCharCode","parseInt","atobUtf","trans","escape","c","charCodeAt","toString","checkAcceptMime","re","filterScandir","defaultOptions","ioptions","ooptions","scandir","sortBy","sortDir","typeFilter","mimeFilter","showHiddenFiles","filterFile","some","miter","validMime","sb","types","mtime","ctime","sort","b","Date","localeCompare","reverse","concat","addFormFile","fd","file","File","append","ArrayBuffer","dataSourceToAb","byteString","ab","ia","Uint8Array","textToAb","abToDataSource","abToText","abToBinaryString","abToBlob","blobToAb","readAsArrayBuffer","FS","FileMetadata","arg","size","id","shortcut","setData","_guessMime","destination","resolvePreloads","metadata","pm","packageURI","mapIter","additions","preload","depends","Applications","pkg","getPackage","pkgs","getPackages","pn","uses","scope","VFS","packages","blacklist","Authenticator","isStandalone","setPackages","_loadMetadata","len","paths","command","action","currLocale","newIter","descriptions","description","root","dest","zip","generateUserMetadata","repos","entries","all","yes","no","_repository","freeze","filtered","hidden","allowed","groups","checkPermission","vfspath","appname","__pname","fsuri","checkEntry","resolveIcon","packagePath","each","className","compability","getCanvasSupported","getContext","getVideoSupported","canPlayType","canPlayCodec","support","check","enabled","isSupported","supported","chk","_checkSupport","codec","getAudioSupported","getCanvasContexts","cache","canvas","tst","eee","detectCSSFeature","featurename","feature","domPrefixes","elm","featurenameCapital","charAt","checkWindow","indexedDB","localStorage","sessionStorage","globalStorage","openDatabase","socket","worker","orientation","touch","userAgent","getTouch","upload","xhr","XMLHttpRequest","getUpload","getUserMedia","getMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","fileSystem","dnd","css","transition","animation","canvasContext","webgl","contexts","getWebGL","audioContext","getAudioContext","svg","createElementNS","createSVGRect","video","videoTypes","webm","ogg","h264","mpeg","mkv","audio","audioTypes","mp3","wav","richtext","contentEditable","getRichText","getCompability","isIE","documentMode","$getStyle","oElm","strCssRule","strValue","defaultView","getComputedStyle","getPropertyValue","currentStyle","strMatch","p1","$","getElementById","$safeName","$remove","node","removeChild","$empty","myNode","firstChild","$position","parentEl","left","top","width","offsetWidth","height","offsetHeight","offsetLeft","offsetTop","offsetParent","getBoundingClientRect","$parent","current","$index","nodeList","children","nodeIndex","$selectRange","field","start","end","createTextRange","selRange","collapse","moveStart","moveEnd","select","focus","setSelectionRange","selectionStart","selectionEnd","$addClass","classList","add","$removeClass","$hasClass","contains","$escape","div","createTextNode","innerHTML","$create","properties","element","_foreach","dict","aria","$createCSS","onload","link","getElementsByTagName","$createJS","onreadystatechange","attrs","charset","$isFormElement","input","Event","srcElement","Element","readOnly","disabled","$css","ink","inv","$path","_path","ix","siblings","childNodes","sibling","nodeType","$fromPath","doc","XPathEvaluator","evaluate","documentElement","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","$clean","PackageManager","Compability","DOM","$themeScript","audioAvailable","oggAvailable","enableSounds","styleTheme","soundTheme","iconTheme","sounds","settheme","setTheme","theme","getStyleTheme","Themes","isFirefox","typeMap","image","image-center","image-fill","image-strech","back","wallpaper","background","backgroundImage","backgroundColor","fontFamily","backgroundAttachment","themeAction","setThemeScript","getThemeResource","animations","_setBackground","returnMetadata","convert","found","getStyleThemes","t","tmpEl","visibility","position","wd","margin","marginf","parseFloat","border","borderf","getName","getSoundTheme","volume","getSoundFilename","getSound","Audio","play","getIconTheme","meta","getPackageResource","getIcon","handler","triggerHook","thisarg","addHook","removeHook","limiter","count","outstanding","jobs","job","semaphore","run","items","mapper","failed","limit","addExtras","promiseLimit","getFileType","getSource","handlers","javascript","readyState","stylesheet","timeout","styleSheet","checkCss","preloads","force","group","done","preloadData","progress","groupEnd","success","Theme","hooks","Preloader","alreadyLaunching","runningProcesses","_kill","pid","__pid","__args","__metadata","__started","__destroyed","__evHandler","__label","__path","__scope","__iter","_emit","msg","sourceId","_app","application","v","matcher","_onMessage","first","getProcess","__preload__","onconstruct","fail","alreadyRunning","compabilityFailures","singular","pargs","preloadParallel","ResolvedPackage","getLaunchObject","fm","pack","getPackagesByMime","forceList","DialogWindow","default","btn","useDefault","transport","visible","searchable","dynamic","internal","special","sname","createMatch","isMounted","notify","option","mounted","Mountpoint","inited","mountpoints","loadTransports","transports","mountPoints","point","T","moduleName","module","getModule","unmount","hits","filterName","find","dataURL","FileDataURL","MountManager","noop","hasAlias","retm","getModuleFromPath","alias","checkMetadataArgument","checkRo","mountpoint","isReadOnly","hasSameTransport","msrc","mdst","existsWrapper","exists","requestWrapper","onVFSRequestCompleted","performRequest","errorStr","broadcastMessage","_message","w","checkPath","_check","wasTouched","checkWatches","aliased","_transform","getModules","findAlias","tuple","move","dialogProgress","prog","dialog","setProgress","sourceMountpoint","destMountpoint","vfsSettings","oitem","isShortcut","niter","opt","backlink","isOnRoot","foundBack","createBackLink","write","convertTo","convertWriteData","read","datasource","dataSource","text","jsn","copy","rename","unlink","pkgdir","chkdir","idir","mkdir","fileinfo","files","fileDest","download","trash","untrash","emptyTrash","freeSpace","unwatch","ApplicationModule","query","getFileIcon","launch","fields","applications","results","qry","dlimit","reindex","FilesystemModule","recursive","modules","errors","next","userData","loggedIn","createUI","isLoggedIn","user","getUser","userGroups","g","login","onLogin","userSettings","curLocale","detectedLocale","CoreWM","blacklistedPackages","setBlacklist","_renderUI","_createUI","tempNode","nn","cloneNode","container","_restore","removeAttribute","onsubmit","preventDefault","requestLogin","alert","Keycodes","F1","F2","F3","F4","F6","F7","F8","F9","F10","F11","F12","TILDE","GRAVE","CMD","LSUPER","RSUPER","DELETE","INSERT","HOME","END","PGDOWN","PGUP","PAUSE","BREAK","CAPS_LOCK","SCROLL_LOCK","BACKSPACE","SPACE","TAB","ENTER","ESC","LEFT","RIGHT","UP","DOWN","getEventList","mousePosition","detail","y","touches","changedTouches","clientX","clientY","keyCombination","modifiers","CTRL","ctrlKey","SHIFT","shiftKey","ALT","altKey","META","metaKey","checkFor","checks","checkMods","checkKeys","hasmod","fk","haskey","keyCode","getKeyName","$bind","makeFakeEvent","pos","nev","MouseEvent","addEventHandler","useCapture","realType","_boundEvents","customEvents","mousewheel","_wheel","direction","wheelDelta","z","click","firstTarget","firstEvent","cancelled","tempMove","newEvent","defineProperty","enumerable","dispatchEvent","dblclick","debounce","cancel","stopPropagation","contextmenu","evName","noBind","addEvent","nsType","realName","PointerEvent","MSPointerEvent","tmpName","getRealEventName","initNamespace","mouseButton","button","which","$unbind","unbindNamed","Events","BehaviourState","wm","win","$element","_$element","$top","_$top","$handle","_$resize","rectWorkspace","getWindowSpace","rectWindow","_position","_dimension","h","topMargin","borderSize","snapping","cornerSize","getSetting","windowSize","moved","startX","startY","minWidth","_properties","min_width","minHeight","min_height","windowRects","getWindows","_wid","dim","rect","right","bottom","snapRects","dir","dirX","dirY","nw","ne","se","sw","createWindowBehaviour","newRect","onMouseMove","getMouseLocked","dx","dy","newLeft","newTop","cornerSnapSize","windowSnapSize","newRight","newBottom","onWindowMove","nh","nl","nt","Math","onWindowResize","_move","_resize","onMouseDown","_state","maximized","_focus","calculateDirection","getRect","_mouselock","_onChange","onMouseUp","allow_move","_destroyed","allow_resize","WindowBehaviour","triggerFullscreen","state","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","ALLOW_KEYBOARD_INPUT","webkitCancelFullScreen","mozCancelFullScreen","exitFullscreen","super","_windows","_currentWin","_lastWin","_stylesheet","_sessionLoaded","_fullyLoaded","_isResponsive","_responsiveRes","_dcTimeout","_resizeTimeout","_$fullscreen","_$lastDomInput","__name","destroyStylesheet","onbeforeunload","Notification","subscribe","_onMouseLeave","_onOrientationChange","_onHashChange","_onResize","_onScroll","_onFullscreen","_onContextMenu","_onMouseDown","_onClick","_onKeyUp","_onKeyDown","_onKeyPress","_onError","bind","_onBeforeUnload","queries","getDefaultSetting","maxWidth","resize","_inited","foundIndex","findIndex","styles","rawStyles","rules","innerWidth","onResize","prev","_onDisplayChange","relatedTarget","toElement","nodeName","screen","onOrientationChange","getArgs","space","scrollTop","scrollLeft","notif","fullScreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","_isFullscreen","setImage","onContextMenu","blur","hitWindow","hitMenu","getAttribute","getCurrentWindow","_blur","onKeyUp","_onKeyEvent","reacted","combination","onKeyDown","accept","doPrevent","key_capture","checkPrevent","linenumber","column","exception","fileName","lineNumber","winCount","getLabel","label","createInputLabel","lbl","span","getWindowId","attr","getValueLabel","nodeValue","getViewNodeValue","siz","getProperty","param","isDataView","checked","setProperty","_setKnownAttribute","_setValueAttribute","inner","readonly","ignoreParams","classMap","textalign","fvalue","getValue","setFlexbox","grow","shrink","basis","checkel","flex","webkitBoxFlex","mozBoxFlex","webkitFlex","mozFlex","msFlex","oFlex","align","createDrag","onDown","onMove","onUp","currentX","currentY","dragging","_onMouseMove","touchDevice","diffX","diffY","_onMouseUp","getNextElement","elements","ignore_roles","querySelectorAll","getElements","currentParent","els","cur","getCurrentParent","currentIndex","getCurrentIndex","nextIndex","getNextIndex","getNext","createDraggable","effect","dragImage","onStart","onEnd","_dragStart","dataTransfer","effectAllowed","setDragImage","dragEl","dragPos","offset","opacity","createDroppable","onFilesDropped","onItemDropped","onEnter","onOver","onLeave","onDrop","_onDrop","getData","_doDrop","getParent","dropEffect","GUI","REGISTRY","getFocusElement","inst","tagMap","gui-switch","gui-list-view","gui-tree-view","gui-icon-view","gui-input-modal","createElementInstance","buildArgs","component","build","GUIElement","oldDisplay","arg2","outer","_append","parseNode","rui","createFromNode","_call","gel","values","onparse","lcase","translator","isNative","hasAttribute","parseDynamic","pel","_wasParsed","classRef","allowedChildren","allowedParents","parent","addChildren","frag","before","insertBefore","cleanScheme","newhtml","edsplit","removeSelfClosingTags","GUIScheme","scheme","triggers","render","createDocumentFragment","wrapper","gelData","getRegisteredElement","ac","childrenTagNames","sNode","ap","parentTagName","cbxhr","_load","content","getFragment","_resolve","nodes","resolving","resolveFragments","_getRoot","_restored","allow_maximize","allow_minimize","allow_close","isNaN","_setProperty","setWindowProperties","_trigger","cleaned","WindowManager","Hooks","lastMenu","clickWrapper","onclick","original","isExpander","subMenu","isTrusted","clamp","_clamp","rm","srm","customInstance","callbackMap","resolveItems","arr","par","props","labelHTML","titleHTML","entry","menu","nroot","onClick","diff","marginTop","clampSubMenu","round","setActive","Menu","getNextZindex","_lzindex","_ltzindex","ontop","waitForAnimation","anim","_animationCallback","createMediaQueries","qs","ref","_createQueries","_WID","_NAMES","dimension","tag","auto_size","_$root","_$winicon","_$loading","_$disabled","_$warning","_opts","_loaded","_initialized","_disabled","_loading","_icon","_name","_title","_tag","_children","_parent","_origtitle","_lastDimension","_lastPosition","_sound","_soundVolume","_scheme","gravity","allow_windowlist","allow_drop","allow_iconmenu","allow_ontop","allow_hotkeys","allow_session","start_focused","max_width","max_height","media_queries","focused","modal","minimized","onbottom","_queryTimer","np","getWindowPosition","restore","restored","grav","innerHeight","_wm","classNames","zIndex","window_id","role","live","windowTitle","preventTimeout","_onanimationend","_onWindowButtonClick","_onWindowIconClick","_maximize","main","_onDndEvent","_toggleLoading","_toggleDisabled","_setIcon","_updateMarkup","playSound","_minimize","maxHeight","traverseTree","sel","inittimeout","shutdown","_removeDOM","_setWarning","animatetimeout","_animateClose","_removeChild","_removeChildren","_destroyDOM","removeWindow","curWin","setCurrentWindow","lastWin","getLastWindow","setLastWindow","_destroyWin","_args","_findByQuery","fromString","createInto","Node","wmAdd","wmFocus","addWindow","child","_getChildren","_getChild","_getMaximizedSize","restoreMaximized","restoreMinimized","_toggleAttentionBlink","_blurGUI","dw","dh","cpos","cx","cy","newW","newH","newX","newY","_limitTo","_moveTo","_resizeFinished","getNewSize","ui","dmax","dmin","dclose","dres","stat","_blink","nextElement","activeElement","_nextTabIndex","checkMediaQueries","control","_close","close","minimize","maximize","byUser","eventWindow","delimiter","tel","Window","closeWithMain","closeOnEmpty","__inited","__mainwindow","__windows","__settings","__destroying","__options","focusLastWindow","last","__scheme","_removeWindow","setmain","_getWindow","wins","Dom","Application","dialogsHtml","buttonClicked","closeCallback","windowName","focusButtons","buttonMap","ButtonOK","ButtonCancel","ButtonYes","ButtonNo","_render","_findDOM","_find","onClose","parentObj","parentIsWindow","parentIsProcess","Dialogs","_on","_addChild","_addWindow","$el","$progress","Watermark","ver","Version","lines","per","$notifications","visibles","animationCallback","_remove","alt","line","getNotificationArea","pitem","createNotification","removeNotification","getNotification","cols","rows","columns","selected","convertToRGB","hex","rgb","convertToHEX","invertHEX","color","Colors","getColor","updateHex","update","hide","buttons","parseMessage","empty","extMessage","traceMessage","bugreport","open","txt","filetypes","extension","mfilter","multiple","setTo","settingsWatch","changePath","view","home","mlist","checkEmptyInput","disable","dpath","activated","checkSelection","ft","newinput","rootPath","clear","fromDropdown","lastDir","resetLastSelected","chdir","wasActivated","checkFileExtension","busy","pb","maxSize","setFile","progressDialog","fileSize","desc","fontName","fontSize","fontColor","fonts","minSize","unit","selection","preview","sizes","j","updatePreview","listFonts","listSizes","placeholder","newArgs","Transport","cors","statusText","binary","_request","FormData","byteLength","shortcuts","parentfile","_requestUpload","OSjsTransport","getTargetPath","getTargetUrl","moduleOptions","baseUrl","basename","parseListing","reqpath","uri","getElementsByTagNameNS","textContent","getFilePath","getFileId","getFileSize","getFileMime","headers","Destination","aopts","auth","copts","code","httpCode","DOMParser","parseFromString","requestUrl","show","displayMenu","createIcon","onInited","_updateIcon","destroyIcon","setTitle","Response","statusCode","getBody","encoding","baseQs","handleQs","jsonpID","queues","followRedirects","callbackName","abortTimeout","script","head","onComplete","async","callbackParameter","methodParameter","nodeify","ServiceNotificationIcon","jsonp","gapi","SingletonInstance","GoogleAPI","clientId","accessToken","userId","preloaded","authenticated","load","client","authenticate","loadAll","finished","lload","_next","signOut","immediate","authorize","client_id","user_id","createRingNotification","revoke","handleAuthResult","authResult","error_subtype","access_token","oauth2","userinfo","execute","resp","_run","CACHE_CLEAR_TIMEOUT","_authenticated","_clearCacheTimeout","_rootFolderId","_treeCache","createDirectoryList","rdir","fileType","mimeType","kind","quotaBytesUsed","createItem","getAllDirectoryFiles","doRetrieve","initialRequest","drive","retrievePageOfFiles","nextPageToken","pageToken","retrieveAllFiles","idList","parentList","parents","piter","resolves","currentParentId","_getFileList","foundId","_nextDir","completed","getFilesBelongingTo","about","rootFolderId","getFileFromPath","tmpItem","ldir","getParentPathId","setFolder","insert","folderId","resource","delete","childId","fargs","_init","ritem","fileId","getToken","downloadUrl","Authorization","parentId","boundary","close_delim","contentType","createBody","base64Data","multipartRequestBody","reqContentType","toBase64","createBoundary","fileData","uploadType","Content-Type","patch","req","useKeys","webContentLink","dirDest","rootDest","redirectURI","WindowsLiveAPI","hasSession","lastScope","WL","_login","currScope","onLogout","onLog","onSessionChange","redirect_uri","session","status","error_description","unsubscribe","_removeRing","logout","getSession","_mimeCache","_isMounted","onedriveCall","api","responseFailed","getItemType","getMetadataFromItem","itemFile","getItemMime","getFilesInFolder","resolvePath","useParent","lfound","iargs","relativePath","drivePath","fileList","srcDrivePath","dstDrivePath","authed","dbx","Dropbox","timedOut","loginTimeout","redirectUrl","authUrl","getAuthenticationUrl","_loadDependencies","_createClient","error_summary","path_display","filesSearch","max_results","mode",".tag","matches","_createMetadata","cursor","has_more","dl","sharingGetSharedLinkFile","fileBlob","filesUpload","contents","filesCopy","from_path","to_path","filesMove","filesGetMetadata","hasLink","sharingGetSharedLinks","links","newLink","sharingCreateSharedLinkWithSettings","requested_visibility","filesCreateFolder","usersGetSpaceUsage","allocation","individual","allocated","filesDelete","SearchEngine","SplashScreen","AlertDialog","ApplicationChooserDialog","ColorDialog","ConfirmDialog","ErrorDialog","FileInfoDialog","FileDialog","FileProgressDialog","FileUploadDialog","FontDialog","InputDialog","WebTransport","OsjsTransport","DistTransport","ApplicationTransport","WebdavTransport","GdriveTransport","OnedriveTransport","DropboxTransport","OSJS_DEBUG","web","osjs","dist","webdav","google-drive","onedrive","dropbox","hasBooted","hasShutDown","onError","testMode","_dialog","initPreloading","flatten","Preloads","initHandlers","log","authenticator","connection","connectionName","initVFS","addList","initSettingsManager","pools","initPackageManager","PreloadOnBoot","getManifest","initExtensions","preloadExtensions","exts","Extensions","launchExtensions","initSearchEngine","initGUI","register","Alert","ApplicationChooser","Color","Confirm","FileInfo","FileProgress","FileUpload","Font","Input","initWindowManager","wmConfig","exec","setup","initMocha","overflow","runTests","onMessage","onPostMessage","wid","Locale","LocaleOptions","Languages","watermark","AutoStart","checkMap","skipMap","getLastSession","adds","refid","createFromArray","initSession","stop","restart","toggleFullscreen","killAll","reload","lout","saveSession","running","MOUSE_PROPS","MOUSE_DEFAULTS","inType","inDict","createEvent","initEvent","bubbles","cancelable","pressure","pointerId","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","USE_MAP","Map","PointerMap","SparseArrayMap","array","has","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","newEvents","unregister","contained","ex","down","inEvent","fireEvent","up","enter","leave","over","out","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","listen","unlisten","removeEvent","eventName","boundHandler","makeEvent","_target","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","toArray","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","shadowSelector","selector","rule","watchSubtree","observe","enableOnSubtree","installOnLoad","installNewSubtree","findElements","addElement","removeElement","elementChanged","oldValue","concatLists","accum","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","mutations","mutationHandler","addedNodes","removed","removedNodes","attrib2css","selectors","hasNativePE","hasShadowRoot","ShadowDOMPolyfill","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","abs","prepareEvent","pd","prepareButtonsForMove","mousedown","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","touchActionToScrollType","_scrollType","elementRemoved","oldSt","scrollTypes","EMITTER","XSCROLLER","YSCROLLER","SCROLLER","touchAction","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","cancelResetClickCount","removePrimaryPointer","inPointer","resetClickCount","clickCount","resetId","typeToButtons","touchToPointer","cte","currentTouchEvent","radiusX","webkitRadiusX","radiusY","webkitRadiusY","webkitForce","self","processTouches","inFunction","tl","shouldScroll","scrollAxis","currentTarget","oa","da","doa","findTouch","inTL","inId","vacuumTouches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","assertConnected","elem","ownerDocument","inActiveButtonState","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","pointerevents","targetFinding","Init","mod","ERR_FILE_OPEN","ERR_WM_NOT_RUNNING","ERR_FILE_OPEN_FMT","ERR_APP_MIME_NOT_FOUND_FMT","ERR_APP_LAUNCH_FAILED","ERR_APP_LAUNCH_FAILED_FMT","ERR_APP_CONSTRUCT_FAILED_FMT","ERR_APP_INIT_FAILED_FMT","ERR_APP_RESOURCES_MISSING_FMT","ERR_APP_PRELOAD_FAILED_FMT","ERR_APP_LAUNCH_ALREADY_RUNNING_FMT","ERR_APP_LAUNCH_MANIFEST_FAILED_FMT","ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT","ERR_NO_WM_RUNNING","ERR_CORE_INIT_FAILED","ERR_CORE_INIT_FAILED_DESC","ERR_CORE_INIT_NO_WM","ERR_CORE_INIT_WM_FAILED_FMT","ERR_CORE_INIT_PRELOAD_FAILED","ERR_JAVASCRIPT_EXCEPTION","ERR_JAVACSRIPT_EXCEPTION_DESC","ERR_APP_API_ERROR","ERR_APP_API_ERROR_DESC_FMT","ERR_APP_MISSING_ARGUMENT_FMT","ERR_APP_UNKNOWN_ERROR","ERR_OPERATION_TIMEOUT","ERR_OPERATION_TIMEOUT_FMT","ERR_ARGUMENT_FMT","ERR_INVALID_LOCATION","ERR_WIN_DUPLICATE_FMT","WINDOW_MINIMIZE","WINDOW_MAXIMIZE","WINDOW_RESTORE","WINDOW_CLOSE","WINDOW_ONTOP_ON","WINDOW_ONTOP_OFF","TITLE_SIGN_OUT","TITLE_SIGNED_IN_AS_FMT","ERR_LOGIN_FMT","ERR_LOGIN_INVALID","ERR_NO_SESSION","MSG_SESSION_WARNING","BUGREPORT_MSG","SERVICENOTIFICATION_TOOLTIP","CONNECTION_LOST","CONNECTION_RESTORED","CONNECTION_RESTORE_FAILED","CONNECTION_ERROR","ERR_UTILS_XHR_FATAL","ERR_UTILS_XHR_FMT","DIALOG_LOGOUT_TITLE","DIALOG_LOGOUT_MSG_FMT","DIALOG_CLOSE","DIALOG_CANCEL","DIALOG_APPLY","DIALOG_OK","DIALOG_ALERT_TITLE","DIALOG_COLOR_TITLE","DIALOG_COLOR_R","DIALOG_COLOR_G","DIALOG_COLOR_B","DIALOG_COLOR_A","DIALOG_CONFIRM_TITLE","DIALOG_ERROR_TITLE","DIALOG_ERROR_MESSAGE","DIALOG_ERROR_SUMMARY","DIALOG_ERROR_TRACE","DIALOG_ERROR_BUGREPORT","DIALOG_FILE_SAVE","DIALOG_FILE_OPEN","DIALOG_FILE_MKDIR","DIALOG_FILE_MKDIR_MSG","DIALOG_FILE_OVERWRITE","DIALOG_FILE_MNU_VIEWTYPE","DIALOG_FILE_MNU_LISTVIEW","DIALOG_FILE_MNU_TREEVIEW","DIALOG_FILE_MNU_ICONVIEW","DIALOG_FILE_ERROR","DIALOG_FILE_ERROR_SCANDIR","DIALOG_FILE_ERROR_FIND","DIALOG_FILE_MISSING_FILENAME","DIALOG_FILE_MISSING_SELECTION","DIALOG_FILEINFO_TITLE","DIALOG_FILEINFO_LOADING","DIALOG_FILEINFO_ERROR","DIALOG_FILEINFO_ERROR_LOOKUP","DIALOG_FILEINFO_ERROR_LOOKUP_FMT","DIALOG_INPUT_TITLE","DIALOG_FILEPROGRESS_TITLE","DIALOG_FILEPROGRESS_LOADING","DIALOG_UPLOAD_TITLE","DIALOG_UPLOAD_DESC","DIALOG_UPLOAD_MSG_FMT","DIALOG_UPLOAD_MSG","DIALOG_UPLOAD_FAILED","DIALOG_UPLOAD_FAILED_MSG","DIALOG_UPLOAD_FAILED_UNKNOWN","DIALOG_UPLOAD_FAILED_CANCELLED","DIALOG_UPLOAD_TOO_BIG","DIALOG_UPLOAD_TOO_BIG_FMT","DIALOG_FONT_TITLE","DIALOG_APPCHOOSER_TITLE","DIALOG_APPCHOOSER_MSG","DIALOG_APPCHOOSER_NO_SELECTION","DIALOG_APPCHOOSER_SET_DEFAULT","GAPI_DISABLED","GAPI_SIGN_OUT","GAPI_REVOKE","GAPI_AUTH_FAILURE","GAPI_AUTH_FAILURE_FMT","GAPI_LOAD_FAILURE","WLAPI_DISABLED","WLAPI_SIGN_OUT","WLAPI_LOAD_FAILURE","WLAPI_LOGIN_FAILED","WLAPI_LOGIN_FAILED_FMT","WLAPI_INIT_FAILED_FMT","IDB_MISSING_DBNAME","IDB_NO_SUCH_ITEM","ERR_VFS_FATAL","ERR_VFS_UNAVAILABLE","ERR_VFS_FILE_ARGS","ERR_VFS_NUM_ARGS","ERR_VFS_EXPECT_FILE","ERR_VFS_EXPECT_SRC_FILE","ERR_VFS_EXPECT_DST_FILE","ERR_VFS_FILE_EXISTS","ERR_VFS_TARGET_NOT_EXISTS","ERR_VFS_TRANSFER_FMT","ERR_VFS_UPLOAD_NO_DEST","ERR_VFS_UPLOAD_NO_FILES","ERR_VFS_UPLOAD_FAIL_FMT","ERR_VFS_UPLOAD_CANCELLED","ERR_VFS_DOWNLOAD_NO_FILE","ERR_VFS_DOWNLOAD_FAILED","ERR_VFS_REMOTEREAD_EMPTY","ERR_VFS_NO_MIME_DETECT","ERR_VFSMODULE_INVALID","ERR_VFSMODULE_INVALID_FMT","ERR_VFSMODULE_INVALID_METHOD","ERR_VFSMODULE_INVALID_METHOD_FMT","ERR_VFSMODULE_INVALID_TYPE","ERR_VFSMODULE_INVALID_TYPE_FMT","ERR_VFSMODULE_INVALID_CONFIG","ERR_VFSMODULE_INVALID_CONFIG_FMT","ERR_VFSMODULE_ALREADY_MOUNTED","ERR_VFSMODULE_ALREADY_MOUNTED_FMT","ERR_VFSMODULE_NOT_MOUNTED","ERR_VFSMODULE_NOT_MOUNTED_FMT","ERR_VFSMODULE_EXCEPTION","ERR_VFSMODULE_EXCEPTION_FMT","ERR_VFSMODULE_NOT_FOUND_FMT","ERR_VFSMODULE_READONLY","ERR_VFSMODULE_READONLY_FMT","TOOLTIP_VFS_DOWNLOAD_NOTIFICATION","ERR_VFSMODULE_XHR_ERROR","ERR_VFSMODULE_ROOT_ID","ERR_VFSMODULE_NOSUCH","ERR_VFSMODULE_PARENT","ERR_VFSMODULE_PARENT_FMT","ERR_VFSMODULE_SCANDIR","ERR_VFSMODULE_SCANDIR_FMT","ERR_VFSMODULE_READ","ERR_VFSMODULE_READ_FMT","ERR_VFSMODULE_WRITE","ERR_VFSMODULE_WRITE_FMT","ERR_VFSMODULE_COPY","ERR_VFSMODULE_COPY_FMT","ERR_VFSMODULE_UNLINK","ERR_VFSMODULE_UNLINK_FMT","ERR_VFSMODULE_MOVE","ERR_VFSMODULE_MOVE_FMT","ERR_VFSMODULE_EXIST","ERR_VFSMODULE_EXIST_FMT","ERR_VFSMODULE_FILEINFO","ERR_VFSMODULE_FILEINFO_FMT","ERR_VFSMODULE_MKDIR","ERR_VFSMODULE_MKDIR_FMT","ERR_VFSMODULE_MKFILE","ERR_VFSMODULE_MKFILE_FMT","ERR_VFSMODULE_URL","ERR_VFSMODULE_URL_FMT","ERR_VFSMODULE_TRASH","ERR_VFSMODULE_TRASH_FMT","ERR_VFSMODULE_UNTRASH","ERR_VFSMODULE_UNTRASH_FMT","ERR_VFSMODULE_EMPTYTRASH","ERR_VFSMODULE_EMPTYTRASH_FMT","ERR_VFSMODULE_FIND","ERR_VFSMODULE_FIND_FMT","ERR_VFSMODULE_FREESPACE","ERR_VFSMODULE_FREESPACE_FMT","ERR_VFSMODULE_EXISTS","ERR_VFSMODULE_EXISTS_FMT","ERR_DROPBOX_API","ERR_DROPBOX_AUTH","ERR_DROPBOX_KEY","DROPBOX_NOTIFICATION_TITLE","DROPBOX_SIGN_OUT","ONEDRIVE_ERR_RESOLVE","ZIP_PRELOAD_FAIL","ZIP_VENDOR_FAIL","ZIP_NO_RESOURCE","ZIP_NO_PATH","SEARCH_LOADING","SEARCH_NO_RESULTS","ERR_PACKAGE_EXISTS","ERR_PACKAGE_MANIFEST","ERR_PACKAGE_ENUM_FAILED","ERR_FILE_APP_OPEN","ERR_FILE_APP_OPEN_FMT","ERR_FILE_APP_OPEN_ALT_FMT","ERR_FILE_APP_SAVE_ALT_FMT","ERR_GENERIC_APP_FMT","ERR_GENERIC_APP_ACTION_FMT","ERR_GENERIC_APP_UNKNOWN","ERR_GENERIC_APP_REQUEST","ERR_GENERIC_APP_FATAL_FMT","MSG_GENERIC_APP_DISCARD","MSG_FILE_CHANGED","MSG_APPLICATION_WARNING","MSG_MIME_OVERRIDE","ERR_OPEN_LOCATION","ERR_OPEN_LOCATION_FMT","LBL_UNKNOWN","LBL_APPEARANCE","LBL_USER","LBL_NAME","LBL_APPLY","LBL_FILENAME","LBL_PATH","LBL_SIZE","LBL_TYPE","LBL_MIME","LBL_LOADING","LBL_SETTINGS","LBL_ADD_FILE","LBL_COMMENT","LBL_ACCOUNT","LBL_CONNECT","LBL_ONLINE","LBL_OFFLINE","LBL_AWAY","LBL_BUSY","LBL_CHAT","LBL_HELP","LBL_ABOUT","LBL_PANELS","LBL_LOCALES","LBL_THEME","LBL_COLOR","LBL_PID","LBL_KILL","LBL_ALIVE","LBL_INDEX","LBL_ADD","LBL_FONT","LBL_YES","LBL_NO","LBL_CANCEL","LBL_TOP","LBL_LEFT","LBL_RIGHT","LBL_BOTTOM","LBL_CENTER","LBL_FILE","LBL_NEW","LBL_OPEN","LBL_SAVE","LBL_SAVEAS","LBL_CLOSE","LBL_MKDIR","LBL_UPLOAD","LBL_VIEW","LBL_EDIT","LBL_RENAME","LBL_DELETE","LBL_OPENWITH","LBL_ICONVIEW","LBL_TREEVIEW","LBL_LISTVIEW","LBL_REFRESH","LBL_VIEWTYPE","LBL_BOLD","LBL_ITALIC","LBL_UNDERLINE","LBL_REGULAR","LBL_STRIKE","LBL_INDENT","LBL_OUTDENT","LBL_UNDO","LBL_REDO","LBL_CUT","LBL_UNLINK","LBL_COPY","LBL_PASTE","LBL_INSERT","LBL_IMAGE","LBL_LINK","LBL_DISCONNECT","LBL_APPLICATIONS","LBL_ADD_FOLDER","LBL_INFORMATION","LBL_TEXT_COLOR","LBL_BACK_COLOR","LBL_RESET_DEFAULT","LBL_DOWNLOAD_COMP","LBL_ORDERED_LIST","LBL_BACKGROUND_IMAGE","LBL_BACKGROUND_COLOR","LBL_UNORDERED_LIST","LBL_STATUS","LBL_READONLY","LBL_CREATED","LBL_MODIFIED","LBL_SHOW_COLUMNS","LBL_MOVE","LBL_OPTIONS","LBL_OK","LBL_DIRECTORY","LBL_CREATE","LBL_BUGREPORT","LBL_INSTALL","LBL_UPDATE","LBL_REMOVE","LBL_SHOW_SIDEBAR","LBL_SHOW_NAVIGATION","LBL_SHOW_HIDDENFILES","LBL_SHOW_FILEEXTENSIONS","LBL_MOUNT","LBL_DESCRIPTION","LBL_USERNAME","LBL_PASSWORD","LBL_HOST","LBL_NAMESPACE","LBL_SEARCH","LBL_BACK","LBL_ICONS","LBL_ICON","LBL_UNINSTALL","LBL_REGENERATE","LBL_DESKTOP","LBL_WINDOWMANAGER","LBL_HOTKEY","LBL_HOTKEYS","LBL_MOUNTS","LBL_ID","LBL_APPLICATION","LBL_SCOPE","LBL_HIDE","LBL_REPOSITORY","LBL_VERSION","LBL_AUTHOR","LBL_GROUPS","LBL_AUTOHIDE","LBL_PERSONAL","LBL_SYSTEM","LBL_STARTING","LBL_SOUNDS","LBL_STORE","LBL_LOCALE","LBL_PACKAGE","LBL_PACKAGES","LBL_INPUT","LBL_MISC","LBL_OTHER","LBL_USERS","LBL_FONTS","LBL_OPEN_LOCATION","LBL_HOME","LBL_WIDGET","LBL_WIDGETS","LBL_LOCK","LBL_UNLOCK","LBL_WARNING","LBL_INFO","LBL_POSITION","LBL_OPACITY","LBL_ITEMS","LBL_ONTOP","LBL_BACKGROUND","LBL_QUIT","LBL_EXIT","LBL_WINDOWS","getItem","_getSettings","DemoAuthenticator","HttpConnection","port","ws","wsurl","wsqueue","destroying","_connect","reconnect","connected","WebSocket","onopen","onmessage","_index","_onmessage","onclose","_onclose","send","curr","version","setItem","DemoStorage","toggleState","expanded","GUIPanedView","orient","cel","resizer","resizeEl","previousElementSibling","startWidth","startHeight","Number","MAX_VALUE","totalSize","totalContainers","totalSpacers","newWidth","newHeight","webkitFlexBasis","mozFflexBasis","msFflexBasis","oFlexBasis","flexBasis","CustomEvent","bindResizer","GUIPanedViewContainer","GUIButtonBar","GUIToolBar","GUIGrid","GUIGridRow","GUIGridEntry","GUIVBox","GUIVBoxContainer","GUIHBox","GUIHBoxContainer","GUIExpander","lbltxt","_CLIPBOARD","setClipboard","getClipboard","Clipboard","_classMap","getEntryTagName","getEntryFromEvent","header","tn","isHeader","row","handleItemSelection","multipleSelect","findex","getValueParameter","matchValueByKey","UIDataView","_selected","oncreate","oninit","single","inView","updateActiveSelection","findId","findKey","active","_active","scrollSpace","elTop","tooltip","asValue","scrollIntoView","scroll","singleClick","wasResized","col","resetDir","expand","activate","context","underlay","cls","C","getRowSize","lastTop","handleKey","handleKeyPress","oldTop","ExtendedDate","date","defaultFormat","dayNames","monthNames","fmt","getFirstDayInMonth","getLastDayInMonth","getDaysInMonth","getWeekNumber","to","isWithinMonth","getDayOfTheYear","now","getMonth","getFullYear","getDate","_now","_y","_m","setFullYear","setHours","setDate","getDay","ceil","shrt","floor","toindex","utc","pad","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","D","getUTCDay","getUTCDate","S","W","F","getUTCMonth","M","getUTCFullYear","G","A","getUTCHours","getHours","H","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","O","tzo","getTimezoneOffset","dif","ppad","num","norm","zones","U","getTime","formatDate","GUIDataView","DateExtended","_iconSizes","filesize","removeExtension","mimeConfig","extensions","getDateFromStamp","stamp","getListViewColumns","columnMapping","defColumns","useColumns","defaultcolumns","vfsOptions","scandirOptions","resizable","readdir","sopts","childView","getChildView","setOption","cc","showFileExtensions","scanopts","showDotFiles","dotfiles","filetype","sortby","sortdir","summary","directories","_createEntry","GUIFileView","buildChildView","toggle","_readdirTimeout","getChildViewType","nel","draggable","draggable-type","createEntry","initEntry","dicon","dimg","dlabel","dspan","bindEntryEvents","GUIIconView","getSelected","getEntry","setSelected","_buttonCount","createInputOfType","attribs","tabindex","step","_bindDefaults","rolemap","TEXTAREA","INPUT","_create","setSwitchValue","_GUIInput","_GUISelect","addToSelectBox","what","selectedIndex","createSelectInput","GUILabel","isHTML","GUITextarea","scrollHeight","GUIText","GUIPassword","GUIFileUpload","onchange","GUIRadio","GUICheckbox","GUISwitch","toggleValue","GUIButton","setLabel","tip","GUISelect","GUISelectList","GUISlider","GUIInputModal","createFakeHeader","fh","fhead","fcols","rel","fcol","widthOffset","createResizers","initRow","_columns","setSize","createRow","GUIListView","cbCreated","onCreated","moveIntoInner","fakeHead","fakeHeadInner","hcols","vis","getSelectionEventAttribs","mel","didx","an","getEventName","runChildren","level","winRef","onEntryClick","GUIMenuEntry","createTyped","GUIMenuBar","submenu","updateChildren","GUIMenu","newNode","customMenu","submenus","sub","GUIIframe","_tagName","standalone","matchMedia","iframe","GUIColorBox","GUIColorSwatch","cv","ctx","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","offsetX","offsetY","getImageData","GUIProgressBar","percentage","GUIStatusBar","textNodes","TEXT_NODE","getDocument","contentDocument","contentWindow","destroyFixInterval","_fixTry","_fixInterval","clearInterval","setDocumentData","themeName","editable","getSelection","getRangeAt","rangeCount","deleteContents","insertNode","createRange","insertTextAtCursor","template","setInterval","createFixInterval","GUIRichText","execCommand","queryCommandValue","getDocumentData","toggleActive","eidx","selectTab","tabs","tab","findTab","createTab","GUITabs","newtabs","removetabs","removeTab","currentTab","handleItemExpand","_rendered","onDndEnter","onDndLeave","expander","eel","dval","GUITreeView","recurse","createVisualElement","controls","autoplay","GUIAudio","GUIVideo","GUIImage","GUICanvas","hasClosingDialog","currentFile","hasChanged","menuMap","MenuNew","newDialog","MenuSave","saveDialog","MenuSaveAs","MenuOpen","openDialog","MenuClose","openFile","checkHasChanged","discard","updateFile","_setTitle","readData","rawData","_getArgument","onDone","_setArgument","showFile","callbackVFS","saveAs","getFileData","saveFile","IFRAME_COUNT","allow_restore","_iwin","_frame","postMessage","wmRef","setLocation","oldbefore","IFrameApplicationWindow","_getResource","_response","_getMainWindow"],"mappings":"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","file":"../skylark-osjsv2-client.js","sourcesContent":["define('skylark-osjsv2-client/utils/misc',[],function () {\n    'use strict';\n    function format(format) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        const sprintfRegex = /\\{(\\d+)\\}/g;\n        function sprintf(match, number) {\n            return number in args ? args[number] : match;\n        }\n        return format.replace(sprintfRegex, sprintf);\n    }\n    function parseurl(url, modify) {\n        modify = modify || {};\n        if (!url.match(/^(\\w+\\:)\\/\\//)) {\n            url = '//' + url;\n        }\n        const protocol = url.split(/^(\\w+\\:)?\\/\\//);\n        const splitted = (() => {\n            const tmp = protocol[2].replace(/^\\/\\//, '').split('/');\n            return {\n                proto: (modify.protocol || protocol[1] || window.location.protocol || '').replace(/\\:$/, ''),\n                host: modify.host || tmp.shift(),\n                path: modify.path || '/' + tmp.join('/')\n            };\n        })();\n        function _parts() {\n            const parts = [\n                splitted.proto,\n                '://'\n            ];\n            if (modify.username) {\n                const authstr = String(modify.username) + ':' + String(modify.password);\n                parts.push(authstr);\n                parts.push('@');\n            }\n            parts.push(splitted.host);\n            parts.push(splitted.path);\n            return parts.join('');\n        }\n        return {\n            protocol: splitted.proto,\n            host: splitted.host,\n            path: splitted.path,\n            url: _parts()\n        };\n    }\n    function urlparams(search, hash) {\n        let hashes = search.slice(search.indexOf(hash ? '#' : '?') + 1).split('&');\n        return hashes.reduce((params, hash) => {\n            let [key, val] = hash.split('=');\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    }\n    function argumentDefaults(args, defaults, undef) {\n        args = args || {};\n        Object.keys(defaults).forEach(key => {\n            if (typeof defaults[key] === 'boolean' || typeof defaults[key] === 'number') {\n                if (typeof args[key] === 'undefined' || args[key] === null) {\n                    args[key] = defaults[key];\n                }\n            } else {\n                args[key] = args[key] || defaults[key];\n            }\n        });\n        return args;\n    }\n    function mergeObject(obj1, obj2, opts) {\n        opts = opts || {};\n        for (let p in obj2) {\n            if (obj2.hasOwnProperty(p)) {\n                try {\n                    if (opts.overwrite === false && obj1.hasOwnProperty(p)) {\n                        continue;\n                    }\n                    if (obj2[p].constructor === Object) {\n                        obj1[p] = mergeObject(obj1[p], obj2[p]);\n                    } else {\n                        obj1[p] = obj2[p];\n                    }\n                } catch (e) {\n                    obj1[p] = obj2[p];\n                }\n            }\n        }\n        return obj1;\n    }\n    function cloneObject(o, alternative) {\n        function _clone(i) {\n            if (typeof i !== 'object' || i === null) {\n                return i;\n            } else if (i instanceof Array) {\n                return i.map(_clone);\n            }\n            const iter = {};\n            Object.keys(i).forEach(k => {\n                iter[k] = _clone(i[k]);\n            });\n            return iter;\n        }\n        if (alternative) {\n            return _clone(o);\n        }\n        return JSON.parse(JSON.stringify(o, (key, value) => {\n            if (value && typeof value === 'object' && value.tagName) {\n                return window.undefined;\n            }\n            return value;\n        }));\n    }\n    return {\n        format: format,\n        parseurl: parseurl,\n        urlparams: urlparams,\n        argumentDefaults: argumentDefaults,\n        mergeObject: mergeObject,\n        cloneObject: cloneObject\n    };\n});\ndefine('skylark-osjsv2-client/core/locales',[\n    '../utils/misc'\n], function (misc) {\n    'use strict';\n    let DefaultLocale = 'en_EN';\n    let CurrentLocale = 'en_EN';\n    let CurrentRTL = [];\n    function _() {\n        let userLocale = {};\n        let systemLocale = {};\n        try {\n            userLocale = OSjs.require('locales/' + CurrentLocale ); // modified by lwf\n            systemLocale = OSjs.require('locales/' + DefaultLocale ); // modified by lwf\n        } catch (e) {\n            console.warn('Locale error', e);\n        }\n        const s = arguments[0];\n        let a = arguments;\n        try {\n            if (userLocale && userLocale[s]) {\n                a[0] = userLocale[s];\n            } else {\n                a[0] = systemLocale[s] || s;\n            }\n            return a.length > 1 ? misc.format.apply(null, a) : a[0];\n        } catch (e) {\n            console.warn(e.stack, e);\n        }\n        return s;\n    }\n    function __() {\n        const l = arguments[0];\n        const s = arguments[1];\n        let a = Array.prototype.slice.call(arguments, 1);\n        if (l[CurrentLocale] && l[CurrentLocale][s]) {\n            a[0] = l[CurrentLocale][s];\n        } else {\n            a[0] = l[DefaultLocale] ? l[DefaultLocale][s] || s : s;\n            if (a[0] && a[0] === s) {\n                a[0] = _.apply(null, a);\n            }\n        }\n        return a.length > 1 ? misc.format.apply(null, a) : a[0];\n    }\n    function getLocale() {\n        return CurrentLocale;\n    }\n    function setLocale(l) {\n        let locale;\n        try {\n            locale = OSjs.require('locales/' + l); // modified by lwf\n        } catch (e) {\n            console.warn('Failed to set locale', e);\n            return;\n        }\n        if (locale) {\n            CurrentLocale = l;\n        } else {\n            console.warn('Locales::setLocale()', 'Invalid locale', l, '(Using default)');\n            CurrentLocale = DefaultLocale;\n        }\n        const major = CurrentLocale.split('_')[0];\n        const html = document.querySelector('html');\n        if (html) {\n            html.setAttribute('lang', l);\n            html.setAttribute('dir', CurrentRTL.indexOf(major) !== -1 ? 'rtl' : 'ltr');\n        }\n        console.info('Locales::setLocale()', CurrentLocale);\n    }\n    function createLocalizer(locales) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            args.unshift(locales);\n            return __(...args);\n        };\n    }\n    function init(locale, options, languages) {\n        options = options || {};\n        const names = languages ? Object.keys(languages) : {};\n        if (names instanceof Array && names.indexOf(locale) !== -1) {\n            CurrentLocale = locale;\n        }\n        CurrentRTL = options.RTL || [];\n        names.forEach(k => {\n            OSjs.Locales[k] = OSjs.require('locales/' + k);//modified by lwf\n        });\n    }\n    return {\n        _: _,\n        __: __,\n        getLocale: getLocale,\n        setLocale: setLocale,\n        createLocalizer: createLocalizer,\n        init: init\n    };\n});\ndefine('skylark-osjsv2-client/helpers/event-handler',[],function () {\n    'use strict';\n    return class EventHandler {\n        constructor(name, names) {\n            this.name = name;\n            this.events = {};\n            (names || []).forEach(function (n) {\n                this.events[n] = [];\n            }, this);\n            console.debug('EventHandler::constructor()', this.events);\n        }\n        destroy() {\n            this.events = {};\n        }\n        on(name, cb, thisArg) {\n            thisArg = thisArg || this;\n            if (!(cb instanceof Function)) {\n                throw new TypeError('EventHandler::on() expects cb to be a Function');\n            }\n            const added = [];\n            const _register = n => {\n                if (!(this.events[n] instanceof Array)) {\n                    this.events[n] = [];\n                }\n                added.push(this.events[n].push(args => {\n                    return cb.apply(thisArg, args);\n                }));\n            };\n            if (name instanceof RegExp) {\n                Object.keys(this.events).forEach(function (n) {\n                    if (name.test(n)) {\n                        _register(n);\n                    }\n                });\n            } else {\n                name.replace(/\\s/g, '').split(',').forEach(function (n) {\n                    _register(n);\n                });\n            }\n            return added.length === 1 ? added[0] : added;\n        }\n        off(name, index) {\n            if (!(this.events[name] instanceof Array)) {\n                throw new TypeError('Invalid event name');\n            }\n            if (arguments.length > 1 && typeof index === 'number') {\n                this.events[name].splice(index, 1);\n            } else {\n                this.events[name] = [];\n            }\n        }\n        emit(name, args, thisArg, applyArgs) {\n            args = args || [];\n            thisArg = thisArg || this;\n            if (!(this.events[name] instanceof Array)) {\n                return;\n            }\n            this.events[name].forEach(fn => {\n                try {\n                    if (applyArgs) {\n                        fn.apply(thisArg, args);\n                    } else {\n                        fn.call(thisArg, args);\n                    }\n                } catch (e) {\n                    console.warn('EventHandler::emit() exception', name, e);\n                    console.warn(e.stack);\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/loader',[],function () {\n    'use strict';\n    class Loader {\n        constructor() {\n            this.loaders = {};\n            this.loaderGraze = {};\n            this.$container = document.createElement('osjs-loaders');\n        }\n        create(name, opts) {\n            opts = opts || {};\n            if (!this.$container.parentNode) {\n                document.body.appendChild(this.$container);\n            }\n            if (this.loaders[name]) {\n                return;\n            }\n            const el = document.createElement('osjs-loading');\n            el.title = opts.title || '';\n            if (opts.icon) {\n                const img = document.createElement('img');\n                img.src = opts.icon;\n                el.appendChild(img);\n            }\n            this.$container.appendChild(el);\n            this.loaderGraze[name] = setTimeout(() => {\n                el.style.display = 'inline-block';\n            }, 100);\n            this.loaders[name] = el;\n        }\n        destroy(name) {\n            if (!this.loaders[name]) {\n                return;\n            }\n            clearTimeout(this.loaderGraze[name]);\n            this.loaders[name].remove();\n            delete this.loaders[name];\n            delete this.loaderGraze[name];\n        }\n    }\n    return new Loader();\n});\ndefine('skylark-osjsv2-client/helpers/simplejsonconf',[],function(){\r\n  /*!\r\n   * Module: simplejsonconf\r\n   *\r\n   * Use JSON as a configuration file\r\n   *\r\n   * @author Anders Evenrud <andersevenrud@gmail.com>\r\n   * @license MIT\r\n   */\r\n\r\n  'use strict';\r\n\r\n  /*\r\n   * Check if this is an \"Object\"\r\n   */\r\n  function isObject(item) {\r\n    return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n  }\r\n\r\n  /*\r\n   * Merges the two objects together\r\n   */\r\n  function mergeDeep(target, source) {\r\n    if ( isObject(target) && isObject(source) ) {\r\n      for ( var key in source ) {\r\n        if ( isObject(source[key]) ) {\r\n          if ( !target[key] || typeof target[key] !== typeof source[key] ) {\r\n            Object.assign(target, {\r\n              [key]: {}\r\n            });\r\n          }\r\n          mergeDeep(target[key], source[key]);\r\n        } else {\r\n          Object.assign(target, {\r\n            [key]: source[key]\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  var exports = {};\r\n\r\n  /**\r\n   * Creates a new proxy object with getJSON/setJSON methods for given JSON object.\r\n   *\r\n   * @param {Object}  obj       The JSON object\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function from\r\n   * @return {Object} A proxy object\r\n   */\r\n  exports.from = (obj) => {\r\n    return {\r\n      getJSON: (path, defaultValue) => {\r\n        return exports.getJSON(obj, path, defaultValue);\r\n      },\r\n      setJSON: (path, value, opts) => {\r\n        return exports.setJSON(obj, path, value, opts);\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Resolves the given path in JSON object and returns value\r\n   *\r\n   * @example .getJSON({foo: {bar: 'baz'}}, 'foo.bar') => 'baz'\r\n   *\r\n   * @param {Object}  json          The JSON object\r\n   * @param {String}  [path=null]   The path to seek. If empty, the entire tree is returned\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function getJSON\r\n   * @return {Mixed} Result for the path\r\n   */\r\n  exports.getJSON = (json, path, defaultValue) => {\r\n    if ( typeof path === 'string' ) {\r\n      let result = null;\r\n      let ns = json;\r\n\r\n      path.split(/\\./).forEach((k, i, queue) => {\r\n        if ( i >= queue.length - 1 ) {\r\n          result = ns[k];\r\n        } else {\r\n          ns = ns[k];\r\n        }\r\n      });\r\n\r\n      return typeof result === 'undefined' ? defaultValue : result;\r\n    }\r\n\r\n    return json;\r\n  };\r\n\r\n\r\n  /**\r\n   * Resolves the given path in JSON object and returns value\r\n   *\r\n   * @example .setJSON({foo: {bar: 'baz'}}, 'foo.bar', 'jazz') => {foo: {bar: 'jazz'}}\r\n   *\r\n   * @param {Object}          json                      The JSON object\r\n   * @param {String}          path                      The path to seek. If you set this as 'null' you can define the value as a tree\r\n   * @param {Mixed}           value                     The value to set on the path\r\n   * @param {Object}          [options]                 A set of options\r\n   * @param {Boolean}         [options.prune=false]     Remove 'null' from the tree (this also prunes empty objects)\r\n   * @param {Boolean}         [options.guess=false]     Try to guess what kind of type this value is\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function setJSON\r\n   * @return {Object} The new JSON object\r\n   */\r\n  exports.setJSON = (() => {\r\n\r\n    function removeNulls(obj) {\r\n      const isArray = obj instanceof Array;\r\n\r\n      for ( let k in obj ) {\r\n        if ( obj[k] === null ) {\r\n          if ( isArray ) {\r\n            obj.splice(k, 1);\r\n          } else {\r\n            delete obj[k];\r\n          }\r\n        } else if ( typeof obj[k] === 'object') {\r\n          removeNulls(obj[k]);\r\n        }\r\n      }\r\n    }\r\n\r\n    function getNewTree(key, value) {\r\n      const queue = key.split(/\\./);\r\n\r\n      let resulted = {};\r\n      let ns = resulted;\r\n\r\n      queue.forEach((k, i) => {\r\n        if ( i >= queue.length - 1 ) {\r\n          ns[k] = value;\r\n        } else {\r\n          if ( typeof ns[k] === 'undefined' ) {\r\n            ns[k] = {};\r\n          }\r\n          ns = ns[k];\r\n        }\r\n      });\r\n\r\n      return resulted;\r\n    }\r\n\r\n    function guessValue(value) {\r\n      try {\r\n        return JSON.parse(value);\r\n      } catch ( e ) {}\r\n      return String(value);\r\n    }\r\n\r\n    return function(json, path, value, opts) {\r\n      const isTree = !path;\r\n      const options = Object.assign({\r\n        prune: false,\r\n        guess: false,\r\n        value: null,\r\n      }, opts || {});\r\n\r\n      if ( !isTree && options.guess ) {\r\n        value = guessValue(value);\r\n      }\r\n\r\n      let newTree = isTree ? value : getNewTree(path, value);\r\n      let result = mergeDeep(json, newTree);\r\n\r\n      if ( options.prune ) {\r\n        removeNulls(result);\r\n      }\r\n\r\n      return result;\r\n    };\r\n  })();\r\n\r\nreturn exports;\r\n\r\n});\ndefine('skylark-osjsv2-client/core/config',['../helpers/simplejsonconf'], function (SimpleJSON) {\n    'use strict';\n    function getConfig(path, defaultValue) {\n        const config = OSjs.getConfig();\n        if (!path) {\n            return config;\n        }\n        const result = SimpleJSON.getJSON(config, path, defaultValue);\n        return typeof result === 'object' && !(result instanceof Array) ? Object.assign({}, result) : result;\n    }\n    function getDefaultPath(fallback) {\n        if (fallback && fallback.match(/^\\//)) {\n            fallback = null;\n        }\n        return getConfig('VFS.Home') || fallback || getConfig('VFS.Dist');\n    }\n    function getBrowserPath(app) {\n        let str = getConfig('Connection.RootURI');\n        if (typeof app === 'string') {\n            str = str.replace(/\\/?$/, app.replace(/^\\/?/, '/'));\n        }\n        return str;\n    }\n    function getUserLocale() {\n        const loc = (window.navigator.userLanguage || window.navigator.language || 'en-EN').replace('-', '_');\n        const map = {\n            'nb': 'no_NO',\n            'es': 'es_ES',\n            'ru': 'ru_RU',\n            'en': 'en_EN'\n        };\n        const major = loc.split('_')[0] || 'en';\n        const minor = loc.split('_')[1] || major.toUpperCase();\n        if (map[major]) {\n            return map[major];\n        }\n        return major + '_' + minor;\n    }\n    return {\n        getConfig: getConfig,\n        getDefaultPath: getDefaultPath,\n        getBrowserPath: getBrowserPath,\n        getUserLocale: getUserLocale\n    };\n});\ndefine('skylark-osjsv2-client/core/connection',[\n    'skylark-axios',\n    '../helpers/event-handler',\n    '../helpers/loader',\n    './config'\n], function (axios, EventHandler, Loader, Config) {\n    'use strict';\n    function progressHandler(ev, onprogress) {\n        if (ev.lengthComputable) {\n            onprogress(ev, ev.loaded / ev.total);\n        } else {\n            onprogress(ev, -1);\n        }\n    }\n    function appendRequestOptions(data, options) {\n        options = options || {};\n        const onprogress = options.onprogress || function () {\n        };\n        const ignore = [\n            'onsuccess',\n            'onerror',\n            'onprogress',\n            'oncanceled'\n        ];\n        Object.keys(options).forEach(key => {\n            if (ignore.indexOf(key) === -1) {\n                data[key] = options[key];\n            }\n        });\n        data.onUploadProgress = ev => progressHandler(ev, onprogress);\n        data.onDownloadProgress = ev => progressHandler(ev, onprogress);\n        return data;\n    }\n    let _instance;\n    return class Connection {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            if (!_instance) {\n                _instance = this;\n            }\n            this.offline = false;\n            this.index = 0;\n            this._evHandler = new EventHandler(name, []);\n            this.onlineFn = () => this.onOnline();\n            this.offlineFn = () => this.onOffline();\n        }\n        init() {\n            if (typeof navigator.onLine !== 'undefined') {\n                window.addEventListener('offline', this.offlineFn);\n                window.addEventListener('online', this.onlineFn);\n            }\n            return Promise.resolve();\n        }\n        destroy() {\n            window.removeEventListener('offline', this.offlineFn);\n            window.removeEventListener('online', this.onlineFn);\n            if (this._evHandler) {\n                this._evHandler = this._evHandler.destroy();\n            }\n            _instance = null;\n        }\n        getVFSPath(item, options) {\n            options = options || {};\n            const base = Config.getConfig('Connection.RootURI', '/').replace(/\\/?$/, '/');\n            const defaultDist = Config.getConfig('VFS.Dist');\n            if (window.location.protocol === 'file:') {\n                return item ? base + item.path.substr(defaultDist.length) : base;\n            }\n            let url = Config.getConfig('Connection.FSURI', '/');\n            if (item) {\n                url += '/read';\n                options.path = item.path;\n            } else {\n                url += '/upload';\n            }\n            if (options) {\n                const q = Object.keys(options).map(k => {\n                    return k + '=' + encodeURIComponent(options[k]);\n                });\n                if (q.length) {\n                    url += '?' + q.join('&');\n                }\n            }\n            return url;\n        }\n        isOnline() {\n            return !this.offline;\n        }\n        isOffline() {\n            return this.offline;\n        }\n        onVFSRequestCompleted(mount, method, args, response, appRef) {\n            return Promise.resolve(true);\n        }\n        onOnline() {\n            console.warn('Connection::onOnline()', 'Going online...');\n            this.offline = false;\n            if (this._evHandler) {\n                this._evHandler.emit('online');\n            }\n        }\n        onOffline(reconnecting) {\n            console.warn('Connection::onOffline()', 'Going offline...');\n            if (!this.offline && this._evHandler) {\n                this._evHandler.emit('offline', [reconnecting]);\n            }\n            this.offline = true;\n        }\n        createRequest(method, args, options) {\n            args = args || {};\n            options = options || {};\n            if (this.offline) {\n                return Promise.reject(new Error('You are currently off-line and cannot perform this operation!'));\n            }\n            const {raw, requestOptions} = this.createRequestOptions(method, args);\n            return new Promise((resolve, reject) => {\n                axios(appendRequestOptions(requestOptions, options)).then(result => {\n                    return resolve(raw ? result.data : {\n                        error: false,\n                        result: result.data\n                    });\n                }).catch(error => {\n                    reject(new Error(error.message || error));\n                });\n            });\n        }\n        createRequestOptions(method, args) {\n            const realMethod = method.replace(/^FS:/, '');\n            let raw = true;\n            let requestOptions = {\n                responseType: 'json',\n                url: Config.getConfig('Connection.APIURI') + '/' + realMethod,\n                method: 'POST',\n                data: args\n            };\n            if (method.match(/^FS:/)) {\n                if (realMethod === 'get') {\n                    requestOptions.responseType = 'arraybuffer';\n                    requestOptions.url = args.url || this.getVFSPath({ path: args.path });\n                    requestOptions.method = args.method || 'GET';\n                    raw = false;\n                } else if (realMethod === 'upload') {\n                    requestOptions.url = this.getVFSPath();\n                } else {\n                    requestOptions.url = Config.getConfig('Connection.FSURI') + '/' + realMethod;\n                }\n            }\n            return {\n                raw,\n                requestOptions\n            };\n        }\n        subscribe(k, func) {\n            return this._evHandler.on(k, func, this);\n        }\n        unsubscribe(k, idx) {\n            return this._evHandler.off(k, idx);\n        }\n        static request(m, a, options) {\n            a = a || {};\n            options = options || {};\n            if (options && typeof options !== 'object') {\n                return Promise.reject(new TypeError('request() expects an object as options'));\n            }\n            Loader.create('Connection.request');\n            if (typeof options.indicator !== 'undefined') {\n                delete options.indicator;\n            }\n            return new Promise((resolve, reject) => {\n                this.instance.createRequest(m, a, options).then(response => {\n                    if (response.error) {\n                        return reject(new Error(response.error));\n                    }\n                    return resolve(response.result);\n                }).catch(err => {\n                    reject(new Error(err));\n                }).finally(() => {\n                    Loader.destroy('Connection.request');\n                });\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage',[\n    './connection',\n], function (Connection) {\n    'use strict';\n    let _instance;\n    return class Storage {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            _instance = this;\n            this.saveTimeout = null;\n        }\n        init() {\n            return Promise.resolve();\n        }\n        destroy() {\n            _instance = null;\n        }\n        saveSettings(pool, storage) {\n            clearTimeout(this.saveTimeout);\n            return new Promise((resolve, reject) => {\n                this.saveTimeout = setTimeout(() => {\n                    Connection.request('settings', {\n                        pool: pool,\n                        settings: Object.assign({}, storage)\n                    }).then(resolve).catch(reject);\n                    clearTimeout(this.saveTimeout);\n                }, 250);\n            });\n        }\n        saveSession(Process,SettingsManager) { // modified by lwf\n            return new Promise((resolve, reject) => {\n                const data = Process.getProcesses().filter(proc => typeof proc._getSessionData === 'function').map(proc => proc._getSessionData());\n                SettingsManager.set('UserSession', null, data, (err, res) => {\n                    return err ? reject(err) : resolve(res);\n                });\n            });\n        }\n        getLastSession(SettingsManager) { // modified by lwf\n            const res = SettingsManager.get('UserSession');\n            const list = (res || []).map(iter => {\n                const args = iter.args;\n                args.__resume__ = true;\n                args.__windows__ = iter.windows || [];\n                return {\n                    name: iter.name,\n                    args\n                };\n            });\n            return Promise.resolve(list);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/settings-fragment',['../utils/misc'], function (Misc) {\n    'use strict';\n    return class SettingsFragment {\n        constructor(obj, poolName, sm) {\n            this._sm = sm;\n            this._pool = poolName;\n            if (obj.constructor !== {}.constructor) {\n                if (!(obj instanceof Array)) {\n                    throw new Error('SettingsFragment will not work unless you give it a object to manage.');\n                }\n            }\n            this._settings = obj;\n        }\n        get(key, defaultValue) {\n            const ret = key ? this._settings[key] : this._settings;\n            return typeof ret === 'undefined' ? defaultValue : ret;\n        }\n        set(key, value, save, triggerWatch) {\n            if (key === null) {\n                Misc.mergeObject(this._settings, value);\n            } else {\n                if ([\n                        'number',\n                        'string'\n                    ].indexOf(typeof key) >= 0) {\n                    this._settings[key] = value;\n                } else {\n                    console.warn('SettingsFragment::set()', 'expects key to be a valid iter, not', key);\n                }\n            }\n            if (save) {\n                this._sm.save(this._pool, save);\n            }\n            if (typeof triggerWatch === 'undefined' || triggerWatch === true) {\n                this._sm.changed(this._pool);\n            }\n            return this;\n        }\n        save(callback) {\n            return this._sm.save(this._pool, callback);\n        }\n        getChained() {\n            let nestedSetting = this._settings;\n            arguments.every(function (key) {\n                if (nestedSetting[key]) {\n                    nestedSetting = nestedSetting[key];\n                    return true;\n                }\n                return false;\n            });\n            return nestedSetting;\n        }\n        mergeDefaults(defaults) {\n            Misc.mergeObject(this._settings, defaults, { overwrite: false });\n            return this;\n        }\n        instance(key) {\n            if (typeof this._settings[key] === 'undefined') {\n                throw new Error(\"The object doesn't contain that key. SettingsFragment will not work.\");\n            }\n            return new SettingsFragment(this._settings[key], this._pool, this._sm);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/settings-manager',[\n    './storage',\n    '../helpers/settings-fragment'\n], function (Storage, SettingsFragment) {\n    'use strict';\n    class SettingsManager {\n        constructor() {\n            this.storage = {};\n            this.defaultSettings = {};\n            this.watches = [];\n        }\n        init(settings) {\n            this.storage = settings || {};\n            return Promise.resolve();\n        }\n        get(pool, key) {\n            try {\n                if (this.storage[pool] && Object.keys(this.storage[pool]).length) {\n                    return key ? this.storage[pool][key] : this.storage[pool];\n                }\n                return key ? this.defaultSettings[pool][key] : this.defaultSettings[pool];\n            } catch (e) {\n                console.warn('SettingsManager::get()', 'exception', e, e.stack);\n            }\n            return false;\n        }\n        set(pool, key, value, save, triggerWatch) {\n            let promise = Promise.resolve(true);\n            try {\n                if (key) {\n                    if (typeof this.storage[pool] === 'undefined') {\n                        this.storage[pool] = {};\n                    }\n                    if ([\n                            'number',\n                            'string'\n                        ].indexOf(typeof key) >= 0) {\n                        this.storage[pool][key] = value;\n                    } else {\n                        console.warn('SettingsManager::set()', 'expects key to be a valid iter, not', key);\n                    }\n                } else {\n                    this.storage[pool] = value;\n                }\n            } catch (e) {\n                console.warn('SettingsManager::set()', 'exception', e, e.stack);\n            }\n            if (save) {\n                promise = this.save(pool);\n                if (typeof save === 'function') {\n                    console.warn('Using a callback is deprecated, you should use the returned promise');\n                    promise.then(res => save(false, res)).catch(err => save(err, false));\n                }\n            }\n            if (typeof triggerWatch === 'undefined' || triggerWatch === true) {\n                this.changed(pool);\n            }\n            return promise;\n        }\n        save(pool) {\n            console.debug('SettingsManager::save()', pool, this.storage);\n            const saveableStorage = {};\n            Object.keys(this.storage).filter(n => {\n                return !n.match(/^__/);\n            }).forEach(n => {\n                saveableStorage[n] = this.storage[n];\n            });\n            return Storage.instance.saveSettings(pool, saveableStorage);\n        }\n        defaults(pool, defaults) {\n            this.defaultSettings[pool] = defaults;\n        }\n        instance(pool, defaults) {\n            if (!this.storage[pool] || this.storage[pool] instanceof Array) {\n                this.storage[pool] = {};\n            }\n            const instance = new SettingsFragment(this.storage[pool], pool, this);\n            if (arguments.length > 1) {\n                this.defaults(pool, defaults);\n                instance.mergeDefaults(defaults);\n            }\n            return instance;\n        }\n        unwatch(index) {\n            if (typeof this.watches[index] !== 'undefined') {\n                delete this.watches[index];\n            }\n        }\n        watch(pool, callback) {\n            if (!this.storage[pool]) {\n                return false;\n            }\n            const index = this.watches.push({\n                pool: pool,\n                callback: callback\n            });\n            return index - 1;\n        }\n        changed(pool) {\n            this.watches.forEach(watch => {\n                if (watch && watch.pool === pool) {\n                    watch.callback(this.storage[pool]);\n                }\n            });\n            return this;\n        }\n        clear(pool, save) {\n            save = typeof save === 'undefined' || save === true;\n            this.set(pool, null, {}, save);\n            return this;\n        }\n    }\n    return new SettingsManager();\n});\ndefine('utils/misc',[],function () {\n    'use strict';\n    function format(format) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        const sprintfRegex = /\\{(\\d+)\\}/g;\n        function sprintf(match, number) {\n            return number in args ? args[number] : match;\n        }\n        return format.replace(sprintfRegex, sprintf);\n    }\n    function parseurl(url, modify) {\n        modify = modify || {};\n        if (!url.match(/^(\\w+\\:)\\/\\//)) {\n            url = '//' + url;\n        }\n        const protocol = url.split(/^(\\w+\\:)?\\/\\//);\n        const splitted = (() => {\n            const tmp = protocol[2].replace(/^\\/\\//, '').split('/');\n            return {\n                proto: (modify.protocol || protocol[1] || window.location.protocol || '').replace(/\\:$/, ''),\n                host: modify.host || tmp.shift(),\n                path: modify.path || '/' + tmp.join('/')\n            };\n        })();\n        function _parts() {\n            const parts = [\n                splitted.proto,\n                '://'\n            ];\n            if (modify.username) {\n                const authstr = String(modify.username) + ':' + String(modify.password);\n                parts.push(authstr);\n                parts.push('@');\n            }\n            parts.push(splitted.host);\n            parts.push(splitted.path);\n            return parts.join('');\n        }\n        return {\n            protocol: splitted.proto,\n            host: splitted.host,\n            path: splitted.path,\n            url: _parts()\n        };\n    }\n    function urlparams(search, hash) {\n        let hashes = search.slice(search.indexOf(hash ? '#' : '?') + 1).split('&');\n        return hashes.reduce((params, hash) => {\n            let [key, val] = hash.split('=');\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    }\n    function argumentDefaults(args, defaults, undef) {\n        args = args || {};\n        Object.keys(defaults).forEach(key => {\n            if (typeof defaults[key] === 'boolean' || typeof defaults[key] === 'number') {\n                if (typeof args[key] === 'undefined' || args[key] === null) {\n                    args[key] = defaults[key];\n                }\n            } else {\n                args[key] = args[key] || defaults[key];\n            }\n        });\n        return args;\n    }\n    function mergeObject(obj1, obj2, opts) {\n        opts = opts || {};\n        for (let p in obj2) {\n            if (obj2.hasOwnProperty(p)) {\n                try {\n                    if (opts.overwrite === false && obj1.hasOwnProperty(p)) {\n                        continue;\n                    }\n                    if (obj2[p].constructor === Object) {\n                        obj1[p] = mergeObject(obj1[p], obj2[p]);\n                    } else {\n                        obj1[p] = obj2[p];\n                    }\n                } catch (e) {\n                    obj1[p] = obj2[p];\n                }\n            }\n        }\n        return obj1;\n    }\n    function cloneObject(o, alternative) {\n        function _clone(i) {\n            if (typeof i !== 'object' || i === null) {\n                return i;\n            } else if (i instanceof Array) {\n                return i.map(_clone);\n            }\n            const iter = {};\n            Object.keys(i).forEach(k => {\n                iter[k] = _clone(i[k]);\n            });\n            return iter;\n        }\n        if (alternative) {\n            return _clone(o);\n        }\n        return JSON.parse(JSON.stringify(o, (key, value) => {\n            if (value && typeof value === 'object' && value.tagName) {\n                return window.undefined;\n            }\n            return value;\n        }));\n    }\n    return {\n        format: format,\n        parseurl: parseurl,\n        urlparams: urlparams,\n        argumentDefaults: argumentDefaults,\n        mergeObject: mergeObject,\n        cloneObject: cloneObject\n    };\n});\ndefine('skylark-osjsv2-client/utils/fs',['utils/misc'], function (Utils) {\n    'use strict';\n    function getPathFromVirtual(str) {\n        str = str || '';\n        const res = str.split(/([A-z0-9\\-_]+)\\:\\/\\/(.*)/)[2] || '';\n        return res.replace(/^\\/?/, '/');\n    }\n    function getPathProtocol(orig) {\n        const tmp = document.createElement('a');\n        tmp.href = orig;\n        return tmp.protocol.replace(/:$/, '');\n    }\n    function filename(p) {\n        return (p || '').replace(/\\/$/, '').split('/').pop();\n    }\n    function filext(d) {\n        const ext = filename(d).split('.').pop();\n        return ext ? ext.toLowerCase() : null;\n    }\n    function dirname(f) {\n        function _parentDir(p) {\n            const pstr = p.split(/^(.*)\\:\\/\\/(.*)/).filter(function (n) {\n                return n !== '';\n            });\n            const args = pstr.pop();\n            const prot = pstr.pop();\n            let result = '';\n            const tmp = args.split('/').filter(function (n) {\n                return n !== '';\n            });\n            if (tmp.length) {\n                tmp.pop();\n            }\n            result = tmp.join('/');\n            if (!result.match(/^\\//)) {\n                result = '/' + result;\n            }\n            if (prot) {\n                result = prot + '://' + result;\n            }\n            return result;\n        }\n        return f.match(/^((.*)\\:\\/\\/)?\\/$/) ? f : _parentDir(f.replace(/\\/$/, ''));\n    }\n    function humanFileSize(bytes, si) {\n        const units = si ? [\n            'kB',\n            'MB',\n            'GB',\n            'TB',\n            'PB',\n            'EB',\n            'ZB',\n            'YB'\n        ] : [\n            'KiB',\n            'MiB',\n            'GiB',\n            'TiB',\n            'PiB',\n            'EiB',\n            'ZiB',\n            'YiB'\n        ];\n        const thresh = si ? 1000 : 1024;\n        if (bytes < thresh) {\n            return bytes + ' B';\n        }\n        let u = -1;\n        do {\n            bytes /= thresh;\n            ++u;\n        } while (bytes >= thresh);\n        return bytes.toFixed(1) + ' ' + units[u];\n    }\n    function escapeFilename(n) {\n        return (n || '').replace(/[\\|&;\\$%@\"<>\\(\\)\\+,\\*\\/]/g, '').trim();\n    }\n    function replaceFileExtension(filename, rep) {\n        const spl = filename.split('.');\n        spl.pop();\n        spl.push(rep);\n        return spl.join('.');\n    }\n    function replaceFilename(orig, newname) {\n        const spl = orig.split('/');\n        spl.pop();\n        spl.push(newname);\n        return spl.join('/');\n    }\n    function pathJoin() {\n        let parts = [];\n        let prefix = '';\n        function getPart(s) {\n            if (s.match(/^([A-z0-9\\-_]+)\\:\\//)) {\n                const spl = s.split(/^([A-z0-9\\-_]+)\\:\\//);\n                if (!prefix) {\n                    prefix = spl[1] + '://';\n                }\n                s = spl[2] || '';\n            }\n            s = s.replace(/^\\/+/, '').replace(/\\/+$/, '');\n            return s.split('/').filter(function (i) {\n                return [\n                    '',\n                    '.',\n                    '..'\n                ].indexOf(i) === -1;\n            }).join('/');\n        }\n        for (let i = 0; i < arguments.length; i++) {\n            const str = getPart(String(arguments[i]));\n            if (str) {\n                parts.push(str);\n            }\n        }\n        return prefix + parts.join('/').replace(/^\\/?/, '/');\n    }\n    function getFilenameRange(val) {\n        val = val || '';\n        const range = {\n            min: 0,\n            max: val.length\n        };\n        if (val.match(/^\\./)) {\n            if (val.length >= 2) {\n                range.min = 1;\n            }\n        } else {\n            if (val.match(/\\.(\\w+)$/)) {\n                const m = val.split(/\\.(\\w+)$/);\n                for (let i = m.length - 1; i >= 0; i--) {\n                    if (m[i].length) {\n                        range.max = val.length - m[i].length - 1;\n                        break;\n                    }\n                }\n            }\n        }\n        return range;\n    }\n    function btoaUrlsafe(str) {\n        return !str || !str.length ? '' : btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n    }\n    function atobUrlsafe(str) {\n        if (str && str.length) {\n            str = (str + '===').slice(0, str.length + str.length % 4);\n            return atob(str.replace(/-/g, '+').replace(/_/g, '/'));\n        }\n        return '';\n    }\n    function btoaUtf(str) {\n        const _unescape = window.unescape || function (s) {\n            function d(x, n) {\n                return String.fromCharCode(parseInt(n, 16));\n            }\n            return s.replace(/%([0-9A-F]{2})/i, d);\n        };\n        str = _unescape(encodeURIComponent(str));\n        return btoa(str);\n    }\n    function atobUtf(str) {\n        const _escape = window.escape || function (s) {\n            function q(c) {\n                c = c.charCodeAt();\n                return '%' + (c < 16 ? '0' : '') + c.toString(16).toUpperCase();\n            }\n            return s.replace(/[\\x00-),:-?[-^`{-\\xFF]/g, q);\n        };\n        const trans = _escape(atob(str));\n        return decodeURIComponent(trans);\n    }\n    function checkAcceptMime(mime, list) {\n        if (mime && list.length) {\n            let re;\n            for (let i = 0; i < list.length; i++) {\n                re = new RegExp(list[i]);\n                if (re.test(mime) === true) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    function filterScandir(list, options, defaultOptions) {\n        defaultOptions = Utils.cloneObject(defaultOptions || {});\n        const ioptions = Utils.cloneObject(options, true);\n        let ooptions = Object.assign({}, defaultOptions.scandir || {}, ioptions);\n        ooptions = Object.assign({}, {\n            sortBy: null,\n            sortDir: 'asc',\n            typeFilter: null,\n            mimeFilter: [],\n            showHiddenFiles: true\n        }, ooptions);\n        function filterFile(iter) {\n            if (ooptions.typeFilter && iter.type !== ooptions.typeFilter || !ooptions.showHiddenFiles && iter.filename.match(/^\\.\\w/)) {\n                return false;\n            }\n            return true;\n        }\n        function validMime(iter) {\n            if (ooptions.mimeFilter && ooptions.mimeFilter.length && iter.mime) {\n                return ooptions.mimeFilter.some(function (miter) {\n                    if (iter.mime.match(miter)) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return true;\n        }\n        const result = list.filter(function (iter) {\n            if (iter.filename === '..' || !filterFile(iter)) {\n                return false;\n            }\n            if (iter.type === 'file' && !validMime(iter)) {\n                return false;\n            }\n            return true;\n        }).map(function (iter) {\n            if (iter.mime === 'application/vnd.google-apps.folder') {\n                iter.type = 'dir';\n            }\n            return iter;\n        });\n        const sb = ooptions.sortBy;\n        const types = {\n            mtime: 'date',\n            ctime: 'date'\n        };\n        if ([\n                'filename',\n                'size',\n                'mime',\n                'ctime',\n                'mtime'\n            ].indexOf(sb) !== -1) {\n            if (types[sb] === 'date') {\n                result.sort(function (a, b) {\n                    a = new Date(a[sb]);\n                    b = new Date(b[sb]);\n                    return a > b ? 1 : b > a ? -1 : 0;\n                });\n            } else {\n                if (sb === 'size' || !String.prototype.localeCompare) {\n                    result.sort(function (a, b) {\n                        return a[sb] > b[sb] ? 1 : b[sb] > a[sb] ? -1 : 0;\n                    });\n                } else {\n                    result.sort(function (a, b) {\n                        return String(a[sb]).localeCompare(String(b[sb]));\n                    });\n                }\n            }\n            if (ooptions.sortDir === 'desc') {\n                result.reverse();\n            }\n        }\n        return result.filter(function (iter) {\n            return iter.type === 'dir';\n        }).concat(result.filter(function (iter) {\n            return iter.type !== 'dir';\n        }));\n    }\n    function _abToSomething(m, arrayBuffer, mime, callback) {\n        mime = mime || 'application/octet-stream';\n        try {\n            const blob = new Blob([arrayBuffer], { type: mime });\n            const r = new FileReader();\n            r.onerror = function (e) {\n                callback(e);\n            };\n            r.onloadend = function () {\n                callback(false, r.result);\n            };\n            r[m](blob);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    function addFormFile(fd, key, data, file) {\n        file = file || {\n            mime: 'application/octet-stream',\n            filename: 'filename'\n        };\n        if (data instanceof window.File) {\n            fd.append(key, data);\n        } else if (data instanceof window.ArrayBuffer) {\n            try {\n                data = new Blob([data], { type: file.mime });\n            } catch (e) {\n                data = null;\n                console.warn(e, e.stack);\n            }\n            fd.append(key, data, file.filename);\n        } else {\n            if (data.data && data.filename) {\n                fd.append(key, data.data, data.filename);\n            }\n        }\n    }\n    function dataSourceToAb(data, mime, callback) {\n        const byteString = atob(data.split(',')[1]);\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        callback(false, ab);\n    }\n    function textToAb(data, mime, callback) {\n        _abToSomething('readAsArrayBuffer', data, mime, callback);\n    }\n    function abToDataSource(arrayBuffer, mime, callback) {\n        _abToSomething('readAsDataURL', arrayBuffer, mime, callback);\n    }\n    function abToText(arrayBuffer, mime, callback) {\n        _abToSomething('readAsText', arrayBuffer, mime, callback);\n    }\n    function abToBinaryString(arrayBuffer, mime, callback) {\n        _abToSomething('readAsBinaryString', arrayBuffer, mime, callback);\n    }\n    function abToBlob(arrayBuffer, mime, callback) {\n        mime = mime || 'application/octet-stream';\n        try {\n            const blob = new Blob([arrayBuffer], { type: mime });\n            callback(false, blob);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    function blobToAb(data, callback) {\n        try {\n            const r = new FileReader();\n            r.onerror = function (e) {\n                callback(e);\n            };\n            r.onloadend = function () {\n                callback(false, r.result);\n            };\n            r.readAsArrayBuffer(data);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    return {\n        getPathFromVirtual: getPathFromVirtual,\n        getPathProtocol: getPathProtocol,\n        filename: filename,\n        filext: filext,\n        dirname: dirname,\n        humanFileSize: humanFileSize,\n        escapeFilename: escapeFilename,\n        replaceFileExtension: replaceFileExtension,\n        replaceFilename: replaceFilename,\n        pathJoin: pathJoin,\n        getFilenameRange: getFilenameRange,\n        btoaUrlsafe: btoaUrlsafe,\n        atobUrlsafe: atobUrlsafe,\n        btoaUtf: btoaUtf,\n        atobUtf: atobUtf,\n        checkAcceptMime: checkAcceptMime,\n        filterScandir: filterScandir,\n        addFormFile: addFormFile,\n        dataSourceToAb: dataSourceToAb,\n        textToAb: textToAb,\n        abToDataSource: abToDataSource,\n        abToText: abToText,\n        abToBinaryString: abToBinaryString,\n        abToBlob: abToBlob,\n        blobToAb: blobToAb\n    };\n});\ndefine('skylark-osjsv2-client/vfs/file',[\n    '../utils/fs',\n    '../core/config',\n    '../core/locales'\n], function (FS, Config, Locales) {\n    'use strict';\n    return class FileMetadata {\n        constructor(arg, mime) {\n            if (!arg) {\n                throw new Error(Locales._('ERR_VFS_FILE_ARGS'));\n            }\n            this.path = null;\n            this.filename = null;\n            this.type = null;\n            this.size = null;\n            this.mime = null;\n            this.id = null;\n            this.shortcut = false;\n            if (typeof arg === 'object') {\n                this.setData(arg);\n            } else if (typeof arg === 'string') {\n                this.path = arg;\n                this.setData();\n            }\n            if (typeof mime === 'string') {\n                if (mime.match(/\\//)) {\n                    this.mime = mime;\n                } else {\n                    this.type = mime;\n                }\n            }\n            this._guessMime();\n        }\n        setData(o) {\n            if (o) {\n                Object.keys(o).forEach(k => {\n                    if (k !== '_element') {\n                        this[k] = o[k];\n                    }\n                });\n            }\n            if (!this.filename) {\n                this.filename = FS.filename(this.path);\n            }\n        }\n        getData() {\n            return {\n                path: this.path,\n                filename: this.filename,\n                type: this.type,\n                size: this.size,\n                mime: this.mime,\n                id: this.id\n            };\n        }\n        _guessMime() {\n            if (this.mime || this.type === 'dir' || (!this.path || this.path.match(/\\/$/))) {\n                return;\n            }\n            const ext = FS.filext(this.path);\n            this.mime = Config.getConfig('MIME.mapping')['.' + ext] || 'application/octet-stream';\n        }\n        static fromUpload(destination, f) {\n            return new FileMetadata({\n                filename: f.name,\n                path: (destination + '/' + f.name).replace(/\\/\\/\\/\\/+/, '///'),\n                mime: f.mime || 'application/octet-stream',\n                size: f.size\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/package-manager',[\n    './settings-manager',\n    '../utils/misc',\n    './locales',\n    './config',\n    '../utils/fs',\n    './connection'\n], function ( SettingsManager, misc, locales, config, FS, Connection) {\n    'use strict';\n    const resolvePreloads = (metadata, pm) => {\n        const packageURI = config.getConfig('Connection.PackageURI');\n        const mapIter = s => typeof s === 'string' ? { src: s } : s;\n        let additions = [];\n        let list = (metadata.preload || []).slice(0).map(mapIter);\n        if (metadata.depends instanceof Array) {\n            metadata.depends.forEach(k => {\n                if (!OSjs.Applications[k]) {\n                    const pkg = pm.getPackage(k);\n                    if (pkg) {\n                        console.info('Using dependency', k);\n                        additions = additions.concat(pkg.preload.map(mapIter));\n                    }\n                }\n            });\n        }\n        const pkgs = pm.getPackages(false); \n        Object.keys(pkgs).forEach(pn => {\n            const p = pkgs[pn];\n            if (p.type === 'extension' && p.uses === name) {\n                if (p) {\n                    console.info('Using extension', pn);\n                    additions = additions.concat(p.preload.map(mapIter));\n                }\n            }\n        });\n        return additions.concat(list).map(p => {\n            if (!p.src.match(/^(\\/|https?|ftp)/)) {\n                if (metadata.scope === 'user') {\n                    pm.VFS.url(FS.pathJoin(metadata.path, p.src)).then(url => {\n                        p.src = url;\n                        return true;\n                    });\n                } else {\n                    p.src = FS.pathJoin(packageURI, metadata.path, p.src);\n                }\n            }\n            return p;\n        });\n    };\n    class PackageManager {\n        constructor() { \n            this.packages = {};\n            this.blacklist = [];\n        }\n        destroy() {\n            this.packages = {};\n            this.blacklist = [];\n        }\n        init(Authenticator,VFS, metadata, isStandalone) { // modified by lwf\n            this.Authenticator = Authenticator;\n            this.VFS = VFS;\n            console.debug('PackageManager::load()', metadata);\n            return new Promise((resolve, reject) => {\n                const setPackages = metadata ? this.setPackages(metadata) : Promise.resolve();\n                setPackages.then(() => {\n                    if (isStandalone) {\n                        return resolve(true);\n                    }\n                    return this._loadMetadata().then(() => {\n                        const len = Object.keys(this.packages).length;\n                        if (len) {\n                            return resolve(true);\n                        }\n                        return reject(new Error(locales._('ERR_PACKAGE_ENUM_FAILED')));\n                    }).catch(reject);\n                }).catch(reject);\n            });\n        }\n        _loadMetadata() {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'list',\n                    args: { paths: paths }\n                }).then(res => {\n                    return this.setPackages(res).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        generateUserMetadata() {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            return new Promise((resolve, reject) => {\n                const cb = () => this._loadMetadata().then(resolve).catch(reject);\n                Connection.request('packages', {\n                    command: 'cache',\n                    args: {\n                        action: 'generate',\n                        scope: 'user',\n                        paths: paths\n                    }\n                }).then(cb).catch(cb);\n            });\n        }\n        _addPackages(result, scope) {\n            console.debug('PackageManager::_addPackages()', result);\n            const keys = Object.keys(result);\n            if (!keys.length) {\n                return;\n            }\n            const currLocale = locales.getLocale();\n            keys.forEach(i => {\n                const newIter = misc.cloneObject(result[i]);\n                if (typeof newIter !== 'object') {\n                    return;\n                }\n                if (typeof newIter.names !== 'undefined' && newIter.names[currLocale]) {\n                    newIter.name = newIter.names[currLocale];\n                }\n                if (typeof newIter.descriptions !== 'undefined' && newIter.descriptions[currLocale]) {\n                    newIter.description = newIter.descriptions[currLocale];\n                }\n                if (!newIter.description) {\n                    newIter.description = newIter.name;\n                }\n                newIter.scope = scope || 'system';\n                newIter.type = newIter.type || 'application';\n                this.packages[i] = newIter;\n            });\n        }\n        install(file, root) {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            if (typeof root !== 'string') {\n                root = paths[0];\n            }\n            const dest = FS.pathJoin(root, file.filename.replace(/\\.zip$/i, ''));\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'install',\n                    args: {\n                        zip: file.path,\n                        dest: dest,\n                        paths: paths\n                    }\n                }).then(() => {\n                    return this.generateUserMetadata().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        uninstall(file) {\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'uninstall',\n                    args: { path: file.path }\n                }).then(() => {\n                    return this.generateUserMetadata().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        setBlacklist(list) {\n            this.blacklist = list || [];\n        }\n        getStorePackages(opts) {\n            const repos = SettingsManager.instance('PackageManager').get('Repositories', []);\n            let entries = [];\n            return new Promise((resolve, reject) => {\n                Promise.all(repos.map(url => {\n                    return new Promise((yes, no) => {\n                        Connection.request('curl', {\n                            url: url,\n                            method: 'GET'\n                        }).then(result => {\n                            let list = [];\n                            if (typeof result.body === 'string') {\n                                try {\n                                    list = JSON.parse(result.body);\n                                } catch (e) {\n                                }\n                            }\n                            entries = entries.concat(list.map(iter => {\n                                iter._repository = url;\n                                return iter;\n                            }));\n                            return yes();\n                        }).catch(no);\n                    });\n                })).then(() => resolve(entries)).catch(reject);\n            });\n        }\n        getPackage(name) {\n            if (typeof this.packages[name] !== 'undefined') {\n                return Object.freeze(misc.cloneObject(this.packages)[name]);\n            }\n            return false;\n        }\n        getPackages(filtered) {\n            const Authenticator = this.Authenticator;\n\n            const hidden = SettingsManager.instance('PackageManager').get('Hidden', []);\n            const p = misc.cloneObject(this.packages);\n            const allowed = iter => {\n                if (this.blacklist.indexOf(iter.path) >= 0) {\n                    return false;\n                }\n                if (iter && iter.groups instanceof Array) {\n                    if (!Authenticator.instance().checkPermission(iter.groups)) { // modified by lwf\n                        return false;\n                    }\n                }\n                return true;\n            };\n            if (typeof filtered === 'undefined' || filtered === true) {\n                const result = {};\n                Object.keys(p).forEach(name => {\n                    const iter = p[name];\n                    if (!allowed(iter)) {\n                        return;\n                    }\n                    if (iter && hidden.indexOf(name) < 0) {\n                        result[name] = iter;\n                    }\n                });\n                return Object.freeze(result);\n            }\n            return Object.freeze(p);\n        }\n        getPackagesByMime(mime) {\n            const list = [];\n            const p = misc.cloneObject(this.packages);\n            Object.keys(p).forEach(i => {\n                if (this.blacklist.indexOf(i) < 0) {\n                    const a = p[i];\n                    if (a && a.mime) {\n                        if (FS.checkAcceptMime(mime, a.mime)) {\n                            list.push(i);\n                        }\n                    }\n                }\n            });\n            return list;\n        }\n        getPackageResource(app, name, vfspath) {\n            if (name.match(/^((https?:)|\\.)?\\//)) {\n                return name;\n            }\n            name = name.replace(/^\\.\\//, '');\n            const appname = typeof app === 'string' ? app : app.__pname;\n            const fsuri = config.getConfig('Connection.FSURI');\n            const pkg = this.getPackage(appname);\n            let path = name;\n            if (pkg) {\n                path = pkg.scope === 'user' ? '/user-package/' + FS.filename(pkg.path) + '/' + name.replace(/^\\//, '') : 'packages/' + pkg.path + '/' + name;\n                if (vfspath) {\n                    return pkg.scope === 'user' ? path.substr(fsuri.length) : config.getConfig('VFS.Dist') + path;\n                }\n            }\n            return path;\n        }\n        setPackages(res) { \n            const packages = {};\n            const locale = locales.getLocale();\n            const checkEntry = (key, iter, scope) => {\n                iter = Object.assign({}, iter);\n                iter.type = iter.type || 'application';\n                if (scope) {\n                    iter.scope = scope;\n                }\n                if (iter.names && iter.names[locale]) {\n                    iter.name = iter.names[locale];\n                }\n                if (iter.descriptions && iter.descriptions[locale]) {\n                    iter.description = iter.descriptions[locale];\n                }\n                let resolveIcon = () => {\n                    if (iter.icon && iter.path) {\n                        let packagePath = iter.path.replace(/^\\//, '');\n                        if (iter.scope === 'user') {\n                            return this.VFS.url(FS.pathJoin(packagePath, iter.icon));\n                        } else {\n                            if (iter.icon.match(/^\\.\\//)) {\n                                const packageURI = config.getConfig('Connection.PackageURI').replace(/\\/?$/, '/');\n                                return Promise.resolve(packageURI + packagePath + iter.icon.replace(/^\\./, ''));\n                            }\n                        }\n                    }\n                    return Promise.resolve(iter.icon);\n                };\n                iter.preload = resolvePreloads(iter, this); \n                return new Promise((resolve, reject) => {\n                    resolveIcon().then(icon => {\n                        if (icon) {\n                            iter.icon = icon;\n                        }\n                        return resolve(iter);\n                    }).catch(reject);\n                });\n            };\n            return new Promise((resolve, reject) => {\n                const entries = Object.keys(res || {});\n                Promise.each(entries, key => {\n                    return new Promise((yes, no) => {\n                        const iter = res[key];\n                        if (iter && !packages[iter.className]) {\n                            checkEntry(key, iter).then(pkg => {\n                                packages[iter.className] = pkg;\n                                return yes();\n                            }).catch(no);\n                        } else {\n                            console.warn('No such package', key);\n                            yes();\n                        }\n                    });\n                }).catch(reject).then(() => {\n                    this.packages = packages;\n                    return resolve();\n                });\n            });\n        }\n    }\n    return new PackageManager();\n});\ndefine('skylark-osjsv2-client/utils/compability',[],function () {\n    'use strict';\n    const compability = function () {\n        function _checkSupport(enabled, check, isSupported) {\n            const supported = {};\n            Object.keys(check).forEach(key => {\n                let chk = check[key];\n                let value = false;\n                if (chk instanceof Array) {\n                    chk.forEach(c => {\n                        value = isSupported(c);\n                        return !value;\n                    });\n                } else {\n                    value = isSupported(chk);\n                }\n                supported[key] = value;\n            });\n            return supported;\n        }\n        function getUpload() {\n            try {\n                const xhr = new XMLHttpRequest();\n                return !!(xhr && 'upload' in xhr && 'onprogress' in xhr.upload);\n            } catch (e) {\n            }\n            return false;\n        }\n        function getCanvasSupported() {\n            return document.createElement('canvas').getContext ? document.createElement('canvas') : null;\n        }\n        function getVideoSupported() {\n            return document.createElement('video').canPlayType ? document.createElement('video') : null;\n        }\n        function canPlayCodec(support, check) {\n            return _checkSupport(support, check, codec => {\n                try {\n                    return !!support.canPlayType(codec);\n                } catch (e) {\n                }\n                return false;\n            });\n        }\n        function getVideoTypesSupported() {\n            return canPlayCodec(getVideoSupported(), {\n                webm: 'video/webm; codecs=\"vp8.0, vorbis\"',\n                ogg: 'video/ogg; codecs=\"theora\"',\n                h264: [\n                    'video/mp4; codecs=\"avc1.42E01E\"',\n                    'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n                ],\n                mpeg: 'video/mp4; codecs=\"mp4v.20.8\"',\n                mkv: 'video/x-matroska; codecs=\"theora, vorbis\"'\n            });\n        }\n        function getAudioSupported() {\n            return document.createElement('audio').canPlayType ? document.createElement('audio') : null;\n        }\n        function getAudioTypesSupported() {\n            return canPlayCodec(getAudioSupported(), {\n                ogg: 'audio/ogg; codecs=\"vorbis',\n                mp3: 'audio/mpeg',\n                wav: 'audio/wav; codecs=\"1\"'\n            });\n        }\n        function getAudioContext() {\n            if (window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext')) {\n                return true;\n            }\n            return false;\n        }\n        const getCanvasContexts = (() => {\n            const cache = [];\n            return () => {\n                if (!cache.length) {\n                    const canvas = getCanvasSupported();\n                    if (canvas) {\n                        const test = [\n                            '2d',\n                            'webgl',\n                            'experimental-webgl',\n                            'webkit-3d',\n                            'moz-webgl'\n                        ];\n                        test.forEach((tst, i) => {\n                            try {\n                                if (!!canvas.getContext(tst)) {\n                                    cache.push(tst);\n                                }\n                            } catch (eee) {\n                            }\n                        });\n                    }\n                }\n                return cache;\n            };\n        })();\n        function getWebGL() {\n            let result = false;\n            let contexts = getCanvasContexts();\n            try {\n                result = contexts.length > 1;\n                if (!result) {\n                    if ('WebGLRenderingContext' in window) {\n                        result = true;\n                    }\n                }\n            } catch (e) {\n            }\n            return result;\n        }\n        function detectCSSFeature(featurename) {\n            let feature = false;\n            let domPrefixes = 'Webkit Moz ms O'.split(' ');\n            let elm = document.createElement('div');\n            let featurenameCapital = null;\n            featurename = featurename.toLowerCase();\n            if (elm.style[featurename]) {\n                feature = true;\n            }\n            if (feature === false) {\n                featurenameCapital = featurename.charAt(0).toUpperCase() + featurename.substr(1);\n                for (let i = 0; i < domPrefixes.length; i++) {\n                    if (typeof elm.style[domPrefixes[i] + featurenameCapital] !== 'undefined') {\n                        feature = true;\n                        break;\n                    }\n                }\n            }\n            return feature;\n        }\n        function getUserMedia() {\n            let getMedia = false;\n            if (window.navigator) {\n                getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n            }\n            return !!getMedia;\n        }\n        function getRichText() {\n            try {\n                return !!document.createElement('textarea').contentEditable;\n            } catch (e) {\n            }\n            return false;\n        }\n        function getTouch() {\n            try {\n                if (navigator.userAgent.match(/Windows NT 6\\.(2|3)/)) {\n                    return false;\n                }\n            } catch (e) {\n            }\n            try {\n                if (navigator.userAgent.match(/iOS|Android|BlackBerry|IEMobile|iPad|iPhone|iPad/i)) {\n                    return true;\n                }\n            } catch (e) {\n            }\n            return false;\n        }\n        function getDnD() {\n            return !!('draggable' in document.createElement('span'));\n        }\n        function getSVG() {\n            return !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect;\n        }\n        function getFileSystem() {\n            return 'requestFileSystem' in window || 'webkitRequestFileSystem' in window;\n        }\n        const checkWindow = {\n            indexedDB: 'indexedDB',\n            localStorage: 'localStorage',\n            sessionStorage: 'sessionStorage',\n            globalStorage: 'globalStorage',\n            openDatabase: 'openDatabase',\n            socket: 'WebSocket',\n            worker: 'Worker',\n            file: 'File',\n            blob: 'Blob',\n            orientation: 'onorientationchange'\n        };\n        const compability = {\n            touch: getTouch(),\n            upload: getUpload(),\n            getUserMedia: getUserMedia(),\n            fileSystem: getFileSystem(),\n            localStorage: false,\n            sessionStorage: false,\n            globalStorage: false,\n            openDatabase: false,\n            socket: false,\n            worker: false,\n            file: false,\n            blob: false,\n            orientation: false,\n            dnd: getDnD(),\n            css: {\n                transition: detectCSSFeature('transition'),\n                animation: detectCSSFeature('animation')\n            },\n            canvas: !!getCanvasSupported(),\n            canvasContext: getCanvasContexts(),\n            webgl: getWebGL(),\n            audioContext: getAudioContext(),\n            svg: getSVG(),\n            video: !!getVideoSupported(),\n            videoTypes: getVideoTypesSupported(),\n            audio: !!getAudioSupported(),\n            audioTypes: getAudioTypesSupported(),\n            richtext: getRichText()\n        };\n        Object.keys(checkWindow).forEach(key => {\n            try {\n                compability[key] = checkWindow[key] in window && window[checkWindow[key]] !== null;\n            } catch (e) {\n                console.warn(e);\n            }\n        });\n        return () => {\n            return compability;\n        };\n    }();\n    function getCompability() {\n        return compability();\n    }\n    function isIE() {\n        const dm = parseInt(document.documentMode, 10);\n        return dm <= 11 || !!navigator.userAgent.match(/(MSIE|Edge)/);\n    }\n    return {\n        getCompability: getCompability,\n        isIE: isIE\n    };\n});\ndefine('skylark-osjsv2-client/utils/dom',[],function () {\n    'use strict';\n    function $(id) {\n        return document.getElementById(id);\n    }\n    function $safeName(str) {\n        return (str || '').replace(/[^a-zA-Z0-9]/g, '_');\n    }\n    function $remove(node) {\n        if (node) {\n            if (typeof node.remove === 'function') {\n                node.remove();\n            } else if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        }\n    }\n    function $empty(myNode) {\n        if (myNode) {\n            while (myNode.firstChild) {\n                myNode.removeChild(myNode.firstChild);\n            }\n        }\n    }\n    function $getStyle(oElm, strCssRule) {\n        let strValue = '';\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            strValue = document.defaultView.getComputedStyle(oElm, '').getPropertyValue(strCssRule);\n        } else if (oElm.currentStyle) {\n            strCssRule = strCssRule.replace(/\\-(\\w)/g, (strMatch, p1) => {\n                return p1.toUpperCase();\n            });\n            strValue = oElm.currentStyle[strCssRule];\n        }\n        return strValue;\n    }\n    function $position(el, parentEl) {\n        if (el) {\n            if (parentEl) {\n                const result = {\n                    left: 0,\n                    top: 0,\n                    width: el.offsetWidth,\n                    height: el.offsetHeight\n                };\n                while (true) {\n                    result.left += el.offsetLeft;\n                    result.top += el.offsetTop;\n                    if (el.offsetParent === parentEl || el.offsetParent === null) {\n                        break;\n                    }\n                    el = el.offsetParent;\n                }\n                return result;\n            }\n            return el.getBoundingClientRect();\n        }\n        return null;\n    }\n    function $parent(el, cb) {\n        let result = null;\n        if (el && cb) {\n            let current = el;\n            while (current.parentNode) {\n                if (cb(current)) {\n                    result = current;\n                    break;\n                }\n                current = current.parentNode;\n            }\n        }\n        return result;\n    }\n    function $index(el, parentEl) {\n        if (el) {\n            parentEl = parentEl || el.parentNode;\n            if (parentEl) {\n                const nodeList = Array.prototype.slice.call(parentEl.children);\n                const nodeIndex = nodeList.indexOf(el, parentEl);\n                return nodeIndex;\n            }\n        }\n        return -1;\n    }\n    function $selectRange(field, start, end) {\n        if (!field) {\n            throw new Error('Cannot select range: missing element');\n        }\n        if (typeof start === 'undefined' || typeof end === 'undefined') {\n            throw new Error('Cannot select range: mising start/end');\n        }\n        if (field.createTextRange) {\n            const selRange = field.createTextRange();\n            selRange.collapse(true);\n            selRange.moveStart('character', start);\n            selRange.moveEnd('character', end);\n            selRange.select();\n            field.focus();\n        } else if (field.setSelectionRange) {\n            field.focus();\n            field.setSelectionRange(start, end);\n        } else if (typeof field.selectionStart !== 'undefined') {\n            field.selectionStart = start;\n            field.selectionEnd = end;\n            field.focus();\n        }\n    }\n    function $addClass(el, name) {\n        if (el) {\n            name.split(' ').forEach(n => {\n                el.classList.add(n);\n            });\n        }\n    }\n    function $removeClass(el, name) {\n        if (el) {\n            name.split(' ').forEach(n => {\n                el.classList.remove(n);\n            });\n        }\n    }\n    function $hasClass(el, name) {\n        if (el && name) {\n            return name.split(' ').every(n => {\n                return el.classList.contains(n);\n            });\n        }\n        return false;\n    }\n    function $escape(str) {\n        const div = document.createElement('div');\n        div.appendChild(document.createTextNode(str));\n        return div.innerHTML;\n    }\n    function $create(tagName, properties) {\n        const element = document.createElement(tagName);\n        function _foreach(dict, l) {\n            dict = dict || {};\n            Object.keys(dict).forEach(name => {\n                l(name.replace(/_/g, '-'), String(dict[name]));\n            });\n        }\n        _foreach(properties.style, (key, val) => {\n            element.style[key] = val;\n        });\n        _foreach(properties.aria, (key, val) => {\n            if (['role'].indexOf(key) !== -1) {\n                key = 'aria-' + key;\n            }\n            element.setAttribute(key, val);\n        });\n        _foreach(properties.data, (key, val) => {\n            element.setAttribute('data-' + key, val);\n        });\n        _foreach(properties, (key, val) => {\n            if ([\n                    'style',\n                    'aria',\n                    'data'\n                ].indexOf(key) === -1) {\n                element[key] = val;\n            }\n        });\n        return element;\n    }\n    function $createCSS(src, onload, onerror) {\n        const link = document.createElement('link');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.onload = onload || function () {\n        };\n        link.onerror = onerror || function () {\n        };\n        link.setAttribute('href', src);\n        document.getElementsByTagName('head')[0].appendChild(link);\n        return link;\n    }\n    function $createJS(src, onreadystatechange, onload, onerror, attrs) {\n        const res = document.createElement('script');\n        res.onreadystatechange = onreadystatechange || function () {\n        };\n        res.onerror = onerror || function () {\n        };\n        res.onload = onload || function () {\n        };\n        attrs = Object.assign({}, {\n            type: 'text/javascript',\n            charset: 'utf-8',\n            src: src\n        }, attrs || {});\n        Object.keys(attrs).forEach(k => {\n            res[k] = String(attrs[k]);\n        });\n        document.getElementsByTagName('head')[0].appendChild(res);\n        return res;\n    }\n    function $isFormElement(input, types) {\n        types = types || [\n            'TEXTAREA',\n            'INPUT',\n            'SELECT'\n        ];\n        if (input instanceof window.Event) {\n            input = input.srcElement || input.target;\n        }\n        if (input instanceof window.Element) {\n            if (types.indexOf(input.tagName.toUpperCase()) >= 0) {\n                if (!(input.readOnly || input.disabled)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    function $css(el, ink, inv) {\n        function rep(k) {\n            return k.replace(/\\-(\\w)/g, (strMatch, p1) => {\n                return p1.toUpperCase();\n            });\n        }\n        let obj = {};\n        if (arguments.length === 2) {\n            if (typeof ink === 'string') {\n                return el.parentNode ? $getStyle(el, ink) : el.style[rep(ink)];\n            }\n            obj = ink;\n        } else if (arguments.length === 3) {\n            obj[ink] = inv;\n        }\n        Object.keys(obj).forEach(k => {\n            el.style[rep(k)] = String(obj[k]);\n        });\n        return null;\n    }\n    function $path(el) {\n        function _path(e) {\n            if (e === document.body) {\n                return e.tagName;\n            } else if (e === window) {\n                return 'WINDOW';\n            } else if (e === document) {\n                return 'DOCUMENT';\n            }\n            if (e.id !== '') {\n                return 'id(\"' + e.id + '\")';\n            }\n            let ix = 0;\n            const siblings = e.parentNode ? e.parentNode.childNodes : [];\n            for (let i = 0; i < siblings.length; i++) {\n                const sibling = siblings[i];\n                if (sibling === e) {\n                    return _path(e.parentNode) + '/' + e.tagName + '[' + (ix + 1) + ']';\n                }\n                if (sibling.nodeType === 1 && sibling.tagName === e.tagName) {\n                    ix++;\n                }\n            }\n            return null;\n        }\n        return _path(el);\n    }\n    function $fromPath(path, doc) {\n        doc = doc || document;\n        const evaluator = new XPathEvaluator();\n        const result = evaluator.evaluate(path, doc.documentElement, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);\n        return result.singleNodeValue;\n    }\n    function $clean(html) {\n        if (typeof html !== 'string') {\n            html = html.innerHTML;\n        }\n        return (html || '').replace(/\\n/g, '').replace(/[\\t ]+</g, '<').replace(/\\>[\\t ]+</g, '><').replace(/\\>[\\t ]+$/g, '>');\n    }\n    return {\n        $: $,\n        $safeName: $safeName,\n        $remove: $remove,\n        $empty: $empty,\n        $getStyle: $getStyle,\n        $position: $position,\n        $parent: $parent,\n        $index: $index,\n        $selectRange: $selectRange,\n        $addClass: $addClass,\n        $removeClass: $removeClass,\n        $hasClass: $hasClass,\n        $escape: $escape,\n        $create: $create,\n        $createCSS: $createCSS,\n        $createJS: $createJS,\n        $isFormElement: $isFormElement,\n        $css: $css,\n        $path: $path,\n        $fromPath: $fromPath,\n        $clean: $clean\n    };\n});\ndefine('skylark-osjsv2-client/core/theme',[\n    './settings-manager',\n    './config',\n    '../vfs/file',\n    './package-manager',\n    '../utils/fs',\n    '../utils/compability',\n    '../utils/dom'\n], function (SettingsManager, Config, FileMetadata, PackageManager, FS, Compability, DOM) {\n    'use strict';\n    class Theme {\n        constructor() {\n            const compability = Compability.getCompability();\n            this.settings = null;\n            this.$themeScript = null;\n            this.audioAvailable = !!compability.audio;\n            this.oggAvailable = !!compability.audioTypes.ogg;\n        }\n        init(VFS) { // modified by lwf\n            this.VFS = VFS;\n\n            this.settings = SettingsManager.instance('__theme__', {\n                enableSounds: true,\n                styleTheme: 'default',\n                soundTheme: 'default',\n                iconTheme: 'default',\n                sounds: {}\n            });\n        }\n        update(settings, settheme) {\n            this.settings.set(null, settings);\n            if (settheme) {\n                this.setTheme(settings);\n            }\n        }\n        destroy() {\n            this.$themeScript = DOM.$remove(this.$themeScript);\n        }\n        themeAction(action, args) {\n            const theme = this.getStyleTheme();\n            args = args || [];\n            try {\n                if (OSjs.Themes[theme]) {\n                    return OSjs.Themes[theme][action].apply(null, args);\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n            return null;\n        }\n        _setBackground(settings) {\n            const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n            const typeMap = {\n                'image': 'normal',\n                'image-center': 'center',\n                'image-fill': 'fill',\n                'image-strech': 'strech'\n            };\n            let className = 'color';\n            let back = 'none';\n            if (settings.wallpaper && settings.background.match(/^image/)) {\n                back = settings.wallpaper;\n                className = typeMap[settings.background] || 'default';\n            }\n            if (back !== 'none') {\n                try {\n                    this.VFS.url(back).then(result => {\n                        back = \"url('\" + result + \"')\";\n                        document.body.style.backgroundImage = back;\n                        return true;\n                    });\n                } catch (e) {\n                    console.warn(e);\n                }\n            } else {\n                document.body.style.backgroundImage = back;\n            }\n            if (settings.backgroundColor) {\n                document.body.style.backgroundColor = settings.backgroundColor;\n            }\n            if (settings.fontFamily) {\n                document.body.style.fontFamily = settings.fontFamily;\n            }\n            if (isFirefox) {\n                document.body.style.backgroundAttachment = 'fixed';\n            } else {\n                document.body.style.backgroundAttachment = 'scroll';\n            }\n            document.body.setAttribute('data-background-style', className);\n        }\n        getThemeCSS(name) {\n            let root = Config.getConfig('Connection.RootURI', '/');\n            if (name === null) {\n                return root + 'blank.css';\n            }\n            root = Config.getConfig('Connection.ThemeURI');\n            return root + '/' + name + '.css';\n        }\n        setTheme(settings) {\n            this.themeAction('destroy');\n            this.setThemeScript(this.getThemeResource('theme.js'));\n            document.body.setAttribute('data-style-theme', settings.styleTheme);\n            document.body.setAttribute('data-icon-theme', settings.iconTheme);\n            document.body.setAttribute('data-sound-theme', settings.soundTheme);\n            document.body.setAttribute('data-animations', String(settings.animations));\n            this._setBackground(settings);\n            this.settings.set(null, settings);\n        }\n        setThemeScript(src) {\n            if (this.$themeScript) {\n                this.$themeScript = DOM.$remove(this.$themeScript);\n            }\n            if (src) {\n                this.$themeScript = DOM.$createJS(src, null, () => {\n                    this.themeAction('init');\n                });\n            }\n        }\n        getStyleTheme(returnMetadata, convert) {\n            const name = this.settings.get('styleTheme') || null;\n            if (returnMetadata) {\n                let found = null;\n                if (name) {\n                    this.getStyleThemes().forEach(function (t) {\n                        if (t && t.name === name) {\n                            found = t;\n                        }\n                    });\n                }\n                if (found && convert === true) {\n                    const tmpEl = document.createElement('div');\n                    tmpEl.style.visibility = 'hidden';\n                    tmpEl.style.position = 'fixed';\n                    tmpEl.style.top = '-10000px';\n                    tmpEl.style.left = '-10000px';\n                    tmpEl.style.width = '1em';\n                    tmpEl.style.height = '1em';\n                    document.body.appendChild(tmpEl);\n                    const wd = tmpEl.offsetWidth;\n                    tmpEl.parentNode.removeChild(tmpEl);\n                    if (typeof found.style.window.margin === 'string' && found.style.window.margin.match(/em$/)) {\n                        const marginf = parseFloat(found.style.window.margin);\n                        found.style.window.margin = marginf * wd;\n                    }\n                    if (typeof found.style.window.border === 'string' && found.style.window.border.match(/em$/)) {\n                        const borderf = parseFloat(found.style.window.border);\n                        found.style.window.border = borderf * wd;\n                    }\n                }\n                return found;\n            }\n            return name;\n        }\n        getThemeResource(name, type) {\n            name = name || null;\n            type = type || null;\n            const root = Config.getConfig('Connection.ThemeURI');\n            function getName(str, theme) {\n                if (!str.match(/^\\//)) {\n                    if (type === 'base' || type === null) {\n                        str = `${ root }/${ theme }/${ str }`;\n                    } else {\n                        str = `${ root }/${ theme }/${ type }/${ str }`;\n                    }\n                }\n                return str;\n            }\n            if (name) {\n                const theme = this.getStyleTheme();\n                name = getName(name, theme);\n            }\n            return name;\n        }\n        getSound(name) {\n            name = name || null;\n            if (name && !name.match(/^(https?:)?\\//)) {\n                const theme = this.getSoundTheme();\n                const root = Config.getConfig('Connection.SoundURI');\n                const ext = this.oggAvailable ? 'oga' : 'mp3';\n                name = `${ root }/${ theme }/${ name }.${ ext }`;\n            }\n            return name;\n        }\n        playSound(name, volume) {\n            const filename = this.getSoundFilename(name);\n            if (!filename) {\n                console.debug('playSound()', 'Cannot play sound, no compability or not enabled!');\n                return null;\n            }\n            if (typeof volume === 'undefined') {\n                volume = 1;\n            }\n            const f = this.getSound(filename);\n            console.debug('playSound()', name, filename, f, volume);\n            const audio = new Audio(f);\n            audio.volume = volume;\n            try {\n                audio.play();\n            } catch (e) {\n                console.error(e);\n            }\n            return audio;\n        }\n        getIcon(name, size) {\n            name = name || '';\n            size = size || '16x16';\n            if (!name.match(/^(https:?)?\\//)) {\n                const root = Config.getConfig('Connection.IconURI');\n                const theme = this.getIconTheme();\n                name = `${ root }/${ theme }/${ size }/${ name }`;\n            }\n            return name;\n        }\n        getFileIcon(file, size, icon) {\n            icon = icon || 'mimetypes/text-x-preview.png';\n            if (typeof file === 'object' && !(file instanceof FileMetadata)) {\n                file = new FileMetadata(file);\n            }\n            if (!file.filename) {\n                throw new Error('Filename is required for getFileIcon()');\n            }\n            const map = [\n                {\n                    match: 'application/pdf',\n                    icon: 'mimetypes/x-office-document.png'\n                },\n                {\n                    match: 'application/zip',\n                    icon: 'mimetypes/package-x-generic.png'\n                },\n                {\n                    match: 'application/x-python',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'application/x-lua',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'application/javascript',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'text/html',\n                    icon: 'mimetypes/text-html.png'\n                },\n                {\n                    match: 'text/xml',\n                    icon: 'mimetypes/text-html.png'\n                },\n                {\n                    match: 'text/css',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'osjs/document',\n                    icon: 'mimetypes/x-office-document.png'\n                },\n                {\n                    match: 'osjs/draw',\n                    icon: 'mimetypes/image-x-generic.png'\n                },\n                {\n                    match: /^text\\//,\n                    icon: 'mimetypes/text-x-generic.png'\n                },\n                {\n                    match: /^audio\\//,\n                    icon: 'mimetypes/audio-x-generic.png'\n                },\n                {\n                    match: /^video\\//,\n                    icon: 'mimetypes/video-x-generic.png'\n                },\n                {\n                    match: /^image\\//,\n                    icon: 'mimetypes/image-x-generic.png'\n                },\n                {\n                    match: /^application\\//,\n                    icon: 'mimetypes/application-x-executable.png'\n                }\n            ];\n            if (file.type === 'dir') {\n                icon = 'places/folder.png';\n            } else if (file.type === 'trash') {\n                icon = 'places/user-trash.png';\n            } else if (file.type === 'application') {\n                const appname = FS.filename(file.path);\n                const meta = PackageManager.getPackage(appname);\n                if (meta) {\n                    if (!meta.icon.match(/^((https?:)|\\.)?\\//)) {\n                        return this.getIcon(meta.icon, size);\n                    }\n                    return PackageManager.getPackageResource(appname, meta.icon);\n                }\n            } else {\n                const mime = file.mime || 'application/octet-stream';\n                map.every(iter => {\n                    let match = false;\n                    if (typeof iter.match === 'string') {\n                        match = mime === iter.match;\n                    } else {\n                        match = mime.match(iter.match);\n                    }\n                    if (match) {\n                        icon = iter.icon;\n                        return false;\n                    }\n                    return true;\n                });\n            }\n            return this.getIcon(icon, size);\n        }\n        getIconTheme() {\n            return this.settings.get('iconTheme', 'default');\n        }\n        getSoundTheme() {\n            return this.settings.get('soundTheme', 'default');\n        }\n        getSoundFilename(k) {\n            if (!this.audioAvailable || !this.settings.get('enableSounds') || !k) {\n                return false;\n            }\n            const sounds = this.settings.get('sounds', {});\n            return sounds[k] || null;\n        }\n        getStyleThemes() {\n            return Config.getConfig('Styles', []);\n        }\n        getSoundThemes() {\n            return Config.getConfig('Sounds', []);\n        }\n        getIconThemes() {\n            return Config.getConfig('Icons', []);\n        }\n    }\n    return new Theme();\n});\ndefine('skylark-osjsv2-client/helpers/hooks',['./event-handler'], function (EventHandler) {\n    'use strict';\n    let handler = new EventHandler('core-hooks', [\n        'initialize',\n        'initialized',\n        'sessionLoaded',\n        'shudown',\n        'processStart',\n        'processStarted',\n        'menuBlur'\n    ]);\n    function triggerHook(name, args, thisarg) {\n        if (handler) {\n            handler.emit(name, args, thisarg, true);\n        }\n    }\n    function addHook(name, fn) {\n        if (handler) {\n            return handler.on(name, fn);\n        }\n        return -1;\n    }\n    function removeHook(name, index) {\n        if (handler) {\n            return handler.off(name, index);\n        }\n        return false;\n    }\n    return {\n        triggerHook: triggerHook,\n        addHook: addHook,\n        removeHook: removeHook\n    };\n});\ndefine('skylark-osjsv2-client/helpers/promise-limit',[],function() {\r\n  function limiter (count) {\r\n    var outstanding = 0\r\n    var jobs = []\r\n\r\n    function remove () {\r\n      outstanding--\r\n\r\n      if (outstanding < count) {\r\n        dequeue()\r\n      }\r\n    }\r\n\r\n    function dequeue () {\r\n      var job = jobs.shift()\r\n      semaphore.queue = jobs.length\r\n\r\n      if (job) {\r\n        run(job.fn).then(job.resolve).catch(job.reject)\r\n      }\r\n    }\r\n\r\n    function queue (fn) {\r\n      return new Promise(function (resolve, reject) {\r\n        jobs.push({fn: fn, resolve: resolve, reject: reject})\r\n        semaphore.queue = jobs.length\r\n      })\r\n    }\r\n\r\n    function run (fn) {\r\n      outstanding++\r\n      try {\r\n        return Promise.resolve(fn()).then(function (result) {\r\n          remove()\r\n          return result\r\n        }, function (error) {\r\n          remove()\r\n          throw error\r\n        })\r\n      } catch (err) {\r\n        remove()\r\n        return Promise.reject(err)\r\n      }\r\n    }\r\n\r\n    var semaphore = function (fn) {\r\n      if (outstanding >= count) {\r\n        return queue(fn)\r\n      } else {\r\n        return run(fn)\r\n      }\r\n    }\r\n\r\n    return semaphore\r\n  }\r\n\r\n  function map (items, mapper) {\r\n    var failed = false\r\n\r\n    var limit = this\r\n\r\n    return Promise.all(items.map(function () {\r\n      var args = arguments\r\n      return limit(function () {\r\n        if (!failed) {\r\n          return mapper.apply(undefined, args).catch(function (e) {\r\n            failed = true\r\n            throw e\r\n          })\r\n        }\r\n      })\r\n    }))\r\n  }\r\n\r\n  function addExtras (fn) {\r\n    fn.queue = 0\r\n    fn.map = map\r\n    return fn\r\n  }\r\n\r\n  return function (count) {\r\n    if (count) {\r\n      return addExtras(limiter(count))\r\n    } else {\r\n      return addExtras(function (fn) {\r\n        return fn()\r\n      })\r\n    }\r\n  }\r\n});\r\n\ndefine('skylark-osjsv2-client/utils/preloader',[\n    '../helpers/promise-limit',\n    '../core/config',\n    'skylark-axios'\n], function (promiseLimit, Config, axios) {\n    'use strict';\n    const getFileType = src => {\n        if (src.match(/\\.js$/i)) {\n            return 'javascript';\n        } else if (src.match(/\\.css$/i)) {\n            return 'stylesheet';\n        }\n        return 'unknown';\n    };\n    const getSource = src => {\n        if (src && !src.match(/^(\\/|file|https?)/)) {\n            return Config.getBrowserPath(src);\n        }\n        return src;\n    };\n    const checkCss = path => {\n        let result = false;\n        (document.styleSheet || []).forEach((iter, i) => {\n            if (iter.href.indexOf(path) !== -1) {\n                result = true;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n    const handlers = {\n        javascript: src => new Promise((resolve, reject) => {\n            const el = document.createElement('script');\n            el.onreadystatechange = function () {\n                if (this.readyState === 'complete' || this.readyState === 'loaded') {\n                    resolve();\n                }\n            };\n            el.onerror = err => {\n                let error = new Error();\n                error.name = '<script> error';\n                error.message = 'Failed to load script';\n                reject(error);\n            };\n            el.onload = () => resolve();\n            el.src = src;\n            document.getElementsByTagName('head')[0].appendChild(el);\n        }),\n        stylesheet: src => new Promise((resolve, reject) => {\n            let timeout;\n            const onerror = str => {\n                clearTimeout(timeout);\n                let error = new Error();\n                error.name = '<link> error';\n                error.message = str;\n                reject(error);\n            };\n            const link = document.createElement('link');\n            link.setAttribute('rel', 'stylesheet');\n            link.setAttribute('type', 'text/css');\n            link.onload = () => resolve();\n            link.onerror = err => onerror('Failed to load link');\n            link.setAttribute('href', src);\n            document.getElementsByTagName('head')[0].appendChild(link);\n            timeout = setTimeout(() => {\n                onerror('Loading stylesheet timed out');\n            }, 30000);\n            setTimeout(() => {\n                if (checkCss(src)) {\n                    clearTimeout(timeout);\n                    resolve();\n                }\n            }, 10);\n        }),\n        html: src => new Promise((resolve, reject) => {\n            axios.get(src).then(result => {\n                return resolve(result.data);\n            }).catch(err => reject(err.message));\n        })\n    };\n    class Preloader {\n        constructor() {\n            this.cache = {};\n        }\n        clear() {\n            this.cache = {};\n        }\n        preload(preloads, args) {\n            args = args || {};\n            preloads = preloads.map(p => {\n                if (typeof p === 'string') {\n                    return {\n                        src: getSource(p),\n                        force: false,\n                        type: getFileType(p)\n                    };\n                } else {\n                    p.src = getSource(p.src);\n                    if (!p.type) {\n                        p.type = getFileType(p.src);\n                    }\n                }\n                return p;\n            }).filter(p => !!p.src);\n            console.group('Preloader.load()', preloads);\n            const limit = promiseLimit(args.max || 1);\n            const total = preloads.length;\n            const failed = [];\n            const loaded = [];\n            const data = [];\n            const done = (item, preloadData, yes) => {\n                if (typeof preloadData !== 'undefined') {\n                    data.push({\n                        item,\n                        data: preloadData\n                    });\n                }\n                if (args.cache !== false && typeof this.cache[item.src] === 'undefined') {\n                    this.cache[item.src] = preloadData;\n                }\n                loaded.push(item.src);\n                return yes();\n            };\n            const job = (item, index) => {\n                if (typeof args.progress === 'function') {\n                    args.progress(index, total);\n                }\n                if (handlers[item.type]) {\n                    return new Promise((yes, no) => {\n                        if (!args.force && this.cache[item.src]) {\n                            done(item, this.cache[item.src], yes);\n                            return;\n                        }\n                        handlers[item.type](item.src).then(preloadData => {\n                            return done(item, preloadData, yes);\n                        }).catch(e => {\n                            console.warn('Failed loading', item.src, e);\n                            failed.push(item.src);\n                            return yes();\n                        });\n                    });\n                }\n                return Promise.resolve();\n            };\n            return new Promise((resolve, reject) => {\n                Promise.all(preloads.map((iter, index) => {\n                    return limit(() => job(iter, index));\n                })).then(() => {\n                    console.groupEnd();\n                    return resolve({\n                        success: false,\n                        data: data,\n                        failed: failed,\n                        loaded: loaded\n                    });\n                }).catch(reject);\n            });\n        }\n    }\n    return new Preloader();\n});\ndefine('skylark-osjsv2-client/core/process',[\n    './connection',\n    '../helpers/event-handler',\n    './theme',\n    '../utils/fs',\n    './config',\n    '../utils/compability',\n    './locales',\n    '../helpers/hooks',\n    '../helpers/loader',\n    '../vfs/file',\n    '../utils/preloader',\n    './settings-manager',\n    './package-manager'\n], function (\n    Connection, \n    EventHandler, \n    Theme, \n    FS, \n    Config, \n    Compability, \n    locales, \n    hooks, \n    Loader, \n    FileMetadata, \n    Preloader, \n    SettingsManager, \n    PackageManager\n) {\n    'use strict';\n    let alreadyLaunching = [];\n    let runningProcesses = [];\n    function _kill(pid, force) {\n        if (pid >= 0 && runningProcesses[pid]) {\n            try {\n                const res = runningProcesses[pid].destroy(force);\n                console.warn('Killing application', pid, res);\n                if (res !== false) {\n                    runningProcesses[pid] = null;\n                    return true;\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n        return false;\n    }\n    function getLaunchObject(s) {\n        if (typeof s === 'string') {\n            const spl = s.split('@');\n            const name = spl[0];\n            let args = {};\n            if (typeof spl[1] !== 'undefined') {\n                try {\n                    args = JSON.parse(spl[1]);\n                } catch (e) {\n                }\n            }\n            s = {\n                name: name,\n                args: args\n            };\n        }\n        return s;\n    }\n    return class Process {\n        constructor(name, args, metadata) {\n            console.group('Process::constructor()', runningProcesses.length, arguments);\n            this.__pid = runningProcesses.push(this) - 1;\n            this.__pname = name;\n            this.__args = args || {};\n            this.__metadata = metadata || {};\n            this.__started = new Date();\n            this.__destroyed = false;\n            this.__evHandler = new EventHandler(name, [\n                'message',\n                'attention',\n                'hashchange',\n                'api',\n                'destroy',\n                'destroyWindow',\n                'vfs',\n                'vfs:mount',\n                'vfs:unmount',\n                'vfs:mkdir',\n                'vfs:write',\n                'vfs:move',\n                'vfs:copy',\n                'vfs:delete',\n                'vfs:upload',\n                'vfs:update'\n            ]);\n            this.__label = this.__metadata.name;\n            this.__path = this.__metadata.path;\n            this.__scope = this.__metadata.scope || 'system';\n            this.__iter = this.__metadata.className;\n            console.groupEnd();\n        }\n        destroy() {\n            if (!this.__destroyed) {\n                this.__destroyed = true;\n                console.group('Process::destroy()', this.__pid, this.__pname);\n                this._emit('destroy', []);\n                if (this.__evHandler) {\n                    this.__evHandler = this.__evHandler.destroy();\n                }\n                if (this.__pid >= 0) {\n                    runningProcesses[this.__pid] = null;\n                }\n                console.groupEnd();\n                return true;\n            }\n            return false;\n        }\n        _onMessage(msg, obj, opts) {\n            opts = opts || {};\n            let sourceId = opts.source;\n            if (sourceId && typeof sourceId === 'object') {\n                if (sourceId instanceof Process) {\n                    sourceId = sourceId.__pid;\n                } else if (sourceId._app) {\n                    sourceId = sourceId._app ? sourceId._app.__pid : -1;\n                }\n            }\n            if (this.__evHandler && sourceId !== this.__pid) {\n                console.debug('Process::_onMessage()', msg, obj, opts, this.__pid, this.__pname);\n                this.__evHandler.emit('message', [\n                    msg,\n                    obj,\n                    opts\n                ]);\n                if (msg.substr(0, 3) === 'vfs') {\n                    this.__evHandler.emit('vfs', [\n                        msg,\n                        obj,\n                        opts\n                    ]);\n                }\n                this.__evHandler.emit(msg, [\n                    obj,\n                    opts,\n                    msg\n                ]);\n            }\n        }\n        _emit(k, args) {\n            return this.__evHandler ? this.__evHandler.emit(k, args) : null;\n        }\n        _on(k, func) {\n            return this.__evHandler ? this.__evHandler.on(k, func, this) : null;\n        }\n        _off(k, idx) {\n            if (this.__evHandler) {\n                this.__evHandler.off(k, idx);\n            }\n        }\n        _api(method, args, options) {\n            if (typeof options === 'boolean') {\n                options = { indicator: options };\n            } else if (typeof options !== 'object') {\n                options = {};\n            }\n            this._emit('api', [method]);\n            return new Promise((resolve, reject) => {\n                Connection.request('application', {\n                    application: this.__iter,\n                    path: this.__path,\n                    method: method,\n                    args: args\n                }, options).then(res => {\n                    if (!this.__destroyed) {\n                        resolve(res);\n                        return true;\n                    }\n                    console.warn('Process::_api()', 'INGORED RESPONSE: Process was closed');\n                    return false;\n                }).catch(err => {\n                    if (!this.__destroyed) {\n                        reject(err instanceof Error ? err : new Error(err));\n                    }\n                });\n            });\n        }\n        _getArgument(k) {\n            return typeof this.__args[k] === 'undefined' ? null : this.__args[k];\n        }\n        _getArguments() {\n            return this.__args;\n        }\n        _getResource(src, vfspath) {\n            return PackageManager.getPackageResource(this, src, vfspath);\n        }\n        _setArgument(k, v) {\n            this.__args[k] = v;\n        }\n        static kill(pid) {\n            return _kill(pid);\n        }\n        static killAll(match) {\n            let matcher = () => true;\n            if (match) {\n                matcher = match instanceof RegExp ? p => p.__pname.match(match) : p => p.__pname === match;\n            }\n            this.getProcesses().filter(p => matcher(p)).forEach(p => _kill(p.__pid, true));\n            runningProcesses = [];\n        }\n        static message(msg, obj, opts) {\n            opts = opts || {};\n            console.debug('Process::message()', msg, obj, opts);\n            let filter = opts.filter || (() => true);\n            if (typeof filter === 'string') {\n                const s = filter;\n                filter = p => {\n                    return p.__pname === s;\n                };\n            }\n            this.getProcesses().filter(filter).forEach(p => p._onMessage(msg, obj, opts));\n        }\n        static getProcess(name, first) {\n            if (typeof name === 'number') {\n                return runningProcesses[name];\n            }\n            const found = this.getProcesses().filter(p => {\n                return p.__pname === name;\n            });\n            return first ? found[0] : found;\n        }\n        static getProcesses() {\n            return runningProcesses.filter(p => !!p);\n        }\n        static reload(n) {\n            if (!(n instanceof Array)) {\n                n = [n];\n            }\n            n.map(name => this.getProcess(name, true)).filter(p => !!p).forEach(p => {\n                let promise = null;\n                let data = p._getSessionData();\n                let args = {};\n                let name;\n                try {\n                    name = p.__pname;\n                    promise = p.destroy();\n                } catch (e) {\n                    console.warn('Process::reload()', e.stack, e);\n                }\n                if (data !== null) {\n                    args = data.args;\n                    args.__resume__ = true;\n                    args.__windows__ = data.windows || [];\n                }\n                args.__preload__ = { force: true };\n                if (!(promise instanceof Promise)) {\n                    promise = Promise.resolve(true);\n                }\n                if (name) {\n                    promise.then(() => {\n                        return setTimeout(() => {\n                            this.create(name, args);\n                        }, 500);\n                    });\n                }\n            });\n        }\n        static create(name, args, onconstruct) {\n            args = args || {};\n            onconstruct = onconstruct || function () {\n            };\n            const hash = name + JSON.stringify(args);\n            if (alreadyLaunching.indexOf(hash) !== -1) {\n                return Promise.resolve(null);\n            }\n            alreadyLaunching.push(hash);\n            const init = () => {\n                if (!name) {\n                    throw new Error('Cannot Process::create() witout a application name');\n                }\n                const compability = Compability.getCompability();\n                const metadata = PackageManager.getPackage(name);\n                const alreadyRunning = Process.getProcess(name, true);\n                if (!metadata) {\n                    throw new Error(locales._('ERR_APP_LAUNCH_MANIFEST_FAILED_FMT', name));\n                }\n                const compabilityFailures = (metadata.compability || []).filter(c => {\n                    if (typeof compability[c] !== 'undefined') {\n                        return !compability[c];\n                    }\n                    return false;\n                });\n                if (compabilityFailures.length) {\n                    throw new Error(locales._('ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT', name, compabilityFailures.join(', ')));\n                }\n                if (metadata.singular === true && alreadyRunning) {\n                    console.warn('Process::create()', 'detected that this application is a singular and already running...');\n                    alreadyRunning._onMessage('attention', args);\n                    return Promise.resolve(alreadyRunning);\n                }\n                hooks.triggerHook('processStart', [\n                    name,\n                    args\n                ]);\n                Loader.create('Main.launch.' + name, {\n                    title: locales._('LBL_STARTING') + ' ' + metadata.name,\n                    icon: Theme.getIcon(metadata.icon, '16x16')\n                });\n                let pargs = { max: metadata.preloadParallel === true ? Config.getConfig('Connection.PreloadParallel') : metadata.preloadParallel };\n                if (args.__preload__) {\n                    pargs = Object.assign(pargs, args.__preload__);\n                    delete args.__preload__;\n                }\n                return new Promise((resolve, reject) => {\n                    const onerror = e => {\n                        console.warn(e);\n                        return reject(new Error(e));\n                    };\n                    Preloader.preload(metadata.preload, pargs).then(result => {\n                        if (result.failed.length) {\n                            return onerror(locales._('ERR_APP_PRELOAD_FAILED_FMT', name, result.failed.join(',')));\n                        }\n                        if (typeof OSjs.Applications[name] === 'undefined') {\n                            return onerror(new Error(locales._('ERR_APP_RESOURCES_MISSING_FMT', name)));\n                        }\n                        let instance;\n                        try {\n                            const ResolvedPackage = OSjs.Applications[name];\n                            instance = new ResolvedPackage(args, metadata);\n                            onconstruct(instance, metadata);\n                        } catch (e) {\n                            return onerror(e);\n                        }\n                        try {\n                            const settings = SettingsManager.get(instance.__pname) || {};\n                            instance.init(settings, metadata);\n                            hooks.triggerHook('processStarted', [{\n                                    application: instance,\n                                    name: name,\n                                    args: args,\n                                    settings: settings,\n                                    metadata: metadata\n                                }]);\n                        } catch (e) {\n                            return onerror(e);\n                        }\n                        return resolve(instance);\n                    }).catch(onerror);\n                });\n            };\n            const onerror = err => {\n                OSjs.error(locales._('ERR_APP_LAUNCH_FAILED'), locales._('ERR_APP_LAUNCH_FAILED_FMT', name), err, err, true);\n            };\n            return new Promise((resolve, reject) => {\n                console.group('Process::create()', name, args);\n                const remove = () => {\n                    console.groupEnd();\n                    const i = alreadyLaunching.indexOf(hash);\n                    if (i >= 0) {\n                        alreadyLaunching.splice(i, 1);\n                    }\n                    Loader.destroy('Main.launch.' + name);\n                };\n                const fail = e => {\n                    Loader.destroy('Main.launch.' + name);\n                    remove();\n                    onerror(e);\n                    return reject(e);\n                };\n                try {\n                    init().then(resolve).catch(fail).finally(remove);\n                } catch (e) {\n                    fail(e);\n                }\n            });\n        }\n        static createFromArray(list, onconstruct) {\n            list = list || [];\n            onconstruct = onconstruct || function () {\n            };\n            console.info('Process::createFromArray()', list);\n            return Promise.each(list, s => {\n                return new Promise((resolve, reject) => {\n                    s = getLaunchObject(s);\n                    if (s.name) {\n                        try {\n                            this.create(s.name, s.args, (instance, metadata) => {\n                                onconstruct(instance, metadata, s.name, s.args);\n                            }).then(resolve).catch(reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    } else {\n                        resolve();\n                    }\n                });\n            });\n        }\n        static createFromFile(file, args) {\n            file = new FileMetadata(file);\n            args = Object.assign({ file: file }, args || {});\n            if (args.args) {\n                Object.keys(args.args).forEach(i => {\n                    args[i] = args.args[i];\n                });\n            }\n            if (!file.path) {\n                throw new Error('Cannot open file without a path');\n            }\n            console.info('Process::createFromFile()', file, args);\n            if (file.mime === 'osjs/application') {\n                return this.create(FS.filename(file.path));\n            } else if (file.type === 'dir') {\n                const fm = SettingsManager.instance('DefaultApplication').get('dir', 'ApplicationFileManager');\n                return this.create(fm, { path: file.path });\n            }\n            return new Promise((resolve, reject) => {\n                const val = SettingsManager.get('DefaultApplication', file.mime);\n                let pack = PackageManager.getPackagesByMime(file.mime);\n                if (!args.forceList && val) {\n                    if (PackageManager.getPackage(val)) {\n                        console.debug('Process::createFromFile()', 'default application', val);\n                        pack = [val];\n                    }\n                }\n                if (pack.length === 0) {\n                    OSjs.error(locales._('ERR_FILE_OPEN'), locales._('ERR_FILE_OPEN_FMT', file.path), locales._('ERR_APP_MIME_NOT_FOUND_FMT', file.mime));\n                    reject(new Error(locales._('ERR_APP_MIME_NOT_FOUND_FMT', file.mime)));\n                } else if (pack.length === 1) {\n                    this.create(pack[0], args).then(resolve).catch(reject);\n                } else {\n                    const DialogWindow = OSjs.require('core/dialog');\n                    DialogWindow.default.create('ApplicationChooser', {\n                        file: file,\n                        list: pack\n                    }, (ev, btn, result) => {\n                        if (btn === 'ok') {\n                            this.create(result.name, args);\n                            SettingsManager.set('DefaultApplication', file.mime, result.useDefault ? result.name : null, true).then(resolve).catch(err => {\n                                reject(typeof err === 'string' ? new Error(err) : err);\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/mountpoint',[\n    '../core/process',\n    '../core/locales'\n], function ( Process, Locales) {\n    'use strict';\n    function createMatch(m, sname) {\n        if (typeof m === 'string') {\n            return new RegExp(m);\n        } else if (!m) {\n            return new RegExp('^' + (sname + '://').replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&'));\n        }\n        return m;\n    }\n    return class Mountpoint {\n        constructor(options) {\n            this.options = Object.assign({\n                name: null,\n                root: null,\n                match: null,\n                enabled: true,\n                readOnly: false,\n                transport: null,\n                visible: true,\n                searchable: false,\n                dynamic: true,\n                internal: false,\n                special: false,\n                options: {}\n            }, options);\n            if (!this.options.transport) {\n                throw new Error('No transport was defined for mountpoint ' + this.options.name);\n            }\n            if (!this.options.name) {\n                throw new Error(Locales._('ERR_VFSMODULE_INVALID_CONFIG_FMT'));\n            }\n            const sname = this.options.name.replace(/\\s/g, '-').toLowerCase();\n            const defaults = {\n                icon: 'devices/drive-harddisk.png',\n                name: sname,\n                title: this.options.name,\n                description: this.options.description || this.options.name,\n                root: sname + ':///',\n                match: createMatch(this.options.match, sname)\n            };\n            Object.keys(defaults).forEach(k => {\n                if (!this.options[k]) {\n                    this.options[k] = defaults[k];\n                }\n            });\n            this.name = sname;\n            this.isMounted = false;\n        }\n        mount(options) {\n            options = Object.assign({ notify: true }, options || {});\n            if (!this.isMounted && !this.option('special')) {\n                if (options.notify) {\n                    Process.message('vfs:mount', this.option('name'), { source: null });\n                }\n                this.isMounted = true;\n            }\n            return Promise.resolve();\n        }\n        unmount(options) {\n            options = Object.assign({ notify: true }, options || {});\n            if (this.isMounted && !this.option('special')) {\n                if (options.notify) {\n                    Process.message('vfs:unmount', this.option('name'), { source: null });\n                }\n                this.isMounted = false;\n            }\n            return Promise.resolve();\n        }\n        mounted() {\n            return this.isMounted;\n        }\n        enabled() {\n            return this.option('enabled');\n        }\n        option(name) {\n            return this.options[name];\n        }\n        isReadOnly() {\n            return this.option('readOnly');\n        }\n        setMounted(mounted) {\n            this.isMounted = mounted === true;\n        }\n        request(method, args, options) {\n            const transport = this.option('transport');\n            if (transport) {\n                return transport.request(method, args, options, this);\n            }\n            return Promise.reject(new Error(Locales._('ERR_VFSMODULE_NOT_FOUND_FMT', test)));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/mount-manager',[\n    '../vfs/mountpoint',\n    './locales',\n    './config'\n], function (Mountpoint, Locales, Config) {\n    'use strict';\n\n    class MountManager {\n        constructor() {\n            this.inited = false;\n            this.mountpoints = [];\n//            this.transports = loadTransports();\n        }\n        init(loadTransports) { // modified by lwf\n            if (this.inited) {\n                return Promise.resolve();\n            }\n            this.transports = loadTransports();\n            this.inited = true;\n            const config = Config.getConfig('VFS.Mountpoints', {});\n            const enabled = Object.keys(config).filter(name => {\n                return config[name].enabled !== false;\n            });\n            return Promise.each(enabled, name => {\n                return new Promise(resolve => {\n                    const iter = Object.assign({\n                        name: name,\n                        dynamic: false\n                    }, config[name]);\n                    this.add(iter, true, { notify: false }).then(resolve).catch(e => {\n                        console.warn('Failed to init VFS Mountpoint', name, iter, String(e));\n                        return resolve(false);\n                    });\n                });\n            });\n        }\n        addList(mountPoints) {\n            return Promise.each(mountPoints, iter => this.add(iter));\n        }\n        add(point, mount, options) {\n            try {\n                if (!(point instanceof Mountpoint)) {\n                    if (typeof point.transport === 'string') {\n                        const T = this.transports[point.transport];\n                        if (!T) {\n                            return Promise.reject(new Error('No such transport: ' + point.transport));\n                        }\n                        point.transport = new T();\n                    }\n                    point = new Mountpoint(point);\n                }\n                const found = this.mountpoints.filter(m => {\n                    if (m.option('name') === point.option('name')) {\n                        return true;\n                    }\n                    if (m.option('root') === point.option('root')) {\n                        return true;\n                    }\n                    return false;\n                });\n                if (found.length) {\n                    return Promise.reject(new Error(Locales._('ERR_VFSMODULE_ALREADY_MOUNTED_FMT', point.option('name'))));\n                }\n                this.mountpoints.push(point);\n            } catch (e) {\n                return Promise.reject(e);\n            }\n            console.info('Mounting', point);\n            return new Promise((resolve, reject) => {\n                if (mount) {\n                    point.mount().then(() => {\n                        return resolve(point);\n                    }).catch(reject);\n                } else {\n                    resolve(point);\n                }\n            });\n        }\n        remove(moduleName, options) {\n            const module = this.getModule(moduleName);\n            const index = this.getModule(moduleName, true);\n            if (module) {\n                return new Promise((resolve, reject) => {\n                    module.unmount(options).then(res => {\n                        if (index !== -1) {\n                            this.mountpoints.splice(index, 1);\n                        }\n                        return resolve(res);\n                    }).catch(reject);\n                });\n            }\n            return Promise.reject(new Error(Locales._('ERR_VFSMODULE_NOT_MOUNTED_FMT', moduleName)));\n        }\n        getModules(filter) {\n            filter = Object.assign({}, {\n                visible: true,\n                special: false\n            }, filter);\n            return this.mountpoints.filter(mount => {\n                if (mount.enabled() && mount.option('visible')) {\n                    const hits = Object.keys(filter).filter(filterName => {\n                        return mount.option(filterName) === filter[filterName];\n                    });\n                    return hits.length > 0;\n                }\n                return false;\n            });\n        }\n        getModuleFromPath(test) {\n            return this.mountpoints.find(mount => {\n                if (typeof test === 'string' && mount.enabled()) {\n                    if (mount.option('match') && test.match(mount.option('match'))) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        getModule(name, idx) {\n            const m = idx ? 'findIndex' : 'find';\n            return this.mountpoints[m](i => i.option('name') === name);\n        }\n        getTransport(name) {\n            return this.transports[name];\n        }\n    }\n    return new MountManager();\n});\ndefine('skylark-osjsv2-client/vfs/filedataurl',[],function () {\n    'use strict';\n    return class FileDataURL {\n        constructor(dataURL) {\n            this.dataURL = dataURL;\n        }\n        toBase64() {\n            return this.data.split(',')[1];\n        }\n        toString() {\n            return this.dataURL;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/fs',[\n    '../utils/fs',\n    './file',\n    './filedataurl',\n    '../core/process',\n    '../core/mount-manager',\n    '../core/package-manager',\n    '../core/settings-manager',\n    '../core/connection',\n    '../core/locales'\n], function (FS, FileMetadata, FileDataURL, Process, MountManager, PackageManager, SettingsManager, Connection, Locales) {\n    'use strict';\n    let watches = [];\n    function noop(err, res) {\n        if (err) {\n            console.error('VFS operation without callback caused an error', err);\n        } else {\n            console.warn('VFS operation without callback', res);\n        }\n    }\n    function hasAlias(item, retm) {\n        const module = MountManager.getModuleFromPath(item.path);\n        if (module) {\n            const match = module.option('match');\n            const options = module.option('options');\n            if (options && options.alias) {\n                return retm ? module : item.path.replace(match, options.alias);\n            }\n        }\n        return false;\n    }\n    function checkMetadataArgument(item, err, checkRo) {\n        if (typeof item === 'string') {\n            item = new FileMetadata(item);\n        } else if (typeof item === 'object' && item.path) {\n            item = new FileMetadata(item);\n        }\n        if (!(item instanceof FileMetadata)) {\n            throw new TypeError(err || Locales._('ERR_VFS_EXPECT_FILE'));\n        }\n        const alias = hasAlias(item);\n        if (alias) {\n            item.path = alias;\n        }\n        const mountpoint = MountManager.getModuleFromPath(item.path);\n        if (!mountpoint) {\n            throw new Error(Locales._('ERR_VFSMODULE_NOT_FOUND_FMT', item.path));\n        }\n        if (checkRo && mountpoint.isReadOnly()) {\n            throw new Error(Locales._('ERR_VFSMODULE_READONLY_FMT', mountpoint.name));\n        }\n        return item;\n    }\n    function hasSameTransport(src, dest) {\n        const msrc = MountManager.getModuleFromPath(src.path);\n        const mdst = MountManager.getModuleFromPath(dest.path);\n        if (!msrc || !mdst || msrc === mdst) {\n            return true;\n        }\n        if (msrc && mdst && (msrc.option('internal') && mdst.option('internal'))) {\n            return true;\n        }\n        return msrc.option('transport') === mdst.option('tranport');\n    }\n    function existsWrapper(item, options) {\n        options = options || {};\n        if (options.overwrite) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            exists(item).then(result => {\n                if (result) {\n                    return reject(new Error(Locales._('ERR_VFS_FILE_EXISTS')));\n                }\n                return resolve();\n            }).catch(error => {\n                if (error) {\n                    console.warn('existsWrapper() error', error);\n                }\n                reject(error);\n            });\n        });\n    }\n    function createBackLink(item, result, alias, oitem) {\n        const path = item.path.split('://')[1].replace(/\\/+/g, '/').replace(/^\\/?/, '/');\n        let isOnRoot = path === '/';\n        if (alias) {\n            isOnRoot = oitem.path === alias.root;\n        }\n        if (!isOnRoot) {\n            const foundBack = result.some(function (iter) {\n                return iter.filename === '..';\n            });\n            if (!foundBack) {\n                return new FileMetadata({\n                    filename: '..',\n                    path: FS.dirname(item.path),\n                    mime: null,\n                    size: 0,\n                    type: 'dir'\n                });\n            }\n        }\n        return false;\n    }\n    function checkWatches(msg, obj) {\n        watches.forEach(function (w) {\n            const checkPath = w.path;\n            function _check(f) {\n                if (w.type === 'dir') {\n                    return f.path.substr(0, checkPath.length) === checkPath;\n                }\n                return f.path === checkPath;\n            }\n            let wasTouched = false;\n            if (obj.destination) {\n                wasTouched = _check(obj.destination);\n                if (!wasTouched) {\n                    wasTouched = _check(obj.source);\n                }\n            } else {\n                wasTouched = _check(obj);\n            }\n            if (wasTouched) {\n                w.cb(msg, obj);\n            }\n        });\n    }\n    function findAlias(item) {\n        const mm = MountManager;\n        let found = null;\n        mm.getModules().forEach(function (iter) {\n            if (!found && iter.option('options').alias) {\n                const a = iter.option('options').alias;\n                if (item.path.substr(0, a.length) === a) {\n                    found = iter;\n                }\n            }\n        });\n        return found;\n    }\n    function convertWriteData(data, mime) {\n        const convertTo = (m, d, resolve, reject) => {\n            FS[m](d, mime, function (error, response) {\n                if (error) {\n                    reject(new Error(error));\n                } else {\n                    resolve(response);\n                }\n            });\n        };\n        return new Promise((resolve, reject) => {\n            try {\n                if (typeof data === 'string') {\n                    if (data.length) {\n                        return convertTo('textToAb', data, resolve, reject);\n                    }\n                } else {\n                    if (data instanceof FileDataURL) {\n                        return convertTo('dataSourceToAb', data.toString(), resolve, reject);\n                    } else if (window.Blob && data instanceof window.Blob) {\n                        return convertTo('blobToAb', data, resolve, reject);\n                    }\n                }\n            } catch (e) {\n                return reject(e);\n            }\n            return resolve(data);\n        });\n    }\n    function requestWrapper(mountpoint, method, args, options, appRef) {\n        console.info('VFS operation', ...arguments);\n        if (!mountpoint) {\n            return Promise.reject(new Error(Locales._('ERR_VFSMODULE_INVALID')));\n        }\n        return new Promise((resolve, reject) => {\n            mountpoint.request(method, args, options).then(response => {\n                return Connection.instance.onVFSRequestCompleted(mountpoint, method, args, response, appRef).then(() => resolve(response)).catch(reject);\n            }).catch(reject);\n        });\n    }\n    function performRequest(method, args, options, test, appRef, errorStr) {\n        return new Promise((resolve, reject) => {\n            if (options && !(options instanceof Object)) {\n                reject(new TypeError(Locales._('ERR_ARGUMENT_FMT', 'VFS::' + method, 'options', 'Object', typeof options)));\n                return;\n            }\n            const mountpoint = MountManager.getModuleFromPath(test);\n            if (!mountpoint) {\n                reject(new Error(Locales._('ERR_VFSMODULE_NOT_FOUND_FMT', test)));\n                return;\n            }\n            requestWrapper(mountpoint, method, args, options, appRef).then(resolve).catch(reject);\n        });\n    }\n    function broadcastMessage(msg, item, appRef) {\n        function _message(i) {\n            Process.message(msg, i, { source: appRef ? appRef.__pid : null });\n            checkWatches(msg, item);\n        }\n        const aliased = function () {\n            function _transform(i) {\n                if (i instanceof FileMetadata) {\n                    const n = new FileMetadata(i);\n                    const alias = findAlias(n);\n                    if (alias) {\n                        n.path = n.path.replace(alias.option('options').alias, alias.option('root'));\n                        return n;\n                    }\n                }\n                return false;\n            }\n            if (item instanceof FileMetadata) {\n                return _transform(item);\n            } else if (item && item.destination && item.source) {\n                return {\n                    source: _transform(item.source),\n                    destination: _transform(item.destination)\n                };\n            }\n            return null;\n        }();\n        _message(item);\n        const tuple = aliased.source || aliased.destination;\n        if (aliased && (aliased instanceof FileMetadata || tuple)) {\n            if (tuple) {\n                aliased.source = aliased.source || item.source;\n                aliased.destination = aliased.destination || item.destination;\n            }\n            _message(aliased);\n        }\n    }\n    function find(item, args, options) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('find', [\n            item,\n            args\n        ], options, item.path, null, 'ERR_VFSMODULE_FIND_FMT');\n    }\n    function scandir(item, options) {\n        const vfsSettings = SettingsManager.get('VFS');\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        const oitem = new FileMetadata(item);\n        const alias = hasAlias(oitem, true);\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            performRequest('scandir', [item], options, item.path, null, 'ERR_VFSMODULE_SCANDIR_FMT').then(result => {\n                if (result instanceof Array) {\n                    result = FS.filterScandir(result, options, vfsSettings);\n                    if (alias) {\n                        result = result.map(function (iter) {\n                            const isShortcut = iter.shortcut === true;\n                            const niter = new FileMetadata(iter);\n                            if (!isShortcut) {\n                                const str = iter.path.replace(/\\/?$/, '');\n                                const opt = alias.option('options') || {};\n                                const tmp = opt.alias.replace(/\\/?$/, '');\n                                niter.path = FS.pathJoin(alias.option('root'), str.replace(tmp, ''));\n                            }\n                            return niter;\n                        });\n                    }\n                    if (options.backlink !== false) {\n                        const back = createBackLink(item, result, alias, oitem);\n                        if (back) {\n                            result.unshift(back);\n                        }\n                    }\n                }\n                return resolve(result);\n            }).catch(reject);\n        });\n    }\n    function write(item, data, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(item.path);\n            convertWriteData(data, item.mime).then(ab => {\n                requestWrapper(mountpoint, 'write', [\n                    item,\n                    ab\n                ], options, appRef).then(resolve).catch(e => {\n                    reject(new Error(Locales._('ERR_VFSMODULE_WRITE_FMT', e)));\n                });\n                return true;\n            }).catch(e => {\n                reject(new Error(Locales._('ERR_VFSMODULE_WRITE_FMT', e)));\n            });\n        });\n    }\n    function read(item, options) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(item.path);\n            requestWrapper(mountpoint, 'read', [item], options).then(response => {\n                if (options.type) {\n                    const types = {\n                        datasource: () => new Promise((yes, no) => {\n                            FS.abToDataSource(response, item.mime, function (error, dataSource) {\n                                return error ? no(error) : yes(dataSource);\n                            });\n                        }),\n                        text: () => new Promise((yes, no) => {\n                            FS.abToText(response, item.mime, function (error, text) {\n                                return error ? no(error) : yes(text);\n                            });\n                        }),\n                        blob: () => new Promise((yes, no) => {\n                            FS.abToBlob(response, item.mime, function (error, blob) {\n                                return error ? no(error) : yes(blob);\n                            });\n                        }),\n                        json: () => new Promise((yes, no) => {\n                            FS.abToText(response, item.mime, function (error, text) {\n                                let jsn;\n                                if (typeof text === 'string') {\n                                    try {\n                                        jsn = JSON.parse(text);\n                                    } catch (e) {\n                                        console.warn('VFS::read()', 'readToJSON', e.stack, e);\n                                    }\n                                }\n                                return error ? no(error) : yes(jsn);\n                            });\n                        })\n                    };\n                    const type = options.type.toLowerCase();\n                    if (types[type]) {\n                        return types[type]().then(resolve).catch(reject);\n                    }\n                }\n                return resolve(response);\n            }).catch(e => {\n                reject(new Error(Locales._('ERR_VFSMODULE_READ_FMT', e)));\n            });\n        });\n    }\n    function copy(src, dest, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            src = checkMetadataArgument(src, Locales._('ERR_VFS_EXPECT_SRC_FILE'));\n            dest = checkMetadataArgument(dest, Locales._('ERR_VFS_EXPECT_DST_FILE'), true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        options = Object.assign({}, {\n            type: 'binary',\n            dialog: null\n        }, options);\n        options.arrayBuffer = true;\n        function dialogProgress(prog) {\n            if (options.dialog) {\n                options.dialog.setProgress(prog);\n            }\n        }\n        const promise = new Promise((resolve, reject) => {\n            existsWrapper(dest, options).then(() => {\n                const sourceMountpoint = MountManager.getModuleFromPath(src.path);\n                const destMountpoint = MountManager.getModuleFromPath(dest.path);\n                if (hasSameTransport(src, dest)) {\n                    requestWrapper(sourceMountpoint, 'copy', [\n                        src,\n                        dest\n                    ], options, appRef).then(() => {\n                        dialogProgress(100);\n                        return resolve(true);\n                    }).catch(reject);\n                } else {\n                    requestWrapper(sourceMountpoint, 'read', [src], options, appRef).then(data => {\n                        dialogProgress(50);\n                        return requestWrapper(destMountpoint, 'write', [\n                            dest,\n                            data\n                        ], options, appRef).then(res => {\n                            dialogProgress(100);\n                            return resolve(res);\n                        }).catch(reject);\n                    }).catch(reject);\n                }\n                return true;\n            }).catch(reject);\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                dialogProgress(100);\n                reject(new Error(Locales._('ERR_VFSMODULE_COPY_FMT', e)));\n            });\n        });\n    }\n    function move(src, dest, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            src = checkMetadataArgument(src, Locales._('ERR_VFS_EXPECT_SRC_FILE'));\n            dest = checkMetadataArgument(dest, Locales._('ERR_VFS_EXPECT_DST_FILE'), true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        function dialogProgress(prog) {\n            if (options.dialog) {\n                options.dialog.setProgress(prog);\n            }\n        }\n        const promise = new Promise((resolve, reject) => {\n            existsWrapper(dest, options).then(() => {\n                const sourceMountpoint = MountManager.getModuleFromPath(src.path);\n                const destMountpoint = MountManager.getModuleFromPath(dest.path);\n                if (hasSameTransport(src, dest)) {\n                    requestWrapper(sourceMountpoint, 'move', [\n                        src,\n                        dest\n                    ], options, appRef).then(() => {\n                        dialogProgress(100);\n                        return resolve(true);\n                    }).catch(reject);\n                } else {\n                    requestWrapper(sourceMountpoint, 'read', [src], options, appRef).then(data => {\n                        dialogProgress(50);\n                        return requestWrapper(destMountpoint, 'write', [\n                            dest,\n                            data\n                        ], options, appRef).then(res => {\n                            return requestWrapper(sourceMountpoint, 'unlink', [src], options, appRef).then(res => {\n                                dialogProgress(100);\n                                return resolve(res);\n                            }).catch(reject);\n                        }).catch(reject);\n                    }).catch(reject);\n                }\n                return true;\n            }).catch(reject);\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                dialogProgress(100);\n                reject(new Error(Locales._('ERR_VFSMODULE_MOVE_FMT', e)));\n            });\n        });\n    }\n    function rename(src, dest) {\n        return move(...arguments);\n    }\n    function unlink(item, options, appRef) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            performRequest('unlink', [item], options, item.path, appRef, 'ERR_VFSMODULE_UNLINK_FMT').then(response => {\n                const pkgdir = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n                const found = pkgdir.some(function (i) {\n                    const chkdir = new FileMetadata(i);\n                    const idir = FS.dirname(item.path);\n                    return idir === chkdir.path;\n                });\n                if (found) {\n                    PackageManager.generateUserMetadata(function () {\n                    });\n                }\n                return resolve(response);\n            }).catch(reject);\n        });\n    }\n    function mkdir(item, options, appRef) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('mkdir', [item], options, item.path, appRef, 'ERR_VFSMODULE_MKDIR_FMT');\n    }\n    function exists(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('exists', [item], {}, item.path, null, 'ERR_VFSMODULE_EXISTS_FMT');\n    }\n    function fileinfo(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('fileinfo', [item], {}, item.path, null, 'ERR_VFSMODULE_FILEINFO_FMT');\n    }\n    function url(item, options) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('url', [item], options, item.path, null, 'ERR_VFSMODULE_URL_FMT');\n    }\n    function upload(args, options, appRef) {\n        args = args || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        if (!args.files) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UPLOAD_NO_FILES')));\n        }\n        if (!args.destination) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UPLOAD_NO_DEST')));\n        }\n        const dest = new FileMetadata(args.destination);\n        const mountpoint = MountManager.getModuleFromPath(args.destination);\n        return new Promise((resolve, reject) => {\n            Promise.all(args.files.map(f => {\n                const filename = f instanceof window.File ? f.name : f.filename;\n                const fileDest = new FileMetadata(FS.pathJoin(args.destination, filename));\n                return new Promise((resolve, reject) => {\n                    existsWrapper(fileDest, options).then(() => {\n                        return requestWrapper(mountpoint, 'upload', [\n                            dest,\n                            f\n                        ], options, appRef).then(resolve).catch(reject);\n                    }).catch(reject);\n                });\n            })).then(resolve).catch(e => {\n                reject(new Error(Locales._('ERR_VFS_UPLOAD_FAIL_FMT', e)));\n            });\n        });\n    }\n    function download(file) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            file = checkMetadataArgument(file);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        if (!file.path) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_DOWNLOAD_NO_FILE')));\n        }\n        const promise = new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(file);\n            requestWrapper(mountpoint, 'download', [file], {}).then(() => {\n                if (mountpoint.option('internal')) {\n                    mountpoint.download(file).then(resolve).catch(reject);\n                } else {\n                    mountpoint.read(file).then(resolve).catch(reject);\n                }\n                return true;\n            });\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                reject(new Error(Locales._('ERR_VFS_DOWNLOAD_FAILED', e)));\n            });\n        });\n    }\n    function trash(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('trash', [item], {}, item.path, null, 'ERR_VFSMODULE_TRASH_FMT');\n    }\n    function untrash(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('untrash', [item], {}, item.path, null, 'ERR_VFSMODULE_UNTRASH_FMT');\n    }\n    function emptyTrash() {\n        return performRequest('emptyTrash', [], {}, null, null, 'ERR_VFSMODULE_EMPTYTRASH_FMT');\n    }\n    function freeSpace(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        const m = MountManager.getModuleFromPath(item.path, false, true);\n        return performRequest('freeSpace', [m.option('root')], {}, item.path, null, 'ERR_VFSMODULE_FREESPACE_FMT');\n    }\n    function watch(item, callback) {\n        callback = callback || noop;\n        if (arguments.length < 2) {\n            callback(Locales._('ERR_VFS_NUM_ARGS'));\n            return -1;\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return Promise.resolve(watches.push({\n            path: item.path,\n            type: item.type,\n            cb: callback\n        }) - 1);\n    }\n    function unwatch(idx) {\n        if (typeof watches[idx] !== 'undefined') {\n            delete watches[idx];\n        }\n    }\n    function triggerWatch(method, arg, appRef) {\n        broadcastMessage('vfs:' + method, arg, appRef);\n    }\n    return {\n        broadcastMessage: broadcastMessage,\n        find: find,\n        scandir: scandir,\n        write: write,\n        read: read,\n        copy: copy,\n        move: move,\n        rename: rename,\n        unlink: unlink,\n        mkdir: mkdir,\n        exists: exists,\n        fileinfo: fileinfo,\n        url: url,\n        upload: upload,\n        download: download,\n        trash: trash,\n        untrash: untrash,\n        emptyTrash: emptyTrash,\n        freeSpace: freeSpace,\n        watch: watch,\n        unwatch: unwatch,\n        triggerWatch: triggerWatch\n    };\n});\ndefine('skylark-osjsv2-client/core/search-engine',[\n    './package-manager',\n    './settings-manager',\n    '../vfs/file',\n    './theme',\n    '../vfs/fs'\n], function (PackageManager, SettingsManager, FileMetadata, Theme, VFS) {\n    'use strict';\n    function search(list, query) {\n        const result = [];\n        list.forEach(obj => {\n            let found = false;\n            obj.fields.forEach(s => {\n                if (found) {\n                    return;\n                }\n                const qry = String(query).toLowerCase();\n                const str = String(s).toLowerCase();\n                if (str.indexOf(qry) !== -1) {\n                    result.push(obj.value);\n                    found = true;\n                }\n            });\n        });\n        return result;\n    }\n    function SearchObject(obj) {\n        Object.keys(obj).forEach(k => {\n            this[k] = obj[k];\n        });\n    }\n    const ApplicationModule = function () {\n        function query() {\n            const packages = PackageManager.getPackages(); \n            return Object.keys(packages).map(pn => {\n                const p = packages[pn];\n                return new SearchObject({\n                    value: {\n                        title: p.name,\n                        description: p.description,\n                        icon: Theme.getFileIcon(new FileMetadata('applications:///' + p.className, 'application'), '16x16'),\n                        launch: {\n                            application: pn,\n                            args: {}\n                        }\n                    },\n                    fields: [\n                        p.className,\n                        p.name,\n                        p.description\n                    ]\n                });\n            });\n        }\n        return {\n            search: function (q, args, settings) {\n                if (settings.applications) {\n                    let results = search(query(), q);\n                    if (args.limit && results.length > args.dlimit) {\n                        results = results.splice(0, args.dlimit);\n                    }\n                    return Promise.resolve(results);\n                }\n                return Promise.resolve([]);\n            },\n            reindex: function (args) {\n                return Promise.resolve(true);\n            },\n            destroy: function () {\n            }\n        };\n    }();\n    const FilesystemModule = {\n        search: function (q, args, settings, cb) {\n            if (!settings.files || !settings.paths) {\n                return Promise.resolve([]);\n            }\n            let found = [];\n            const append = result => {\n                if (result) {\n                    found = found.concat(result.map(iter => {\n                        return {\n                            title: iter.filename,\n                            description: iter.path,\n                            icon: Theme.getFileIcon(new FileMetadata(iter)),\n                            launch: {\n                                application: '',\n                                args: '',\n                                file: iter\n                            }\n                        };\n                    }));\n                }\n            };\n            return new Promise((resolve, reject) => {\n                Promise.each(settings.paths, e => {\n                    return new Promise(n => {\n                        VFS.find(e, {\n                            query: q,\n                            limit: args.limit ? args.dlimit : 0,\n                            recursive: args.recursive\n                        }).then(result => {\n                            return n(append(result));\n                        }).catch(error => {\n                            console.warn(error);\n                            n();\n                        });\n                    });\n                }).then(() => {\n                    return resolve(found);\n                }).catch(reject);\n            });\n        },\n        reindex: function (args) {\n            return Promise.resolve();\n        },\n        destroy: function () {\n        }\n    };\n    class SearchEngine {\n        constructor() {\n            this.settings = {};\n            this.inited = false;\n            this.modules = [\n                ApplicationModule,\n                FilesystemModule\n            ];\n        }\n        init() {\n            console.debug('SearchEngine::init()');\n            if (!this.inited) {\n                this.settings = SettingsManager.get('SearchEngine') || {};\n                this.inited = true;\n            }\n            return Promise.resolve();\n        }\n        destroy() {\n            console.debug('SearchEngine::destroy()');\n            this.modules.forEach(m => {\n                m.destroy();\n            });\n            this.modules = [];\n            this.settings = {};\n            this.inited = false;\n        }\n        search(q, args) {\n            let result = [];\n            let errors = [];\n            args = Object.assign({}, {\n                recursive: false,\n                limit: 0,\n                dlimit: 0\n            }, args);\n            if (args.limit) {\n                args.dlimit = args.limit;\n            }\n            return new Promise((resolve, reject) => {\n                Promise.each(this.modules, module => {\n                    return new Promise((next, reject) => {\n                        console.debug('SearchEngine::search()', '=>', module);\n                        if (!args.limit || args.dlimit > 0) {\n                            module.search(q, args, this.settings).then(res => {\n                                args.dlimit -= res.length;\n                                result = result.concat(res);\n                                next();\n                            }).catch(err => {\n                                console.warn(err);\n                                errors.push(err instanceof Error ? err.toString() : err);\n                                next();\n                            });\n                        } else {\n                            next();\n                        }\n                    });\n                }).then(() => resolve(result)).catch(reject);\n            });\n        }\n        reindex(args) {\n            const errors = [];\n            return Promise.each(this.modules, module => {\n                return new Promise(next => {\n                    console.debug('SearchEngine::reindex()', '=>', module);\n                    module.reindex(args).then(next).catch(err => {\n                        if (err) {\n                            errors.push(err);\n                        }\n                        next();\n                    });\n                });\n            });\n        }\n        configure(opts, save) {\n        }\n    }\n    return new SearchEngine();\n});\ndefine('skylark-osjsv2-client/core/authenticator',[\n    './locales',\n    './config',\n    './connection',\n    './settings-manager',\n    './package-manager'\n], function ( a, b, Connection, SettingsManager, PackageManager) {\n    'use strict';\n    let _instance;\n    return class Authenticator {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            _instance = this;\n            this.userData = {\n                id: 0,\n                username: 'root',\n                name: 'root user',\n                groups: ['admin']\n            };\n            this.loggedIn = false;\n            this.isStandalone = false;\n        }\n        init() {\n            return this.createUI();\n        }\n        destroy() {\n            _instance = null;\n        }\n        getUser() {\n            return Object.assign({}, this.userData);\n        }\n        isLoggedIn() {\n            return this.isLoggedIn;\n        }\n        login(data) {\n            return new Promise((resolve, reject) => {\n                Connection.request('login', data).then(result => {\n                    return resolve(result ? result : a._('ERR_LOGIN_INVALID'));\n                }).catch(error => {\n                    reject(new Error(a._('ERR_LOGIN_FMT', error)));\n                });\n            });\n        }\n        logout() {\n            return new Promise((resolve, reject) => {\n                Connection.request('logout', {}).then(result => {\n                    return resolve(!!result);\n                }).catch(err => {\n                    reject(new Error('An error occured: ' + err));\n                });\n            });\n        }\n        checkPermission(group) {\n            const user = this.getUser();\n            const userGroups = user.groups || [];\n            if (!(group instanceof Array)) {\n                group = [group];\n            }\n            if (userGroups.indexOf('admin') === -1) {\n                return !!group.every(g => userGroups.indexOf(g) >= 0);\n            }\n            return true;\n        }\n        requestLogin(data) {\n            return new Promise((resolve, reject) => {\n                this.login(data).then(res => {\n                    return this.onLogin(res).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        onLogin(data) {\n            let userSettings = data.userSettings;\n            if (!userSettings || userSettings instanceof Array) {\n                userSettings = {};\n            }\n            this.userData = data.userData;\n            function getLocale() {\n                let curLocale = b.getConfig('Locale');\n                let detectedLocale = b.getUserLocale();\n                if (b.getConfig('LocaleOptions.AutoDetect', true) && detectedLocale) {\n                    console.info('Auto-detected user locale via browser', detectedLocale);\n                    curLocale = detectedLocale;\n                }\n                let result = SettingsManager.get('CoreWM');\n                if (!result) {\n                    try {\n                        result = userSettings.CoreWM;\n                    } catch (e) {\n                    }\n                }\n                return result ? result.language || curLocale : curLocale;\n            }\n            document.getElementById('LoadingScreen').style.display = 'block';\n            a.setLocale(getLocale());\n            SettingsManager.init(userSettings);\n            if (data.blacklistedPackages) {\n                PackageManager.setBlacklist(data.blacklistedPackages);\n            }\n            this.loggedIn = true;\n            return Promise.resolve(true);\n        }\n        createUI() {\n            this._renderUI();\n            return this._createUI();\n        }\n        _renderUI(html) {\n            if (!html) {\n                html = require('osjs-scheme-loader!login.html');\n            }\n            const tempNode = document.createElement('div');\n            tempNode.innerHTML = html;\n            tempNode.childNodes.forEach(n => {\n                const nn = n.cloneNode(true);\n                if ([\n                        'STYLE',\n                        'SCRIPT'\n                    ].indexOf(n.tagName) === -1) {\n                    document.body.appendChild(nn);\n                } else {\n                    document.querySelector('head').appendChild(nn);\n                }\n            });\n        }\n        _createUI() {\n            const container = document.getElementById('Login');\n            const login = document.getElementById('LoginForm');\n            const u = document.getElementById('LoginUsername');\n            const p = document.getElementById('LoginPassword');\n            const s = document.getElementById('LoginSubmit');\n            function _restore() {\n                s.removeAttribute('disabled');\n                u.removeAttribute('disabled');\n                p.removeAttribute('disabled');\n            }\n            function _lock() {\n                s.setAttribute('disabled', 'disabled');\n                u.setAttribute('disabled', 'disabled');\n                p.setAttribute('disabled', 'disabled');\n            }\n            container.style.display = 'block';\n            _restore();\n            return new Promise((resolve, reject) => {\n                login.onsubmit = ev => {\n                    _lock();\n                    if (ev) {\n                        ev.preventDefault();\n                    }\n                    this.requestLogin({\n                        username: u.value,\n                        password: p.value\n                    }).then(() => {\n                        container.parentNode.removeChild(container);\n                        return resolve();\n                    }).catch(err => {\n                        alert(err);\n                        _restore();\n                    });\n                };\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/keycodes',[],function () {\n    'use strict';\n    const Keycodes = function () {\n        const list = {\n            F1: 112,\n            F2: 113,\n            F3: 114,\n            F4: 115,\n            F6: 118,\n            F7: 119,\n            F8: 120,\n            F9: 121,\n            F10: 122,\n            F11: 123,\n            F12: 124,\n            TILDE: 220,\n            GRAVE: 192,\n            CMD: 17,\n            LSUPER: 91,\n            RSUPER: 92,\n            DELETE: 46,\n            INSERT: 45,\n            HOME: 36,\n            END: 35,\n            PGDOWN: 34,\n            PGUP: 33,\n            PAUSE: 19,\n            BREAK: 19,\n            CAPS_LOCK: 20,\n            SCROLL_LOCK: 186,\n            BACKSPACE: 8,\n            SPACE: 32,\n            TAB: 9,\n            ENTER: 13,\n            ESC: 27,\n            LEFT: 37,\n            RIGHT: 39,\n            UP: 38,\n            DOWN: 40\n        };\n        for (let n = 33; n <= 126; n++) {\n            list[String.fromCharCode(n)] = n;\n        }\n        return Object.freeze(list);\n    }();\n    return Keycodes;\n});\ndefine('skylark-osjsv2-client/utils/events',[\n    './keycodes'\n], function (Keycodes) {\n    'use strict';\n    function getRealEventName(evName) {\n        let realName = evName;\n        if (evName !== 'mousewheel' && evName.match(/^mouse/)) {\n            if (window.PointerEvent) {\n                realName = evName.replace(/^mouse/, 'pointer');\n            } else if (window.MSPointerEvent) {\n                const tmpName = evName.replace(/^mouse/, '');\n                realName = 'MSPointer' + tmpName.charAt(0).toUpperCase() + tmpName.slice(1).toLowerCase();\n            }\n        }\n        return realName;\n    }\n    function getEventList(str) {\n        return str.replace(/\\s/g, '').split(',');\n    }\n    function mousePosition(ev) {\n        if (ev.detail && typeof ev.detail.x !== 'undefined' && typeof ev.detail.y !== 'undefined') {\n            return {\n                x: ev.detail.x,\n                y: ev.detail.y\n            };\n        }\n        const touch = ev.touches || ev.changedTouches || [];\n        if (touch.length) {\n            return {\n                x: touch[0].clientX,\n                y: touch[0].clientY\n            };\n        }\n        return {\n            x: ev.clientX,\n            y: ev.clientY\n        };\n    }\n    function mouseButton(ev) {\n        if (typeof ev.button !== 'undefined') {\n            if (ev.button === 0) {\n                return 'left';\n            } else if (ev.button === 1) {\n                return 'middle';\n            }\n            return 'right';\n        }\n        if (ev.which === 2 || ev.which === 4) {\n            return 'middle';\n        } else if (ev.which === 1) {\n            return 'left';\n        }\n        return 'right';\n    }\n    const keyCombination = function () {\n        const modifiers = {\n            CTRL: ev => {\n                return ev.ctrlKey;\n            },\n            SHIFT: ev => {\n                return ev.shiftKey;\n            },\n            ALT: ev => {\n                return ev.altKey;\n            },\n            META: ev => {\n                return ev.metaKey;\n            }\n        };\n        function getKeyName(keyCode) {\n            let result = false;\n            Object.keys(Keycodes).forEach(k => {\n                if (!result && keyCode === Keycodes[k]) {\n                    result = k;\n                }\n            });\n            return result;\n        }\n        return function (ev, checkFor) {\n            const checks = checkFor.toUpperCase().split('+');\n            const checkMods = {\n                CTRL: false,\n                SHIFT: false,\n                ALT: false\n            };\n            const checkKeys = [];\n            checks.forEach(f => {\n                if (modifiers[f]) {\n                    checkMods[f] = true;\n                } else {\n                    checkKeys.push(f);\n                }\n            });\n            const hasmod = Object.keys(checkMods).every(f => {\n                const fk = !!modifiers[f](ev);\n                return checkMods[f] === fk;\n            });\n            const haskey = checkKeys.every(f => {\n                return getKeyName(ev.keyCode) === f;\n            });\n            return hasmod && haskey;\n        };\n    }();\n    const $bind = function () {\n        function makeFakeEvent(name, ev) {\n            const pos = mousePosition(ev);\n            const nev = Object.assign({\n                clientX: pos.x,\n                clientY: pos.y,\n                x: pos.x,\n                y: pos.y\n            }, ev);\n            return new MouseEvent(name, nev);\n        }\n        function addEventHandler(el, n, t, callback, handler, useCapture, realType) {\n            const args = [\n                t,\n                handler,\n                useCapture\n            ];\n            el.addEventListener.apply(el, args);\n            el._boundEvents[n].push({\n                realType: realType,\n                args: args,\n                callback: callback\n            });\n        }\n        function createWheelHandler(el, n, t, callback, useCapture) {\n            function _wheel(ev) {\n                const pos = mousePosition(ev);\n                const direction = ev.detail < 0 || ev.wheelDelta > 0 ? 1 : -1;\n                pos.z = direction;\n                return callback(ev, pos);\n            }\n            addEventHandler(el, n, 'mousewheel', callback, _wheel, useCapture, 'mousewheel');\n            addEventHandler(el, n, 'DOMMouseScroll', callback, _wheel, useCapture, 'DOMMouseScroll');\n        }\n        function createClick(el, n, t, callback, useCapture) {\n            let cancelled = false;\n            let timeout;\n            let firstTarget;\n            let firstEvent;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                clearTimeout(timeout);\n                firstTarget = null;\n                cancelled = true;\n                window.removeEventListener('touchmove', tempMove);\n            }\n            function tempEnd(ev) {\n                clearTimeout(timeout);\n                window.removeEventListener('touchmove', tempMove);\n                if (!cancelled && ev.target === firstTarget) {\n                    const newEvent = makeFakeEvent('click', firstEvent);\n                    Object.defineProperty(newEvent, 'target', {\n                        value: firstEvent.target,\n                        enumerable: false\n                    });\n                    el.dispatchEvent(newEvent);\n                }\n            }\n            function tempStart(ev) {\n                firstEvent = ev;\n                firstTarget = ev.target;\n                timeout = setTimeout(() => {\n                    cancelled = true;\n                }, 300);\n                window.addEventListener('touchmove', tempMove);\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'click');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'click');\n        }\n        function createDoubleClick(el, n, t, callback, useCapture) {\n            let count = 0;\n            let cancelled = false;\n            let firstTarget;\n            let firstEvent;\n            let debounce;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                firstTarget = null;\n                cancelled = true;\n                count = 0;\n                window.removeEventListener('toucmove', tempMove);\n            }\n            function tempEnd() {\n                window.removeEventListener('touchmove', tempMove);\n                debounce = setTimeout(cancel, 680);\n            }\n            function tempStart(ev) {\n                window.addEventListener('touchmove', tempMove);\n                clearTimeout(debounce);\n                if (count === 0) {\n                    firstEvent = ev;\n                    firstTarget = ev.target;\n                } else if (count > 0) {\n                    if (ev.target !== firstTarget) {\n                        cancel();\n                        return;\n                    }\n                    if (!cancelled) {\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                        ev.target.dispatchEvent(makeFakeEvent('dblclick', firstEvent));\n                    }\n                }\n                cancelled = false;\n                count++;\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'dblclick');\n        }\n        function createContextMenu(el, n, t, callback, useCapture) {\n            let cancelled = false;\n            let timeout;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                clearTimeout(timeout);\n                cancelled = true;\n                window.removeEventListener('toucmove', tempMove);\n            }\n            function tempEnd(ev) {\n                cancelled = true;\n                clearTimeout(timeout);\n                window.removeEventListener('touchmove', tempMove);\n            }\n            function tempStart(ev) {\n                timeout = setTimeout(() => {\n                    if (!cancelled) {\n                        ev.preventDefault();\n                        ev.target.dispatchEvent(makeFakeEvent('contextmenu', ev));\n                    }\n                }, 300);\n                window.addEventListener('touchmove', tempMove);\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'contextmenu');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'contextmenu');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'contextmenu');\n        }\n        const customEvents = {\n            mousewheel: createWheelHandler,\n            click: createClick,\n            dblclick: createDoubleClick,\n            contextmenu: createContextMenu\n        };\n        return function Utils_$bind(el, evName, callback, useCapture, noBind) {\n            useCapture = useCapture === true;\n            if (arguments.length < 3) {\n                throw new Error('$bind expects 3 or more arguments');\n            }\n            if (typeof evName !== 'string') {\n                throw new Error('Given event type was not a string');\n            }\n            if (typeof callback !== 'function') {\n                throw new Error('Given callback was not a function');\n            }\n            function addEvent(nsType, type) {\n                type = getRealEventName(type);\n                addEventHandler(el, nsType, type, callback, function mouseEventHandler(ev) {\n                    if (!window.OSjs) {\n                        return;\n                    }\n                    if (noBind) {\n                        callback(ev, mousePosition(ev));\n                    }\n                    callback.call(el, ev, mousePosition(ev));\n                }, useCapture);\n                if (type === 'click' && el.tagName === 'BUTTON') {\n                    return;\n                }\n                if (customEvents[type]) {\n                    customEvents[type](el, nsType, type, function fakeEventHandler(ev) {\n                        if (noBind) {\n                            callback(ev, mousePosition(ev));\n                        }\n                        callback.call(el, ev, mousePosition(ev));\n                    }, useCapture);\n                }\n            }\n            function initNamespace(ns) {\n                if (!el._boundEvents) {\n                    el._boundEvents = {};\n                }\n                if (!el._boundEvents[ns]) {\n                    el._boundEvents[ns] = [];\n                }\n                const found = el._boundEvents[ns].filter(iter => {\n                    return iter.callback === callback;\n                });\n                return found.length === 0;\n            }\n            getEventList(evName).forEach(ns => {\n                const type = ns.split(':')[0];\n                if (!initNamespace(ns)) {\n                    console.warn('Utils::$bind()', 'This event was already bound, skipping');\n                    return;\n                }\n                addEvent(ns, type);\n            });\n        };\n    }();\n    function $unbind(el, evName, callback, useCapture) {\n        function unbindNamed(type) {\n            if (el._boundEvents) {\n                const list = el._boundEvents || {};\n                if (list[type]) {\n                    for (let i = 0; i < list[type].length; i++) {\n                        let iter = list[type][i];\n                        if (callback && iter.callback !== callback) {\n                            continue;\n                        }\n                        el.removeEventListener.apply(el, iter.args);\n                        list[type].splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        function unbindAll() {\n            if (el._boundEvents) {\n                Object.keys(el._boundEvents).forEach(type => {\n                    unbindNamed(type);\n                });\n                delete el._boundEvents;\n            }\n        }\n        if (el) {\n            if (evName) {\n                getEventList(evName).forEach(type => {\n                    unbindNamed(type);\n                });\n            } else {\n                unbindAll();\n            }\n        }\n    }\n    return {\n        mousePosition: mousePosition,\n        mouseButton: mouseButton,\n        keyCombination: keyCombination,\n        $bind: $bind,\n        $unbind: $unbind\n    };\n});\ndefine('skylark-osjsv2-client/helpers/window-behaviour',[\n    '../utils/dom',\n    '../utils/events',\n    '../core/theme'\n], function (DOM, Events, Theme) {\n    'use strict';\n    class BehaviourState {\n        constructor(wm, win, action, mousePosition) {\n            this.win = win;\n            this.$element = win._$element;\n            this.$top = win._$top;\n            this.$handle = win._$resize;\n            this.rectWorkspace = wm.getWindowSpace(true);\n            this.rectWindow = {\n                x: win._position.x,\n                y: win._position.y,\n                w: win._dimension.w,\n                h: win._dimension.h,\n                r: win._dimension.w + win._position.x,\n                b: win._dimension.h + win._position.y\n            };\n            const theme = Object.assign({}, Theme.getStyleTheme(true, true));\n            if (!theme.style) {\n                theme.style = {\n                    'window': {\n                        margin: 0,\n                        border: 0\n                    }\n                };\n            }\n            this.theme = {\n                topMargin: theme.style.window.margin || 0,\n                borderSize: theme.style.window.border || 0\n            };\n            this.snapping = {\n                cornerSize: wm.getSetting('windowCornerSnap') || 0,\n                windowSize: wm.getSetting('windowSnap') || 0\n            };\n            this.action = action;\n            this.moved = false;\n            this.direction = null;\n            this.startX = mousePosition.x;\n            this.startY = mousePosition.y;\n            this.minWidth = win._properties.min_width;\n            this.minHeight = win._properties.min_height;\n            const windowRects = [];\n            wm.getWindows().forEach(w => {\n                if (w && w._wid !== win._wid) {\n                    const pos = w._position;\n                    const dim = w._dimension;\n                    const rect = {\n                        left: pos.x - this.theme.borderSize,\n                        top: pos.y - this.theme.borderSize,\n                        width: dim.w + this.theme.borderSize * 2,\n                        height: dim.h + this.theme.borderSize * 2 + this.theme.topMargin\n                    };\n                    rect.right = rect.left + rect.width;\n                    rect.bottom = pos.y + dim.h + this.theme.topMargin + this.theme.borderSize;\n                    windowRects.push(rect);\n                }\n            });\n            this.snapRects = windowRects;\n        }\n        getRect() {\n            const win = this.win;\n            return {\n                left: win._position.x,\n                top: win._position.y,\n                width: win._dimension.w,\n                height: win._dimension.h\n            };\n        }\n        calculateDirection() {\n            const dir = DOM.$position(this.$handle);\n            const dirX = this.startX - dir.left;\n            const dirY = this.startY - dir.top;\n            const dirD = 20;\n            const checks = {\n                nw: dirX <= dirD && dirY <= dirD,\n                n: dirX > dirD && dirY <= dirD,\n                w: dirX <= dirD && dirY >= dirD,\n                ne: dirX >= dir.width - dirD && dirY <= dirD,\n                e: dirX >= dir.width - dirD && dirY > dirD,\n                se: dirX >= dir.width - dirD && dirY >= dir.height - dirD,\n                sw: dirX <= dirD && dirY >= dir.height - dirD\n            };\n            let direction = 's';\n            Object.keys(checks).forEach(function (k) {\n                if (checks[k]) {\n                    direction = k;\n                }\n            });\n            this.direction = direction;\n        }\n    }\n    function createWindowBehaviour(win, wm) {\n        let current = null;\n        let newRect = {};\n        function onWindowResize(ev, mousePosition, dx, dy) {\n            if (!current || !current.direction) {\n                return false;\n            }\n            let nw, nh, nl, nt;\n            (function () {\n                if (current.direction.indexOf('s') !== -1) {\n                    nh = current.rectWindow.h + dy;\n                    newRect.height = Math.max(current.minHeight, nh);\n                } else if (current.direction.indexOf('n') !== -1) {\n                    nh = current.rectWindow.h - dy;\n                    nt = current.rectWindow.y + dy;\n                    if (nt < current.rectWorkspace.top) {\n                        nt = current.rectWorkspace.top;\n                        nh = newRect.height;\n                    } else {\n                        if (nh < current.minHeight) {\n                            nt = current.rectWindow.b - current.minHeight;\n                        }\n                    }\n                    newRect.height = Math.max(current.minHeight, nh);\n                    newRect.top = nt;\n                }\n            }());\n            (function () {\n                if (current.direction.indexOf('e') !== -1) {\n                    nw = current.rectWindow.w + dx;\n                    newRect.width = Math.max(current.minWidth, nw);\n                } else if (current.direction.indexOf('w') !== -1) {\n                    nw = current.rectWindow.w - dx;\n                    nl = current.rectWindow.x + dx;\n                    if (nw < current.minWidth) {\n                        nl = current.rectWindow.r - current.minWidth;\n                    }\n                    newRect.width = Math.max(current.minWidth, nw);\n                    newRect.left = nl;\n                }\n            }());\n            return newRect;\n        }\n        function onWindowMove(ev, mousePosition, dx, dy) {\n            let newWidth = null;\n            let newHeight = null;\n            let newLeft = current.rectWindow.x + dx;\n            let newTop = current.rectWindow.y + dy;\n            const borderSize = current.theme.borderSize;\n            const topMargin = current.theme.topMargin;\n            const cornerSnapSize = current.snapping.cornerSize;\n            const windowSnapSize = current.snapping.windowSize;\n            if (newTop < current.rectWorkspace.top) {\n                newTop = current.rectWorkspace.top;\n            }\n            let newRight = newLeft + current.rectWindow.w + borderSize * 2;\n            let newBottom = newTop + current.rectWindow.h + topMargin + borderSize;\n            if (cornerSnapSize > 0) {\n                if (newLeft - borderSize <= cornerSnapSize && newLeft - borderSize >= -cornerSnapSize) {\n                    newLeft = borderSize;\n                } else if (newRight >= current.rectWorkspace.width - cornerSnapSize && newRight <= current.rectWorkspace.width + cornerSnapSize) {\n                    newLeft = current.rectWorkspace.width - current.rectWindow.w - borderSize;\n                }\n                if (newTop <= current.rectWorkspace.top + cornerSnapSize && newTop >= current.rectWorkspace.top - cornerSnapSize) {\n                    newTop = current.rectWorkspace.top + borderSize;\n                } else if (newBottom >= current.rectWorkspace.height + current.rectWorkspace.top - cornerSnapSize && newBottom <= current.rectWorkspace.height + current.rectWorkspace.top + cornerSnapSize) {\n                    newTop = current.rectWorkspace.height + current.rectWorkspace.top - current.rectWindow.h - topMargin - borderSize;\n                }\n            }\n            if (windowSnapSize > 0) {\n                current.snapRects.every(function (rect) {\n                    if (newRight >= rect.left - windowSnapSize && newRight <= rect.left + windowSnapSize) {\n                        newLeft = rect.left - (current.rectWindow.w + borderSize * 2);\n                        return false;\n                    }\n                    if (newLeft - borderSize <= rect.right + windowSnapSize && newLeft - borderSize >= rect.right - windowSnapSize) {\n                        newLeft = rect.right + borderSize * 2;\n                        return false;\n                    }\n                    if (newBottom >= rect.top - windowSnapSize && newBottom <= rect.top + windowSnapSize) {\n                        newTop = rect.top - (current.rectWindow.h + borderSize * 2 + topMargin);\n                        return false;\n                    }\n                    if (newTop <= rect.bottom + windowSnapSize && newTop >= rect.bottom - windowSnapSize) {\n                        newTop = rect.bottom + borderSize * 2;\n                        return false;\n                    }\n                    return true;\n                });\n            }\n            return {\n                left: newLeft,\n                top: newTop,\n                width: newWidth,\n                height: newHeight\n            };\n        }\n        function onMouseUp(ev, action, win, mousePosition) {\n            if (!current) {\n                return;\n            }\n            if (current.moved) {\n                if (action === 'move') {\n                    win._onChange('move', true);\n                    win._emit('moved', [\n                        win._position.x,\n                        win._position.y\n                    ]);\n                } else if (action === 'resize') {\n                    win._onChange('resize', true);\n                    win._emit('resized', [\n                        win._dimension.w,\n                        win._dimension.h\n                    ]);\n                }\n            }\n            current.$element.setAttribute('data-hint', '');\n            document.body.setAttribute('data-window-hint', '');\n            win._emit('postop');\n            current = null;\n        }\n        function onMouseMove(ev, action, win, mousePosition) {\n            if (!wm.getMouseLocked() || !action || !current) {\n                return;\n            }\n            ev.preventDefault();\n            let result;\n            const dx = mousePosition.x - current.startX;\n            const dy = mousePosition.y - current.startY;\n            if (action === 'move') {\n                result = onWindowMove(ev, mousePosition, dx, dy);\n            } else {\n                result = onWindowResize(ev, mousePosition, dx, dy);\n            }\n            if (result) {\n                if (result.left !== null && result.top !== null) {\n                    win._move(result.left, result.top);\n                    win._emit('move', [\n                        result.left,\n                        result.top\n                    ]);\n                }\n                if (result.width !== null && result.height !== null) {\n                    win._resize(result.width, result.height, true);\n                    win._emit('resize', [\n                        result.width,\n                        result.height\n                    ]);\n                }\n            }\n            current.moved = true;\n        }\n        function onMouseDown(ev, action, win, mousePosition) {\n            ev.preventDefault();\n            if (win._state.maximized) {\n                return;\n            }\n            current = new BehaviourState(wm, win, action, mousePosition);\n            newRect = {};\n            win._focus();\n            if (action === 'move') {\n                current.$element.setAttribute('data-hint', 'moving');\n                document.body.setAttribute('data-window-hint', 'moving');\n            } else {\n                current.calculateDirection();\n                current.$element.setAttribute('data-hint', 'resizing');\n                document.body.setAttribute('data-window-hint', 'resizing');\n                newRect = current.getRect();\n            }\n            win._emit('preop');\n            function _onMouseMove(ev, pos) {\n                ev.preventDefault();\n                if (wm._mouselock) {\n                    onMouseMove(ev, action, win, pos);\n                }\n            }\n            function _onMouseUp(ev, pos) {\n                onMouseUp(ev, action, win, pos);\n                Events.$unbind(document, 'pointermove:movewindow,touchmove:movewindowTouch');\n                Events.$unbind(document, 'pointerup:movewindowstop,touchend:movewindowstopTouch');\n            }\n            Events.$bind(document, 'pointermove:movewindow,touchmove:movewindowTouch', _onMouseMove, false);\n            Events.$bind(document, 'pointerup:movewindowstop,touchend:movewindowstopTouch', _onMouseUp, false);\n        }\n        if (win._properties.allow_move) {\n            Events.$bind(win._$top, 'pointerdown,touchstart', (ev, pos) => {\n                ev.preventDefault();\n                if (!win._destroyed) {\n                    onMouseDown(ev, 'move', win, pos);\n                }\n            }, true);\n        }\n        if (win._properties.allow_resize) {\n            Events.$bind(win._$resize, 'pointerdown,touchstart', (ev, pos) => {\n                ev.preventDefault();\n                if (!win._destroyed) {\n                    onMouseDown(ev, 'resize', win, pos);\n                }\n            });\n        }\n    }\n    return { createWindowBehaviour: createWindowBehaviour };\n});\ndefine('skylark-osjsv2-client/core/window-manager',[\n    '../utils/dom',\n //   '../gui/menu',\n    '../utils/events',\n    '../utils/misc',\n    '../utils/keycodes',\n    './theme',\n    './process',\n//    './window',\n//    './dialog',\n    './connection',\n    './settings-manager',\n//    '../gui/notification',\n    './locales',\n    './config',\n    '../helpers/window-behaviour'\n], function (DOM, Events, Utils, Keycodes, Theme, Process,   Connection, SettingsManager,  Locales, Config, WindowBehaviour) {\n    'use strict';\n    function checkForbiddenKeyCombo(ev) {\n        return false;\n    }\n    function checkPrevent(ev, win) {\n        const d = ev.srcElement || ev.target;\n        const accept = [\n            122,\n            123\n        ];\n        let doPrevent = d.tagName === 'BODY' ? true : false;\n        if (ev.keyCode === Keycodes.BACKSPACE && !DOM.$isFormElement(ev)) {\n            doPrevent = true;\n        } else if (ev.keyCode === Keycodes.TAB && DOM.$isFormElement(ev)) {\n            doPrevent = true;\n        } else {\n            if (accept.indexOf(ev.keyCode) !== -1) {\n                doPrevent = false;\n            } else if (checkForbiddenKeyCombo(ev)) {\n                doPrevent = true;\n            }\n        }\n        if (doPrevent && (!win || !win._properties.key_capture)) {\n            return true;\n        }\n        return false;\n    }\n    function triggerFullscreen(el, state) {\n        function _request() {\n            if (el.requestFullscreen) {\n                el.requestFullscreen();\n            } else if (el.mozRequestFullScreen) {\n                el.mozRequestFullScreen();\n            } else if (el.webkitRequestFullScreen) {\n                el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n            }\n        }\n        function _restore() {\n            if (el.webkitCancelFullScreen) {\n                el.webkitCancelFullScreen();\n            } else if (el.mozCancelFullScreen) {\n                el.mozCancelFullScreen();\n            } else if (el.exitFullscreen) {\n                el.exitFullscreen();\n            }\n        }\n        if (el) {\n            if (state) {\n                _request();\n            } else {\n                _restore();\n            }\n        }\n    }\n    let _instance;\n    return class WindowManager extends Process {\n        static get instance() {\n            return _instance;\n        }\n        constructor(name, args, metadata, settings) {\n            console.group('WindowManager::constructor()');\n            console.debug('Name', name);\n            console.debug('Arguments', args);\n            super(name, args, metadata);\n            _instance = this;\n            this._windows = [];\n            this._settings = SettingsManager.instance(name, settings);\n            this._currentWin = null;\n            this._lastWin = null;\n            this._mouselock = true;\n            this._stylesheet = null;\n            this._sessionLoaded = false;\n            this._fullyLoaded = false;\n            this._isResponsive = false;\n            this._responsiveRes = 800;\n            this._dcTimeout = null;\n            this._resizeTimeout = null;\n            this._$fullscreen = null;\n            this._$lastDomInput = null;\n            this.__name = name || 'WindowManager';\n            this.__path = metadata.path;\n            this.__iter = metadata.iter;\n\n            console.groupEnd();\n        }\n        destroy() {\n            console.debug('WindowManager::destroy()');\n            this.destroyStylesheet();\n            Events.$unbind(document, 'pointerout:windowmanager');\n            Events.$unbind(document, 'pointerenter:windowmanager');\n            Events.$unbind(window, 'orientationchange:windowmanager');\n            Events.$unbind(window, 'hashchange:windowmanager');\n            Events.$unbind(window, 'resize:windowmanager');\n            Events.$unbind(window, 'scroll:windowmanager');\n            Events.$unbind(window, 'fullscreenchange:windowmanager');\n            Events.$unbind(window, 'mozfullscreenchange:windowmanager');\n            Events.$unbind(window, 'webkitfullscreenchange:windowmanager');\n            Events.$unbind(window, 'msfullscreenchange:windowmanager');\n            Events.$unbind(document.body, 'contextmenu:windowmanager');\n            Events.$unbind(document.body, 'pointerdown:windowmanager,touchstart:windowmanager');\n            Events.$unbind(document.body, 'click:windowmanager');\n            Events.$unbind(document, 'keyup:windowmanager');\n            Events.$unbind(document, 'keydown:windowmanager');\n            Events.$unbind(document, 'keypress:windowmanager');\n            window.onerror = null;\n            window.onbeforeunload = null;\n            this._windows.forEach((win, i) => {\n                if (win) {\n                    win.destroy(true);\n                    this._windows[i] = null;\n                }\n            });\n            this._windows = [];\n            this._currentWin = null;\n            this._lastWin = null;\n            this._$fullscreen = null;\n            _instance = null;\n\n            this.Notification = OSjs.require(\"gui/notification\");// added by lwf\n            return super.destroy();\n        }\n        init(metadata, settings) {\n            var Notification = this.Notification;\n\n            Connection.instance.subscribe('online', () => {\n                Notification.create({\n                    title: Locales._('LBL_INFO'),\n                    message: Locales._('CONNECTION_RESTORED')\n                });\n            });\n            Connection.instance.subscribe('offline', reconnecting => {\n                Notification.create({\n                    title: Locales._('LBL_WARNING'),\n                    message: Locales._(reconnecting ? 'CONNECTION_RESTORE_FAILED' : 'CONNECTION_LOST')\n                });\n            });\n\n            console.debug('WindowManager::init()');\n            document.body.addEventListener('touchend', ev => {\n                if (ev.target === document.body) {\n                    ev.preventDefault();\n                }\n            });\n            Events.$bind(document, 'pointerout:windowmanager', ev => this._onMouseLeave(ev));\n            Events.$bind(document, 'pointerenter:windowmanager', ev => this._onMouseLeave(ev));\n            Events.$bind(window, 'orientationchange:windowmanager', ev => this._onOrientationChange(ev));\n            Events.$bind(window, 'hashchange:windowmanager', ev => this._onHashChange(ev));\n            Events.$bind(window, 'resize:windowmanager', ev => this._onResize(ev));\n            Events.$bind(window, 'scroll:windowmanager', ev => this._onScroll(ev));\n            Events.$bind(window, 'fullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'mozfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'webkitfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'msfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(document.body, 'contextmenu:windowmanager', ev => this._onContextMenu(ev));\n            Events.$bind(document.body, 'pointerdown:windowmanager,touchstart:windowmanager', ev => this._onMouseDown(ev));\n            Events.$bind(document.body, 'click:windowmanager', ev => this._onClick(ev));\n            Events.$bind(document, 'keyup:windowmanager', ev => this._onKeyUp(ev));\n            Events.$bind(document, 'keydown:windowmanager', ev => this._onKeyDown(ev));\n            Events.$bind(document, 'keypress:windowmanager', ev => this._onKeyPress(ev));\n            window.onerror = this._onError.bind(this);\n            window.onbeforeunload = this._onBeforeUnload(this);\n            const queries = this.getDefaultSetting('mediaQueries') || {};\n            let maxWidth = 0;\n            Object.keys(queries).forEach(q => {\n                maxWidth = Math.max(maxWidth, queries[q]);\n            });\n            this._responsiveRes = maxWidth || 800;\n            this._onOrientationChange();\n            this.resize();\n        }\n        setup(cb) {\n            cb();\n        }\n        getWindow(name) {\n            return this.getWindows().find(w => {\n                return w.__name === name;\n            });\n        }\n        addWindow(w, focus) {\n            //if (!(w instanceof Window)) { // modified by lwf\n            //    console.warn('WindowManager::addWindow()', 'Got', w);\n            //    throw new TypeError('given argument was not instance of Core.Window');\n            //}\n            console.debug('WindowManager::addWindow()');\n            try {\n                w.init(this, w._app);\n            } catch (e) {\n                console.error('WindowManager::addWindow()', '=>', 'Window::init()', e, e.stack);\n            }\n            WindowBehaviour.createWindowBehaviour(w, this);\n            this._windows.push(w);\n            w._inited();\n            //if (focus === true || w instanceof DialogWindow) {\n            if (focus === true) { // modified by lwf\n                w._focus();\n            }\n            return w;\n        }\n        removeWindow(w) {\n            //if (!(w instanceof Window)) { // modified by lwf\n            //    console.warn('WindowManager::removeWindow()', 'Got', w);\n            //    throw new TypeError('given argument was not instance of Core.Window');\n            //}\n            const foundIndex = this._windows.findIndex(win => win && win._wid === w._wid);\n            console.debug('WindowManager::removeWindow()', w._wid, foundIndex);\n            if (foundIndex !== -1) {\n                this._windows[foundIndex] = null;\n                return true;\n            }\n            return false;\n        }\n        applySettings(settings, force, save, triggerWatch) {\n            settings = settings || {};\n            console.debug('WindowManager::applySettings()', 'forced?', force);\n            const result = force ? settings : Utils.mergeObject(this._settings.get(), settings);\n            this._settings.set(null, result, save, triggerWatch);\n            return true;\n        }\n        createStylesheet(styles, rawStyles) {\n            this.destroyStylesheet();\n            let innerHTML = [];\n            Object.keys(styles).forEach(key => {\n                let rules = [];\n                Object.keys(styles[key]).forEach(r => {\n                    rules.push(Utils.format('    {0}: {1};', r, styles[key][r]));\n                });\n                rules = rules.join('\\n');\n                innerHTML.push(Utils.format('{0} {\\n{1}\\n}', key, rules));\n            });\n            innerHTML = innerHTML.join('\\n');\n            if (rawStyles) {\n                innerHTML += '\\n' + rawStyles;\n            }\n            const style = document.createElement('style');\n            style.type = 'text/css';\n            style.id = 'WMGeneratedStyles';\n            style.innerHTML = innerHTML;\n            document.getElementsByTagName('head')[0].appendChild(style);\n            this._stylesheet = style;\n        }\n        destroyStylesheet() {\n            if (this._stylesheet) {\n                DOM.$remove(this._stylesheet);\n            }\n            this._stylesheet = null;\n        }\n        resize(ev, rect) {\n            this._isResponsive = window.innerWidth <= 1024;\n            this.onResize(ev);\n        }\n        eventWindow(ev, win) {\n            return false;\n        }\n        showSettings() {\n        }\n        toggleFullscreen(el, t) {\n            if (typeof t === 'boolean') {\n                triggerFullscreen(el, t);\n            } else {\n                const prev = this._$fullscreen;\n                if (prev && prev !== el) {\n                    triggerFullscreen(prev, false);\n                }\n                triggerFullscreen(el, prev !== el);\n            }\n            this._$fullscreen = el;\n        }\n        onKeyDown(ev, win) {\n        }\n        onOrientationChange(ev, orientation) {\n            console.info('ORIENTATION CHANGED', ev, orientation);\n            document.body.setAttribute('data-orientation', orientation);\n            this._onDisplayChange();\n        }\n        onResize(ev) {\n            this._onDisplayChange();\n            this._emit('resized');\n        }\n        onSessionLoaded() {\n            if (this._sessionLoaded) {\n                return false;\n            }\n            this._sessionLoaded = true;\n            return true;\n        }\n        _onMouseEnter(ev) {\n            this._mouselock = true;\n        }\n        _onMouseLeave(ev) {\n            const from = ev.relatedTarget || ev.toElement;\n            if (!from || from.nodeName === 'HTML') {\n                this._mouselock = false;\n            } else {\n                this._mouselock = true;\n            }\n        }\n        _onDisplayChange() {\n            this._dcTimeout = clearTimeout(this._dcTimeout);\n            this._dcTimeout = setTimeout(() => {\n                if (!this._windows) {\n                    return;\n                }\n                this.getWindows().forEach(w => {\n                    w._onResize();\n                    w._emit('resize');\n                });\n            }, 100);\n            document.body.setAttribute('data-responsive', String(this._isResponsive));\n        }\n        _onOrientationChange(ev) {\n            let orientation = 'landscape';\n            if (window.screen && window.screen.orientation) {\n                if (window.screen.orientation.type.indexOf('portrait') !== -1) {\n                    orientation = 'portrait';\n                }\n            }\n            this.onOrientationChange(ev, orientation);\n        }\n        _onHashChange(ev) {\n            const hash = window.location.hash.substr(1);\n            const spl = hash.split(/^([\\w\\.\\-_]+)\\:(.*)/);\n            function getArgs(q) {\n                const args = {};\n                q.split('&').forEach(function (a) {\n                    const b = a.split('=');\n                    const k = decodeURIComponent(b[0]);\n                    args[k] = decodeURIComponent(b[1] || '');\n                });\n                return args;\n            }\n            if (spl.length === 4) {\n                const root = spl[1];\n                const args = getArgs(spl[2]);\n                if (root) {\n                    Process.getProcess(root).forEach(function (p) {\n                        p._onMessage('hashchange', {\n                            hash: hash,\n                            args: args\n                        }, { source: null });\n                    });\n                }\n            }\n        }\n        _onResize(ev) {\n            clearTimeout(this._resizeTimeout);\n            this._resizeTimeout = setTimeout(() => {\n                const space = this.getWindowSpace();\n                this.resize(ev, space);\n            }, 100);\n        }\n        _onScroll(ev) {\n            if (ev.target === document || ev.target === document.body) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                return false;\n            }\n            document.body.scrollTop = 0;\n            document.body.scrollLeft = 0;\n            return true;\n        }\n        _onFullscreen(ev) {\n            try {\n                const notif = this.Notification.getIcon('_FullscreenNotification'); // modified by lwf\n                if (notif) {\n                    if (!document.fullScreen && !document.mozFullScreen && !document.webkitIsFullScreen && !document.msFullscreenElement) {\n                        notif.opts._isFullscreen = false;\n                        notif.setImage(Theme.getIcon('actions/view-fullscreen.png', '16x16'));\n                    } else {\n                        notif.opts._isFullscreen = true;\n                        notif.setImage(Theme.getIcon('actions/view-restore.png', '16x16'));\n                    }\n                }\n            } catch (e) {\n                console.warn(e.stack, e);\n            }\n        }\n        _onContextMenu(ev) {\n            this.onContextMenu(ev);\n            if (DOM.$isFormElement(ev)) {\n                OSjs.require(\"gui/menu\").blur();\n            } else {\n                ev.preventDefault();\n                return false;\n            }\n            return true;\n        }\n        _onMouseDown(ev) {\n            if (DOM.$isFormElement(ev)) {\n                this._$lastDomInput = ev.target;\n            } else {\n                if (this._$lastDomInput) {\n                    try {\n                        this._$lastDomInput.blur();\n                    } catch (e) {\n                    }\n                    this._$lastDomInput = null;\n                }\n            }\n        }\n        _onClick(ev) {\n            let hitWindow, hitMenu;\n            let el = ev.target;\n            while (el.parentNode) {\n                if (el.tagName.match(/^GUI\\-MENU/)) {\n                    hitMenu = el;\n                } else if (el.tagName.match(/^APPLICATION\\-WINDOW/)) {\n                    hitWindow = true;\n                }\n                if (hitWindow || hitMenu) {\n                    break;\n                }\n                el = el.parentNode;\n            }\n            if (hitMenu) {\n                if (hitMenu.tagName === 'GUI-MENU-ENTRY') {\n                    if (hitMenu.getAttribute('data-disabled') !== 'true') {\n                        if (!DOM.$hasClass(hitMenu, 'gui-menu-expand')) {\n                            hitMenu = null;\n                        }\n                    }\n                } else if (hitMenu.tagName === 'GUI-MENU-BAR') {\n                    hitMenu = null;\n                }\n            }\n            if (!hitMenu) {\n                OSjs.require(\"gui/menu\").blur();\n            }\n            if (ev.target.tagName === 'BODY') {\n                const win = this.getCurrentWindow();\n                if (win) {\n                    win._blur();\n                }\n            }\n            Theme.themeAction('event', [ev]);\n        }\n        _onKeyUp(ev) {\n            const win = this.getCurrentWindow();\n            this.onKeyUp(ev, win);\n            if (win) {\n                return win._onKeyEvent(ev, 'keyup');\n            }\n            return true;\n        }\n        _onKeyDown(ev) {\n            const win = this.getCurrentWindow();\n            const reacted = (() => {\n                const combination = this.onKeyDown(ev, win);\n                if (win && !combination) {\n                    win._onKeyEvent(ev, 'keydown');\n                }\n                return combination;\n            })();\n            if (checkPrevent(ev, win) || reacted) {\n                ev.preventDefault();\n            }\n            return true;\n        }\n        _onKeyPress(ev) {\n            if (checkForbiddenKeyCombo(ev)) {\n                ev.preventDefault();\n            }\n            const win = this.getCurrentWindow();\n            if (win) {\n                return win._onKeyEvent(ev, 'keypress');\n            }\n            return true;\n        }\n        _onBeforeUnload(ev) {\n            if (Config.getConfig('ShowQuitWarning')) {\n                return Locales._('MSG_SESSION_WARNING');\n            }\n            return null;\n        }\n        _onError(message, url, linenumber, column, exception) {\n            if (typeof exception === 'string') {\n                exception = null;\n            }\n            exception = exception || {\n                name: 'window::onerror()',\n                fileName: url,\n                lineNumber: linenumber + ':' + column,\n                message: message\n            };\n            console.warn('window::onerror()', arguments);\n            OSjs.error(Locales._('ERR_JAVASCRIPT_EXCEPTION'), Locales._('ERR_JAVACSRIPT_EXCEPTION_DESC'), Locales._('BUGREPORT_MSG'), exception, true);\n            return false;\n        }\n        getDefaultSetting() {\n            return null;\n        }\n        getPanel() {\n            return null;\n        }\n        getPanels() {\n            return [];\n        }\n        setSetting(k, v) {\n            return this._settings.set(k, v);\n        }\n        getWindowSpace() {\n            return {\n                top: 0,\n                left: 0,\n                width: document.body.offsetWidth,\n                height: document.body.offsetHeight\n            };\n        }\n        getWindowPosition() {\n            const winCount = this._windows.reduce(function (count, win) {\n                return win === null ? count : count + 1;\n            }, 0);\n            return {\n                x: 10 * winCount,\n                y: 10 * winCount\n            };\n        }\n        getSetting(k) {\n            return this._settings.get(k);\n        }\n        getSettings() {\n            return this._settings.get();\n        }\n        getWindows() {\n            return this._windows.filter(w => !!w);\n        }\n        getCurrentWindow() {\n            return this._currentWin;\n        }\n        setCurrentWindow(w) {\n            this._currentWin = w || null;\n        }\n        getLastWindow() {\n            return this._lastWin;\n        }\n        setLastWindow(w) {\n            this._lastWin = w || null;\n        }\n        getMouseLocked() {\n            return this._mouselock;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/gui',[\n    './dom',\n    './events',\n    './compability',\n    '../core/package-manager',\n    '../core/theme'\n], function (DOM, Events, Compability, PackageManager, Theme) {\n    'use strict';\n    function getWindowId(el) {\n        while (el.parentNode) {\n            const attr = el.getAttribute('data-window-id');\n            if (attr !== null) {\n                return parseInt(attr, 10);\n            }\n            el = el.parentNode;\n        }\n        return null;\n    }\n    function getLabel(el) {\n        const label = el.getAttribute('data-label');\n        return label || '';\n    }\n    function getValueLabel(el, attr) {\n        let label = attr ? el.getAttribute('data-label') : null;\n        if (el.childNodes.length && el.childNodes[0].nodeType === 3 && el.childNodes[0].nodeValue) {\n            label = el.childNodes[0].nodeValue;\n            DOM.$empty(el);\n        }\n        return label || '';\n    }\n    function getViewNodeValue(el) {\n        let value = el.getAttribute('data-value');\n        if (typeof value === 'string' && value.match(/^\\[|\\{/)) {\n            try {\n                value = JSON.parse(value);\n            } catch (e) {\n                value = null;\n            }\n        }\n        return value;\n    }\n    function getIcon(el, win) {\n        let image = el.getAttribute('data-icon');\n        if (image) {\n            return win ? PackageManager.getPackageResource(win._app, image) : image;\n        }\n        image = el.getAttribute('data-stock-icon');\n        if (image && image !== 'undefined') {\n            let size = '16x16';\n            try {\n                let spl = image.split('/');\n                let tmp = spl.shift();\n                let siz = tmp.match(/^\\d+x\\d+/);\n                if (siz) {\n                    size = siz[0];\n                    image = spl.join('/');\n                }\n                image = Theme.getIcon(image, size);\n            } catch (e) {\n            }\n            return image;\n        }\n        return null;\n    }\n    function getProperty(el, param, tagName) {\n        tagName = tagName || el.tagName.toLowerCase();\n        const isDataView = tagName.match(/^gui\\-(tree|icon|list|file)\\-view$/);\n        if (param === 'value' && !isDataView) {\n            if ([\n                    'gui-text',\n                    'gui-password',\n                    'gui-textarea',\n                    'gui-slider',\n                    'gui-select',\n                    'gui-select-list'\n                ].indexOf(tagName) >= 0) {\n                return el.querySelector('input, textarea, select').value;\n            }\n            if ([\n                    'gui-checkbox',\n                    'gui-radio',\n                    'gui-switch'\n                ].indexOf(tagName) >= 0) {\n                return !!el.querySelector('input').checked;\n            }\n            return null;\n        }\n        //if ((param === 'value' || param === 'selected') && isDataView) {\n        //    return GUIElement.createFromNode(el).values();\n        //}\n        return el.getAttribute('data-' + param);\n    }\n    function createInputLabel(el, type, input, label) {\n        label = label || getLabel(el);\n        if (label) {\n            const lbl = document.createElement('label');\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(label));\n            if (type === 'checkbox' || type === 'radio') {\n                lbl.appendChild(input);\n                lbl.appendChild(span);\n            } else {\n                lbl.appendChild(span);\n                lbl.appendChild(input);\n            }\n            el.appendChild(lbl);\n        } else {\n            el.appendChild(input);\n        }\n    }\n    function setProperty(el, param, value, tagName) {\n        tagName = tagName || el.tagName.toLowerCase();\n        function _setKnownAttribute(i, k, v, a) {\n            if (v) {\n                i.setAttribute(k, k);\n            } else {\n                i.removeAttribute(k);\n            }\n            if (a) {\n                el.setAttribute('aria-' + k, String(value === true));\n            }\n        }\n        function _setValueAttribute(i, k, v) {\n            if (typeof v === 'object') {\n                try {\n                    v = JSON.stringify(value);\n                } catch (e) {\n                }\n            }\n            i.setAttribute(k, String(v));\n        }\n        const inner = el.children[0];\n        let accept = [\n            'gui-slider',\n            'gui-text',\n            'gui-password',\n            'gui-textarea',\n            'gui-checkbox',\n            'gui-radio',\n            'gui-select',\n            'gui-select-list',\n            'gui-button'\n        ];\n        (function () {\n            let firstChild;\n            const params = {\n                readonly: function () {\n                    _setKnownAttribute(firstChild, 'readonly', value, true);\n                },\n                disabled: function () {\n                    _setKnownAttribute(firstChild, 'disabled', value, true);\n                },\n                value: function () {\n                    if (tagName === 'gui-radio' || tagName === 'gui-checkbox') {\n                        _setKnownAttribute(firstChild, 'checked', value);\n                        firstChild.checked = !!value;\n                    }\n                    firstChild.value = value;\n                },\n                label: function () {\n                    el.appendChild(firstChild);\n                    DOM.$remove(el.querySelector('label'));\n                    createInputLabel(el, tagName.replace(/^gui\\-/, ''), firstChild, value);\n                }\n            };\n            if (accept.indexOf(tagName) >= 0) {\n                firstChild = el.querySelector('textarea, input, select, button');\n                if (firstChild) {\n                    if (params[param]) {\n                        params[param]();\n                    } else {\n                        _setValueAttribute(firstChild, param, value || '');\n                    }\n                }\n            }\n        }());\n        accept = [\n            'gui-image',\n            'gui-audio',\n            'gui-video'\n        ];\n        if ([\n                'src',\n                'controls',\n                'autoplay',\n                'alt'\n            ].indexOf(param) >= 0 && accept.indexOf(tagName) >= 0) {\n            inner[param] = value;\n        }\n        if ([\n                '_id',\n                '_class',\n                '_style'\n            ].indexOf(param) >= 0) {\n            inner.setAttribute(param.replace(/^_/, ''), value);\n            return;\n        }\n        if (param !== 'value') {\n            _setValueAttribute(el, 'data-' + param, value);\n        }\n    }\n    function createElement(tagName, params, ignoreParams) {\n        ignoreParams = ignoreParams || [];\n        const el = document.createElement(tagName);\n        const classMap = {\n            textalign: function (v) {\n                DOM.$addClass(el, 'gui-align-' + v);\n            },\n            className: function (v) {\n                DOM.$addClass(el, v);\n            }\n        };\n        function getValue(k, value) {\n            if (typeof value === 'boolean') {\n                value = value ? 'true' : 'false';\n            } else if (typeof value === 'object') {\n                try {\n                    value = JSON.stringify(value);\n                } catch (e) {\n                }\n            }\n            return value;\n        }\n        if (typeof params === 'object') {\n            Object.keys(params).forEach(function (k) {\n                if (ignoreParams.indexOf(k) >= 0) {\n                    return;\n                }\n                const value = params[k];\n                if (typeof value !== 'undefined' && typeof value !== 'function') {\n                    if (classMap[k]) {\n                        classMap[k](value);\n                        return;\n                    }\n                    const fvalue = getValue(k, value);\n                    el.setAttribute('data-' + k, fvalue);\n                }\n            });\n        }\n        return el;\n    }\n    function setFlexbox(el, grow, shrink, basis, checkel) {\n        checkel = checkel || el;\n        (function () {\n            if (typeof basis === 'undefined' || basis === null) {\n                basis = checkel.getAttribute('data-basis') || 'auto';\n            }\n        }());\n        (function () {\n            if (typeof grow === 'undefined' || grow === null) {\n                grow = checkel.getAttribute('data-grow') || 0;\n            }\n        }());\n        (function () {\n            if (typeof shrink === 'undefined' || shrink === null) {\n                shrink = checkel.getAttribute('data-shrink') || 0;\n            }\n        }());\n        const flex = [\n            grow,\n            shrink\n        ];\n        if (basis.length) {\n            flex.push(basis);\n        }\n        const style = flex.join(' ');\n        el.style.webkitBoxFlex = style;\n        el.style.mozBoxFlex = style;\n        el.style.webkitFlex = style;\n        el.style.mozFlex = style;\n        el.style.msFlex = style;\n        el.style.oFlex = style;\n        el.style.flex = style;\n        const align = el.getAttribute('data-align');\n        DOM.$removeClass(el, 'gui-flex-align-start');\n        DOM.$removeClass(el, 'gui-flex-align-end');\n        if (align) {\n            DOM.$addClass(el, 'gui-flex-align-' + align);\n        }\n    }\n    function createDrag(el, onDown, onMove, onUp) {\n        onDown = onDown || function () {\n        };\n        onMove = onMove || function () {\n        };\n        onUp = onUp || function () {\n        };\n        let startX, startY, currentX, currentY;\n        let dragging = false;\n        function _onMouseMove(ev, pos, touchDevice) {\n            ev.preventDefault();\n            if (dragging) {\n                currentX = pos.x;\n                currentY = pos.y;\n                const diffX = currentX - startX;\n                const diffY = currentY - startY;\n                onMove(ev, {\n                    x: diffX,\n                    y: diffY\n                }, {\n                    x: currentX,\n                    y: currentY\n                });\n            }\n        }\n        function _onMouseUp(ev, pos, touchDevice) {\n            onUp(ev, {\n                x: currentX,\n                y: currentY\n            });\n            dragging = false;\n            Events.$unbind(window, 'pointerup:guidrag');\n            Events.$unbind(window, 'pointermove:guidrag');\n        }\n        function _onMouseDown(ev, pos, touchDevice) {\n            ev.preventDefault();\n            startX = pos.x;\n            startY = pos.y;\n            onDown(ev, {\n                x: startX,\n                y: startY\n            });\n            dragging = true;\n            Events.$bind(window, 'pointerup:guidrag', _onMouseUp, false);\n            Events.$bind(window, 'pointermove:guidrag', _onMouseMove, false);\n        }\n        Events.$bind(el, 'pointerdown', _onMouseDown, false);\n    }\n    function getNextElement(prev, current, root) {\n        function getElements() {\n            const ignore_roles = [\n                'menu',\n                'menuitem',\n                'grid',\n                'gridcell',\n                'listitem'\n            ];\n            const list = [];\n            root.querySelectorAll('.gui-element').forEach(function (e) {\n                if (DOM.$hasClass(e, 'gui-focus-element') || ignore_roles.indexOf(e.getAttribute('role')) >= 0 || e.getAttribute('data-disabled') === 'true') {\n                    return;\n                }\n                if (e.offsetParent) {\n                    list.push(e);\n                }\n            });\n            return list;\n        }\n        function getCurrentIndex(els, m) {\n            let found = -1;\n            if (m) {\n                els.every(function (e, idx) {\n                    if (e === m) {\n                        found = idx;\n                    }\n                    return found === -1;\n                });\n            }\n            return found;\n        }\n        function getCurrentParent(els, m) {\n            if (m) {\n                let cur = m;\n                while (cur.parentNode) {\n                    if (DOM.$hasClass(cur, 'gui-element')) {\n                        return cur;\n                    }\n                    cur = cur.parentNode;\n                }\n                return null;\n            }\n            return els[0];\n        }\n        function getNextIndex(els, p, i) {\n            if (prev) {\n                i = i <= 0 ? els.length - 1 : i - 1;\n            } else {\n                i = i >= els.length - 1 ? 0 : i + 1;\n            }\n            return i;\n        }\n        function getNext(els, i) {\n            let next = els[i];\n            if (next.tagName.match(/^GUI\\-(BUTTON|TEXT|PASSWORD|SWITCH|CHECKBOX|RADIO|SELECT)/)) {\n                next = next.querySelectorAll('input, textarea, button, select')[0];\n            }\n            if (next.tagName === 'GUI-FILE-VIEW') {\n                next = next.children[0];\n            }\n            return next;\n        }\n        if (root) {\n            const elements = getElements();\n            if (elements.length) {\n                const currentParent = getCurrentParent(elements, current);\n                const currentIndex = getCurrentIndex(elements, currentParent);\n                if (currentIndex >= 0) {\n                    const nextIndex = getNextIndex(elements, currentParent, currentIndex);\n                    return getNext(elements, nextIndex);\n                }\n            }\n        }\n        return null;\n    }\n    function createDraggable(el, args) {\n        args = Object.assign({}, {\n            type: null,\n            effect: 'move',\n            data: null,\n            mime: 'application/json',\n            dragImage: null,\n            onStart: function () {\n                return true;\n            },\n            onEnd: function () {\n                return true;\n            }\n        }, args);\n        if (Compability.isIE()) {\n            args.mime = 'text';\n        }\n        function _toString(mime) {\n            return JSON.stringify({\n                type: args.type,\n                effect: args.effect,\n                data: args.data,\n                mime: args.mime\n            });\n        }\n        function _dragStart(ev) {\n            try {\n                ev.dataTransfer.effectAllowed = args.effect;\n                if (args.dragImage && typeof args.dragImage === 'function') {\n                    if (ev.dataTransfer.setDragImage) {\n                        const dragImage = args.dragImage(ev, el);\n                        if (dragImage) {\n                            const dragEl = dragImage.element;\n                            const dragPos = dragImage.offset;\n                            document.body.appendChild(dragEl);\n                            ev.dataTransfer.setDragImage(dragEl, dragPos.x, dragPos.y);\n                        }\n                    }\n                }\n                ev.dataTransfer.setData(args.mime, _toString(args.mime));\n            } catch (e) {\n                console.warn('Failed to dragstart: ' + e);\n                console.warn(e.stack);\n            }\n        }\n        el.setAttribute('draggable', 'true');\n        el.setAttribute('aria-grabbed', 'false');\n        Events.$bind(el, 'dragstart', function (ev) {\n            this.setAttribute('aria-grabbed', 'true');\n            this.style.opacity = '0.4';\n            if (ev.dataTransfer) {\n                _dragStart(ev);\n            }\n            return args.onStart(ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragend', function (ev) {\n            this.setAttribute('aria-grabbed', 'false');\n            this.style.opacity = '1.0';\n            return args.onEnd(ev, this, args);\n        }, false);\n    }\n    function createDroppable(el, args) {\n        args = Object.assign({}, {\n            accept: null,\n            effect: 'move',\n            mime: 'application/json',\n            files: true,\n            onFilesDropped: function () {\n                return true;\n            },\n            onItemDropped: function () {\n                return true;\n            },\n            onEnter: function () {\n                return true;\n            },\n            onOver: function () {\n                return true;\n            },\n            onLeave: function () {\n                return true;\n            },\n            onDrop: function () {\n                return true;\n            }\n        }, args);\n        if (Compability.isIE()) {\n            args.mime = 'text';\n        }\n        function getParent(start, matcher) {\n            if (start === matcher) {\n                return true;\n            }\n            let i = 10;\n            while (start && i > 0) {\n                if (start === matcher) {\n                    return true;\n                }\n                start = start.parentNode;\n                i--;\n            }\n            return false;\n        }\n        function _doDrop(ev, el) {\n            if (!ev.dataTransfer) {\n                return true;\n            }\n            if (args.files) {\n                const files = ev.dataTransfer.files;\n                if (files && files.length) {\n                    return args.onFilesDropped(ev, el, files, args);\n                }\n            }\n            try {\n                const data = ev.dataTransfer.getData(args.mime);\n                const item = JSON.parse(data);\n                if (args.accept === null || args.accept === item.type) {\n                    return args.onItemDropped(ev, el, item, args);\n                }\n            } catch (e) {\n                console.warn('Failed to drop: ' + e);\n            }\n            return false;\n        }\n        function _onDrop(ev, el) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            const result = _doDrop(ev, el);\n            args.onDrop(ev, el);\n            return result;\n        }\n        el.setAttribute('aria-dropeffect', args.effect);\n        Events.$bind(el, 'drop', function (ev) {\n            return _onDrop(ev, this);\n        }, false);\n        Events.$bind(el, 'dragenter', function (ev) {\n            return args.onEnter.call(this, ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragover', function (ev) {\n            ev.preventDefault();\n            if (!getParent(ev.target, el)) {\n                return false;\n            }\n            ev.stopPropagation();\n            ev.dataTransfer.dropEffect = args.effect;\n            return args.onOver.call(this, ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragleave', function (ev) {\n            return args.onLeave.call(this, ev, this, args);\n        }, false);\n    }\n    return {\n        getWindowId: getWindowId,\n        getLabel: getLabel,\n        getValueLabel: getValueLabel,\n        getViewNodeValue: getViewNodeValue,\n        getIcon: getIcon,\n        getProperty: getProperty,\n        createInputLabel: createInputLabel,\n        setProperty: setProperty,\n        createElement: createElement,\n        setFlexbox: setFlexbox,\n        createDrag: createDrag,\n        getNextElement: getNextElement,\n        createDraggable: createDraggable,\n        createDroppable: createDroppable\n    };\n});\ndefine('skylark-osjsv2-client/gui/element',[\n    '../utils/dom',\n    '../utils/gui',\n    '../core/locales',\n    '../core/package-manager'\n], function (DOM, GUI, Locales, PackageManager) {\n    'use strict';\n    let REGISTRY = {};\n    function getFocusElement(inst) {\n        const tagMap = {\n            'gui-switch': 'button',\n            'gui-list-view': 'textarea',\n            'gui-tree-view': 'textarea',\n            'gui-icon-view': 'textarea',\n            'gui-input-modal': 'button'\n        };\n        if (tagMap[inst.tagName]) {\n            return inst.$element.querySelector(tagMap[inst.tagName]);\n        }\n        return inst.$element.firstChild || inst.$element;\n    }\n    function parseDynamic(node, win, args) {\n        args = args || {};\n        const translator = args.undefined || Locales._;\n        node.querySelectorAll('*[data-label]').forEach(function (el) {\n            const label = translator(el.getAttribute('data-label'));\n            el.setAttribute('data-label', label);\n        });\n        node.querySelectorAll('gui-label, gui-button, gui-list-view-column, gui-select-option, gui-select-list-option').forEach(function (el) {\n            if (!el.children.length && !el.getAttribute('data-no-translate')) {\n                const lbl = GUI.getValueLabel(el);\n                el.appendChild(document.createTextNode(translator(lbl)));\n            }\n        });\n        node.querySelectorAll('gui-button').forEach(function (el) {\n            const label = GUI.getValueLabel(el);\n            if (label) {\n                el.appendChild(document.createTextNode(Locales._(label)));\n            }\n        });\n        node.querySelectorAll('*[data-icon], *[data-stock-icon]').forEach(function (el) {\n            const image = GUI.getIcon(el, win);\n            el.setAttribute('data-icon', image);\n        });\n        node.querySelectorAll('*[data-src],*[src]').forEach(function (el) {\n            const isNative = el.hasAttribute('src');\n            const src = isNative ? el.getAttribute('src') : el.getAttribute('data-src') || '';\n            if (win && win._app && !src.match(/^(https?:)?\\//)) {\n                const source = PackageManager.getPackageResource(win._app, src);\n                el.setAttribute(isNative ? 'src' : 'data-src', source);\n            }\n        });\n    }\n    function createElementInstance(tagName, el, q, buildArgs) {\n        tagName = tagName || el.tagName.toLowerCase();\n        let instance;\n        if (REGISTRY[tagName]) {\n            instance = new REGISTRY[tagName].component(el, q);\n            if (buildArgs) {\n                instance.build.apply(instance, buildArgs);\n            }\n        }\n        return instance;\n    }\n    return class GUIElement {\n        constructor(el, q) {\n            this.$element = el || null;\n            this.tagName = el ? el.tagName.toLowerCase() : null;\n            this.oldDisplay = null;\n            if (!el) {\n                console.warn('GUIElement() was constructed without a DOM element', q);\n            }\n        }\n        build() {\n            return this;\n        }\n        remove() {\n            this.$element = DOM.$remove(this.$element);\n            return this;\n        }\n        empty() {\n            DOM.$empty(this.$element);\n            return this;\n        }\n        blur() {\n            if (this.$element) {\n                const firstChild = getFocusElement(this);\n                if (firstChild) {\n                    firstChild.blur();\n                }\n            }\n            return this;\n        }\n        focus() {\n            if (this.$element) {\n                const firstChild = getFocusElement(this);\n                if (firstChild) {\n                    firstChild.focus();\n                }\n            }\n            return this;\n        }\n        show() {\n            if (this.$element && !this.$element.offsetParent) {\n                if (this.$element) {\n                    this.$element.style.display = this.oldDisplay || '';\n                }\n            }\n            return this;\n        }\n        hide() {\n            if (this.$element && this.$element.offsetParent) {\n                if (!this.oldDisplay) {\n                    this.oldDisplay = this.$element.style.display;\n                }\n                this.$element.style.display = 'none';\n            }\n            return this;\n        }\n        on(evName, callback, args) {\n            return this;\n        }\n        son(evName, thisArg, callback, args) {\n            return this.on(evName, function () {\n                const args = Array.prototype.slice.call(arguments);\n                args.unshift(this);\n                callback.apply(thisArg, args);\n            }, args);\n        }\n        set(param, value, arg, arg2) {\n            if (this.$element) {\n                GUI.setProperty(this.$element, param, value, arg, arg2);\n            }\n            return this;\n        }\n        get(param) {\n            if (this.$element) {\n                return GUIElement.getProperty(this.$element, param); // modified by lwf\n            }\n            return null;\n        }\n        append(el) {\n            if (el instanceof GUIElement) {\n                el = el.$element;\n            } else if (typeof el === 'string' || typeof el === 'number') {\n                el = document.createTextNode(String(el));\n            }\n            let outer = document.createElement('div');\n            outer.appendChild(el);\n            this._append(outer);\n            outer = null;\n            return this;\n        }\n        appendHTML(html, win, args) {\n            const el = document.createElement('div');\n            el.innerHTML = html;\n            return this._append(el, win, args);\n        }\n        _append(el, win, args) {\n            if (el instanceof Element) {\n                GUIElement.parseNode(win, el, null, args);\n            }\n            while (el.childNodes.length) {\n                this.$element.appendChild(el.childNodes[0]);\n            }\n            el = null;\n            return this;\n        }\n        querySelector(q, rui) {\n            const el = this.$element.querySelector(q);\n            if (rui) {\n                return GUIElement.createFromNode(el, q);\n            }\n            return el;\n        }\n        querySelectorAll(q, rui) {\n            let el = this.$element.querySelectorAll(q);\n            if (rui) {\n                el = el.map(i => {\n                    return GUIElement.createFromNode(i, q);\n                });\n            }\n            return el;\n        }\n        css(k, v) {\n            DOM.$css(this.$element, k, v);\n            return this;\n        }\n        position() {\n            return DOM.$position(this.$element);\n        }\n        _call(method, args, thisArg) {\n            if (arguments.length < 3) {\n                console.warn('Element::_call(\"methodName\") is DEPRECATED, use \"instance.methodName()\" instead');\n            }\n            try {\n                if (typeof this._call === 'function') {\n                    return this._call(method, args);\n                }\n                return this[method](args);\n            } catch (e) {\n                console.warn(e.stack, e);\n            }\n            return null;\n        }\n        fn(name, args, thisArg) {\n            console.warn('Element::fn(\"methodName\") is DEPRECATED, use \"instance.methodName()\" instead');\n            args = args || [];\n            thisArg = thisArg || this;\n            return this.fn(name, args, thisArg);\n        }\n        static createInto(tagName, params, parentNode, applyArgs, win) {\n            if (parentNode instanceof GUIElement) {\n                parentNode = parentNode.$element;\n            }\n            const gel = GUIElement.create(tagName, params, applyArgs, win);\n            parentNode.appendChild(gel.$element);\n            return gel;\n        }\n        static createFromNode(el, q, tagName) {\n            if (el) {\n                const instance = createElementInstance(null, el, q);\n                if (instance) {\n                    return instance;\n                }\n            }\n            return new GUIElement(el, q);\n        }\n\n        static getProperty(el, param, tagName) { // added by lwf\n            tagName = tagName || el.tagName.toLowerCase();\n            const isDataView = tagName.match(/^gui\\-(tree|icon|list|file)\\-view$/);\n            if ((param === 'value' || param === 'selected') && isDataView) {\n                return GUIElement.createFromNode(el).values();\n            }\n\n            return GUI.getProperty(el,param,tagName);\n        }\n\n        static create(tagName, params, applyArgs, win) {\n            tagName = tagName || '';\n            applyArgs = applyArgs || {};\n            params = params || {};\n            const el = GUI.createElement(tagName, params);\n            return createElementInstance(null, el, null, [\n                applyArgs,\n                win\n            ]);\n        }\n        static createInstance(el, q, tagName) {\n            console.warn('Element::createInstance() is DEPRECATED, use Element::createFromNode() instead');\n            return this.createFromNode(el, q, tagName);\n        }\n        static parseNode(win, node, type, args, onparse, id) {\n            onparse = onparse || function () {\n            };\n            args = args || {};\n            type = type || 'snipplet';\n            node.querySelectorAll('*').forEach(el => {\n                const lcase = el.tagName.toLowerCase();\n                if (lcase.match(/^gui\\-/) && !lcase.match(/(\\-container|\\-(h|v)box|\\-columns?|\\-rows?|(status|tool)bar|(button|menu)\\-bar|bar\\-entry)$/)) {\n                    DOM.$addClass(el, 'gui-element');\n                }\n            });\n            parseDynamic(node, win, args);\n            onparse(node);\n            Object.keys(REGISTRY).forEach(key => {\n                node.querySelectorAll(key).forEach(pel => {\n                    if (pel._wasParsed || DOM.$hasClass(pel, 'gui-data-view')) {\n                        return;\n                    }\n                    try {\n                        createElementInstance(key, pel, null, []);\n                    } catch (e) {\n                        console.warn('parseNode()', id, type, win, 'exception');\n                        console.warn(e, e.stack);\n                    }\n                    pel._wasParsed = true;\n                });\n            });\n        }\n        static register(data, classRef) {\n            const name = data.tagName;\n            if (REGISTRY[name]) {\n                throw new Error('GUI Element \"' + name + '\" already exists');\n            }\n            REGISTRY[name] = (() => {\n                const metadata = Object.assign({}, {\n                    type: 'element',\n                    allowedChildren: [],\n                    allowedParents: []\n                }, data);\n                if (metadata.parent) {\n                    delete metadata.parent;\n                }\n                if (metadata.type === 'input') {\n                    metadata.allowedChildren = true;\n                } else if (metadata.type !== 'container') {\n                    metadata.allowedChildren = false;\n                }\n                return {\n                    metadata: metadata,\n                    component: classRef\n                };\n            })();\n        }\n        static getRegisteredElement(tagName) {\n            return REGISTRY[tagName];\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/scheme',[\n    'skylark-axios',\n    '../utils/dom',\n    './element',\n    '../core/config'\n], function (axios, DOM, GUIElement, Config) {\n    'use strict';\n    function addChildren(frag, root, before) {\n        if (frag) {\n            const children = frag.children;\n            let i = 0;\n            while (children.length && i < 10000) {\n                if (before) {\n                    root.parentNode.insertBefore(children[0], root);\n                } else {\n                    root.appendChild(children[0]);\n                }\n                i++;\n            }\n        }\n    }\n    function resolveFragments(scheme, node) {\n        function _resolve() {\n            const nodes = node.querySelectorAll('gui-fragment');\n            if (nodes.length) {\n                nodes.forEach(function (el) {\n                    const id = el.getAttribute('data-fragment-id');\n                    if (id) {\n                        const frag = scheme.getFragment(id, 'application-fragment');\n                        if (frag) {\n                            addChildren(frag.cloneNode(true), el.parentNode);\n                        } else {\n                            console.warn('Fragment', id, 'not found');\n                        }\n                    }\n                    DOM.$remove(el);\n                });\n                return true;\n            }\n            return false;\n        }\n        if (scheme) {\n            let resolving = true;\n            while (resolving) {\n                resolving = _resolve();\n            }\n        }\n    }\n    function removeSelfClosingTags(str) {\n        const split = (str || '').split('/>');\n        let newhtml = '';\n        for (let i = 0; i < split.length - 1; i++) {\n            const edsplit = split[i].split('<');\n            newhtml += split[i] + '></' + edsplit[edsplit.length - 1].split(' ')[0] + '>';\n        }\n        return newhtml + split[split.length - 1];\n    }\n    function cleanScheme(html) {\n        return DOM.$clean(removeSelfClosingTags(html));\n    }\n    return class GUIScheme {\n        constructor(url) {\n            console.debug('GUIScheme::construct()', url);\n            this.url = url;\n            this.scheme = null;\n            this.triggers = { render: [] };\n        }\n        destroy() {\n            DOM.$empty(this.scheme);\n            this.scheme = null;\n            this.triggers = {};\n        }\n        on(f, fn) {\n            this.triggers[f].push(fn);\n        }\n        _trigger(f, args) {\n            args = args || [];\n            if (this.triggers[f]) {\n                this.triggers[f].forEach(fn => {\n                    fn.apply(this, args);\n                });\n            }\n        }\n        _load(html, src) {\n            let doc = document.createDocumentFragment();\n            let wrapper = document.createElement('div');\n            wrapper.innerHTML = html;\n            doc.appendChild(wrapper);\n            this.scheme = doc.cloneNode(true);\n            if (Config.getConfig('DebugScheme')) {\n                console.group('Scheme::_load() validation', src);\n                this.scheme.querySelectorAll('*').forEach(node => {\n                    const tagName = node.tagName.toLowerCase();\n                    const gelData = GUIElement.getRegisteredElement(tagName);\n                    if (gelData) {\n                        const ac = gelData.metadata.allowedChildren;\n                        if (ac instanceof Array && ac.length) {\n                            const childrenTagNames = node.children.map(sNode => {\n                                return sNode.tagName.toLowerCase();\n                            });\n                            childrenTagNames.forEach((chk, idx) => {\n                                const found = ac.indexOf(chk);\n                                if (found === -1) {\n                                    console.warn(chk, node.children[idx], 'is not a valid child of type', tagName);\n                                }\n                            });\n                        }\n                        const ap = gelData.metadata.allowedParents;\n                        if (ap instanceof Array && ap.length) {\n                            const parentTagName = node.parentNode.tagName.toLowerCase();\n                            if (ap.indexOf(parentTagName) === -1) {\n                                console.warn(parentTagName, node.parentNode, 'is in an invalid parent of type', tagName);\n                            }\n                        }\n                    }\n                });\n                console.groupEnd();\n            }\n            wrapper = null;\n            doc = null;\n        }\n        load(cb, cbxhr) {\n            cbxhr = cbxhr || function () {\n            };\n            console.debug('GUIScheme::load()', this.url);\n            let src = this.url;\n            if (src.substr(0, 1) !== '/' && !src.match(/^(https?|ftp)/)) {\n                src = Config.getBrowserPath(src);\n            }\n            axios({\n                url: src,\n                method: 'GET'\n            }).then(response => {\n                const html = cleanScheme(response.data);\n                cbxhr(false, html);\n                this._load(html, src);\n                cb(false, this.scheme);\n            }).catch(err => {\n                cb('Failed to fetch scheme: ' + err.message);\n                cbxhr(true);\n            });\n        }\n        getFragment(id, type) {\n            let content = null;\n            if (id) {\n                if (type) {\n                    content = this.scheme.querySelector(type + '[data-id=\"' + id + '\"]');\n                } else {\n                    content = this.scheme.querySelector('application-window[data-id=\"' + id + '\"]') || this.scheme.querySelector('application-dialog[data-id=\"' + id + '\"]') || this.scheme.querySelector('application-fragment[data-id=\"' + id + '\"]');\n                }\n            }\n            return content;\n        }\n        parse(id, type, win, onparse, args) {\n            const content = this.getFragment(id, type);\n            console.debug('GUIScheme::parse()', id);\n            if (!content) {\n                console.error('GUIScheme::parse()', 'No fragment found', id + '@' + type);\n                return null;\n            }\n            type = type || content.tagName.toLowerCase();\n            args = args || {};\n            if (content) {\n                const node = content.cloneNode(true);\n                if (args.resolve !== false) {\n                    resolveFragments(this, node);\n                }\n                GUIElement.parseNode(win, node, type, args, onparse, id);\n                return node;\n            }\n            return null;\n        }\n        render(win, id, root, type, onparse, args) {\n            root = root || win._getRoot();\n            if (root instanceof GUIElement) {\n                root = root.$element;\n            }\n            function setWindowProperties(frag) {\n                if (frag) {\n                    const width = parseInt(frag.getAttribute('data-width'), 10) || 0;\n                    const height = parseInt(frag.getAttribute('data-height'), 10) || 0;\n                    const allow_maximize = frag.getAttribute('data-allow_maximize');\n                    const allow_minimize = frag.getAttribute('data-allow_minimize');\n                    const allow_close = frag.getAttribute('data-allow_close');\n                    const allow_resize = frag.getAttribute('data-allow_resize');\n                    if (!isNaN(width) && width > 0 || !isNaN(height) && height > 0) {\n                        win._resize(width, height);\n                    }\n                    win._setProperty('allow_maximize', allow_maximize);\n                    win._setProperty('allow_minimize', allow_minimize);\n                    win._setProperty('allow_close', allow_close);\n                    win._setProperty('allow_resize', allow_resize);\n                }\n            }\n            console.debug('GUIScheme::render()', id);\n            const content = this.parse(id, type, win, onparse, args);\n            addChildren(content, root);\n            root.querySelectorAll('application-fragment').forEach(e => {\n                DOM.$remove(e);\n            });\n            if (!win._restored) {\n                setWindowProperties(this.getFragment(id));\n            }\n            this._trigger('render', [root]);\n        }\n        getHTML() {\n            return this.scheme.firstChild.innerHTML;\n        }\n        static fromString(str) {\n            const inst = new GUIScheme(null);\n            const cleaned = cleanScheme(str);\n            inst._load(cleaned, '<html>');\n            return inst;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/menu',[\n    '../utils/gui',\n    '../utils/dom',\n    '../utils/events',\n    './element',\n    '../core/window-manager',\n    '../helpers/hooks'\n], function (GUI, DOM, Events, GUIElement, WindowManager, Hooks) {\n    'use strict';\n    let lastMenu;\n    function clickWrapper(ev, pos, onclick, original) {\n        ev.stopPropagation();\n        let t = ev.target;\n        if (t && t.tagName === 'LABEL') {\n            t = t.parentNode;\n        }\n        let isExpander = false;\n        if (t && t.tagName === 'GUI-MENU-ENTRY') {\n            let subMenu = t.querySelector('gui-menu');\n            isExpander = !!subMenu;\n            try {\n                if (isExpander && !ev.isTrusted) {\n                    t.parentNode.querySelectorAll('gui-menu-entry').forEach(pn => {\n                        DOM.$removeClass(pn, 'active');\n                    });\n                    DOM.$addClass(t, 'active');\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n            onclick(ev, pos, t, original, isExpander);\n        }\n    }\n    function clamp(r) {\n        function _clamp(rm) {\n            rm.querySelectorAll('gui-menu-entry').forEach(function (srm) {\n                const sm = srm.querySelector('gui-menu');\n                if (sm) {\n                    sm.style.left = String(-parseInt(sm.offsetWidth, 10)) + 'px';\n                    _clamp(sm);\n                }\n            });\n        }\n        const pos = DOM.$position(r);\n        if (pos && window.innerWidth - pos.right < r.offsetWidth) {\n            DOM.$addClass(r, 'gui-overflowing');\n            _clamp(r);\n        }\n        DOM.$addClass(r, 'gui-showing');\n    }\n    function clampSubMenu(sm) {\n        if (sm) {\n            const pos = DOM.$position(sm);\n            const wm = WindowManager.instance;\n            const space = wm.getWindowSpace(true);\n            if (pos) {\n                const diff = space.height - pos.bottom;\n                if (diff < 0) {\n                    sm.style.marginTop = String(diff) + 'px';\n                }\n            }\n        }\n    }\n    function blur(ev) {\n        if (lastMenu) {\n            lastMenu(ev);\n        }\n        lastMenu = null;\n        Hooks.triggerHook('menuBlur');\n    }\n    function create(items, ev, customInstance) {\n        items = items || [];\n        blur(ev);\n        let root = customInstance;\n        let callbackMap = [];\n        function resolveItems(arr, par) {\n            arr.forEach(function (iter) {\n                const props = {\n                    label: iter.title,\n                    icon: iter.icon,\n                    disabled: iter.disabled,\n                    labelHTML: iter.titleHTML,\n                    type: iter.type,\n                    checked: iter.checked\n                };\n                const entry = GUI.createElement('gui-menu-entry', props);\n                if (iter.menu) {\n                    const nroot = GUI.createElement('gui-menu', {});\n                    resolveItems(iter.menu, nroot);\n                    entry.appendChild(nroot);\n                }\n                if (iter.onClick) {\n                    const index = callbackMap.push(iter.onClick);\n                    entry.setAttribute('data-callback-id', String(index - 1));\n                }\n                par.appendChild(entry);\n            });\n        }\n        if (!root) {\n            root = GUI.createElement('gui-menu', {});\n            resolveItems(items || [], root);\n            GUIElement.createFromNode(root, null, 'gui-menu').build(true);\n            Events.$bind(root, 'mouseover', function (ev, pos) {\n                if (ev.target && ev.target.tagName === 'GUI-MENU-ENTRY') {\n                    setTimeout(() => {\n                        clampSubMenu(ev.target.querySelector('gui-menu'));\n                    }, 1);\n                }\n            }, true);\n            Events.$bind(root, 'click', function (ev, pos) {\n                clickWrapper(ev, pos, function (ev, pos, t, orig, isExpander) {\n                    const index = parseInt(t.getAttribute('data-callback-id'), 10);\n                    if (callbackMap[index]) {\n                        callbackMap[index](ev, pos);\n                    }\n                    if (!isExpander) {\n                        blur(ev);\n                    }\n                });\n            }, true);\n        }\n        if (root.$element) {\n            root = root.$element;\n        }\n        const wm = WindowManager.instance;\n        const space = wm.getWindowSpace(true);\n        const pos = Events.mousePosition(ev);\n        DOM.$addClass(root, 'gui-root-menu');\n        root.style.left = pos.x + 'px';\n        root.style.top = pos.y + 'px';\n        document.body.appendChild(root);\n        setTimeout(function () {\n            const pos = DOM.$position(root);\n            if (pos) {\n                if (pos.right > space.width) {\n                    const newLeft = Math.round(space.width - pos.width);\n                    root.style.left = Math.max(0, newLeft) + 'px';\n                }\n                if (pos.bottom > space.height) {\n                    const newTop = Math.round(space.height - pos.height);\n                    root.style.top = Math.max(0, newTop) + 'px';\n                }\n            }\n            clamp(root);\n            lastMenu = function () {\n                callbackMap = [];\n                if (root) {\n                    root.querySelectorAll('gui-menu-entry').forEach(function (el) {\n                        Events.$unbind(el);\n                    });\n                    Events.$unbind(root);\n                }\n                root = DOM.$remove(root);\n            };\n        }, 1);\n    }\n    function setActive(menu) {\n        blur();\n        lastMenu = menu;\n    }\n    return {\n        clickWrapper: clickWrapper,\n        clamp: clamp,\n        blur: blur,\n        create: create,\n        setActive: setActive\n    };\n});\ndefine('skylark-osjsv2-client/core/window',[\n    '../vfs/file',\n//    './application',\n    './window-manager',\n    '../gui/element',\n    '../gui/scheme',\n    '../helpers/event-handler',\n    './theme',\n    '../utils/dom',\n    '../utils/gui',\n    '../utils/events',\n    '../utils/compability',\n    '../utils/keycodes',\n    '../gui/menu',\n    './locales',\n//    './init'\n], function (FileMetadata, WindowManager, Element, GUIScheme, EventHandler, Theme, DOM, GUI, Events, Compability, Keycodes, Menu, locales) {\n    'use strict';\n    function camelCased(str) {\n        return str.replace(/_([a-z])/g, function (g) {\n            return g[1].toUpperCase();\n        });\n    }\n    const getNextZindex = function () {\n        let _lzindex = 1;\n        let _ltzindex = 100000;\n        return function (ontop) {\n            if (typeof ontop !== 'undefined' && ontop === true) {\n                return _ltzindex += 2;\n            }\n            return _lzindex += 2;\n        };\n    }();\n    function getWindowSpace() {\n        const wm = WindowManager.instance;\n        if (wm) {\n            return wm.getWindowSpace();\n        }\n        return {\n            top: 0,\n            left: 0,\n            width: document.body.offsetWidth,\n            height: document.body.offsetHeight\n        };\n    }\n    function waitForAnimation(win, cb) {\n        const wm = WindowManager.instance;\n        const anim = wm ? wm.getSetting('animations') : false;\n        if (anim) {\n            win._animationCallback = cb;\n        } else {\n            cb();\n        }\n    }\n    const createMediaQueries = function () {\n        let queries;\n        function _createQueries() {\n            let result = {};\n            const wm = WindowManager.instance;\n            if (wm) {\n                const qs = wm.getDefaultSetting('mediaQueries') || {};\n                Object.keys(qs).forEach(function (k) {\n                    if (qs[k]) {\n                        result[k] = function (w, h, ref) {\n                            return w <= qs[k];\n                        };\n                    }\n                });\n            }\n            return result;\n        }\n        return function () {\n            if (!queries) {\n                queries = _createQueries();\n            }\n            return queries;\n        };\n    }();\n    function checkMediaQueries(win) {\n        const wm = WindowManager.instance;\n        if (!win._$element || !wm) {\n            return;\n        }\n        let n = '';\n        let k;\n        const qs = win._properties.media_queries || {};\n        const w = win._$element.offsetWidth;\n        const h = win._$element.offsetHeight;\n        for (k in qs) {\n            if (qs.hasOwnProperty(k)) {\n                if (qs[k](w, h, win)) {\n                    n = k;\n                    break;\n                }\n            }\n        }\n        win._$element.setAttribute('data-media', n);\n    }\n    let _WID = 0;\n    let _DEFAULT_WIDTH = 200;\n    let _DEFAULT_HEIGHT = 200;\n    let _DEFAULT_MIN_HEIGHT = 150;\n    let _DEFAULT_MIN_WIDTH = 150;\n    let _DEFAULT_SND_VOLUME = 1;\n    let _NAMES = [];\n    return class Window {\n        constructor(name, opts, appRef) {\n            if (_NAMES.indexOf(name) >= 0) {\n                throw new Error(locales._('ERR_WIN_DUPLICATE_FMT', name));\n            }\n            //if (appRef && !(appRef instanceof Application)) { // modifed by lwf\n            //    throw new TypeError('appRef given was not instance of Application');\n            //}\n            opts = Object.assign({}, {\n                icon: Theme.getIcon('apps/preferences-system-windows.png'),\n                width: _DEFAULT_WIDTH,\n                height: _DEFAULT_HEIGHT,\n                title: name,\n                tag: name,\n                auto_size: false\n            }, opts);\n            console.group('Window::constructor()', _WID, arguments);\n            this._$element = null;\n            this._$root = null;\n            this._$top = null;\n            this._$winicon = null;\n            this._$loading = null;\n            this._$disabled = null;\n            this._$resize = null;\n            this._$warning = null;\n            this._opts = opts;\n            this._app = appRef || null;\n            this._destroyed = false;\n            this._restored = false;\n            this._loaded = false;\n            this._initialized = false;\n            this._disabled = true;\n            this._loading = false;\n            this._wid = _WID;\n            this._icon = opts.icon;\n            this._name = name;\n            this._title = opts.title;\n            this._tag = opts.tag;\n            this._position = {\n                x: opts.x,\n                y: opts.y\n            };\n            this._dimension = {\n                w: opts.width,\n                h: opts.height\n            };\n            this._children = [];\n            this._parent = null;\n            this._origtitle = this._title;\n            this._lastDimension = this._dimension;\n            this._lastPosition = this._position;\n            this._sound = null;\n            this._soundVolume = _DEFAULT_SND_VOLUME;\n            this._scheme = null;\n            this._properties = {\n                gravity: null,\n                allow_move: true,\n                allow_resize: true,\n                allow_minimize: true,\n                allow_maximize: true,\n                allow_close: true,\n                allow_windowlist: true,\n                allow_drop: false,\n                allow_iconmenu: true,\n                allow_ontop: true,\n                allow_hotkeys: true,\n                allow_session: true,\n                key_capture: false,\n                start_focused: true,\n                min_width: _DEFAULT_MIN_HEIGHT,\n                min_height: _DEFAULT_MIN_WIDTH,\n                max_width: null,\n                max_height: null,\n                media_queries: createMediaQueries()\n            };\n            this._state = {\n                focused: false,\n                modal: false,\n                minimized: false,\n                maximized: false,\n                ontop: false,\n                onbottom: false\n            };\n            this._animationCallback = null;\n            this._queryTimer = null;\n            this._evHandler = new EventHandler(name, [\n                'focus',\n                'blur',\n                'destroy',\n                'maximize',\n                'minimize',\n                'restore',\n                'move',\n                'moved',\n                'resize',\n                'resized',\n                'keydown',\n                'keyup',\n                'keypress',\n                'drop',\n                'drop:upload',\n                'drop:file'\n            ]);\n            Object.keys(opts).forEach(k => {\n                if (typeof this._properties[k] !== 'undefined') {\n                    this._properties[k] = opts[k];\n                } else if (typeof this._state[k] !== 'undefined' && k !== 'focused') {\n                    this._state[k] = opts[k];\n                } else if (('sound', 'sound_volume').indexOf(k) !== -1) {\n                    this['_' + camelCased(k)] = opts[k];\n                }\n            });\n            ((properties, position) => {\n                if (!properties.gravity && typeof position.x === 'undefined' || typeof position.y === 'undefined') {\n                    const wm = WindowManager.instance;\n                    const np = wm ? wm.getWindowPosition() : {\n                        x: 0,\n                        y: 0\n                    };\n                    position.x = np.x;\n                    position.y = np.y;\n                }\n            })(this._properties, this._position);\n            ((properties, dimension) => {\n                if (properties.min_height && dimension.h < properties.min_height) {\n                    dimension.h = properties.min_height;\n                }\n                if (properties.max_width && dimension.w < properties.max_width) {\n                    dimension.w = properties.max_width;\n                }\n                if (properties.max_height && dimension.h > properties.max_height) {\n                    dimension.h = properties.max_height;\n                }\n                if (properties.max_width && dimension.w > properties.max_width) {\n                    dimension.w = properties.max_width;\n                }\n            })(this._properties, this._dimension);\n            ((position, dimension) => {\n                if (appRef && appRef.__args && appRef.__args.__windows__) {\n                    appRef.__args.__windows__.forEach(restore => {\n                        if (!this._restored && restore.name && restore.name === this._name) {\n                            position.x = restore.position.x;\n                            position.y = restore.position.y;\n                            if (this._properties.allow_resize) {\n                                dimension.w = restore.dimension.w;\n                                dimension.h = restore.dimension.h;\n                            }\n                            console.info('RESTORED FROM SESSION', restore);\n                            this._restored = true;\n                        }\n                    });\n                }\n            })(this._position, this._dimension);\n            ((properties, position, dimension, restored) => {\n                const grav = properties.gravity;\n                if (grav && !restored) {\n                    if (grav === 'center') {\n                        position.y = window.innerHeight / 2 - this._dimension.h / 2;\n                        position.x = window.innerWidth / 2 - this._dimension.w / 2;\n                    } else {\n                        const space = getWindowSpace();\n                        if (grav.match(/^south/)) {\n                            position.y = space.height - dimension.h;\n                        } else {\n                            position.y = space.top;\n                        }\n                        if (grav.match(/west$/)) {\n                            position.x = space.left;\n                        } else {\n                            position.x = space.width - dimension.w;\n                        }\n                    }\n                }\n            })(this._properties, this._position, this._dimension, this._restored);\n            console.debug('State', this._state);\n            console.debug('Properties', this._properties);\n            console.debug('Position', this._position);\n            console.debug('Dimension', this._dimension);\n            console.groupEnd();\n            _WID++;\n        }\n        init(_wm, _app) {\n            if (this._initialized || this._loaded) {\n                return this._$root;\n            }\n            this._$element = DOM.$create('application-window', {\n                className: ((n, t) => {\n                    const classNames = [\n                        'Window',\n                        DOM.$safeName(n)\n                    ];\n                    if (t && n !== t) {\n                        classNames.push(DOM.$safeName(t));\n                    }\n                    return classNames;\n                })(this._name, this._tag).join(' '),\n                style: {\n                    width: this._dimension.w + 'px',\n                    height: this._dimension.h + 'px',\n                    top: this._position.y + 'px',\n                    left: this._position.x + 'px',\n                    zIndex: getNextZindex(this._state.ontop)\n                },\n                data: {\n                    window_id: this._wid,\n                    allow_resize: this._properties.allow_resize,\n                    allow_minimize: this._properties.allow_minimize,\n                    allow_maximize: this._properties.allow_maximize,\n                    allow_close: this._properties.allow_close\n                },\n                aria: {\n                    role: 'application',\n                    live: 'polite',\n                    hidden: 'false'\n                }\n            });\n            this._$root = document.createElement('application-window-content');\n            this._$resize = document.createElement('application-window-resize');\n            [\n                'nw',\n                'n',\n                'ne',\n                'e',\n                'se',\n                's',\n                'sw',\n                'w'\n            ].forEach(i => {\n                let h = document.createElement('application-window-resize-handle');\n                h.setAttribute('data-direction', i);\n                this._$resize.appendChild(h);\n                h = null;\n            });\n            this._$loading = document.createElement('application-window-loading');\n            this._$disabled = document.createElement('application-window-disabled');\n            this._$top = document.createElement('application-window-top');\n            this._$winicon = document.createElement('application-window-icon');\n            this._$winicon.setAttribute('role', 'button');\n            this._$winicon.setAttribute('aria-haspopup', 'true');\n            this._$winicon.setAttribute('aria-label', 'Window Menu');\n            const windowTitle = document.createElement('application-window-title');\n            windowTitle.setAttribute('role', 'heading');\n            let preventTimeout;\n            const _onanimationend = ev => {\n                if (typeof this._animationCallback === 'function') {\n                    clearTimeout(preventTimeout);\n                    preventTimeout = setTimeout(() => {\n                        this._animationCallback(ev);\n                        this._animationCallback = false;\n                        preventTimeout = clearTimeout(preventTimeout);\n                    }, 10);\n                }\n            };\n            Events.$bind(this._$element, 'transitionend', _onanimationend);\n            Events.$bind(this._$element, 'animationend', _onanimationend);\n            Events.$bind(this._$element, 'click', ev => {\n                this._focus();\n            }, true);\n            Events.$bind(this._$top, 'mouseup', ev => {\n                const t = ev.target;\n                if (t) {\n                    if (t.tagName.match(/^APPLICATION\\-WINDOW\\-BUTTON/)) {\n                        this._onWindowButtonClick(ev, t, t.getAttribute('data-action'));\n                    } else if (t.tagName === 'APPLICATION-WINDOW-ICON') {\n                        this._onWindowIconClick(ev);\n                    }\n                }\n            });\n            Events.$bind(this._$top, 'dblclick', () => {\n                this._maximize();\n            });\n            ((properties, main, compability) => {\n                if (properties.allow_drop && compability.dnd) {\n                    const border = document.createElement('div');\n                    border.className = 'WindowDropRect';\n                    GUI.createDroppable(main, {\n                        onOver: (ev, el, args) => {\n                            main.setAttribute('data-dnd-state', 'true');\n                        },\n                        onLeave: () => {\n                            main.setAttribute('data-dnd-state', 'false');\n                        },\n                        onDrop: () => {\n                            main.setAttribute('data-dnd-state', 'false');\n                        },\n                        onItemDropped: (ev, el, item, args) => {\n                            main.setAttribute('data-dnd-state', 'false');\n                            return this._onDndEvent(ev, 'itemDrop', item, args, el);\n                        },\n                        onFilesDropped: (ev, el, files, args) => {\n                            main.setAttribute('data-dnd-state', 'false');\n                            return this._onDndEvent(ev, 'filesDrop', files, args, el);\n                        }\n                    });\n                }\n            })(this._properties, this._$element, Compability.getCompability());\n            windowTitle.appendChild(document.createTextNode(this._title));\n            this._$top.appendChild(this._$winicon);\n            this._$top.appendChild(windowTitle);\n            this._$top.appendChild(DOM.$create('application-window-button-minimize', {\n                className: 'application-window-button-entry',\n                data: { action: 'minimize' },\n                aria: {\n                    role: 'button',\n                    label: 'Minimize Window'\n                }\n            }));\n            this._$top.appendChild(DOM.$create('application-window-button-maximize', {\n                className: 'application-window-button-entry',\n                data: { action: 'maximize' },\n                aria: {\n                    role: 'button',\n                    label: 'Maximize Window'\n                }\n            }));\n            this._$top.appendChild(DOM.$create('application-window-button-close', {\n                className: 'application-window-button-entry',\n                data: { action: 'close' },\n                aria: {\n                    role: 'button',\n                    label: 'Close Window'\n                }\n            }));\n            this._$loading.appendChild(document.createElement('application-window-loading-indicator'));\n            this._$element.appendChild(this._$top);\n            this._$element.appendChild(this._$root);\n            this._$element.appendChild(this._$resize);\n            this._$element.appendChild(this._$disabled);\n            this._$element.appendChild(this._$loading);\n            document.body.appendChild(this._$element);\n            this._onChange('create');\n            this._toggleLoading(false);\n            this._toggleDisabled(false);\n            this._setIcon(Theme.getIcon(this._icon));\n            this._updateMarkup();\n            if (this._sound) {\n                Theme.playSound(this._sound, this._soundVolume);\n            }\n            this._initialized = true;\n            this._emit('init', [this._$root]);\n            return this._$root;\n        }\n        _inited() {\n            if (this._loaded) {\n                return;\n            }\n            this._loaded = true;\n            this._onResize();\n            if (!this._restored) {\n                if (this._state.maximized) {\n                    this._maximize(true);\n                } else if (this._state.minimized) {\n                    this._minimize(true);\n                } else {\n                    if (this._opts.auto_size) {\n                        let maxWidth = 0;\n                        let maxHeight = 0;\n                        const traverseTree = el => {\n                            el.children.forEach(sel => {\n                                maxWidth = Math.max(maxWidth, sel.offsetWidth);\n                                maxHeight = Math.max(maxHeight, sel.offsetHeight);\n                                if (sel.children.length) {\n                                    traverseTree(sel);\n                                }\n                            });\n                        };\n                        traverseTree(this._$root);\n                        this._resize(maxWidth, maxHeight, true);\n                    }\n                }\n            }\n            let inittimeout = setTimeout(() => {\n                this._emit('inited', []);\n                inittimeout = clearTimeout(inittimeout);\n            }, 10);\n            if (this._app) {\n                this._app._emit('initedWindow', [this]);\n            }\n            console.debug('Window::_inited()', this._name);\n        }\n        destroy(shutdown) {\n            if (this._destroyed) {\n                return false;\n            }\n            this._emit('destroy');\n            this._destroyed = true;\n            const wm = WindowManager.instance;\n            console.group('Window::destroy()');\n            const _removeDOM = () => {\n                this._setWarning(null);\n                this._$root = null;\n                this._$top = null;\n                this._$winicon = null;\n                this._$loading = null;\n                this._$disabled = null;\n                this._$resize = null;\n                this._$warning = null;\n                this._$element = DOM.$remove(this._$element);\n            };\n            const _destroyDOM = () => {\n                if (this._$element) {\n                    this._$element.querySelectorAll('*').forEach(iter => {\n                        if (iter) {\n                            Events.$unbind(iter);\n                        }\n                    });\n                }\n                if (this._parent) {\n                    this._parent._removeChild(this);\n                }\n                this._parent = null;\n                this._removeChildren();\n            };\n            const _destroyWin = () => {\n                if (wm) {\n                    wm.removeWindow(this);\n                }\n                const curWin = wm ? wm.getCurrentWindow() : null;\n                if (curWin && curWin._wid === this._wid) {\n                    wm.setCurrentWindow(null);\n                }\n                const lastWin = wm ? wm.getLastWindow() : null;\n                if (lastWin && lastWin._wid === this._wid) {\n                    wm.setLastWindow(null);\n                }\n            };\n            const _animateClose = fn => {\n                //if (!init.running()) { // modified by lwf\n                //    fn();\n                //} else {\n                    if (this._$element) {\n                        const anim = wm ? wm.getSetting('animations') : false;\n                        if (anim) {\n                            this._$element.setAttribute('data-closing', 'true');\n                            this._animationCallback = fn;\n                            let animatetimeout = setTimeout(() => {\n                                if (this._animationCallback) {\n                                    this._animationCallback();\n                                }\n                                animatetimeout = clearTimeout(animatetimeout);\n                            }, 1000);\n                        } else {\n                            this._$element.style.display = 'none';\n                            fn();\n                        }\n                    }\n                //}\n            };\n            this._onChange('close');\n            _animateClose(() => {\n                _removeDOM();\n            });\n            _destroyDOM();\n            _destroyWin();\n            if (this._app) {\n                this._app._onMessage('destroyWindow', this, {});\n            }\n            if (this._evHandler) {\n                this._evHandler.destroy();\n            }\n            this._app = null;\n            this._evHandler = null;\n            this._args = {};\n            this._queryTimer = clearTimeout(this._queryTimer);\n            this._scheme = this._scheme ? this._scheme.destroy() : null;\n            console.groupEnd();\n            return true;\n        }\n        _find(id, root) {\n            const q = '[data-id=\"' + id + '\"]';\n            return this._findByQuery(q, root);\n        }\n        _render(id, scheme, root, args) {\n            if (scheme) {\n                root = root || this._getRoot();\n                args = args || {};\n                if (typeof this._opts.translator === 'function') {\n                    args.undefined = this._opts.translator;\n                }\n                this._scheme = typeof scheme === 'string' ? GUIScheme.fromString(scheme) : scheme;\n            }\n            if (this._scheme instanceof GUIScheme) {\n                this._scheme.render(this, id, root, null, null, args);\n            } else {\n                console.warn('Got an invalid scheme in window render()', this._scheme);\n            }\n            return this._scheme;\n        }\n        _findDOM(id, root) {\n            root = root || this._getRoot();\n            const q = '[data-id=\"' + id + '\"]';\n            return root.querySelector(q);\n        }\n        _create(tagName, params, parentNode, applyArgs) {\n            parentNode = parentNode || this._getRoot();\n            return Element.createInto(tagName, params, parentNode, applyArgs, this);\n        }\n        _findByQuery(query, root, all) {\n            root = root || this._getRoot();\n            if (!(root instanceof window.Node)) {\n                return all ? [] : null;\n            }\n            if (all) {\n                return root.querySelectorAll(query).map(el => {\n                    return Element.createFromNode(el, query);\n                });\n            }\n            const el = root.querySelector(query);\n            return Element.createFromNode(el, query);\n        }\n        _emit(k, args) {\n            if (!this._destroyed) {\n                if (this._evHandler) {\n                    return this._evHandler.emit(k, args);\n                }\n            }\n            return false;\n        }\n        _on(k, func) {\n            if (this._evHandler) {\n                return this._evHandler.on(k, func, this);\n            }\n            return false;\n        }\n        _off(k, idx) {\n            if (this._evHandler) {\n                return this._evHandler.off(k, idx);\n            }\n            return false;\n        }\n        _addChild(w, wmAdd, wmFocus) {\n            console.debug('Window::_addChild()');\n            w._parent = this;\n            const wm = WindowManager.instance;\n            if (wmAdd && wm) {\n                wm.addWindow(w, wmFocus);\n            }\n            this._children.push(w);\n            return w;\n        }\n        _removeChild(w) {\n            let found = false;\n            this._children.forEach((child, i) => {\n                if (child && child._wid === w._wid) {\n                    console.debug('Window::_removeChild()');\n                    child.destroy();\n                    this._children[i] = null;\n                    found = true;\n                }\n            });\n            return found;\n        }\n        _getChild(value, key) {\n            key = key || 'wid';\n            const found = this._getChildren().filter(c => {\n                return c['_' + key] === value;\n            });\n            return key === 'tag' ? found : found[0];\n        }\n        _getChildById(id) {\n            return this._getChild(id, 'wid');\n        }\n        _getChildByName(name) {\n            return this._getChild(name, 'name');\n        }\n        _getChildrenByTag(tag) {\n            return this._getChild(tag, 'tag');\n        }\n        _getChildren() {\n            return this._children.filter(w => !!w);\n        }\n        _removeChildren() {\n            this._children.forEach((child, i) => {\n                if (child) {\n                    child.destroy();\n                }\n            });\n            this._children = [];\n        }\n        _close() {\n            if (this._disabled || this._destroyed) {\n                return false;\n            }\n            console.debug('Window::_close()');\n            this._blur();\n            this.destroy();\n            return true;\n        }\n        _minimize(force) {\n            if (!this._properties.allow_minimize || this._destroyed) {\n                return false;\n            }\n            if (!force && this._state.minimized) {\n                this._restore(false, true);\n                return true;\n            }\n            console.debug(this._name, '>', 'Window::_minimize()');\n            this._blur();\n            this._state.minimized = true;\n            this._$element.setAttribute('data-minimized', 'true');\n            waitForAnimation(this, () => {\n                this._$element.style.display = 'none';\n                this._emit('minimize');\n            });\n            this._onChange('minimize');\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid === this._wid) {\n                wm.setCurrentWindow(null);\n            }\n            this._updateMarkup();\n            return true;\n        }\n        _maximize(force) {\n            if (!this._properties.allow_maximize || this._destroyed || !this._$element) {\n                return false;\n            }\n            if (!force && this._state.maximized) {\n                this._restore(true, false);\n                return true;\n            }\n            console.debug(this._name, '>', 'Window::_maximize()');\n            this._lastPosition = {\n                x: this._position.x,\n                y: this._position.y\n            };\n            this._lastDimension = {\n                w: this._dimension.w,\n                h: this._dimension.h\n            };\n            this._state.maximized = true;\n            const s = this._getMaximizedSize();\n            this._$element.style.zIndex = getNextZindex(this._state.ontop);\n            this._$element.style.top = s.top + 'px';\n            this._$element.style.left = s.left + 'px';\n            this._$element.style.width = s.width + 'px';\n            this._$element.style.height = s.height + 'px';\n            this._$element.setAttribute('data-maximized', 'true');\n            this._dimension.w = s.width;\n            this._dimension.h = s.height;\n            this._position.x = s.left;\n            this._position.y = s.top;\n            this._focus();\n            waitForAnimation(this, () => {\n                this._emit('maximize');\n            });\n            this._onChange('maximize');\n            this._onResize();\n            this._updateMarkup();\n            return true;\n        }\n        _restore(max, min) {\n            if (!this._$element || this._destroyed) {\n                return;\n            }\n            const restoreMaximized = () => {\n                if (max && this._state.maximized) {\n                    this._move(this._lastPosition.x, this._lastPosition.y);\n                    this._resize(this._lastDimension.w, this._lastDimension.h);\n                    this._state.maximized = false;\n                    this._$element.setAttribute('data-maximized', 'false');\n                }\n            };\n            const restoreMinimized = () => {\n                if (min && this._state.minimized) {\n                    this._$element.style.display = 'block';\n                    this._$element.setAttribute('data-minimized', 'false');\n                    this._state.minimized = false;\n                }\n            };\n            console.debug(this._name, '>', 'Window::_restore()');\n            max = typeof max === 'undefined' ? true : max === true;\n            min = typeof min === 'undefined' ? true : min === true;\n            restoreMaximized();\n            restoreMinimized();\n            waitForAnimation(this, () => {\n                this._emit('restore');\n            });\n            this._onChange('restore');\n            this._onResize();\n            this._focus();\n            this._updateMarkup();\n        }\n        _focus(force) {\n            if (!this._$element || this._destroyed) {\n                return false;\n            }\n            this._toggleAttentionBlink(false);\n            this._$element.style.zIndex = getNextZindex(this._state.ontop);\n            this._$element.setAttribute('data-focused', 'true');\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid !== this._wid) {\n                win._blur();\n            }\n            if (wm) {\n                wm.setCurrentWindow(this);\n                wm.setLastWindow(this);\n            }\n            if (!this._state.focused || force) {\n                this._onChange('focus');\n                this._emit('focus');\n            }\n            this._state.focused = true;\n            this._updateMarkup();\n            return true;\n        }\n        _blur(force) {\n            if (!this._$element || this._destroyed || !force && !this._state.focused) {\n                return false;\n            }\n            this._$element.setAttribute('data-focused', 'false');\n            this._state.focused = false;\n            this._onChange('blur');\n            this._emit('blur');\n            this._blurGUI();\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid === this._wid) {\n                wm.setCurrentWindow(null);\n            }\n            this._updateMarkup();\n            return true;\n        }\n        _blurGUI() {\n            this._$root.querySelectorAll('input, textarea, select, iframe, button').forEach(el => {\n                el.blur();\n            });\n        }\n        _resizeTo(dw, dh, limit, move, container, force) {\n            if (!this._$element || (dw <= 0 || dh <= 0)) {\n                return;\n            }\n            limit = typeof limit === 'undefined' || limit === true;\n            let dx = 0;\n            let dy = 0;\n            if (container) {\n                const cpos = DOM.$position(container, this._$root);\n                dx = parseInt(cpos.left, 10);\n                dy = parseInt(cpos.top, 10);\n            }\n            const space = this._getMaximizedSize();\n            const cx = this._position.x + dx;\n            const cy = this._position.y + dy;\n            let newW = dw;\n            let newH = dh;\n            let newX = null;\n            let newY = null;\n            const _limitTo = () => {\n                if (cx + newW > space.width) {\n                    if (move) {\n                        newW = space.width;\n                        newX = space.left;\n                    } else {\n                        newW = space.width - cx + dx;\n                    }\n                } else {\n                    newW += dx;\n                }\n                if (cy + newH > space.height) {\n                    if (move) {\n                        newH = space.height;\n                        newY = space.top;\n                    } else {\n                        newH = space.height - cy + this._$top.offsetHeight + dy;\n                    }\n                } else {\n                    newH += dy;\n                }\n            };\n            const _moveTo = () => {\n                if (newX !== null) {\n                    this._move(newX, this._position.y);\n                }\n                if (newY !== null) {\n                    this._move(this._position.x, newY);\n                }\n            };\n            const _resizeFinished = () => {\n                const wm = WindowManager.instance;\n                const anim = wm ? wm.getSetting('animations') : false;\n                if (anim) {\n                    this._animationCallback = () => {\n                        this._emit('resized');\n                    };\n                } else {\n                    this._emit('resized');\n                }\n            };\n            if (limit) {\n                _limitTo();\n            }\n            this._resize(newW, newH, force);\n            _moveTo();\n            _resizeFinished();\n        }\n        _resize(w, h, force) {\n            const p = this._properties;\n            if (!this._$element || this._destroyed || !force && !p.allow_resize) {\n                return false;\n            }\n            const getNewSize = (n, min, max) => {\n                if (!isNaN(n) && n) {\n                    n = Math.max(n, min);\n                    if (max !== null) {\n                        n = Math.min(n, max);\n                    }\n                }\n                return n;\n            };\n            w = force ? w : getNewSize(w, p.min_width, p.max_width);\n            if (!isNaN(w) && w) {\n                this._$element.style.width = w + 'px';\n                this._dimension.w = w;\n            }\n            h = force ? h : getNewSize(h, p.min_height, p.max_height);\n            if (!isNaN(h) && h) {\n                this._$element.style.height = h + 'px';\n                this._dimension.h = h;\n            }\n            this._onResize();\n            return true;\n        }\n        _moveTo(pos) {\n            const wm = WindowManager.instance;\n            if (!wm) {\n                return;\n            }\n            const s = wm.getWindowSpace();\n            const cx = this._position.x;\n            const cy = this._position.y;\n            if (pos === 'left') {\n                this._move(s.left, cy);\n            } else if (pos === 'right') {\n                this._move(s.width - this._dimension.w, cy);\n            } else if (pos === 'top') {\n                this._move(cx, s.top);\n            } else if (pos === 'bottom') {\n                this._move(cx, s.height - this._dimension.h);\n            }\n        }\n        _move(x, y) {\n            if (!this._$element || this._destroyed || !this._properties.allow_move) {\n                return false;\n            }\n            if (typeof x === 'undefined' || typeof y === 'undefined') {\n                return false;\n            }\n            this._$element.style.top = y + 'px';\n            this._$element.style.left = x + 'px';\n            this._position.x = x;\n            this._position.y = y;\n            return true;\n        }\n        _toggleDisabled(t) {\n            if (this._$disabled) {\n                this._$disabled.style.display = t ? 'block' : 'none';\n            }\n            this._disabled = t ? true : false;\n            this._updateMarkup();\n        }\n        _toggleLoading(t) {\n            if (this._$loading) {\n                this._$loading.style.display = t ? 'block' : 'none';\n            }\n            this._loading = t ? true : false;\n            this._updateMarkup();\n        }\n        _updateMarkup(ui) {\n            if (!this._$element) {\n                return;\n            }\n            const t = this._loading || this._disabled;\n            const d = this._disabled;\n            const h = this._state.minimized;\n            const f = !this._state.focused;\n            this._$element.setAttribute('aria-busy', String(t));\n            this._$element.setAttribute('aria-hidden', String(h));\n            this._$element.setAttribute('aria-disabled', String(d));\n            this._$root.setAttribute('aria-hidden', String(f));\n            if (!ui) {\n                return;\n            }\n            const dmax = this._properties.allow_maximize === true ? 'inline-block' : 'none';\n            const dmin = this._properties.allow_minimize === true ? 'inline-block' : 'none';\n            const dclose = this._properties.allow_close === true ? 'inline-block' : 'none';\n            this._$top.querySelector('application-window-button-maximize').style.display = dmax;\n            this._$top.querySelector('application-window-button-minimize').style.display = dmin;\n            this._$top.querySelector('application-window-button-close').style.display = dclose;\n            const dres = this._properties.allow_resize === true;\n            this._$element.setAttribute('data-allow-resize', String(dres));\n        }\n        _toggleAttentionBlink(t) {\n            if (!this._$element || this._destroyed || this._state.focused) {\n                return false;\n            }\n            const el = this._$element;\n            const _blink = stat => {\n                if (el) {\n                    if (stat) {\n                        DOM.$addClass(el, 'WindowAttentionBlink');\n                    } else {\n                        DOM.$removeClass(el, 'WindowAttentionBlink');\n                    }\n                }\n                this._onChange(stat ? 'attention_on' : 'attention_off');\n            };\n            _blink(t);\n            return true;\n        }\n        _nextTabIndex(ev) {\n            const nextElement = GUI.getNextElement(ev.shiftKey, document.activeElement, this._$root);\n            if (nextElement) {\n                if (DOM.$hasClass(nextElement, 'gui-data-view')) {\n                    Element.createFromNode(nextElement).focus();\n                } else {\n                    try {\n                        nextElement.focus();\n                    } catch (e) {\n                    }\n                }\n            }\n        }\n        _onDndEvent(ev, type, item, args, el) {\n            if (this._disabled || this._destroyed) {\n                return false;\n            }\n            console.debug('Window::_onDndEvent()', type, item, args);\n            this._emit('drop', [\n                ev,\n                type,\n                item,\n                args,\n                el\n            ]);\n            if (item) {\n                if (type === 'filesDrop') {\n                    this._emit('drop:upload', [\n                        ev,\n                        item,\n                        args,\n                        el\n                    ]);\n                } else if (type === 'itemDrop' && item.type === 'file' && item.data) {\n                    this._emit('drop:file', [\n                        ev,\n                        new FileMetadata(item.data || {}),\n                        args,\n                        el\n                    ]);\n                }\n            }\n            return true;\n        }\n        _onKeyEvent(ev, type) {\n            if (this._destroyed || !this._state.focused) {\n                return false;\n            }\n            if (type === 'keydown' && ev.keyCode === Keycodes.TAB) {\n                this._nextTabIndex(ev);\n            }\n            this._emit(type, [\n                ev,\n                ev.keyCode,\n                ev.shiftKey,\n                ev.ctrlKey,\n                ev.altKey\n            ]);\n            return true;\n        }\n        _onResize() {\n            clearTimeout(this._queryTimer);\n            this._queryTimer = setTimeout(() => {\n                checkMediaQueries(this);\n                this._queryTimer = clearTimeout(this._queryTimer);\n            }, 20);\n        }\n        _onWindowIconClick(ev) {\n            if (!this._properties.allow_iconmenu || this._destroyed) {\n                return;\n            }\n            console.debug(this._name, '>', 'Window::_onWindowIconClick()');\n            const control = [\n                [\n                    this._properties.allow_minimize,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_MINIMIZE'),\n                            icon: Theme.getIcon('actions/go-up.png'),\n                            onClick: (name, iter) => {\n                                this._minimize();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_maximize,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_MAXIMIZE'),\n                            icon: Theme.getIcon('actions/view-fullscreen.png'),\n                            onClick: (name, iter) => {\n                                this._maximize();\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._state.maximized,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_RESTORE'),\n                            icon: Theme.getIcon('actions/view-restore.png'),\n                            onClick: (name, iter) => {\n                                this._restore();\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_ontop,\n                    () => {\n                        if (this._state.ontop) {\n                            return {\n                                title: locales._('WINDOW_ONTOP_OFF'),\n                                icon: Theme.getIcon('actions/window-new.png'),\n                                onClick: (name, iter) => {\n                                    this._state.ontop = false;\n                                    if (this._$element) {\n                                        this._$element.style.zIndex = getNextZindex(false);\n                                    }\n                                    this._focus();\n                                }\n                            };\n                        }\n                        return {\n                            title: locales._('WINDOW_ONTOP_ON'),\n                            icon: Theme.getIcon('actions/window-new.png'),\n                            onClick: (name, iter) => {\n                                this._state.ontop = true;\n                                if (this._$element) {\n                                    this._$element.style.zIndex = getNextZindex(true);\n                                }\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_close,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_CLOSE'),\n                            icon: Theme.getIcon('actions/window-close.png'),\n                            onClick: (name, iter) => {\n                                this._close();\n                            }\n                        };\n                    }\n                ]\n            ];\n            const list = [];\n            control.forEach(iter => {\n                if (iter[0]) {\n                    list.push(iter[1]());\n                }\n            });\n            this._focus();\n            Menu.create(list, ev);\n        }\n        _onWindowButtonClick(ev, el, btn) {\n            const map = {\n                close: this._close,\n                minimize: this._minimize,\n                maximize: this._maximize\n            };\n            if (map[btn]) {\n                try {\n                    this._blurGUI();\n                } catch (e) {\n                }\n                map[btn].call(this);\n            }\n        }\n        _onChange(ev, byUser) {\n            ev = ev || '';\n            if (ev) {\n                const wm = WindowManager.instance;\n                if (wm) {\n                    wm.eventWindow(ev, this);\n                }\n            }\n        }\n        _getMaximizedSize() {\n            const s = getWindowSpace();\n            if (!this._$element || this._destroyed) {\n                return s;\n            }\n            let topMargin = 23;\n            let borderSize = 0;\n            const theme = Theme.getStyleTheme(true, true);\n            if (theme && theme.style && theme.style.window) {\n                topMargin = theme.style.window.margin;\n                borderSize = theme.style.window.border;\n            }\n            s.left += borderSize;\n            s.top += borderSize;\n            s.width -= borderSize * 2;\n            s.height -= topMargin + borderSize * 2;\n            return Object.freeze(s);\n        }\n        _getViewRect() {\n            return this._$element ? Object.freeze(DOM.$position(this._$element)) : null;\n        }\n        _getRoot() {\n            return this._$root;\n        }\n        _getZindex() {\n            if (this._$element) {\n                return parseInt(this._$element.style.zIndex, 10);\n            }\n            return -1;\n        }\n        _getTitle() {\n            return this._title;\n        }\n        _setTitle(t, append, delimiter) {\n            if (!this._$element || this._destroyed) {\n                return;\n            }\n            delimiter = delimiter || '-';\n            const tel = this._$element.getElementsByTagName('application-window-title')[0];\n            let text = [];\n            if (append) {\n                text = [\n                    this._origtitle,\n                    delimiter,\n                    t\n                ];\n            } else {\n                text = [t || this._origtitle];\n            }\n            this._title = text.join(' ') || this._origtitle;\n            if (tel) {\n                DOM.$empty(tel);\n                tel.appendChild(document.createTextNode(this._title));\n            }\n            this._onChange('title');\n            this._updateMarkup();\n        }\n        _setIcon(i) {\n            if (this._$winicon) {\n                this._$winicon.title = this._title;\n                this._$winicon.style.backgroundImage = 'url(' + i + ')';\n            }\n            this._icon = i;\n            this._onChange('icon');\n        }\n        _setWarning(message) {\n            this._$warning = DOM.$remove(this._$warning);\n            if (this._destroyed || message === null) {\n                return;\n            }\n            message = message || '';\n            let container = document.createElement('application-window-warning');\n            let close = document.createElement('div');\n            close.innerHTML = 'X';\n            Events.$bind(close, 'click', () => {\n                this._setWarning(null);\n            });\n            let msg = document.createElement('div');\n            msg.appendChild(document.createTextNode(message));\n            container.appendChild(close);\n            container.appendChild(msg);\n            this._$warning = container;\n            this._$root.appendChild(this._$warning);\n        }\n        _setProperty(p, v) {\n            if (v === '' || v === null || !this._$element || typeof this._properties[p] === 'undefined') {\n                return;\n            }\n            this._properties[p] = String(v) === 'true';\n            this._updateMarkup(true);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/application',[\n    './process',\n    './settings-manager',\n    './window-manager',\n    './window'\n], function (Process, SettingsManager, WindowManager, Window) {\n    'use strict';\n    return class Application extends Process {\n        constructor(name, args, metadata, settings, options) {\n            console.group('Application::constructor()', arguments);\n            options = Object.assign({\n                closeWithMain: true,\n                closeOnEmpty: true\n            }, options || {});\n            super(...arguments);\n            this.__inited = false;\n            this.__mainwindow = null;\n            this.__windows = [];\n            this.__settings = null;\n            this.__destroying = false;\n            this.__options = options;\n            try {\n                this.__settings = SettingsManager.instance(name, settings || {});\n            } catch (e) {\n                console.warn('Application::construct()', 'An error occured while loading application settings', e);\n                console.warn(e.stack);\n                this.__settings = SettingsManager.instance(name, {});\n            }\n            console.groupEnd();\n        }\n        init(settings, metadata) {\n            const wm = WindowManager.instance;\n            const focusLastWindow = () => {\n                let last;\n                if (wm) {\n                    this.__windows.forEach((win, i) => {\n                        if (win) {\n                            wm.addWindow(win);\n                            last = win;\n                        }\n                    });\n                }\n                if (last) {\n                    last._focus();\n                }\n            };\n            if (!this.__inited) {\n                console.debug('Application::init()', this.__pname);\n                if (this.__settings) {\n                    this.__settings.set(null, settings);\n                }\n                this.__inited = true;\n                this.__evHandler.emit('init', [\n                    settings,\n                    metadata\n                ]);\n                focusLastWindow();\n            }\n        }\n        destroy() {\n            if (this.__destroying || this.__destroyed) {\n                return true;\n            }\n            this.__destroying = true;\n            console.group('Application::destroy()', this.__pname);\n            this.__windows.forEach(w => w && w.destroy());\n            if (this.__scheme && typeof this.__scheme.destroy === 'function') {\n                this.__scheme.destroy();\n            }\n            this.__mainwindow = null;\n            this.__settings = {};\n            this.__windows = [];\n            this.__scheme = null;\n            const result = super.destroy(...arguments);\n            console.groupEnd();\n            return result;\n        }\n        _onMessage(msg, obj, args) {\n            if (this.__destroying || this.__destroyed) {\n                return false;\n            }\n            if (msg === 'destroyWindow') {\n                if (!this.__destroying) {\n                    this._removeWindow(obj);\n                    if (this.__options.closeOnEmpty && !this.__windows.length) {\n                        console.info('All windows removed, destroying application');\n                        this.destroy();\n                    } else if (obj._name === this.__mainwindow) {\n                        if (this.__options.closeWithMain) {\n                            console.info('Main window was closed, destroying application');\n                            this.destroy();\n                        }\n                    }\n                }\n            } else if (msg === 'attention') {\n                if (this.__windows.length && this.__windows[0]) {\n                    this.__windows[0]._focus();\n                }\n            }\n            return super._onMessage(...arguments);\n        }\n        _addWindow(w, cb, setmain) {\n            if (!(w instanceof Window)) {\n                throw new TypeError('Application::_addWindow() expects Core.Window');\n            }\n            console.debug('Application::_addWindow()');\n            this.__windows.push(w);\n            if (setmain || this.__windows.length === 1) {\n                this.__mainwindow = w._name;\n            }\n            const wm = WindowManager.instance;\n            if (this.__inited) {\n                if (wm) {\n                    wm.addWindow(w);\n                }\n                if (w._properties.start_focused) {\n                    setTimeout(() => {\n                        w._focus();\n                    }, 5);\n                }\n            }\n            (cb || function () {\n            })(w, wm);\n            return w;\n        }\n        _removeWindow(w) {\n            if (!(w instanceof Window)) {\n                throw new TypeError('Application::_removeWindow() expects Core.Window');\n            }\n            const found = this.__windows.findIndex(win => win && win._wid === w._wid);\n            if (found !== -1) {\n                const win = this.__windows[found];\n                console.debug('Application::_removeWindow()', win._wid);\n                try {\n                    win.destroy();\n                } catch (e) {\n                    console.warn(e);\n                }\n                this.__windows.splice(found, 1);\n            }\n            return found !== -1;\n        }\n        _getWindow(value, key) {\n            key = key || 'name';\n            if (value === null) {\n                value = this.__mainwindow;\n            }\n            let result = key === 'tag' ? [] : null;\n            this.__windows.every((win, i) => {\n                if (win) {\n                    if (win['_' + key] === value) {\n                        if (key === 'tag') {\n                            result.push(win);\n                        } else {\n                            result = win;\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            });\n            return result;\n        }\n        _getWindowByName(name) {\n            return this._getWindow(name);\n        }\n        _getWindowsByTag(tag) {\n            return this._getWindow(tag, 'tag');\n        }\n        _getWindows() {\n            return this.__windows;\n        }\n        _getMainWindow() {\n            return this._getWindow(this.__mainwindow, 'name');\n        }\n        _getSetting(k) {\n            return this.__settings ? this.__settings.get(k) : null;\n        }\n        _getSessionData() {\n            const args = this.__args;\n            const wins = this.__windows;\n            const data = {\n                name: this.__pname,\n                args: args,\n                windows: []\n            };\n            wins.forEach((win, i) => {\n                if (win && win._properties.allow_session) {\n                    data.windows.push({\n                        name: win._name,\n                        dimension: win._dimension,\n                        position: win._position,\n                        state: win._state\n                    });\n                }\n            });\n            return data;\n        }\n        _setSetting(k, v, save) {\n            if (typeof save === 'undefined') {\n                save = true;\n            }\n            if (arguments.length === 4 && typeof arguments[3] === 'function') {\n                save = arguments[3];\n            }\n            if (this.__settings) {\n                this.__settings.set(k, v, save);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs.html',[], function() { return \"<!--\\r\\n\\r\\n  Dialog: Error\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Error\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_ERROR_MESSAGE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"SummaryLabel\\\">DIALOG_ERROR_SUMMARY</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-fill=\\\"true\\\" data-basis=\\\"90px\\\">\\r\\n      <gui-textarea data-id=\\\"Summary\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"TraceLabel\\\">DIALOG_ERROR_TRACE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"Trace\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_CLOSE</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonBugReport\\\">LBL_BUGREPORT</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Application Chooser\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"ApplicationChooser\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_APPCHOOSER_MSG</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"FileName\\\">filename (mime)</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-list-view data-id=\\\"ApplicationList\\\" data-multiple=\\\"false\\\">\\r\\n      </gui-list-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-checkbox data-id=\\\"SetDefault\\\" data-label=\\\"DIALOG_APPCHOOSER_SET_DEFAULT\\\"></gui-checkbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Save/Open\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"File\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-button data-id=\\\"HomeButton\\\" data-icon=\\\"stock://16x16/places/user-home.png\\\" data-tooltip=\\\"LBL_HOME\\\"></gui-button>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-button data-id=\\\"ButtonMkdir\\\" data-icon=\\\"stock://16x16/actions/folder-new.png\\\" data-tooltip=\\\"LBL_MKDIR\\\"></gui-button>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-select data-id=\\\"ModuleSelect\\\"></gui-select>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-file-view data-id=\\\"FileView\\\">\\r\\n      </gui-file-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-id=\\\"FileInput\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-text data-id=\\\"Filename\\\"></gui-text>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-shrink=\\\"0\\\" data-basis=\\\"150px\\\" data-expand=\\\"true\\\">\\r\\n          <gui-select data-id=\\\"Filetype\\\"></gui-select>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Progress\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileProgress\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">LBL_LOADING</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n      <gui-progress-bar data-id=\\\"Progress\\\"></gui-progress-bar>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\" data-disabled=\\\"true\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Upload\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileUpload\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_UPLOAD_DESC</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-file-upload data-id=\\\"File\\\"></gui-file-upload>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Information\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileInfo\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"Info\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Input\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Input\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_INPUT_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n      <gui-text data-id=\\\"Input\\\"></gui-text>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Alert\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Alert\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_ALERT_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Confirm\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Confirm\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_CONFIRM_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonYes\\\">LBL_YES</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonNo\\\">LBL_NO</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Color\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Color\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\">\\r\\n          <gui-vbox>\\r\\n            <gui-vbox-container shrink=\\\"1\\\">\\r\\n              <gui-color-swatch data-id=\\\"ColorSelect\\\"></gui-color-swatch>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-color-box data-id=\\\"ColorPreview\\\" data-disabled=\\\"true\\\"></gui-color-box>\\r\\n            </gui-vbox-container>\\r\\n          </gui-vbox>\\r\\n        </gui-hbox-container>\\r\\n\\r\\n        <gui-hbox-container data-grow=\\\"1\\\">\\r\\n          <gui-vbox>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelRed\\\">Red</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Red\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelGreen\\\">Green</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Green\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelBlue\\\">Blue</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Blue\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\" data-id=\\\"AlphaLabelContainer\\\">\\r\\n              <gui-label data-id=\\\"LabelAlpha\\\">Alpha</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\" data-id=\\\"AlphaContainer\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"100\\\" data-id=\\\"Alpha\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n          </gui-vbox>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Font\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Font\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\" data-basis=\\\"50%\\\" data-fill=\\\"true\\\">\\r\\n          <gui-select-list data-id=\\\"FontName\\\"></gui-select-list>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\" data-basis=\\\"50%\\\" data-fill=\\\"true\\\" data-id=\\\"FontSizeContainer\\\">\\r\\n          <gui-select-list data-id=\\\"FontSize\\\"></gui-select-list>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-basis=\\\"50px\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"FontPreview\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\"; });\ndefine('skylark-osjsv2-client/core/dialog',[\n    '../utils/dom',\n    '../utils/keycodes',\n    './window',\n    './application',\n    './window-manager',\n    '../gui/scheme',\n    './locales',\n    \"../dialogs.html\"\n], function (Dom, Keycodes, Window, Application, WindowManager, GUIScheme, Locales,dialogsHtml) {\n    'use strict';\n    return class DialogWindow extends Window {\n        constructor(className, opts, args, callback) {\n            opts = opts || {};\n            args = args || {};\n            callback = callback || function () {\n            };\n            if (typeof callback !== 'function') {\n                throw new TypeError('DialogWindow expects a callback Function, gave: ' + typeof callback);\n            }\n            console.info('DialogWindow::construct()', className, opts, args);\n            super(className, opts);\n            this._properties.gravity = 'center';\n            this._properties.allow_resize = false;\n            this._properties.allow_minimize = false;\n            this._properties.allow_maximize = false;\n            this._properties.allow_windowlist = false;\n            this._properties.allow_session = false;\n            this._state.ontop = true;\n            this._tag = 'DialogWindow';\n            if (args.scheme && args.scheme instanceof GUIScheme) {\n                this.scheme = args.scheme;\n                delete args.scheme;\n            }\n            this.args = args;\n            this.className = className;\n            this.buttonClicked = false;\n            this.closeCallback = (ev, button, result) => {\n                if (this._destroyed) {\n                    return;\n                }\n                this.buttonClicked = true;\n                callback.call(this, ev, button, result);\n                this._close();\n            };\n        }\n        destroy() {\n            if (this.scheme) {\n                this.scheme = this.scheme.destroy();\n            }\n            return super.destroy(...arguments);\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'dialog');\n            const windowName = this.className.replace(/Dialog$/, '');\n            const focusButtons = [\n                'ButtonCancel',\n                'ButtonNo'\n            ];\n            const buttonMap = {\n                ButtonOK: 'ok',\n                ButtonCancel: 'cancel',\n                ButtonYes: 'yes',\n                ButtonNo: 'no'\n            };\n            if (this.scheme) {\n                this.scheme.render(this, windowName, root, 'application-dialog', node => {\n                    node.querySelectorAll('gui-label').forEach(el => {\n                        if (el.childNodes.length && el.childNodes[0].nodeType === 3 && el.childNodes[0].nodeValue) {\n                            const label = el.childNodes[0].nodeValue;\n                            Dom.$empty(el);\n                            el.appendChild(document.createTextNode(Locales._(label)));\n                        }\n                    });\n                });\n            } else {\n                //this._render(windowName, require('osjs-scheme-loader!dialogs.html'));\n                this._render(windowName, dialogsHtml);\n            }\n            Object.keys(buttonMap).filter(id => this._findDOM(id)).forEach(id => {\n                const btn = this._find(id);\n                btn.on('click', ev => {\n                    this.onClose(ev, buttonMap[id]);\n                });\n                if (focusButtons.indexOf(id) >= 0) {\n                    btn.focus();\n                }\n            });\n            Dom.$addClass(root, 'DialogWindow');\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, null);\n        }\n        _close() {\n            if (!this.buttonClicked) {\n                this.onClose(null, 'cancel', null);\n            }\n            return super._close(...arguments);\n        }\n        _onKeyEvent(ev) {\n            super._onKeyEvent(...arguments);\n            if (ev.keyCode === Keycodes.ESC) {\n                this.onClose(ev, 'cancel');\n            }\n        }\n        static parseMessage(msg) {\n            msg = Dom.$escape(msg || '').replace(/\\*\\*(.*)\\*\\*/g, '<span>$1</span>');\n            let tmp = document.createElement('div');\n            tmp.innerHTML = msg;\n            const frag = document.createDocumentFragment();\n            for (let i = 0; i < tmp.childNodes.length; i++) {\n                frag.appendChild(tmp.childNodes[i].cloneNode(true));\n            }\n            tmp = null;\n            return frag;\n        }\n        static create(className, args, callback, options) {\n            callback = callback || function () {\n            };\n            options = options || {};\n            let parentObj = options;\n            let parentIsWindow = parentObj instanceof Window;\n            let parentIsProcess = parentObj instanceof Application;\n            if (parentObj && !(parentIsWindow && parentIsProcess)) {\n                parentObj = options.parent;\n                parentIsWindow = parentObj instanceof Window;\n                parentIsProcess = parentObj instanceof Application;\n            }\n            function cb() {\n                if (parentObj) {\n                    if (parentIsWindow && parentObj._destroyed) {\n                        console.warn('DialogWindow::create()', 'INGORED EVENT: Window was destroyed');\n                        return;\n                    }\n                    if (parentIsProcess && parentObj.__destroyed) {\n                        console.warn('DialogWindow::create()', 'INGORED EVENT: Process was destroyed');\n                        return;\n                    }\n                }\n                if (options.modal && parentIsWindow) {\n                    parentObj._toggleDisabled(false);\n                }\n                callback.apply(null, arguments);\n            }\n            const win = typeof className === 'string' ? new OSjs.Dialogs[className](args, cb) : className(args, cb);\n            if (!parentObj) {\n                const wm = WindowManager.instance;\n                wm.addWindow(win, true);\n            } else if (parentObj instanceof Window) {\n                win._on('destroy', () => {\n                    if (parentObj) {\n                        parentObj._focus();\n                    }\n                });\n                parentObj._addChild(win, true);\n            } else if (parentObj instanceof Application) {\n                parentObj._addWindow(win);\n            }\n            if (options.modal && parentIsWindow) {\n                parentObj._toggleDisabled(true);\n            }\n            win._focus();\n            return win;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/splash',[],function () {\n    'use strict';\n    class SplashScreen {\n        constructor() {\n            this.$el = document.getElementById('LoadingScreen');\n            this.$progress = this.$el ? this.$el.querySelector('.progress') : null;\n        }\n        watermark(config) {\n            if (config.Watermark.enabled) {\n                var ver = config.Version || 'unknown version';\n                var html = config.Watermark.lines || [];\n                var el = document.createElement('osjs-watermark');\n                el.setAttribute('aria-hidden', 'true');\n                el.innerHTML = html.join('<br />').replace(/%VERSION%/, ver);\n                document.body.appendChild(el);\n            }\n        }\n        show() {\n            if (this.$el) {\n                this.$el.style.display = 'block';\n            }\n        }\n        hide() {\n            if (this.$el) {\n                this.$el.style.display = 'none';\n            }\n        }\n        update(p, c) {\n            if (this.$progress) {\n                let per = c ? 0 : 100;\n                if (c) {\n                    per = p / c * 100;\n                }\n                this.$progress.style.width = String(per) + '%';\n            }\n        }\n    }\n    return new SplashScreen();\n});\ndefine('skylark-osjsv2-client/gui/notification',[\n    '../utils/events',\n    '../core/window-manager'\n], function (Events, WindowManager) {\n    'use strict';\n    class Notification {\n        constructor() {\n            this.$notifications = null;\n            this.visibles = 0;\n        }\n        create(opts) {\n            opts = opts || {};\n            opts.icon = opts.icon || null;\n            opts.title = opts.title || null;\n            opts.message = opts.message || '';\n            opts.onClick = opts.onClick || function () {\n            };\n            if (!this.$notifications) {\n                this.$notifications = document.createElement('corewm-notifications');\n                this.$notifications.setAttribute('role', 'log');\n                document.body.appendChild(this.$notifications);\n            }\n            if (typeof opts.timeout === 'undefined') {\n                opts.timeout = 5000;\n            }\n            console.debug('CoreWM::notification()', opts);\n            const container = document.createElement('corewm-notification');\n            let classNames = [''];\n            let timeout = null;\n            let animationCallback = null;\n            const _remove = () => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                container.onclick = null;\n                const _removeDOM = () => {\n                    Events.$unbind(container);\n                    if (container.parentNode) {\n                        container.parentNode.removeChild(container);\n                    }\n                    this.visibles--;\n                    if (this.visibles <= 0) {\n                        this.$notifications.style.display = 'none';\n                    }\n                };\n                const anim = WindowManager.instance.getSetting('animations');\n                if (anim) {\n                    container.setAttribute('data-hint', 'closing');\n                    animationCallback = () => _removeDOM();\n                } else {\n                    container.style.display = 'none';\n                    _removeDOM();\n                }\n            };\n            if (opts.icon) {\n                const icon = document.createElement('img');\n                icon.alt = '';\n                icon.src = opts.icon;\n                classNames.push('HasIcon');\n                container.appendChild(icon);\n            }\n            if (opts.title) {\n                const title = document.createElement('div');\n                title.className = 'Title';\n                title.appendChild(document.createTextNode(opts.title));\n                classNames.push('HasTitle');\n                container.appendChild(title);\n            }\n            if (opts.message) {\n                const message = document.createElement('div');\n                message.className = 'Message';\n                const lines = opts.message.split('\\n');\n                lines.forEach(function (line, idx) {\n                    message.appendChild(document.createTextNode(line));\n                    if (idx < lines.length - 1) {\n                        message.appendChild(document.createElement('br'));\n                    }\n                });\n                classNames.push('HasMessage');\n                container.appendChild(message);\n            }\n            this.visibles++;\n            if (this.visibles > 0) {\n                this.$notifications.style.display = 'block';\n            }\n            container.setAttribute('aria-label', String(opts.title));\n            container.setAttribute('role', 'alert');\n            container.className = classNames.join(' ');\n            container.onclick = function (ev) {\n                _remove();\n                opts.onClick(ev);\n            };\n            let preventTimeout;\n            function _onanimationend(ev) {\n                if (typeof animationCallback === 'function') {\n                    clearTimeout(preventTimeout);\n                    preventTimeout = setTimeout(function () {\n                        animationCallback(ev);\n                        animationCallback = false;\n                    }, 10);\n                }\n            }\n            Events.$bind(container, 'transitionend', _onanimationend);\n            Events.$bind(container, 'animationend', _onanimationend);\n            const space = WindowManager.instance.getWindowSpace(true);\n            this.$notifications.style.marginTop = String(space.top) + 'px';\n            this.$notifications.appendChild(container);\n            if (opts.timeout) {\n                timeout = setTimeout(function () {\n                    _remove();\n                }, opts.timeout);\n            }\n        }\n        createIcon(name, opts) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    return pitem.createNotification(name, opts);\n                }\n            }\n            return null;\n        }\n        destroyIcon(name) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    pitem.removeNotification(name);\n                    return true;\n                }\n            }\n            return false;\n        }\n        getIcon(name) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    return pitem.getNotification(name);\n                }\n            }\n            return null;\n        }\n    }\n    return new Notification();\n});\ndefine('skylark-osjsv2-client/dialogs/alert',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class AlertDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('AlertDialog', {\n                title: args.title || Locales._('DIALOG_ALERT_TITLE'),\n                icon: 'status/dialog-warning.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'alertdialog');\n            this._find('Message').set('value', this.args.message, true);\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/applicationchooser',[\n    '../core/dialog',\n    '../core/package-manager',\n    '../core/theme',\n    '../utils/misc',\n    '../core/locales'\n], function (DialogWindow, PackageManager, Theme, Utils, Locales) {\n    'use strict';\n    return class ApplicationChooserDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('ApplicationChooserDialog', {\n                title: args.title || Locales._('DIALOG_APPCHOOSER_TITLE'),\n                width: 400,\n                height: 400\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const cols = [{ label: Locales._('LBL_NAME') }];\n            const rows = [];\n            const metadata = PackageManager.getPackages();\n            (this.args.list || []).forEach(name => {\n                const iter = metadata[name];\n                if (iter && iter.type === 'application') {\n                    const label = [iter.name];\n                    if (iter.description) {\n                        label.push(iter.description);\n                    }\n                    rows.push({\n                        value: iter,\n                        columns: [{\n                                label: label.join(' - '),\n                                icon: Theme.getIcon(iter.icon, null, name),\n                                value: JSON.stringify(iter)\n                            }]\n                    });\n                }\n            });\n            this._find('ApplicationList').set('columns', cols).add(rows).on('activate', ev => {\n                this.onClose(ev, 'ok');\n            });\n            let file = '<unknown file>';\n            let label = '<unknown mime>';\n            if (this.args.file) {\n                file = Utils.format('{0} ({1})', this.args.file.filename, this.args.file.mime);\n                label = Locales._('DIALOG_APPCHOOSER_SET_DEFAULT', this.args.file.mime);\n            }\n            this._find('FileName').set('value', file);\n            this._find('SetDefault').set('label', label);\n            return root;\n        }\n        onClose(ev, button) {\n            let result = null;\n            if (button === 'ok') {\n                const useDefault = this._find('SetDefault').get('value');\n                const selected = this._find('ApplicationList').get('value');\n                if (selected && selected.length) {\n                    result = selected[0].data.className;\n                }\n                if (!result) {\n                    DialogWindow.create('Alert', { message: Locales._('DIALOG_APPCHOOSER_NO_SELECTION') }, null, this);\n                    return;\n                }\n                result = {\n                    name: result,\n                    useDefault: useDefault\n                };\n            }\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/colors',[],function () {\n    'use strict';\n    function convertToRGB(hex) {\n        const rgb = parseInt(hex.replace('#', ''), 16);\n        const val = {};\n        val.r = (rgb & 255 << 16) >> 16;\n        val.g = (rgb & 255 << 8) >> 8;\n        val.b = rgb & 255;\n        return val;\n    }\n    function convertToHEX(r, g, b) {\n        if (typeof r === 'object') {\n            g = r.g;\n            b = r.b;\n            r = r.r;\n        }\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            throw new Error('Invalid RGB supplied to convertToHEX()');\n        }\n        const hex = [\n            parseInt(r, 10).toString(16),\n            parseInt(g, 10).toString(16),\n            parseInt(b, 10).toString(16)\n        ];\n        Object.keys(hex).forEach(i => {\n            if (hex[i].length === 1) {\n                hex[i] = '0' + hex[i];\n            }\n        });\n        return '#' + hex.join('').toUpperCase();\n    }\n    function invertHEX(hex) {\n        let color = parseInt(hex.replace('#', ''), 16);\n        color = 16777215 ^ color;\n        color = color.toString(16);\n        color = ('000000' + color).slice(-6);\n        return '#' + color;\n    }\n    return {\n        convertToRGB: convertToRGB,\n        convertToHEX: convertToHEX,\n        invertHEX: invertHEX\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/color',[\n    '../core/dialog',\n    '../utils/misc',\n    '../utils/colors',\n    '../core/locales'\n], function (DialogWindow, Utils, Colors, Locales) {\n    'use strict';\n    function getColor(rgb) {\n        let hex = rgb;\n        if (typeof rgb === 'string') {\n            hex = rgb;\n            rgb = Colors.convertToRGB(rgb);\n            rgb.a = null;\n        } else {\n            if (typeof rgb.a === 'undefined') {\n                rgb.a = null;\n            } else {\n                if (rgb.a > 1) {\n                    rgb.a /= 100;\n                }\n            }\n            rgb = rgb || {\n                r: 0,\n                g: 0,\n                b: 0,\n                a: 100\n            };\n            hex = Colors.convertToHEX(rgb.r, rgb.g, rgb.b);\n        }\n        return [\n            rgb,\n            hex\n        ];\n    }\n    return class ColorDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            const [rgb, hex] = getColor(args.color);\n            super('ColorDialog', {\n                title: args.title || Locales._('DIALOG_COLOR_TITLE'),\n                icon: 'apps/preferences-desktop-theme.png',\n                width: 400,\n                height: rgb.a !== null ? 300 : 220\n            }, args, callback);\n            this.color = {\n                r: rgb.r,\n                g: rgb.g,\n                b: rgb.b,\n                a: rgb.a,\n                hex: hex\n            };\n        }\n        init() {\n            const root = super.init(...arguments);\n            const updateHex = update => {\n                this._find('LabelRed').set('value', Locales._('DIALOG_COLOR_R', this.color.r));\n                this._find('LabelGreen').set('value', Locales._('DIALOG_COLOR_G', this.color.g));\n                this._find('LabelBlue').set('value', Locales._('DIALOG_COLOR_B', this.color.b));\n                this._find('LabelAlpha').set('value', Locales._('DIALOG_COLOR_A', this.color.a));\n                if (update) {\n                    this.color.hex = Colors.convertToHEX(this.color.r, this.color.g, this.color.b);\n                }\n                let value = this.color.hex;\n                if (this.color.a !== null && !isNaN(this.color.a)) {\n                    value = Utils.format('rgba({0}, {1}, {2}, {3})', this.color.r, this.color.g, this.color.b, this.color.a);\n                }\n                this._find('ColorPreview').set('value', value);\n            };\n            this._find('ColorSelect').on('change', ev => {\n                this.color = ev.detail;\n                this._find('Red').set('value', this.color.r);\n                this._find('Green').set('value', this.color.g);\n                this._find('Blue').set('value', this.color.b);\n                updateHex(true);\n            });\n            this._find('Red').on('change', ev => {\n                this.color.r = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.r);\n            this._find('Green').on('change', ev => {\n                this.color.g = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.g);\n            this._find('Blue').on('change', ev => {\n                this.color.b = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.b);\n            this._find('Alpha').on('change', ev => {\n                this.color.a = parseInt(ev.detail, 10) / 100;\n                updateHex(true);\n            }).set('value', this.color.a * 100);\n            if (this.color.a === null) {\n                this._find('AlphaContainer').hide();\n                this._find('AlphaLabelContainer').hide();\n            }\n            updateHex(false, this.color.a !== null);\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, button === 'ok' ? this.color : null);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/confirm',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class ConfirmDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                buttons: [\n                    'yes',\n                    'no',\n                    'cancel'\n                ]\n            }, args);\n            super('ConfirmDialog', {\n                title: args.title || Locales._('DIALOG_CONFIRM_TITLE'),\n                icon: 'status/dialog-question.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const msg = DialogWindow.parseMessage(this.args.message);\n            this._find('Message').empty().append(msg);\n            const buttonMap = {\n                yes: 'ButtonYes',\n                no: 'ButtonNo',\n                cancel: 'ButtonCancel'\n            };\n            const hide = [];\n            [\n                'yes',\n                'no',\n                'cancel'\n            ].forEach(b => {\n                if (this.args.buttons.indexOf(b) < 0) {\n                    hide.push(b);\n                }\n            });\n            hide.forEach(b => {\n                this._find(buttonMap[b]).hide();\n            });\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/error',[\n    '../core/dialog',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, Locales, Config) {\n    'use strict';\n    return class ErrorDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            const exception = args.exception || {};\n            let error = '';\n            if (exception.stack) {\n                error = exception.stack;\n            } else {\n                if (Object.keys(exception).length) {\n                    error = exception.name;\n                    error += '\\nFilename: ' + exception.fileName || '<unknown>';\n                    error += '\\nLine: ' + exception.lineNumber;\n                    error += '\\nMessage: ' + exception.message;\n                    if (exception.extMessage) {\n                        error += '\\n' + exception.extMessage;\n                    }\n                }\n            }\n            super('ErrorDialog', {\n                title: args.title || Locales._('DIALOG_ERROR_TITLE'),\n                icon: 'status/dialog-error.png',\n                width: 400,\n                height: error ? 400 : 200\n            }, args, callback);\n            this._sound = 'ERROR';\n            this._soundVolume = 1;\n            this.traceMessage = error;\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'alertdialog');\n            const msg = DialogWindow.parseMessage(this.args.message);\n            this._find('Message').empty().append(msg);\n            this._find('Summary').set('value', this.args.error);\n            this._find('Trace').set('value', this.traceMessage);\n            if (!this.traceMessage) {\n                this._find('Trace').hide();\n                this._find('TraceLabel').hide();\n            }\n            if (this.args.bugreport) {\n                this._find('ButtonBugReport').on('click', () => {\n                    let title = '';\n                    let body = [];\n                    if (Config.getConfig('BugReporting.options.issue')) {\n                        const obj = {};\n                        const keys = [\n                            'userAgent',\n                            'platform',\n                            'language',\n                            'appVersion'\n                        ];\n                        keys.forEach(k => {\n                            obj[k] = navigator[k];\n                        });\n                        title = Config.getConfig('BugReporting.options.title');\n                        body = [\n                            '**' + Config.getConfig('BugReporting.options.message').replace('%VERSION%', Config.getConfig('Version')) + ':**',\n                            '\\n',\n                            '> ' + this.args.message,\n                            '\\n',\n                            '> ' + (this.args.error || 'Unknown error'),\n                            '\\n',\n                            '## Expected behaviour',\n                            '\\n',\n                            '## Actual behaviour',\n                            '\\n',\n                            '## Steps to reproduce the error',\n                            '\\n',\n                            '## (Optinal) Browser and OS information',\n                            '\\n',\n                            '```\\n' + JSON.stringify(obj) + '\\n```'\n                        ];\n                        if (this.traceMessage) {\n                            body.push('\\n## Stack Trace \\n```\\n' + this.traceMessage + '\\n```\\n');\n                        }\n                    }\n                    const url = Config.getConfig('BugReporting.url').replace('%TITLE%', encodeURIComponent(title)).replace('%BODY%', encodeURIComponent(body.join('\\n')));\n                    window.open(url);\n                });\n            } else {\n                this._find('ButtonBugReport').hide();\n            }\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileinfo',[\n    '../core/dialog',\n    '../vfs/fs',\n    '../core/locales'\n], function (DialogWindow, VFS, Locales) {\n    'use strict';\n    return class FileInfoDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('FileInfoDialog', {\n                title: args.title || Locales._('DIALOG_FILEINFO_TITLE'),\n                width: 400,\n                height: 400\n            }, args, callback);\n            if (!this.args.file) {\n                throw new Error('You have to select a file for FileInfo');\n            }\n        }\n        init() {\n            const root = super.init(...arguments);\n            const txt = this._find('Info').set('value', Locales._('LBL_LOADING'));\n            const file = this.args.file;\n            VFS.fileinfo(file).then(data => {\n                const info = [];\n                Object.keys(data).forEach(i => {\n                    if (i === 'exif') {\n                        info.push(i + ':\\n\\n' + data[i]);\n                    } else {\n                        info.push(i + ':\\n\\t' + data[i]);\n                    }\n                });\n                txt.set('value', info.join('\\n\\n'));\n                return true;\n            }).catch(error => {\n                txt.set('value', Locales._('DIALOG_FILEINFO_ERROR_LOOKUP_FMT', file.path));\n            });\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/file',[\n    '../core/dialog',\n    '../gui/element',\n    '../vfs/file',\n    '../core/settings-manager',\n    '../core/mount-manager',\n    '../utils/fs',\n    '../utils/misc',\n    '../vfs/fs',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, GUIElement, FileMetadata, SettingsManager, MountManager, FS, Utils, VFS, Locales, Config) {\n    'use strict';\n    return class FileDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                file: null,\n                type: 'open',\n                path: Config.getDefaultPath(),\n                filename: '',\n                filetypes: [],\n                extension: '',\n                mime: 'application/octet-stream',\n                filter: [],\n                mfilter: [],\n                select: null,\n                multiple: false\n            }, args);\n            args.multiple = args.type === 'save' ? false : args.multiple === true;\n            if (args.path && args.path instanceof FileMetadata) {\n                args.path = FS.dirname(args.path.path);\n            }\n            if (args.file && args.file.path) {\n                args.path = FS.dirname(args.file.path);\n                args.filename = args.file.filename;\n                args.mime = args.file.mime;\n                if (args.filetypes.length) {\n                    const setTo = args.filetypes[0];\n                    args.filename = FS.replaceFileExtension(args.filename, setTo.extension);\n                    args.mime = setTo.mime;\n                }\n            }\n            const title = args.title || Locales._(args.type === 'save' ? 'DIALOG_FILE_SAVE' : 'DIALOG_FILE_OPEN');\n            const icon = args.type === 'open' ? 'actions/document-open.png' : 'actions/documentsave-as.png';\n            super('FileDialog', {\n                title: title,\n                icon: icon,\n                width: 600,\n                height: 400\n            }, args, callback);\n            this.selected = null;\n            this.path = args.path;\n            this.settingsWatch = SettingsManager.watch('VFS', () => {\n                this.changePath();\n            });\n        }\n        destroy() {\n            try {\n                SettingsManager.unwatch(this.settingsWatch);\n            } catch (e) {\n            }\n            return super.destroy(...arguments);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const view = this._find('FileView');\n            view.set('filter', this.args.filter);\n            view.set('filetype', this.args.select || '');\n            view.set('defaultcolumns', 'true');\n            const filename = this._find('Filename');\n            const home = this._find('HomeButton');\n            const mlist = this._find('ModuleSelect');\n            const checkEmptyInput = () => {\n                let disable = false;\n                if (this.args.select !== 'dir') {\n                    disable = !filename.get('value').length;\n                }\n                this._find('ButtonOK').set('disabled', disable);\n            };\n            this._toggleLoading(true);\n            view.set('multiple', this.args.multiple);\n            filename.set('value', this.args.filename || '');\n            this._find('ButtonMkdir').on('click', () => {\n                DialogWindow.create('Input', {\n                    message: Locales._('DIALOG_FILE_MKDIR_MSG', this.path),\n                    value: 'New folder'\n                }, (ev, btn, value) => {\n                    if (btn === 'ok' && value) {\n                        const path = FS.pathJoin(this.path, value);\n                        VFS.mkdir(new FileMetadata(path, 'dir')).then(() => {\n                            return this.changePath(path);\n                        }).catch(err => {\n                            OSjs.error(Locales._('DIALOG_FILE_ERROR'), Locales._('ERR_VFSMODULE_MKDIR'), err);\n                        });\n                    }\n                }, this);\n            });\n            home.on('click', () => {\n                const dpath = Config.getDefaultPath();\n                this.changePath(dpath);\n            });\n            view.on('activate', ev => {\n                this.selected = null;\n                if (this.args.type !== 'save') {\n                    filename.set('value', '');\n                }\n                if (ev && ev.detail && ev.detail.entries) {\n                    const activated = ev.detail.entries[0];\n                    if (activated) {\n                        this.selected = new FileMetadata(activated.data);\n                        if (this.selected.type !== 'dir') {\n                            filename.set('value', this.selected.filename);\n                        }\n                        this.checkSelection(ev, true);\n                    }\n                }\n            });\n            view.on('select', ev => {\n                this.selected = null;\n                if (ev && ev.detail && ev.detail.entries) {\n                    const activated = ev.detail.entries[0];\n                    if (activated) {\n                        this.selected = new FileMetadata(activated.data);\n                        if (this.selected.type !== 'dir') {\n                            filename.set('value', this.selected.filename);\n                        }\n                    }\n                }\n                checkEmptyInput();\n            });\n            if (this.args.type === 'save') {\n                const filetypes = [];\n                this.args.filetypes.forEach(f => {\n                    filetypes.push({\n                        label: Utils.format('{0} (.{1} {2})', f.label, f.extension, f.mime),\n                        value: f.extension\n                    });\n                });\n                const ft = this._find('Filetype').add(filetypes).on('change', ev => {\n                    const newinput = FS.replaceFileExtension(filename.get('value'), ev.detail);\n                    filename.set('value', newinput);\n                });\n                if (filetypes.length <= 1) {\n                    new GUIElement(ft.$element.parentNode).hide();\n                }\n                filename.on('enter', ev => {\n                    this.selected = null;\n                    this.checkSelection(ev);\n                });\n                filename.on('change', ev => {\n                    checkEmptyInput();\n                });\n                filename.on('keyup', ev => {\n                    checkEmptyInput();\n                });\n            } else {\n                if (this.args.select !== 'dir') {\n                    this._find('ButtonMkdir').hide();\n                }\n                this._find('FileInput').hide();\n            }\n            const rootPath = MountManager.getModuleFromPath(this.path).option('root');\n            const modules = MountManager.getModules().filter(m => {\n                if (!this.args.mfilter.length) {\n                    return true;\n                }\n                return this.args.mfilter.every(fn => fn(m));\n            }).map(m => {\n                return {\n                    label: m.option('title') + (m.isReadOnly() ? Utils.format(' ({0})', Locales._('LBL_READONLY')) : ''),\n                    value: m.option('root')\n                };\n            });\n            mlist.clear().add(modules).set('value', rootPath);\n            mlist.on('change', ev => {\n                this.changePath(ev.detail, true);\n            });\n            this.changePath();\n            checkEmptyInput();\n            return root;\n        }\n        changePath(dir, fromDropdown) {\n            const view = this._find('FileView');\n            const lastDir = this.path;\n            const resetLastSelected = () => {\n                try {\n                    const rootPath = MountManager.getModuleFromPath(lastDir).option('root');\n                    this._find('ModuleSelect').set('value', rootPath);\n                } catch (e) {\n                    console.warn('FileDialog::changePath()', 'resetLastSelection()', e);\n                }\n            };\n            this._toggleLoading(true);\n            view.chdir({\n                path: dir || this.path,\n                done: error => {\n                    if (error) {\n                        if (fromDropdown) {\n                            resetLastSelected();\n                        }\n                    } else {\n                        if (dir) {\n                            this.path = dir;\n                        }\n                    }\n                    this.selected = null;\n                    this._toggleLoading(false);\n                }\n            });\n        }\n        checkFileExtension() {\n            const filename = this._find('Filename');\n            let mime = this.args.mime;\n            let input = filename.get('value');\n            if (this.args.filetypes.length) {\n                if (!input && this.args.filename) {\n                    input = this.args.filename;\n                }\n                if (input.length) {\n                    const extension = input.split('.').pop();\n                    let found = false;\n                    this.args.filetypes.forEach(f => {\n                        if (f.extension === extension) {\n                            found = f;\n                        }\n                        return !!found;\n                    });\n                    found = found || this.args.filetypes[0];\n                    input = FS.replaceFileExtension(input, found.extension);\n                    mime = found.mime;\n                }\n            }\n            return {\n                filename: input,\n                mime: mime\n            };\n        }\n        checkSelection(ev, wasActivated) {\n            if (this.selected && this.selected.type === 'dir') {\n                if (wasActivated) {\n                    this.changePath(this.selected.path);\n                    return false;\n                }\n            }\n            if (this.args.type === 'save') {\n                let check = this.checkFileExtension();\n                if (!this.path || !check.filename) {\n                    OSjs.error(Locales._('DIALOG_FILE_ERROR'), Locales._('DIALOG_FILE_MISSING_FILENAME'));\n                    return false;\n                }\n                this.selected = new FileMetadata(this.path.replace(/^\\//, '') + '/' + check.filename, check.mime);\n                this._toggleDisabled(true);\n                VFS.exists(this.selected).then(result => {\n                    this._toggleDisabled(false);\n                    if (this._destroyed) {\n                        return false;\n                    }\n                    if (result) {\n                        this._toggleDisabled(true);\n                        if (this.selected) {\n                            DialogWindow.create('Confirm', {\n                                buttons: [\n                                    'yes',\n                                    'no'\n                                ],\n                                message: Locales._('DIALOG_FILE_OVERWRITE', this.selected.filename)\n                            }, (ev, button) => {\n                                this._toggleDisabled(false);\n                                if (button === 'yes' || button === 'ok') {\n                                    this.closeCallback(ev, 'ok', this.selected);\n                                }\n                            }, this);\n                        }\n                    } else {\n                        this.closeCallback(ev, 'ok', this.selected);\n                    }\n                    return true;\n                }).catch(error => {\n                    this._toggleDisabled(false);\n                    if (this._destroyed) {\n                        return;\n                    }\n                    OSjs.error(Locales._('DIALOG_FILE_ERROR'), Locales._('DIALOG_FILE_MISSING_FILENAME'));\n                });\n                return false;\n            } else {\n                if (!this.selected && this.args.select !== 'dir') {\n                    OSjs.error(Locales._('DIALOG_FILE_ERROR'), Locales._('DIALOG_FILE_MISSING_SELECTION'));\n                    return false;\n                }\n                let res = this.selected;\n                if (!res && this.args.select === 'dir') {\n                    res = new FileMetadata({\n                        filename: FS.filename(this.path),\n                        path: this.path,\n                        type: 'dir'\n                    });\n                }\n                this.closeCallback(ev, 'ok', res);\n            }\n            return true;\n        }\n        onClose(ev, button) {\n            if (button === 'ok' && !this.checkSelection(ev)) {\n                return;\n            }\n            this.closeCallback(ev, button, this.selected);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileprogress',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class FileProgressDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('FileProgressDialog', {\n                title: args.title || Locales._('DIALOG_FILEPROGRESS_TITLE'),\n                icon: 'actions/document-send.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n            this.busy = !!args.filename;\n        }\n        init() {\n            const root = super.init(...arguments);\n            if (this.args.message) {\n                this._find('Message').set('value', this.args.message, true);\n            }\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, null);\n        }\n        setProgress(p, close = true) {\n            const pb = this._find('Progress');\n            if (pb) {\n                pb.set('progress', p);\n            }\n            if (close && p >= 100) {\n                this._close(true);\n            }\n        }\n        _close(force) {\n            if (!force && this.busy) {\n                return false;\n            }\n            return super._close();\n        }\n        _onKeyEvent(ev) {\n            if (!this.busy) {\n                super._onKeyEvent(...arguments);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileupload',[\n    '../core/dialog',\n    '../vfs/fs',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, VFS, Locales, Config) {\n    'use strict';\n    return class FileUploadDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                dest: Config.getDefaultPath(),\n                progress: {},\n                file: null\n            }, args);\n            if (args.destination) {\n                args.dest = args.destination;\n            }\n            if (!args.dest) {\n                args.dest = Config.getDefaultPath();\n            }\n            super('FileUploadDialog', {\n                title: args.title || Locales._('DIALOG_UPLOAD_TITLE'),\n                icon: 'actions/document-new.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const message = this._find('Message');\n            const maxSize = Config.getConfig('VFS.MaxUploadSize');\n            message.set('value', Locales._('DIALOG_UPLOAD_DESC', this.args.dest, maxSize), true);\n            const input = this._find('File');\n            if (this.args.file) {\n                this.setFile(this.args.file, input);\n            } else {\n                input.on('change', ev => {\n                    this.setFile(ev.detail, input);\n                });\n            }\n            return root;\n        }\n        setFile(file, input) {\n            let progressDialog;\n            const error = (msg, ev) => {\n                OSjs.error(Locales._('DIALOG_UPLOAD_FAILED'), Locales._('DIALOG_UPLOAD_FAILED_MSG'), msg || Locales._('DIALOG_UPLOAD_FAILED_UNKNOWN'));\n                progressDialog._close(true);\n                this.onClose(ev, 'cancel');\n            };\n            if (file) {\n                let fileSize = 0;\n                if (file.size > 1024 * 1024) {\n                    fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';\n                } else {\n                    fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';\n                }\n                if (input) {\n                    input.set('disabled', true);\n                }\n                this._find('ButtonCancel').set('disabled', true);\n                const desc = Locales._('DIALOG_UPLOAD_MSG_FMT', file.name, file.type, fileSize, this.args.dest);\n                progressDialog = DialogWindow.create('FileProgress', {\n                    message: desc,\n                    dest: this.args.dest,\n                    filename: file.name,\n                    mime: file.type,\n                    size: fileSize\n                }, (ev, button) => {\n                }, this);\n                VFS.upload({\n                    files: [file],\n                    destination: this.args.dest\n                }, {\n                    onprogress: ev => {\n                        if (ev.lengthComputable) {\n                            const p = Math.round(ev.loaded * 100 / ev.total);\n                            progressDialog.setProgress(p);\n                        }\n                    }\n                }).then(() => {\n                    progressDialog._close(true);\n                    return this.onClose(null, 'ok', file);\n                }).catch(error);\n                setTimeout(() => {\n                    if (progressDialog) {\n                        progressDialog._focus();\n                    }\n                }, 100);\n            }\n        }\n        onClose(ev, button, result) {\n            result = result || null;\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/font',[\n    '../core/dialog',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, Locales, Config) {\n    'use strict';\n    return class FontDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                fontName: Config.getConfig('Fonts.default'),\n                fontSize: 12,\n                fontColor: '#000000',\n                backgroundColor: '#ffffff',\n                fonts: Config.getConfig('Fonts.list'),\n                minSize: 6,\n                maxSize: 30,\n                text: 'The quick brown fox jumps over the lazy dog',\n                unit: 'px'\n            }, args);\n            if (args.unit === 'null' || args.unit === 'unit') {\n                args.unit = '';\n            }\n            super('FontDialog', {\n                title: args.title || Locales._('DIALOG_FONT_TITLE'),\n                width: 400,\n                height: 300\n            }, args, callback);\n            this.selection = {\n                fontName: args.fontName,\n                fontSize: args.fontSize + args.unit\n            };\n        }\n        init() {\n            const root = super.init(...arguments);\n            const preview = this._find('FontPreview');\n            const sizes = [];\n            const fonts = [];\n            for (let i = this.args.minSize; i < this.args.maxSize; i++) {\n                sizes.push({\n                    value: i,\n                    label: i\n                });\n            }\n            for (let j = 0; j < this.args.fonts.length; j++) {\n                fonts.push({\n                    value: this.args.fonts[j],\n                    label: this.args.fonts[j]\n                });\n            }\n            const updatePreview = () => {\n                preview.querySelector('textarea').style.fontFamily = this.selection.fontName;\n                preview.querySelector('textarea').style.fontSize = this.selection.fontSize;\n            };\n            const listFonts = this._find('FontName');\n            listFonts.add(fonts).set('value', this.args.fontName);\n            listFonts.on('change', ev => {\n                this.selection.fontName = ev.detail;\n                updatePreview();\n            });\n            const listSizes = this._find('FontSize');\n            listSizes.add(sizes).set('value', this.args.fontSize);\n            listSizes.on('change', ev => {\n                this.selection.fontSize = ev.detail + this.args.unit;\n                updatePreview();\n            });\n            preview.$element.style.color = this.args.fontColor;\n            preview.$element.style.backgroundColor = this.args.backgroundColor;\n            preview.set('value', this.args.text);\n            if (this.args.fontSize < 0) {\n                this._find('FontSizeContainer').hide();\n            }\n            updatePreview();\n            return root;\n        }\n        onClose(ev, button) {\n            const result = button === 'ok' ? this.selection : null;\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/input',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, Locales) {\n    'use strict';\n    return class InputDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('InputDialog', {\n                title: args.title || Locales._('DIALOG_INPUT_TITLE'),\n                icon: 'status/dialog-information.png',\n                width: 400,\n                height: 120\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            if (this.args.message) {\n                const msg = DialogWindow.parseMessage(this.args.message);\n                this._find('Message').empty().append(msg);\n            }\n            const input = this._find('Input');\n            input.set('placeholder', this.args.placeholder || '');\n            input.set('value', this.args.value || '');\n            input.on('enter', ev => {\n                this.onClose(ev, 'ok');\n            });\n            return root;\n        }\n        _focus() {\n            if (super._focus(...arguments)) {\n                this._find('Input').focus();\n                return true;\n            }\n            return false;\n        }\n        onClose(ev, button) {\n            const result = this._find('Input').get('value');\n            this.closeCallback(ev, button, button === 'ok' ? result : null);\n        }\n        setRange(range) {\n            const input = this._find('Input');\n            if (input.$element) {\n                input.$element.querySelector('input').select(range);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transport',[\n    'skylark-axios',\n    '../core/locales'\n], function (axios, Locales) {\n    'use strict';\n    return class Transport {\n        request(method, args, options, mount) {\n            const readOnly = [\n                'upload',\n                'unlink',\n                'write',\n                'mkdir',\n                'move',\n                'trash',\n                'untrash',\n                'emptyTrash'\n            ];\n            if (mount.isReadOnly()) {\n                if (readOnly.indexOf(method) !== -1) {\n                    return Promise.reject(new Error(Locales._('ERR_VFSMODULE_READONLY')));\n                }\n            }\n            const newArgs = args.concat([\n                options,\n                mount\n            ]);\n            return this[method](...newArgs);\n        }\n        scandir(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        read(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        write(file, data, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        unlink(src, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        copy(src, dest, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        move(src, dest, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        exists(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        fileinfo(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        mkdir(dir, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        upload(file, dest, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        download(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item).then(url => {\n                    return axios({\n                        responseType: 'arraybuffer',\n                        url: url,\n                        method: 'GET'\n                    }).then(result => {\n                        return resolve(result.data);\n                    }).catch(error => {\n                        reject(error.message);\n                    });\n                }).catch(reject);\n            });\n        }\n        url(item, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        find(file, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        trash(file, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        untrash(file, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        emptyTrash(options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        freeSpace(root, options, mount) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/web',[\n    'skylark-axios',\n    '../transport',\n    '../../core/connection',\n    '../../utils/fs'\n], function (axios, Transport, Connection, FS) {\n    'use strict';\n    return class WebTransport extends Transport {\n        _request(url, responseType, method, options) {\n            return new Promise((resolve, reject) => {\n                if (!options.cors) {\n                    const binary = options.type === 'text' ? false : responseType === 'arraybuffer';\n                    Connection.request('curl', {\n                        url: url,\n                        method: method,\n                        binary: binary\n                    }).then(result => {\n                        if (binary) {\n                            return FS.dataSourceToAb(result.body, 'application/octet-stream', (err, ab) => {\n                                return err ? reject(err) : resolve(ab);\n                            });\n                        }\n                        return resolve(result.body);\n                    }).catch(reject);\n                } else {\n                    axios({\n                        responseType: responseType,\n                        url: url,\n                        method: method\n                    }).then(response => {\n                        return resolve(responseType === null ? response.statusText : response.data);\n                    }).catch(e => reject(new Error(e.message || e)));\n                }\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                const root = mount.option('root');\n                const url = item.path.replace(/\\/?$/, '/_scandir.json');\n                this._request(url, 'json', 'GET', options).then(response => {\n                    return resolve(response.map(iter => {\n                        iter.path = root + iter.path.replace(/^\\//, '');\n                        return iter;\n                    }));\n                }).catch(reject);\n            });\n        }\n        read(item, options) {\n            const mime = item.mime || 'application/octet-stream';\n            return new Promise((resolve, reject) => {\n                this._request(item.path, 'arraybuffer', 'GET', options).then(response => {\n                    if (options.cors) {\n                        if (options.type === 'text') {\n                            resolve(response);\n                        } else {\n                            FS.dataSourceToAb(response, 'application/octet-stream', (err, ab) => {\n                                return err ? reject(err) : resolve(ab);\n                            });\n                        }\n                        return true;\n                    }\n                    if (options.type === 'text') {\n                        FS.abToText(response, mime, (err, txt) => {\n                            if (err) {\n                                reject(new Error(err));\n                            } else {\n                                resolve(txt);\n                            }\n                        });\n                        return true;\n                    }\n                    return resolve(response);\n                }).catch(reject);\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this._request(item.path, null, 'HEAD').then(response => {\n                    return resolve(response.toUpperCase() === 'OK');\n                }).catch(reject);\n            });\n        }\n        url(item) {\n            return Promise.resolve(item.path);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/osjs',[\n    '../file',\n    '../../utils/fs',\n    '../../core/connection',\n    '../transport',\n    '../../core/config',\n    '../../core/locales'\n], function (FileMetadata, FS, Connection, Transport, Config, Locales) {\n    'use strict';\n    return class OSjsTransport extends Transport {\n        _request(method, args, options) {\n            return Connection.request('FS:' + method, args, options);\n        }\n        _requestUpload(dest, file, options) {\n            options = options || {};\n            dest = dest instanceof FileMetadata ? dest.path : dest;\n            if (typeof file.size !== 'undefined') {\n                const maxSize = Config.getConfig('VFS.MaxUploadSize');\n                if (maxSize > 0) {\n                    const bytes = file.size;\n                    if (bytes > maxSize) {\n                        const msg = Locales._('DIALOG_UPLOAD_TOO_BIG_FMT', FS.humanFileSize(maxSize));\n                        return Promise.reject(new Error(msg));\n                    }\n                }\n            }\n            const fd = new FormData();\n            fd.append('path', dest);\n            if (file) {\n                fd.append('filename', file.filename);\n            }\n            if (options) {\n                Object.keys(options).forEach(key => {\n                    if (key !== 'meta' && typeof options[key] !== 'function') {\n                        fd.append(key, String(options[key]));\n                    }\n                });\n            }\n            if (file instanceof window.ArrayBuffer) {\n                fd.append('size', String(file.byteLength));\n            }\n            FS.addFormFile(fd, 'upload', file, options.meta);\n            return this._request('upload', fd, options);\n        }\n        scandir(item, options) {\n            options = options || {};\n            const args = {\n                path: item.path,\n                options: { shortcuts: options.shortcuts }\n            };\n            return new Promise((resolve, reject) => {\n                this._request('scandir', args, options).then(result => {\n                    return resolve(result.map(i => new FileMetadata(i)));\n                }).catch(reject);\n            });\n        }\n        read(item, options) {\n            return this._request('get', { path: item.path }, options);\n        }\n        write(file, data, options) {\n            options = options || {};\n            options.meta = file;\n            options.overwrite = true;\n            options.onprogress = options.onprogress || function () {\n            };\n            const parentfile = new FileMetadata(FS.dirname(file.path), file.mime);\n            return this._requestUpload(parentfile, data, options);\n        }\n        unlink(src) {\n            return this._request('unlink', { path: src.path });\n        }\n        copy(src, dest, options) {\n            return this._request('copy', {\n                src: src.path,\n                dest: dest.path\n            }, options);\n        }\n        move(src, dest, options) {\n            return this._request('move', {\n                src: src.path,\n                dest: dest.path\n            }, options);\n        }\n        exists(item) {\n            return this._request('exists', { path: item.path });\n        }\n        fileinfo(item) {\n            return this._request('fileinfo', { path: item.path });\n        }\n        mkdir(dir) {\n            return this._request('mkdir', { path: dir.path });\n        }\n        upload(dest, data, options) {\n            return this._requestUpload(dest, data, options);\n        }\n        url(item, options) {\n            if (typeof item === 'string') {\n                item = new FileMetadata(item);\n            }\n            return Promise.resolve(Connection.instance.getVFSPath(item, options));\n        }\n        find(file, options) {\n            return this._request('find', {\n                path: file.path,\n                args: options\n            });\n        }\n        trash(file) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        untrash(file) {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        emptyTrash() {\n            return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n        }\n        freeSpace(root) {\n            return this._request('freeSpace', { root: root });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/dist',[\n    './osjs',\n    '../../core/mount-manager',\n    '../../core/config',\n    '../../core/locales'\n], function ( OSjsTransport, MountManager, Config, Locales) {\n    'use strict';\n    return class DistTransport extends OSjsTransport {\n        request(method, args, options) {\n            if ([\n                    'url',\n                    'scandir',\n                    'read'\n                ].indexOf(method) === -1) {\n                return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n            }\n            return super.request(...arguments);\n        }\n        url(item) {\n            const root = Config.getBrowserPath();\n            const module = MountManager.getModuleFromPath(item.path);\n            const url = item.path.replace(module.option('match'), root).replace(/^\\/+/, '/');\n            return Promise.resolve(url);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/applications',[\n    '../../core/package-manager',\n    '../transport',\n    '../file',\n    '../../core/locales'\n], function ( PackageManager, Transport, FileMetadata, Locales) {\n    'use strict';\n    return class ApplicationTransport extends Transport {\n        request(method, args, options) {\n            if (['scandir'].indexOf(method) === -1) {\n                return Promise.reject(new Error(Locales._('ERR_VFS_UNAVAILABLE')));\n            }\n            return super.request(...arguments);\n        }\n        scandir() {\n            const metadata = PackageManager.getPackages(); \n            const files = [];\n            Object.keys(metadata).forEach(m => {\n                const iter = metadata[m];\n                if (iter.type !== 'extension') {\n                    files.push(new FileMetadata({\n                        filename: iter.name,\n                        type: 'application',\n                        path: 'applications:///' + m,\n                        mime: 'osjs/application'\n                    }, 'osjs/application'));\n                }\n            });\n            return Promise.resolve(files);\n        }\n        url(item) {\n            return Promise.resolve(item.path);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/webdav',[\n    'skylark-axios',\n    '../../core/connection',\n    '../../utils/fs',\n    '../../utils/misc',\n    '../transport',\n    '../file',\n    '../../core/config',\n    '../../core/locales'\n], function (axios, Connection, FS, Utils, Transport, FileMetadata, Config, Locales) {\n    'use strict';\n    function getTargetPath(item, mount) {\n        return item.path.replace(mount.option('match'), '');\n    }\n    function getTargetUrl(mount, file, moduleOptions) {\n        let baseUrl = moduleOptions.host;\n        if (!moduleOptions.cors) {\n            baseUrl = Utils.parseurl(moduleOptions.host, {\n                username: moduleOptions.username,\n                password: moduleOptions.password\n            }).url;\n        }\n        const basename = getTargetPath(file, mount);\n        return baseUrl.replace(/\\/?$/, basename.replace(/^\\/?/, '/'));\n    }\n    function getFilePath(c, ns, mount) {\n        const moduleOptions = mount.option('options') || {};\n        const uri = Utils.parseurl(moduleOptions.host).path;\n        try {\n            let path = c.getElementsByTagNameNS(ns, 'href')[0].textContent;\n            return path.substr(uri.length - 1, path.length);\n        } catch (e) {\n            console.warn(e);\n        }\n        return '/';\n    }\n    function getFileMime(type, c, ns) {\n        if (type === 'file') {\n            try {\n                return c.getElementsByTagNameNS(ns, 'getcontenttype')[0].textContent || 'application/octet-stream';\n            } catch (e) {\n                return 'application/octet-stream';\n            }\n        }\n        return null;\n    }\n    function getFileId(type, c, ns) {\n        try {\n            return c.getElementsByTagNameNS(ns, 'getetag')[0].textContent;\n        } catch (e) {\n        }\n        return null;\n    }\n    function getFileSize(type, c, ns) {\n        if (type === 'file') {\n            try {\n                return parseInt(c.getElementsByTagNameNS(ns, 'getcontentlength')[0].textContent, 10) || 0;\n            } catch (e) {\n            }\n        }\n        return 0;\n    }\n    function parseListing(doc, item, mount) {\n        const root = mount.option('root');\n        const moduleOptions = mount.option('options') || {};\n        const reqpath = getTargetPath(item, mount);\n        let ns = moduleOptions.ns || 'DAV';\n        if (ns.substr(-1) !== ':') {\n            ns += ':';\n        }\n        return (doc.children || []).map(c => {\n            let path = getFilePath(c, ns, mount);\n            let type = 'file';\n            if (path.match(/\\/$/)) {\n                type = 'dir';\n                path = path.replace(/\\/$/, '') || '/';\n            }\n            if (path === reqpath) {\n                return false;\n            }\n            return new FileMetadata({\n                id: getFileId(type, c, ns),\n                path: root + path.replace(/^\\//, ''),\n                filename: FS.filename(path),\n                size: getFileSize(type, c, ns),\n                mime: getFileMime(type, c, ns),\n                type: type\n            });\n        }).filter(iter => iter !== false);\n    }\n    function parseResponse(body) {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(body, 'application/xml');\n        return doc.firstChild;\n    }\n    return class WebDAVTransport extends Transport {\n        _request(method, args, options, mount, raw) {\n            const mime = args.mime || 'application/octet-stream';\n            const file = new FileMetadata(args, mime);\n            const moduleOptions = mount.option('options') || {};\n            const headers = {};\n            const url = getTargetUrl(mount, file, moduleOptions);\n            if (args.dest) {\n                const dest = new FileMetadata(args.dest, mime);\n                headers.Destination = getTargetUrl(mount, dest, moduleOptions);\n            }\n            if (mime) {\n                headers['Content-Type'] = mime;\n            }\n            return new Promise((resolve, reject) => {\n                if (moduleOptions.cors) {\n                    const aopts = {\n                        url: url,\n                        responseType: raw === true ? 'arraybuffer' : 'text',\n                        method: method,\n                        headers: headers,\n                        data: args.data,\n                        auth: {\n                            username: moduleOptions.username,\n                            password: moduleOptions.password\n                        }\n                    };\n                    axios(aopts).then(response => {\n                        return resolve(response.data);\n                    }).catch(e => reject(new Error(e.message || e)));\n                } else {\n                    const copts = {\n                        url: url,\n                        method: method,\n                        binary: raw === true,\n                        mime: mime,\n                        headers: headers\n                    };\n                    Connection.request('curl', copts).then(response => {\n                        const code = response.httpCode;\n                        if (!response) {\n                            return reject(new Error(Locales._('ERR_VFS_REMOTEREAD_EMPTY')));\n                        } else if ([\n                                200,\n                                201,\n                                203,\n                                204,\n                                205,\n                                207\n                            ].indexOf(code) < 0) {\n                            const error = new Error(Locales._('ERR_VFSMODULE_XHR_ERROR') + ': ' + code);\n                            error.httpCode = code;\n                            return reject(error);\n                        }\n                        if (raw === true) {\n                            return FS.dataSourceToAb(response.body, mime, (err, ab) => {\n                                return err ? reject(new Error(err)) : resolve(ab);\n                            });\n                        }\n                        return resolve(parseResponse(response.body));\n                    }).catch(reject);\n                }\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this._request('PROPFIND', { path: item.path }, options, mount).then(doc => {\n                    resolve(doc ? parseListing(doc, item, mount).map(iter => new FileMetadata(iter)) : []);\n                }).catch(reject);\n            });\n        }\n        read(item, options, mount) {\n            return this._request('GET', {\n                path: item.path,\n                mime: item.mime\n            }, options, mount, true);\n        }\n        write(item, data, options, mount) {\n            return this._request('PUT', {\n                path: item.path,\n                data: data,\n                mime: item.mime\n            }, options, mount);\n        }\n        unlink(item, options, mount) {\n            return this._request('DELETE', { path: item.path }, options, mount);\n        }\n        copy(src, dest, options, mount) {\n            return this._request('COPY', {\n                path: src.path,\n                dest: dest.path\n            }, options, mount);\n        }\n        move(src, dest, options, mount) {\n            return this._request('MOVE', {\n                path: src.path,\n                dest: dest.path\n            }, options, mount);\n        }\n        exists(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this._request('PROPFIND', { path: item.path }, options, mount).then(() => {\n                    resolve(false);\n                }).catch(err => {\n                    if (err.httpCode === 404) {\n                        resolve(false);\n                    } else {\n                        console.warn(err);\n                        resolve(true);\n                    }\n                });\n            });\n        }\n        mkdir(item, options, mount) {\n            return this._request('MKCOL', { path: item.path }, options, mount);\n        }\n        url(item, options, mount) {\n            const moduleOptions = mount.option('options') || {};\n            let requestUrl = getTargetUrl(mount, item, moduleOptions);\n            if (!moduleOptions.cors) {\n                requestUrl = Config.getConfig('Connection.FSURI') + '/read?path=' + encodeURIComponent(requestUrl);\n            }\n            return Promise.resolve(requestUrl);\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/service-notification-icon',[\n    '../gui/notification',\n    '../core/theme',\n    '../gui/menu',\n    '../core/locales'\n], function (Notification, Theme, Menu, Locales) {\n    'use strict';\n    class ServiceNotificationIcon {\n        constructor() {\n            this.entries = {};\n            this.size = 0;\n            this.notif = null;\n        }\n        init() {\n            const show = ev => {\n                this.displayMenu(ev);\n                return false;\n            };\n            this.notif = Notification.createIcon('ServiceNotificationIcon', {\n                image: Theme.getIcon('status/dialog-password.png'),\n                onContextMenu: show,\n                onClick: show,\n                onInited: (el, img) => {\n                    this._updateIcon();\n                }\n            });\n            this._updateIcon();\n        }\n        destroy() {\n            Notification.destroyIcon('ServiceNotificationIcon');\n            this.size = 0;\n            this.entries = {};\n            this.notif = null;\n        }\n        _updateIcon() {\n            if (this.notif) {\n                if (this.notif.$container) {\n                    this.notif.$container.style.display = this.size ? 'inline-block' : 'none';\n                }\n                this.notif.setTitle(Locales._('SERVICENOTIFICATION_TOOLTIP', this.size.toString()));\n            }\n        }\n        displayMenu(ev) {\n            const menu = [];\n            const entries = this.entries;\n            Object.keys(entries).forEach(name => {\n                menu.push({\n                    title: name,\n                    menu: entries[name]\n                });\n            });\n            Menu.create(menu, ev);\n        }\n        add(name, menu) {\n            if (!this.entries[name]) {\n                this.entries[name] = menu;\n                this.size++;\n                this._updateIcon();\n            }\n        }\n        remove(name) {\n            if (this.entries[name]) {\n                delete this.entries[name];\n                this.size--;\n                this._updateIcon();\n            }\n        }\n    }\n    return new ServiceNotificationIcon();\n});\ndefine('skylark-osjsv2-client/helpers/qs',[],function(){\r\n  'use strict';\r\n\r\n\r\n\r\n  /**\r\n   * A response from a web request\r\n   *\r\n   * @param {Number} statusCode\r\n   * @param {Object} headers\r\n   * @param {Buffer} body\r\n   * @param {String} url\r\n   */\r\n  function Response(statusCode, headers, body, url) {\r\n    if (typeof statusCode !== 'number') {\r\n      throw new TypeError('statusCode must be a number but was ' + (typeof statusCode));\r\n    }\r\n    if (headers === null) {\r\n      throw new TypeError('headers cannot be null');\r\n    }\r\n    if (typeof headers !== 'object') {\r\n      throw new TypeError('headers must be an object but was ' + (typeof headers));\r\n    }\r\n    this.statusCode = statusCode;\r\n    this.headers = {};\r\n    for (var key in headers) {\r\n      this.headers[key.toLowerCase()] = headers[key];\r\n    }\r\n    this.body = body;\r\n    this.url = url;\r\n  }\r\n\r\n  Response.prototype.getBody = function (encoding) {\r\n    if (this.statusCode >= 300) {\r\n      var err = new Error('Server responded with status code '\r\n                      + this.statusCode + ':\\n' + this.body.toString());\r\n      err.statusCode = this.statusCode;\r\n      err.headers = this.headers;\r\n      err.body = this.body;\r\n      err.url = this.url;\r\n      throw err;\r\n    }\r\n    return encoding ? this.body.toString(encoding) : this.body;\r\n  };\r\n\r\n  return Response;\r\n});\ndefine('skylark-osjsv2-client/helpers/handle-qs',['./qs'],function(qs){\r\n  var parse = qs.parse;\r\n  var stringify = qs.stringify;\r\n\r\n  return function handleQs(url, query) {\r\n    url = url.split('?');\r\n    var start = url[0];\r\n    var qs = (url[1] || '').split('#')[0];\r\n    var end = url[1] && url[1].split('#').length > 1 ? '#' + url[1].split('#')[1] : '';\r\n\r\n    var baseQs = parse(qs);\r\n    for (var i in query) {\r\n      baseQs[i] = query[i];\r\n    }\r\n    qs = stringify(baseQs);\r\n    if (qs !== '') {\r\n      qs = '?' + qs;\r\n    }\r\n    return start + qs + end;\r\n  }\r\n});\ndefine('skylark-osjsv2-client/helpers/then-jsonp',['./handle-qs'],function(handleQs){\r\n  'use strict';\r\n\r\n  var jsonpID = 0;\r\n\r\n  var queues = {};\r\n\r\n  function pquest(method, url, options, callback) {\r\n    var result = new Promise(function (resolve, reject) {\r\n\r\n      // check types of arguments\r\n\r\n      if (typeof method !== 'string') {\r\n        throw new TypeError('The method must be a string.');\r\n      }\r\n      if (typeof url !== 'string') {\r\n        throw new TypeError('The URL/path must be a string.');\r\n      }\r\n      if (typeof options === 'function') {\r\n        callback = options;\r\n        options = {};\r\n      }\r\n      if (options === null || options === undefined) {\r\n        options = {};\r\n      }\r\n      if (typeof options !== 'object') {\r\n        throw new TypeError('Options must be an object (or null).');\r\n      }\r\n      if (typeof callback !== 'function') {\r\n        callback = undefined;\r\n      }\r\n\r\n      if (options.body) {\r\n        throw new TypeError('JSONP does not support requests that have bodies');\r\n      }\r\n      if (options.headers) {\r\n        throw new TypeError('JSONP does not support requests that specify headers');\r\n      }\r\n      if (options.followRedirects === false) {\r\n        throw new TypeError('JSONP does not support requests that do not follow redirects');\r\n      }\r\n\r\n      options.qs = options.qs || {};\r\n      if (options.json) {\r\n        Object.keys(options.json).forEach(function (key) {\r\n          options.qs[key] = options.json[key];\r\n        });\r\n        delete options.json;\r\n      }\r\n\r\n      var callbackName = options.callbackName || 'then_jsonp_' + (++jsonpID);\r\n\r\n      if (options.callbackParameter !== false) {\r\n        options.qs[options.callbackParameter || 'callback'] = callbackName;\r\n      }\r\n      if (method.toLowerCase() !== 'get') {\r\n        options.qs[options.methodParameter || 'method'] = method;\r\n      }\r\n\r\n      if (queues[callbackName]) {\r\n        queues[callbackName].push(run);\r\n      } else {\r\n        queues[callbackName] = [];\r\n        run();\r\n      }\r\n\r\n      function run() {\r\n        // handle query string\r\n        if (options.qs) {\r\n          url = handleQs(url, options.qs);\r\n        }\r\n\r\n        var script = document.createElement('script');\r\n        var head = document.getElementsByTagName('head')[0] || document.documentElement;\r\n        var abortTimeout;\r\n        var done = false;\r\n        function onComplete(success) {\r\n          if (!done) {\r\n            done = true;\r\n            script.onload = script.onreadystatechange = script.onerror = null;\r\n            clearTimeout(abortTimeout);\r\n            if (callbackName in window) {\r\n              if (success) delete window[callbackName];\r\n              else window[callbackName] = function () {};\r\n            }\r\n            if (script && script.parentNode) {\r\n              script.parentNode.removeChild(script);\r\n            }\r\n            if (queues[callbackName].length) queues[callbackName].shift()();\r\n            else delete queues[callbackName];\r\n          }\r\n        }\r\n        script.onload = script.onreadystatechange = function () {\r\n          if (!this.readyState || this.readyState === \"loaded\" || this.readyState === \"complete\") {\r\n            onComplete();\r\n            setTimeout(function () {\r\n              reject(new Error('JSONP callback should already have been called'));\r\n            }, 100);\r\n          }\r\n        };\r\n        script.onerror = function () {\r\n          onComplete();\r\n          reject(new Error('JSONP request failed'));\r\n        };\r\n        window[callbackName] = function (result) {\r\n          onComplete(true);\r\n          resolve(result);\r\n        };\r\n        abortTimeout = setTimeout(function(){\r\n          onComplete();\r\n          reject(new Error('JSONP timed out'));\r\n        }, options.timeout || 10000);\r\n\r\n        script.src = url;\r\n        script.async = true;\r\n\r\n        head.appendChild(script);\r\n      }\r\n    });\r\n    result.getBody = function () {\r\n      return result.then(function (res) { return res.getBody(); });\r\n    };\r\n    return result.nodeify(callback);\r\n  }\r\n\r\n  return pquest;\r\n});\ndefine('skylark-osjsv2-client/helpers/google-api',[\n    '../core/mount-manager',\n    './service-notification-icon',\n    '../utils/preloader',\n    '../core/locales',\n    '../core/config',\n    './then-jsonp'\n], function (MountManager, ServiceNotificationIcon, Preloader, Locales, b, jsonp) {\n    'use strict';\n    const gapi = window.gapi = window.gapi || {};\n    let SingletonInstance = null;\n    class GoogleAPI {\n        constructor(clientId) {\n            this.clientId = clientId;\n            this.accessToken = null;\n            this.userId = null;\n            this.preloaded = false;\n            this.authenticated = false;\n            this.loaded = [];\n            this.preloads = [{\n                    type: 'javascript',\n                    src: 'https://apis.google.com/js/api.js'\n                }];\n        }\n        destroy() {\n        }\n        init(callback) {\n            callback = callback || function () {\n            };\n            if (this.preloaded) {\n                callback(false, true);\n            } else {\n                Preloader.preload(this.preloads).then(result => {\n                    if (result.failed.length) {\n                        this.preloaded = true;\n                    }\n                    callback(result.failed.join('\\n'));\n                }).catch(callback);\n            }\n        }\n        load(load, scope, client, callback) {\n            const auth = cb => {\n                this.authenticate(scope, (error, result) => {\n                    if (error) {\n                        cb(error);\n                    } else {\n                        if (!this.authenticated) {\n                            cb(Locales._('GAPI_AUTH_FAILURE'));\n                            return;\n                        }\n                        cb(false, result);\n                    }\n                });\n            };\n            const loadAll = finished => {\n                const lload = [];\n                load.forEach(i => {\n                    if (this.loaded.indexOf(i) === -1) {\n                        lload.push(i);\n                    }\n                });\n                let current = 0;\n                let total = lload.length;\n                console.debug('GoogleAPI::load()', load, '=>', lload, scope);\n                const _load = (iter, cb) => {\n                    let args = [];\n                    let name = null;\n                    if (iter instanceof Array) {\n                        if (iter.length > 0 && iter.length < 3) {\n                            args = args.concat(iter);\n                            name = iter[0];\n                        }\n                    } else {\n                        args.push(iter);\n                        name = iter;\n                    }\n                    args.push((a, b, c, d) => {\n                        this.loaded.push(name);\n                        cb.call(this, a, b, c, d);\n                    });\n                    if (client) {\n                        gapi.client.load.apply(gapi, args);\n                    } else {\n                        gapi.load.apply(gapi, args);\n                    }\n                };\n                function _next() {\n                    if (current >= total) {\n                        finished();\n                    } else {\n                        _load(lload[current], () => {\n                            _next();\n                        });\n                        current++;\n                    }\n                }\n                _next();\n            };\n            this.init(error => {\n                if (error) {\n                    callback(error);\n                    return;\n                }\n                if (!window.gapi || !gapi.load) {\n                    callback(Locales._('GAPI_LOAD_FAILURE'));\n                    return;\n                }\n                auth(error => {\n                    if (error) {\n                        callback(error);\n                        return;\n                    }\n                    loadAll((error, result) => {\n                        callback(error, result, SingletonInstance);\n                    });\n                });\n            });\n        }\n        signOut(cb) {\n            cb = cb || function () {\n            };\n            console.info('GoogleAPI::signOut()');\n            if (this.authenticated) {\n                try {\n                    gapi.auth.signOut();\n                } catch (e) {\n                    console.warn('GoogleAPI::signOut()', 'failed', e);\n                    console.warn(e.stack);\n                }\n                this.authenticated = false;\n                ServiceNotificationIcon.remove('Google API');\n            }\n            MountManager.remove('GoogleDrive');\n            cb(false, true);\n        }\n        revoke(callback) {\n            console.info('GoogleAPI::revoke()');\n            if (!this.accessToken) {\n                callback(false);\n                return;\n            }\n            const url = 'https://accounts.google.com/o/oauth2/revoke?token=' + this.accessToken;\n            jsonp('GET', url).then(() => callback(true)).catch(() => callback(false));\n        }\n        authenticate(scope, callback) {\n            console.info('GoogleAPI::authenticate()');\n            callback = callback || function () {\n            };\n            const getUserId = cb => {\n                cb = cb || function () {\n                };\n                gapi.client.load('oauth2', 'v2', () => {\n                    gapi.client.oauth2.userinfo.get().execute(resp => {\n                        console.info('GoogleAPI::authenticate() => getUserId()', resp);\n                        cb(resp.id);\n                    });\n                });\n            };\n            const login = (immediate, cb) => {\n                console.info('GoogleAPI::authenticate() => login()', immediate);\n                cb = cb || function () {\n                };\n                gapi.auth.authorize({\n                    client_id: this.clientId,\n                    scope: scope,\n                    user_id: this.userId,\n                    immediate: immediate\n                }, cb);\n            };\n            const createRingNotification = () => {\n                ServiceNotificationIcon.remove('Google API');\n                ServiceNotificationIcon.add('Google API', [\n                    {\n                        title: Locales._('GAPI_SIGN_OUT'),\n                        onClick: () => {\n                            this.signOut();\n                        }\n                    },\n                    {\n                        title: Locales._('GAPI_REVOKE'),\n                        onClick: () => {\n                            this.revoke(() => {\n                                this.signOut();\n                            });\n                        }\n                    }\n                ]);\n            };\n            const handleAuthResult = (authResult, immediate) => {\n                console.info('GoogleAPI::authenticate() => handleAuthResult()', authResult);\n                if (authResult.error) {\n                    if (authResult.error_subtype === 'origin_mismatch' || authResult.error_subtype === 'access_denied' && !immediate) {\n                        const msg = Locales._('GAPI_AUTH_FAILURE_FMT', authResult.error, authResult.error_subtype);\n                        callback(msg);\n                        return;\n                    }\n                }\n                if (authResult && !authResult.error) {\n                    getUserId(id => {\n                        this.userId = id;\n                        if (id) {\n                            createRingNotification();\n                            this.authenticated = true;\n                            this.accessToken = authResult.access_token || null;\n                            callback(false, true);\n                        } else {\n                            callback(false, false);\n                        }\n                    });\n                } else {\n                    login(false, res => {\n                        handleAuthResult(res, false);\n                    });\n                }\n            };\n            gapi.load('auth:client', result => {\n                if (result && result.error) {\n                    const msg = Locales._('GAPI_AUTH_FAILURE_FMT', result.error, result.error_subtype);\n                    callback(msg);\n                    return;\n                }\n                login(true, res => {\n                    handleAuthResult(res, true);\n                });\n            });\n        }\n    }\n    function instance() {\n        return SingletonInstance;\n    }\n    function create(args, callback) {\n        const load = args.load || [];\n        const scope = args.scope || [];\n        const client = args.client === true;\n        function _run() {\n            SingletonInstance.load(load, scope, client, callback);\n        }\n        if (SingletonInstance) {\n            _run();\n            return;\n        }\n        let clientId = null;\n        try {\n            clientId = b.getConfig('GoogleAPI.ClientId');\n        } catch (e) {\n            console.warn('getGoogleAPI()', e, e.stack);\n        }\n        if (!clientId) {\n            callback(Locales._('GAPI_DISABLED'));\n            return;\n        }\n        SingletonInstance = new GoogleAPI(clientId);\n        _run();\n    }\n    return {\n        instance: instance,\n        create: create\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/google-drive',[\n    'skylark-axios',\n    '../transport',\n    '../file',\n    '../filedataurl',\n    '../../core/mount-manager',\n    '../../core/locales',\n    '../../helpers/google-api',\n    '../../utils/fs'\n], function (axios, Transport, FileMetadata, FileDataURL, MountManager, Locales, GoogleAPI, FS) {\n    'use strict';\n    const CACHE_CLEAR_TIMEOUT = 7000;\n    let gapi = window.gapi = window.gapi || {};\n    let _authenticated;\n    let _clearCacheTimeout;\n    let _rootFolderId;\n    let _treeCache;\n    function createDirectoryList(dir, list, item, options, match) {\n        const result = [];\n        const rdir = dir.replace(match, '/').replace(/\\/+/g, '/');\n        const isOnRoot = rdir === '/';\n        function createItem(iter, i) {\n            let path = dir;\n            if (iter.title === '..') {\n                path = FS.dirname(dir);\n            } else {\n                if (!isOnRoot) {\n                    path += '/';\n                }\n                path += iter.title;\n            }\n            let fileType = iter.mimeType === 'application/vnd.google-apps.folder' ? 'dir' : iter.kind === 'drive#file' ? 'file' : 'dir';\n            if (iter.mimeType === 'application/vnd.google-apps.trash') {\n                fileType = 'trash';\n            }\n            return new FileMetadata({\n                filename: iter.title,\n                path: path,\n                id: iter.id,\n                size: iter.quotaBytesUsed || 0,\n                mime: iter.mimeType === 'application/vnd.google-apps.folder' ? null : iter.mimeType,\n                type: fileType\n            });\n        }\n        if (list) {\n            list.forEach((iter, i) => {\n                if (!iter) {\n                    return;\n                }\n                result.push(createItem(iter, i));\n            });\n        }\n        return result ? result : [];\n    }\n    function getAllDirectoryFiles(item, callback) {\n        console.debug('GoogleDrive::*getAllDirectoryFiles()', item);\n        function retrieveAllFiles(cb) {\n            if (_clearCacheTimeout) {\n                clearTimeout(_clearCacheTimeout);\n                _clearCacheTimeout = null;\n            }\n            if (_treeCache) {\n                console.info('USING CACHE FROM PREVIOUS FETCH!');\n                cb(false, _treeCache);\n                return;\n            }\n            console.info('UPDATING CACHE');\n            let list = [];\n            function retrievePageOfFiles(request, result) {\n                request.execute(resp => {\n                    if (resp.error) {\n                        console.warn('GoogleDrive::getAllDirectoryFiles()', 'error', resp);\n                    }\n                    result = result.concat(resp.items);\n                    const nextPageToken = resp.nextPageToken;\n                    if (nextPageToken) {\n                        request = gapi.client.drive.files.list({ pageToken: nextPageToken });\n                        retrievePageOfFiles(request, result);\n                    } else {\n                        _treeCache = result;\n                        cb(false, result);\n                    }\n                });\n            }\n            try {\n                const initialRequest = gapi.client.drive.files.list({});\n                retrievePageOfFiles(initialRequest, list);\n            } catch (e) {\n                console.warn('GoogleDrive::getAllDirectoryFiles() exception', e, e.stack);\n                console.warn('THIS ERROR OCCURS WHEN MULTIPLE REQUESTS FIRE AT ONCE ?!');\n                cb(false, list);\n            }\n        }\n        function getFilesBelongingTo(list, root, cb) {\n            const idList = {};\n            const parentList = {};\n            list.forEach(iter => {\n                if (iter) {\n                    idList[iter.id] = iter;\n                    const parents = [];\n                    if (iter.parents) {\n                        iter.parents.forEach(piter => {\n                            if (piter) {\n                                parents.push(piter.id);\n                            }\n                        });\n                    }\n                    parentList[iter.id] = parents;\n                }\n            });\n            let resolves = FS.getPathFromVirtual(root).replace(/^\\/+/, '').split('/');\n            resolves = resolves.filter(el => {\n                return el !== '';\n            });\n            let currentParentId = _rootFolderId;\n            let isOnRoot = !resolves.length;\n            function _getFileList(foundId) {\n                const result = [];\n                if (!isOnRoot) {\n                    result.push({\n                        title: '..',\n                        path: FS.dirname(root),\n                        id: item.id,\n                        quotaBytesUsed: 0,\n                        mimeType: 'application/vnd.google-apps.folder'\n                    });\n                }\n                list.forEach(iter => {\n                    if (iter && parentList[iter.id] && parentList[iter.id].indexOf(foundId) !== -1) {\n                        result.push(iter);\n                    }\n                });\n                return result;\n            }\n            function _nextDir(completed) {\n                let current = resolves.shift();\n                let done = resolves.length <= 0;\n                let found;\n                if (isOnRoot) {\n                    found = currentParentId;\n                } else {\n                    if (current) {\n                        list.forEach(iter => {\n                            if (iter) {\n                                if (iter.title === current && parentList[iter.id] && parentList[iter.id].indexOf(currentParentId) !== -1) {\n                                    currentParentId = iter.id;\n                                    found = iter.id;\n                                }\n                            }\n                        });\n                    }\n                }\n                if (done) {\n                    completed(found);\n                } else {\n                    _nextDir(completed);\n                }\n            }\n            _nextDir(foundId => {\n                if (foundId && idList[foundId]) {\n                    cb(false, _getFileList(foundId));\n                    return;\n                } else {\n                    if (isOnRoot) {\n                        cb(false, _getFileList(currentParentId));\n                        return;\n                    }\n                }\n                cb('Could not list directory');\n            });\n        }\n        function doRetrieve() {\n            retrieveAllFiles((error, list) => {\n                const root = item.path;\n                if (error) {\n                    callback(error, false, root);\n                    return;\n                }\n                getFilesBelongingTo(list, root, (error, response) => {\n                    console.groupEnd();\n                    _clearCacheTimeout = setTimeout(() => {\n                        console.info('Clearing GoogleDrive filetree cache!');\n                        _treeCache = null;\n                    }, CACHE_CLEAR_TIMEOUT);\n                    console.debug('GoogleDrive::*getAllDirectoryFiles()', '=>', response);\n                    callback(error, response, root);\n                });\n            });\n        }\n        console.group('GoogleDrive::*getAllDirectoryFiles()');\n        if (!_rootFolderId) {\n            const request = gapi.client.drive.about.get();\n            request.execute(resp => {\n                if (!resp || !resp.rootFolderId) {\n                    callback(Locales._('ERR_VFSMODULE_ROOT_ID'));\n                    return;\n                }\n                _rootFolderId = resp.rootFolderId;\n                doRetrieve();\n            });\n        } else {\n            doRetrieve();\n        }\n    }\n    function getFileFromPath(dir, type, callback) {\n        if (dir instanceof FileMetadata) {\n            dir = dir.path;\n        }\n        const tmpItem = new FileMetadata({\n            filename: FS.filename(dir),\n            type: 'dir',\n            path: FS.dirname(dir)\n        });\n        console.debug('GoogleDrive::*getFileIdFromPath()', dir, type, tmpItem);\n        getAllDirectoryFiles(tmpItem, (error, list, ldir) => {\n            if (error) {\n                callback(error);\n                return;\n            }\n            let found = null;\n            list.forEach(iter => {\n                if (iter.title === FS.filename(dir)) {\n                    if (type) {\n                        if (iter.mimeType === type) {\n                            found = iter;\n                            return false;\n                        }\n                    } else {\n                        found = iter;\n                    }\n                }\n                return true;\n            });\n            callback(false, found);\n        });\n    }\n    function getParentPathId(item, callback) {\n        const dir = FS.dirname(item.path);\n        const type = 'application/vnd.google-apps.folder';\n        console.debug('GoogleDrive::*getParentPathId()', item);\n        getFileFromPath(dir, type, (error, item) => {\n            if (error) {\n                callback(error);\n            } else {\n                callback(false, item ? item.id : null);\n            }\n        });\n    }\n    function createBoundary(file, data, callback) {\n        const boundary = '-------314159265358979323846';\n        const delimiter = '\\r\\n--' + boundary + '\\r\\n';\n        const close_delim = '\\r\\n--' + boundary + '--';\n        const contentType = file.mime || 'text/plain';\n        function createBody(result) {\n            const metadata = {\n                title: file.filename,\n                mimeType: contentType\n            };\n            const base64Data = result;\n            const multipartRequestBody = delimiter + 'Content-Type: application/json\\r\\n\\r\\n' + JSON.stringify(metadata) + delimiter + 'Content-Type: ' + contentType + '\\r\\n' + 'Content-Transfer-Encoding: base64\\r\\n' + '\\r\\n' + base64Data + close_delim;\n            return multipartRequestBody;\n        }\n        const reqContentType = \"multipart/mixed; boundary='\" + boundary + \"'\";\n        if (data instanceof FileDataURL) {\n            callback(false, {\n                contentType: reqContentType,\n                body: createBody(data.toBase64())\n            });\n        } else {\n            FS.abToBinaryString(data, contentType, (error, response) => {\n                callback(error, error ? false : {\n                    contentType: reqContentType,\n                    body: createBody(btoa(response))\n                });\n            });\n        }\n    }\n    function setFolder(item, pid, callback) {\n        console.info('GoogleDrive::setFolder()', item, pid);\n        pid = pid || 'root';\n        function _clearFolders(cb) {\n            item.parents.forEach((p, i) => {\n                const request = gapi.client.drive.children.delete({\n                    folderId: p.id,\n                    childId: item.id\n                });\n                request.execute(resp => {\n                    if (i >= item.parents.length - 1) {\n                        cb();\n                    }\n                });\n            });\n        }\n        function _setFolder(rootId, cb) {\n            const request = gapi.client.drive.children.insert({\n                folderId: pid,\n                resource: { id: item.id }\n            });\n            request.execute(resp => {\n                console.info('GoogleDrive::setFolder()', '=>', resp);\n                callback(false, true);\n            });\n        }\n        _clearFolders(() => {\n            _setFolder(pid, callback);\n        });\n    }\n    return class GoogleDriveTransport extends Transport {\n        _init() {\n            if (_authenticated) {\n                return Promise.resolve();\n            }\n            return new Promise((resolve, reject) => {\n                GoogleAPI.create({\n                    scope: [\n                        'https://www.googleapis.com/auth/drive.install',\n                        'https://www.googleapis.com/auth/drive.file',\n                        'openid'\n                    ],\n                    load: [\n                        'drive-realtime',\n                        'drive-share'\n                    ]\n                }, (err, res) => {\n                    gapi.client.load('drive', 'v2', err => {\n                        if (!err) {\n                            _authenticated = true;\n                        }\n                        return err ? reject(new Error(err)) : resolve(true);\n                    });\n                });\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                getAllDirectoryFiles(item, (error, list, dir) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        const result = createDirectoryList(dir, list, item, options, mount.option('match'));\n                        resolve(result);\n                    }\n                });\n            });\n        }\n        read(item, options, mount) {\n            const read = ritem => new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.get({ fileId: ritem.id });\n                request.execute(file => {\n                    if (file && file.id) {\n                        let accessToken = gapi.auth.getToken().access_token;\n                        axios({\n                            url: file.downloadUrl,\n                            method: 'GET',\n                            responseType: 'arraybuffer',\n                            headers: { 'Authorization': 'Bearer ' + accessToken }\n                        }).then(response => {\n                            return resolve(response.data);\n                        }).catch(error => {\n                            reject(new Error(Locales._('ERR_VFSMODULE_XHR_ERROR') + ' - ' + error.message));\n                        });\n                    } else {\n                        reject(new Error(Locales._('ERR_VFSMODULE_NOSUCH')));\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                if (item.downloadUrl) {\n                    read(item).then(resolve).catch(reject);\n                } else {\n                    getFileFromPath(item.path, item.mime, function (error, response) {\n                        if (error) {\n                            reject(new Error(error));\n                        } else if (!response) {\n                            reject(new Error(Locales._('ERR_VFSMODULE_NOSUCH')));\n                        } else {\n                            read(response).then(resolve).catch(reject);\n                        }\n                    });\n                }\n            });\n        }\n        write(file, data) {\n            const write = (parentId, fileId) => new Promise((resolve, reject) => {\n                let uri = '/upload/drive/v2/files';\n                let method = 'POST';\n                if (fileId) {\n                    uri = '/upload/drive/v2/files/' + fileId;\n                    method = 'PUT';\n                }\n                createBoundary(file, data, (error, fileData) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        const request = gapi.client.request({\n                            path: uri,\n                            method: method,\n                            params: { uploadType: 'multipart' },\n                            headers: { 'Content-Type': fileData.contentType },\n                            body: fileData.body\n                        });\n                        request.execute(resp => {\n                            _treeCache = null;\n                            if (resp && resp.id) {\n                                if (parentId) {\n                                    setFolder(resp, parentId, (err, res) => {\n                                        return err ? reject(new Error(err)) : resolve(res);\n                                    });\n                                } else {\n                                    resolve(true);\n                                }\n                            } else {\n                                reject(Locales._('ERR_VFSMODULE_NOSUCH'));\n                            }\n                        });\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                getParentPathId(file, (error, id) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else if (file.id) {\n                        write(id, file.id).then(resolve).catch(reject);\n                    } else {\n                        this.exists(file).then(exists => {\n                            return write(id, exists ? exists.id : null).then(resolve).catch(reject);\n                        }).catch(() => {\n                            write(id, null).then(resolve).catch(reject);\n                        });\n                    }\n                });\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.copy({\n                    fileId: src.id,\n                    resource: { title: FS.filename(dest.path) }\n                });\n                request.execute(resp => {\n                    if (resp.id) {\n                        getParentPathId(dest, (error, parentId) => {\n                            if (error) {\n                                console.warn(error);\n                                resolve(true);\n                            } else {\n                                _treeCache = null;\n                                setFolder(resp, parentId, (err, res) => {\n                                    return err ? reject(new Error(err)) : resolve(res);\n                                });\n                            }\n                        });\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.patch({\n                    fileId: src.id,\n                    resource: { title: FS.filename(dest.path) }\n                });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        _treeCache = null;\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                const req = new FileMetadata(FS.dirname(item.path));\n                this.scandir(req).then(result => {\n                    const found = result.find(iter => iter.path === item.path);\n                    if (found) {\n                        const file = new FileMetadata(item.path, found.mimeType);\n                        file.id = found.id;\n                        file.title = found.title;\n                        return resolve(file);\n                    }\n                    return resolve(false);\n                }).catch(reject);\n            });\n        }\n        fileinfo(item) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.get({ fileId: item.id });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        const useKeys = [\n                            'createdDate',\n                            'id',\n                            'lastModifyingUser',\n                            'lastViewedByMeDate',\n                            'markedViewedByMeDate',\n                            'mimeType',\n                            'modifiedByMeDate',\n                            'modifiedDate',\n                            'title',\n                            'alternateLink'\n                        ];\n                        const info = {};\n                        useKeys.forEach(k => {\n                            info[k] = resp[k];\n                        });\n                        resolve(info);\n                    } else {\n                        reject(Locales._('ERR_VFSMODULE_NOSUCH'));\n                    }\n                });\n            });\n        }\n        url(item) {\n            return new Promise((resolve, reject) => {\n                if (!item || !item.id) {\n                    reject(new Error('url() expects a File ref with Id'));\n                } else {\n                    const request = gapi.client.drive.files.get({ fileId: item.id });\n                    request.execute(resp => {\n                        if (resp && resp.webContentLink) {\n                            resolve(resp.webContentLink);\n                        } else {\n                            const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                            reject(new Error(msg));\n                        }\n                    });\n                }\n            });\n        }\n        mkdir(dir) {\n            const mkdir = parents => new Promise((resolve, reject) => {\n                const request = gapi.client.request({\n                    'path': '/drive/v2/files',\n                    'method': 'POST',\n                    'body': JSON.stringify({\n                        title: dir.filename,\n                        parents: parents,\n                        mimeType: 'application/vnd.google-apps.folder'\n                    })\n                });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        _treeCache = null;\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                const module = MountManager.getModuleFromPath(dir.path);\n                const dirDest = FS.getPathFromVirtual(FS.dirname(dir.path));\n                const rootDest = FS.getPathFromVirtual(module.option('root'));\n                if (dirDest !== rootDest) {\n                    getParentPathId(dir, (error, id) => {\n                        if (error || !id) {\n                            reject(new Error(Locales._('ERR_VFSMODULE_PARENT_FMT', error || Locales._('ERR_VFSMODULE_PARENT'))));\n                        } else {\n                            mkdir([{ id: id }]).then(resolve).catch(reject);\n                        }\n                    });\n                } else {\n                    mkdir(null).then(resolve).catch(reject);\n                }\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        trash(file) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.trash({ fileId: file.id });\n                request.execute(resp => {\n                    if (resp.id) {\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        untrash(file) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.untrash({ fileId: file.id });\n                request.execute(resp => {\n                    if (resp.id) {\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        emptyTrash() {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.emptyTrash({});\n                request.execute(resp => {\n                    if (resp && resp.message) {\n                        const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    } else {\n                        resolve(true);\n                    }\n                });\n            });\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n        unlink(src) {\n            const unlink = s => {\n                _treeCache = null;\n                return new Promise((resolve, reject) => {\n                    const request = gapi.client.drive.files.delete({ fileId: s.id });\n                    request.execute(resp => {\n                        if (resp && typeof resp.result === 'object') {\n                            resolve(true);\n                        } else {\n                            const msg = resp && resp.message ? resp.message : Locales._('ERR_APP_UNKNOWN_ERROR');\n                            reject(new Error(msg));\n                        }\n                    });\n                });\n            };\n            if (!src.id) {\n                return new Promise((resolve, reject) => {\n                    getFileFromPath(src.path, src.mime, (error, response) => {\n                        if (error) {\n                            reject(new Error(error));\n                        } else if (!response) {\n                            reject(new Error(Locales._('ERR_VFSMODULE_NOSUCH')));\n                        } else {\n                            unlink(response).then(resolve).catch(reject);\n                        }\n                    });\n                });\n            }\n            return unlink(src);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/windows-live-api',[\n    '../core/mount-manager',\n    './service-notification-icon',\n    '../utils/preloader',\n    '../core/locales',\n    '../core/config'\n], function (MountManager, ServiceNotificationIcon, Preloader, Locales, Config) {\n    'use strict';\n    const redirectURI = window.location.href.replace(/\\/$/, '') + '/windows-live-oauth.html';\n    let SingletonInstance = null;\n    class WindowsLiveAPI {\n        constructor(clientId) {\n            this.hasSession = false;\n            this.clientId = clientId;\n            this.loaded = false;\n            this.inited = false;\n            this.accessToken = null;\n            this.lastScope = null;\n            this.preloads = [{\n                    type: 'javascript',\n                    src: '//js.live.net/v5.0/wl.js'\n                }];\n        }\n        destroy() {\n        }\n        init(callback) {\n            callback = callback || function () {\n            };\n            if (this.loaded) {\n                callback(false, true);\n            } else {\n                Preloader.preload(this.preloads).then(result => {\n                    if (!result.failed.length) {\n                        this.loaded = true;\n                    }\n                    callback(result.failed.join('\\n'));\n                }).catch(() => callback());\n            }\n        }\n        load(scope, callback) {\n            console.debug('WindowsLiveAPI::load()', scope);\n            let WL = window.WL || {};\n            const _login = () => {\n                const lastScope = (this.lastScope || []).sort();\n                const currScope = (scope || []).sort();\n                if (this.hasSession && lastScope.toString() === currScope.toString()) {\n                    callback(false, true);\n                    return;\n                }\n                this.login(scope, (error, response) => {\n                    if (error) {\n                        callback(error);\n                        return;\n                    }\n                    setTimeout(() => {\n                        callback(false, true);\n                    }, 10);\n                });\n            };\n            this.init(error => {\n                if (error) {\n                    callback(error);\n                    return;\n                }\n                if (!window.WL) {\n                    callback(Locales._('WLAPI_LOAD_FAILURE'));\n                    return;\n                }\n                WL = window.WL || {};\n                if (this.inited) {\n                    _login();\n                } else {\n                    this.inited = true;\n                    WL.Event.subscribe('auth.login', (a, b, c, d) => {\n                        this.onLogin(a, b, c, d);\n                    });\n                    WL.Event.subscribe('auth.logout', (a, b, c, d) => {\n                        this.onLogout(a, b, c, d);\n                    });\n                    WL.Event.subscribe('wl.log', (a, b, c, d) => {\n                        this.onLog(a, b, c, d);\n                    });\n                    WL.Event.subscribe('auth.sessionChange', (a, b, c, d) => {\n                        this.onSessionChange(a, b, c, d);\n                    });\n                    WL.init({\n                        client_id: this.clientId,\n                        display: 'popup',\n                        redirect_uri: redirectURI\n                    }).then(result => {\n                        console.debug('WindowsLiveAPI::load()', '=>', result);\n                        if (result.session) {\n                            this.accessToken = result.session.access_token || null;\n                        }\n                        if (result.status === 'connected') {\n                            callback(false, true);\n                        } else if (result.status === 'success') {\n                            _login();\n                        } else {\n                            callback(Locales._('WLAPI_INIT_FAILED_FMT', result.status.toString()));\n                        }\n                    }, result => {\n                        console.error('WindowsLiveAPI::load()', 'init() error', result);\n                        callback(result.error_description);\n                    });\n                }\n            });\n        }\n        _removeRing() {\n            ServiceNotificationIcon.remove('Windows Live API');\n        }\n        logout(callback) {\n            callback = callback || function () {\n            };\n            const WL = window.WL || {};\n            if (this.hasSession) {\n                callback(false, false);\n            }\n            WL.Event.unsubscribe('auth.logout');\n            WL.Event.subscribe('auth.logout', () => {\n                this._removeRing();\n                WL.Event.unsubscribe('auth.logout');\n                callback(false, true);\n            });\n            WL.logout();\n            MountManager.remove('OneDrive');\n        }\n        login(scope, callback) {\n            const WL = window.WL || {};\n            if (this.hasSession) {\n                callback(false, true);\n                return;\n            }\n            WL.login({\n                scope: scope,\n                redirect_uri: redirectURI\n            }).then(result => {\n                if (result.status === 'connected') {\n                    callback(false, true);\n                } else {\n                    callback(Locales._('WLAPI_LOGIN_FAILED'));\n                }\n            }, result => {\n                callback(Locales._('WLAPI_LOGIN_FAILED_FMT', result.error_description));\n            });\n        }\n        onSessionChange() {\n            console.warn('WindowsLiveAPI::onSessionChange()', arguments);\n            const WL = window.WL || {};\n            const session = WL.getSession();\n            if (session) {\n                this.hasSession = true;\n            } else {\n                this.hasSession = false;\n            }\n        }\n        onLogin() {\n            console.warn('WindowsLiveAPI::onLogin()', arguments);\n            this.hasSession = true;\n            ServiceNotificationIcon.add('Windows Live API', [{\n                    title: Locales._('WLAPI_SIGN_OUT'),\n                    onClick: () => {\n                        this.logout();\n                    }\n                }]);\n        }\n        onLogout() {\n            console.warn('WindowsLiveAPI::onLogout()', arguments);\n            this.hasSession = false;\n            this._removeRing();\n        }\n        onLog() {\n            console.debug('WindowsLiveAPI::onLog()', arguments);\n        }\n    }\n    function instance() {\n        return SingletonInstance;\n    }\n    function create(args, callback) {\n        args = args || {};\n        function _run() {\n            const scope = args.scope;\n            SingletonInstance.load(scope, error => {\n                callback(error ? error : false, SingletonInstance);\n            });\n        }\n        if (SingletonInstance) {\n            _run();\n            return;\n        }\n        let clientId = null;\n        try {\n            clientId = Config.getConfig('WindowsLiveAPI.ClientId');\n        } catch (e) {\n            console.warn('getWindowsLiveAPI()', e, e.stack);\n        }\n        if (!clientId) {\n            callback(Locales._('WLAPI_DISABLED'));\n            return;\n        }\n        SingletonInstance = new WindowsLiveAPI(clientId);\n        _run();\n    }\n    return {\n        instance: instance,\n        create: create\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/onedrive',[\n    'skylark-axios',\n    '../transport',\n    '../file',\n    '../../core/config',\n    '../../core/locales',\n    '../../helpers/windows-live-api',\n    '../../utils/fs',\n    '../fs'\n], function ( Promise, Transport, FileMetadata, a, Locales, WindowsLiveAPI, FS, VFS) {\n    'use strict';\n    let _isMounted = false;\n    let _mimeCache;\n    function onedriveCall(args, callback) {\n        console.debug('OneDrive::*onedriveCall()', args);\n        const WL = window.WL || {};\n        WL.api(args).then(response => {\n            callback(false, response);\n        }, responseFailed => {\n            console.error('OneDrive::*onedriveCall()', 'error', responseFailed, args);\n            callback(responseFailed.error.message);\n        });\n    }\n    function getItemType(iter) {\n        let type = 'file';\n        if (iter.type === 'folder' || iter.type === 'album') {\n            type = 'dir';\n        }\n        return type;\n    }\n    function getItemMime(iter) {\n        if (!_mimeCache) {\n            _mimeCache = a.getConfig('MIME.mapping', {});\n        }\n        let mime = null;\n        if (getItemType(iter) !== 'dir') {\n            mime = 'application/octet-stream';\n            let ext = FS.filext(iter.name);\n            if (ext.length) {\n                ext = '.' + ext;\n                if (_mimeCache[ext]) {\n                    mime = _mimeCache[ext];\n                }\n            }\n        }\n        return mime;\n    }\n    function getMetadataFromItem(dir, item, root) {\n        const par = dir.replace(/^\\/+/, '').replace(/\\/+$/, '');\n        const path = root + (par ? par + '/' : par) + item.name;\n        const itemFile = new FileMetadata({\n            id: item.id,\n            filename: item.name,\n            size: item.size || 0,\n            path: path,\n            mime: getItemMime(item),\n            type: getItemType(item)\n        });\n        return itemFile;\n    }\n    function createDirectoryList(dir, list, item, options, root) {\n        const result = [];\n        if (dir !== '/') {\n            result.push(new FileMetadata({\n                id: item.id,\n                filename: '..',\n                path: FS.dirname(item.path),\n                size: 0,\n                type: 'dir'\n            }));\n        }\n        list.forEach(iter => {\n            result.push(getMetadataFromItem(dir, iter, root));\n        });\n        return result;\n    }\n    function getFilesInFolder(folderId, callback) {\n        onedriveCall({\n            path: folderId + '/files',\n            method: 'GET'\n        }, (error, response) => {\n            if (error) {\n                callback(error);\n                return;\n            }\n            console.debug('OneDrive::*getFilesInFolder()', '=>', response);\n            callback(false, response.data || []);\n        });\n    }\n    function resolvePath(item, callback, useParent) {\n        if (!useParent) {\n            if (item.id) {\n                callback(false, item.id);\n                return;\n            }\n        }\n        let path = FS.getPathFromVirtual(item.path).replace(/\\/+/, '/');\n        if (useParent) {\n            path = FS.dirname(path);\n        }\n        if (path === '/') {\n            callback(false, 'me/skydrive');\n            return;\n        }\n        const resolves = path.replace(/^\\/+/, '').split('/');\n        const isOnRoot = !resolves.length;\n        let currentParentId = 'me/skydrive';\n        function _nextDir(completed) {\n            const current = resolves.shift();\n            const done = resolves.length <= 0;\n            let found;\n            if (isOnRoot) {\n                found = currentParentId;\n            } else {\n                if (current) {\n                    getFilesInFolder(currentParentId, (error, list) => {\n                        list = list || [];\n                        let lfound;\n                        if (!error) {\n                            list.forEach(iter => {\n                                if (iter) {\n                                    if (iter.name === current) {\n                                        lfound = iter.id;\n                                    }\n                                }\n                            });\n                            if (lfound) {\n                                currentParentId = lfound;\n                            }\n                        } else {\n                            console.warn('OneDrive', 'resolvePath()', 'getFilesInFolder() error', error);\n                        }\n                        if (done) {\n                            completed(lfound);\n                        } else {\n                            _nextDir(completed);\n                        }\n                    });\n                    return;\n                }\n            }\n            if (done) {\n                completed(found);\n            } else {\n                _nextDir(completed);\n            }\n        }\n        _nextDir(foundId => {\n            if (foundId) {\n                callback(false, foundId);\n            } else {\n                callback(Locales._('ONEDRIVE_ERR_RESOLVE'));\n            }\n        });\n    }\n    return class OneDriveTransport extends Transport {\n        _init() {\n            return new Promise((resolve, reject) => {\n                const iargs = {\n                    scope: [\n                        'wl.signin',\n                        'wl.skydrive',\n                        'wl.skydrive_update'\n                    ]\n                };\n                if (_isMounted) {\n                    resolve(true);\n                } else {\n                    WindowsLiveAPI.create(iargs, error => {\n                        if (error) {\n                            reject(new Error(error));\n                        } else {\n                            _isMounted = true;\n                            resolve(true);\n                        }\n                    });\n                }\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                const relativePath = FS.getPathFromVirtual(item.path);\n                resolvePath(item, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                getFilesInFolder(response.id, (error, list) => {\n                                    if (error) {\n                                        reject(new Error(error));\n                                    } else {\n                                        const fileList = createDirectoryList(relativePath, list, item, options, mount.option('root'));\n                                        resolve(fileList);\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        read(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item).then(url => {\n                    const file = new FileMetadata(url, item.mime);\n                    VFS.read(file, options).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        write(file, data) {\n            return new Promise((resolve, reject) => {\n                const inst = WindowsLiveAPI.instance();\n                const url = 'https://apis.live.net/v5.0/me/skydrive/files?access_token=' + inst.accessToken;\n                const fd = new FormData();\n                FS.addFormFile(fd, 'file', data, file);\n                axios({\n                    url: url,\n                    method: 'POST',\n                    responseType: 'json',\n                    data: fd\n                }).then(response => {\n                    const result = response.data;\n                    if (result && result.id) {\n                        return resolve(result.id);\n                    }\n                    return reject(new Error(Locales._('ERR_APP_UNKNOWN_ERROR')));\n                }).catch(reject);\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                dest = new FileMetadata(FS.dirname(dest.path));\n                resolvePath(src, (error, srcDrivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        resolvePath(dest, (error, dstDrivePath) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                onedriveCall({\n                                    path: srcDrivePath,\n                                    method: 'COPY',\n                                    body: { destination: dstDrivePath }\n                                }, (error, response) => {\n                                    return error ? reject(new Error(error)) : resolve(true);\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                dest = new FileMetadata(FS.dirname(dest.path));\n                resolvePath(src, (error, srcDrivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        resolvePath(dest, (error, dstDrivePath) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                onedriveCall({\n                                    path: srcDrivePath,\n                                    method: 'MOVE',\n                                    body: { destination: dstDrivePath }\n                                }, (error, response) => {\n                                    return error ? reject(new Error(error)) : resolve(true);\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this.fileinfo(item).then(() => resolve(true)).catch(() => resolve(false));\n            });\n        }\n        fileinfo(item) {\n            return new Promise((resolve, reject) => {\n                resolvePath(item, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                const useKeys = [\n                                    'created_time',\n                                    'id',\n                                    'link',\n                                    'name',\n                                    'type',\n                                    'updated_time',\n                                    'upload_location',\n                                    'description',\n                                    'client_updated_time'\n                                ];\n                                const info = {};\n                                useKeys.forEach(k => {\n                                    info[k] = response[k];\n                                });\n                                resolve(info);\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        url(item) {\n            return new Promise((resolve, reject) => {\n                resolvePath(item, function (error, drivePath) {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath + '/content',\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                resolve(response.location);\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        mkdir(dir) {\n            return new Promise((resolve, reject) => {\n                resolvePath(dir, (error, drivePath) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'POST',\n                            body: { name: dir.filename }\n                        }, (error, response) => {\n                            return error ? reject(new Error(error)) : resolve(true);\n                        });\n                    }\n                }, true);\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n        unlink(src) {\n            return new Promise((resolve, reject) => {\n                resolvePath(src, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'DELETE'\n                        }, (error, response) => {\n                            return error ? reject(new Error(error)) : resolve(true);\n                        });\n                    }\n                });\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/dropbox',[\n    '../transport',\n    '../../utils/preloader',\n    '../../core/config',\n    '../file',\n    '../../utils/misc',\n    '../../core/locales',\n    '../../utils/fs'\n], function (Transport, Preloader, Config, FileMetadata, b, Locales, FS) {\n    'use strict';\n    const AUTH_TIMEOUT = 1000 * 30;\n    const MAX_RESULTS = 100;\n    return class DropboxTransport extends Transport {\n        constructor() {\n            super(...arguments);\n            this.loaded = false;\n            this.authed = false;\n            this.dbx = null;\n        }\n        _loadDependencies() {\n            if (this.loaded) {\n                return Promise.resolve(true);\n            }\n            return new Promise((resolve, reject) => {\n                Preloader.preload(['https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js']).then(() => {\n                    if (window.Dropbox) {\n                        this.loaded = true;\n                        return resolve(true);\n                    }\n                    return reject(new Error(Locales._('ERR_DROPBOX_API')));\n                }).catch(err => {\n                    this.loaded = true;\n                    return reject(err);\n                });\n            });\n        }\n        _createClient(clientId) {\n            if (this.authed) {\n                return Promise.resolve(true);\n            }\n            return new Promise((resolve, reject) => {\n                let timedOut;\n                let loginTimeout;\n                this.dbx = new window.Dropbox({ clientId: clientId });\n                const redirectUrl = window.location.href.replace(/\\/?$/, '/') + 'dropbox-oauth.html';\n                const callbackName = '__osjs__dropbox_callback__';\n                window[callbackName] = url => {\n                    clearTimeout(loginTimeout);\n                    if (timedOut) {\n                        return;\n                    }\n                    const params = b.urlparams(url, true);\n                    if (params.access_token) {\n                        this.authed = true;\n                        this.dbx = new window.Dropbox({ accessToken: params.access_token });\n                        resolve(true);\n                    } else {\n                        reject(new Error(Locales._('ERR_DROPBOX_AUTH')));\n                    }\n                };\n                const authUrl = this.dbx.getAuthenticationUrl(redirectUrl);\n                loginTimeout = setTimeout(() => {\n                    timedOut = true;\n                    reject(new Error(Locales._('ERR_DROPBOX_AUTH')));\n                }, AUTH_TIMEOUT);\n                window.open(authUrl);\n            });\n        }\n        _init() {\n            const clientId = Config.getConfig('DropboxAPI.ClientKey');\n            if (!clientId) {\n                return Promise.reject(new Error(Locales._('ERR_DROPBOX_KEY')));\n            }\n            return new Promise((resolve, reject) => {\n                this._loadDependencies().then(() => {\n                    return this._createClient(clientId).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(err => {\n                        if (typeof err !== 'string' && !(err instanceof Error)) {\n                            if (err.status && err.response && err.error) {\n                                return reject(new Error(err.error.error_summary));\n                            }\n                        }\n                        return reject(err);\n                    });\n                }).catch(reject);\n            });\n        }\n        _createMetadata(root, iter) {\n            return {\n                id: iter.id,\n                filename: iter.name,\n                path: FS.pathJoin(root, iter.path_display),\n                type: iter['.tag'] === 'folder' ? 'dir' : 'file',\n                size: iter.size || 0\n            };\n        }\n        find(file, options, a, mount) {\n            const root = FS.getPathFromVirtual(file.path);\n            return new Promise((resolve, reject) => {\n                this.dbx.filesSearch({\n                    path: root === '/' ? '' : root,\n                    query: options.query,\n                    max_results: MAX_RESULTS,\n                    mode: { '.tag': 'filename' }\n                }).then(response => {\n                    return resolve(response.matches.map(iter => {\n                        return this._createMetadata(mount.option('root'), iter.metadata);\n                    }));\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            const root = FS.getPathFromVirtual(item.path);\n            let result = [];\n            const scandir = cursor => new Promise((resolve, reject) => {\n                const m = cursor ? 'filesListFolderContinue' : 'filesListFolder';\n                const a = cursor ? { cursor } : { path: root === '/' ? '' : root };\n                this.dbx[m](a).then(response => {\n                    const found = (response.entries || []).map(iter => {\n                        return this._createMetadata(mount.option('root'), iter);\n                    });\n                    result = result.concat(found);\n                    if (response.has_more && response.cursor) {\n                        return scandir(response.cursor).then(resolve).catch(reject);\n                    }\n                    return resolve(result);\n                }).catch(reject);\n            });\n            return scandir(null);\n        }\n        read(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item, { dl: 0 }).then(url => {\n                    this.dbx.sharingGetSharedLinkFile({ url }).then(data => {\n                        return resolve(data.fileBlob);\n                    }).catch(reject);\n                }).catch(reject);\n            });\n        }\n        write(file, data) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesUpload({\n                    path: FS.getPathFromVirtual(file.path),\n                    mode: { '.tag': 'overwrite' },\n                    contents: data\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesCopy({\n                    from_path: FS.getPathFromVirtual(src.path),\n                    to_path: FS.getPathFromVirtual(dest.path)\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesMove({\n                    from_path: FS.getPathFromVirtual(src.path),\n                    to_path: FS.getPathFromVirtual(dest.path)\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this.fileinfo(item).then(() => resolve(true)).catch(() => resolve(false));\n            });\n        }\n        fileinfo(item) {\n            return this.dbx.filesGetMetadata({ path: FS.getPathFromVirtual(item.path) });\n        }\n        url(item, options) {\n            const visibility = 'public';\n            const hasLink = () => new Promise((resolve, reject) => {\n                this.dbx.sharingGetSharedLinks({ path: FS.getPathFromVirtual(item.path) }).then(response => {\n                    if (response.links.length) {\n                        const found = response.links.find(iter => iter.visibility['.tag'] === visibility);\n                        const dl = typeof options.dl === 'undefined' ? 1 : options.dl;\n                        if (found) {\n                            return resolve(found.url.replace('dl=0', 'dl=' + String(dl)));\n                        }\n                    }\n                    return resolve(false);\n                }).catch(reject);\n            });\n            const newLink = () => new Promise((resolve, reject) => {\n                this.dbx.sharingCreateSharedLinkWithSettings({\n                    path: FS.getPathFromVirtual(item.path),\n                    settings: { requested_visibility: visibility }\n                }).then(response => {\n                    return resolve(response.url);\n                }).catch(reject);\n            });\n            return new Promise((resolve, reject) => {\n                hasLink().then(url => {\n                    if (url) {\n                        console.warn('ALREADY HAS URL', url);\n                        return resolve(url);\n                    }\n                    console.warn('CREATING NEW URL');\n                    return newLink().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        mkdir(dir) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesCreateFolder({ path: FS.getPathFromVirtual(dir.path) }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        freeSpace(root) {\n            return new Promise((resolve, reject) => {\n                this.dbx.usersGetSpaceUsage().then(response => {\n                    try {\n                        if (response.allocation && typeof response.allocation.individual !== 'undefined') {\n                            return resolve(response.allocation.individual.allocated);\n                        }\n                    } catch (e) {\n                        console.warn(e);\n                    }\n                    return resolve(-1);\n                }).catch(reject);\n            });\n        }\n        unlink(src) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesDelete({ path: FS.getPathFromVirtual(src.path) }).then(() => resolve(true)).catch(reject);\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/init',[\n    './locales',\n    './mount-manager',\n    './settings-manager',\n    './package-manager',\n    './search-engine',\n    './authenticator',\n    './window-manager',\n    './dialog',\n    './storage',\n    './process',\n    './theme',\n    './connection',\n    '../helpers/hooks',\n    './config',\n    '../gui/splash',\n    '../utils/misc',\n    '../gui/menu',\n    '../gui/notification',\n    '../utils/preloader',\n    '../dialogs/alert',\n    '../dialogs/applicationchooser',\n    '../dialogs/color',\n    '../dialogs/confirm',\n    '../dialogs/error',\n    '../dialogs/fileinfo',\n    '../dialogs/file',\n    '../dialogs/fileprogress',\n    '../dialogs/fileupload',\n    '../dialogs/font',\n    '../dialogs/input',\n    \"../vfs/fs\",\n    \"../vfs/transports/web\",\n    \"../vfs/transports/osjs\",\n    \"../vfs/transports/dist\",\n    \"../vfs/transports/applications\",\n    \"../vfs/transports/webdav\",\n    \"../vfs/transports/google-drive\",\n    \"../vfs/transports/onedrive\",\n    \"../vfs/transports/dropbox\"\n\n\n], function (\n    Locales, \n    MountManager, \n    SettingsManager, \n    PackageManager, \n    SearchEngine, \n    Authenticator, \n    WindowManager, \n    DialogWindow, \n    Storage, \n    Process, \n    Theme, \n    Connection, \n    Hooks, \n    Config, \n    SplashScreen, \n    Utils, \n    Menu, \n    Notification,\n    Preloader, \n    AlertDialog, \n    ApplicationChooserDialog, \n    ColorDialog, \n    ConfirmDialog, \n    ErrorDialog, \n    FileInfoDialog, \n    FileDialog, \n    FileProgressDialog, \n    FileUploadDialog, \n    FontDialog, \n    InputDialog,\n    VFS,\n    WebTransport,\n    OsjsTransport,\n    DistTransport,\n    ApplicationTransport,\n    WebdavTransport,\n    GdriveTransport,\n    OnedriveTransport,\n    DropboxTransport\n) {\n    'use strict';\n\n   const  OSJS_DEBUG = false;\n\n    Promise.each = function(arr, fn) { // take an array and a function // added by lwf\n      // invalid input\n      if(!Array.isArray(arr)) return Promise.reject(new Error(\"Non array passed to each\"));\n      // empty case\n      if(arr.length === 0) return Promise.resolve(); \n      return arr.reduce(function(prev, cur,idx) { \n        return prev.then(() => fn(cur,idx))\n      }, Promise.resolve());\n    }\n\n    function loadTransports() {\n        const result = {\n            'web' : WebdavTransport.default,\n            'osjs' : OnedriveTransport.default,\n            'dist' : DistTransport.default,\n            'applications' : ApplicationTransport.default,\n            'webdav' : WebdavTransport.default,\n            'google-drive' : GdriveTransport.default,\n            'onedrive' : OnedriveTransport.default,\n            'dropbox' : DropboxTransport.default\n        };\n\n        return result;\n    }\n\n    let hasBooted = false;\n    let hasShutDown = false;\n    function onError(title, message, error, exception, bugreport) {\n        bugreport = (() => {\n            if (Config.getConfig('BugReporting.enabled')) {\n                return typeof bugreport === 'undefined' ? false : bugreport ? true : false;\n            }\n            return false;\n        })();\n        function _dialog() {\n            const wm = WindowManager.instance;\n            if (wm && wm._fullyLoaded) {\n                try {\n                    DialogWindow.create('Error', {\n                        title: title,\n                        message: message,\n                        error: error,\n                        exception: exception,\n                        bugreport: bugreport\n                    });\n                    return true;\n                } catch (e) {\n                    console.warn('An error occured while creating Error Dialog', e);\n                    console.warn('stack', e.stack);\n                }\n            }\n            return false;\n        }\n        Menu.blur();\n        if (exception instanceof Error && (exception.message.match(/^Script Error/i) && String(exception.lineNumber).match(/^0/))) {\n            console.error('VENDOR ERROR', {\n                title: title,\n                message: message,\n                error: error,\n                exception: exception\n            });\n            return;\n        } else {\n            console.error(title, message, error, exception);\n        }\n        const testMode = OSJS_DEBUG && window.location.hash.match(/mocha=true/);\n        if (!testMode) {\n            if (!_dialog()) {\n                window.alert(title + '\\n\\n' + message + '\\n\\n' + error);\n            }\n        }\n    }\n    const initPreloading = config => new Promise((resolve, reject) => {\n        const flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n        Preloader.preload(flatten(config.Preloads)).then(result => {\n            return resolve();\n        }).catch(reject);\n    });\n    const initHandlers = config => new Promise((resolve, reject) => {\n        const options = config.Connection;\n        console.log({\n            authenticator: options.Authenticator,\n            connection: options.Connection,\n            storage: options.Storage\n        });\n        let Authenticator, Connection, Storage;\n        let connectionName = options.Connection.split('+').indexOf('ws') !== -1 ? 'ws' : 'http';\n        try {\n            Authenticator = OSjs.require('core/auth/' + options.Authenticator); // modified by lwf\n            Connection = OSjs.require('core/connections/' + connectionName); // modified by lwf\n            Storage = OSjs.require('core/storage/' + options.Storage ); // modified by lwf\n        } catch (e) {\n            reject(e);\n            return;\n        }\n        const connection = new Connection();\n        const authenticator = new Authenticator();\n        const storage = new Storage();\n        Promise.each([\n            connection,\n            storage,\n            authenticator\n        ], iter => {\n            return iter.init();\n        }).then(resolve).catch(reject);\n    });\n    const initVFS = config => new Promise((resolve, reject) => {\n        const mountPoints = SettingsManager.instance('VFS').get('mounts', []);\n        MountManager.init(loadTransports).then(res => {  // modified by lwf\n            return MountManager.addList(mountPoints).then(res => {\n                return resolve(res);\n            }).catch(e => {\n                console.warn('A module failed to load!', e);\n                resolve();\n            });\n        }).catch(reject);\n    });\n    const initSettingsManager = config => new Promise((resolve, reject) => {\n        const pools = config.SettingsManager || {};\n        Object.keys(pools).forEach(function (poolName) {\n            console.debug('initSettingsManager()', 'initializes pool', poolName, pools[poolName]);\n            SettingsManager.instance(poolName, pools[poolName] || {});\n        });\n        resolve();\n    });\n    const initPackageManager = config => new Promise((resolve, reject) => {\n        const list = config.PreloadOnBoot || [];\n        let metadata = {};\n        try {\n            metadata = OSjs.getManifest();\n        } catch (e) {\n        }\n        const auth = Authenticator.instance;\n        PackageManager.init(Authenticator,VFS,metadata, auth.isStandalone).then(() => { //modified by lwf\n            return Promise.each(list, iter => {\n                return new Promise(next => {\n                    var pkg = PackageManager.getPackage(iter);\n                    if (pkg && pkg.preload) {\n                        Preloader.preload(pkg.preload).then(next).catch(() => next());\n                    } else {\n                        next();\n                    }\n                });\n            }).then(resolve).catch(reject);\n        }).catch(reject);\n    });\n    const initExtensions = config => new Promise((resolve, reject) => {\n        const packages = PackageManager.getPackages(); \n        const preloadExtensions = () => new Promise((resolve, reject) => {\n            let preloads = [];\n            Object.keys(packages).forEach(k => {\n                const iter = packages[k];\n                if (iter.type === 'extension' && iter.preload) {\n                    preloads = preloads.concat(iter.preload);\n                }\n            });\n            if (preloads.length) {\n                Preloader.preload(preloads).then(resolve).catch(() => resolve());\n            } else {\n                resolve();\n            }\n        });\n        const launchExtensions = () => new Promise((resolve, reject) => {\n            const exts = Object.keys(OSjs.Extensions);\n            Promise.each(exts, entry => {\n                return new Promise((yes, no) => {\n                    try {\n                        const m = packages[entry];\n                        let promise = OSjs.Extensions[entry].init(m);\n                        if (!(promise instanceof Promise)) {\n                            promise = Promise.resolve(true);\n                        }\n                        promise.then(yes).catch(err => {\n                            console.error(err);\n                            return yes(false);\n                        });\n                    } catch (e) {\n                        console.warn('Extension init failed', e.stack, e);\n                        yes(false);\n                    }\n                });\n            }).then(resolve).catch(err => {\n                console.warn(err);\n                reject(new Error(err));\n            });\n        });\n        preloadExtensions().then(() => {\n            return launchExtensions().then(resolve).catch(reject);\n        }).catch(() => resolve());\n    });\n    const initSearchEngine = config => new Promise((resolve, reject) => {\n        SearchEngine.init().then(resolve).catch(reject);\n    });\n    const initGUI = config => new Promise((resolve, reject) => {\n        const guiElements = [\n            'containers',\n            'visual',\n            'tabs',\n            'richtext',\n            'misc',\n            'inputs',\n            'treeview',\n            'listview',\n            'iconview',\n            'fileview',\n            'menus'\n        ];\n        guiElements.forEach(f => {\n            const gel = OSjs.require('gui/elements/' + f); // modified by lwf\n            Object.keys(gel).forEach(name => {\n                gel[name].register();\n            });\n        });\n        OSjs.error = onError;\n        OSjs.Dialogs.Alert = AlertDialog;\n        OSjs.Dialogs.ApplicationChooser = ApplicationChooserDialog;\n        OSjs.Dialogs.Color = ColorDialog;\n        OSjs.Dialogs.Confirm = ConfirmDialog;\n        OSjs.Dialogs.Error = ErrorDialog;\n        OSjs.Dialogs.File = FileDialog;\n        OSjs.Dialogs.FileInfo = FileInfoDialog;\n        OSjs.Dialogs.FileProgress = FileProgressDialog;\n        OSjs.Dialogs.FileUpload = FileUploadDialog;\n        OSjs.Dialogs.Font = FontDialog;\n        OSjs.Dialogs.Input = InputDialog;\n        Theme.init(VFS); // modified by lwf\n        resolve();\n    });\n    const initWindowManager = config => new Promise((resolve, reject) => {\n        const wmConfig = config.WindowManager;\n        if (!wmConfig || !wmConfig.exec) {\n            reject(new Error(Locales._('ERR_CORE_INIT_NO_WM')));\n        } else {\n            Process.create(wmConfig.exec, wmConfig.args || {}).then(app => {\n                return app.setup().then(resolve).catch(reject);\n            }).catch(error => {\n                reject(new Error(Locales._('ERR_CORE_INIT_WM_FAILED_FMT', error)));\n            });\n        }\n    });\n    const initMocha = config => new Promise((resolve, reject) => {\n        const div = document.createElement('div');\n        div.id = 'mocha';\n        document.body.appendChild(div);\n        document.body.style.overflow = 'auto';\n        document.body.style.backgroundColor = '#ffffff';\n        Preloader.preload([\n            '/test.css',\n            '/test.js'\n        ]).then(() => {\n            OSjs.runTests();\n        });\n        resolve(true);\n    });\n    function initSession(config) {\n        console.debug('initSession()');\n        var list = [];\n        try {\n            list = config.AutoStart;\n        } catch (e) {\n            console.warn('initSession()->autostart()', 'exception', e, e.stack);\n        }\n        var checkMap = {};\n        var skipMap = [];\n        list.forEach(function (iter, idx) {\n            if (typeof iter === 'string') {\n                iter = list[idx] = { name: iter };\n            }\n            if (skipMap.indexOf(iter.name) === -1) {\n                if (!checkMap[iter.name]) {\n                    checkMap[iter.name] = idx;\n                    skipMap.push(iter.name);\n                }\n            }\n        });\n        return new Promise(resolve => {\n            Storage.instance.getLastSession(SettingsManager).then(adds => {  // modified by lwf\n                adds.forEach(function (iter) {\n                    if (typeof checkMap[iter.name] === 'undefined') {\n                        list.push(iter);\n                    } else {\n                        if (iter.args) {\n                            var refid = checkMap[iter.name];\n                            var ref = list[refid];\n                            if (!ref.args) {\n                                ref.args = {};\n                            }\n                            ref.args = Utils.mergeObject(ref.args, iter.args);\n                        }\n                    }\n                });\n                console.info('initSession()->autostart()', list);\n                return Process.createFromArray(list).then(resolve).catch(resolve);\n            }).catch(err => {\n                console.warn(err);\n                resolve();\n            });\n        });\n    }\n    function onMessage(ev) {\n        if (ev && ev.data && typeof ev.data.message !== 'undefined' && typeof ev.data.pid === 'number') {\n            console.debug('window::message()', ev.data);\n            var proc = Process.getProcess(ev.data.pid);\n            if (proc) {\n                if (typeof proc.onPostMessage === 'function') {\n                    proc.onPostMessage(ev.data.message, ev);\n                }\n                if (typeof proc._getWindow === 'function') {\n                    var win = proc._getWindow(ev.data.wid, 'wid');\n                    if (win) {\n                        win.onPostMessage(ev.data.message, ev);\n                    }\n                }\n            }\n        }\n    }\n    function start() {\n        if (hasBooted || hasShutDown) {\n            return;\n        }\n        hasBooted = true;\n        console.info('Starting OS.js');\n        const config = OSjs.getConfig();\n        const testMode = OSJS_DEBUG && window.location.hash.match(/mocha=true/);\n        const total = 9;\n        Locales.init(config.Locale, config.LocaleOptions, config.Languages);\n        SplashScreen.watermark(config);\n        SplashScreen.show();\n        Hooks.triggerHook('initialize');\n        Promise.each([\n            initPreloading,\n            initHandlers,\n            initVFS,\n            initSettingsManager,\n            initPackageManager,\n            initExtensions,\n            initSearchEngine,\n            initGUI,\n            testMode ? initMocha : initWindowManager\n        ], (fn, index) => {\n            return new Promise((resolve, reject) => {\n                console.group('Initializing', index + 1, 'of', total);\n                SplashScreen.update(index, total);\n                return fn(config).then(res => {\n                    console.groupEnd();\n                    return resolve(res);\n                }).catch(err => {\n                    console.warn(err);\n                    console.groupEnd();\n                    return reject(new Error(err));\n                });\n            });\n        }).then(() => {\n            console.info('Done!');\n            window.addEventListener('message', onMessage, false);\n            Hooks.triggerHook('initialized');\n            SplashScreen.hide();\n            if (!testMode) {\n                Theme.playSound('LOGIN');\n                var wm = WindowManager.instance;\n                if (wm) {\n                    wm._fullyLoaded = true;\n                }\n                initSession(config).then(() => {\n                    return Hooks.triggerHook('sessionLoaded');\n                });\n            }\n            return true;\n        }).catch(err => {\n            const title = Locales._('ERR_CORE_INIT_FAILED');\n            const message = Locales._('ERR_CORE_INIT_FAILED_DESC');\n            alert(title + '\\n\\n' + message);\n            console.error(title, message, err);\n        });\n    }\n    function stop(restart = false) {\n        if (hasShutDown || !hasBooted) {\n            return;\n        }\n        hasShutDown = true;\n        hasBooted = false;\n        window.removeEventListener('message', onMessage, false);\n        const wm = WindowManager.instance;\n        if (wm) {\n            wm.toggleFullscreen();\n        }\n        Preloader.clear();\n        Menu.blur();\n        Process.killAll();\n        SearchEngine.destroy();\n        PackageManager.destroy();\n        Authenticator.instance.destroy();\n        Storage.instance.destroy();\n        Connection.instance.destroy();\n        Hooks.triggerHook('shutdown');\n        console.warn('OS.js was shut down!');\n        if (!restart && Config.getConfig('ReloadOnShutdown') === true) {\n            window.location.reload();\n        }\n    }\n    function restart(save = false) {\n        const lout = cb => Authenticator.instance.logout().then(cb).catch(cb);\n        const saveFunction = save && Storage.instance ? function (cb) {\n            Storage.instance.saveSession().then(() => lout(cb)).catch(() => lout(cb));\n        } : lout;\n        saveFunction(function () {\n            console.clear();\n            stop(true);\n            start();\n        });\n    }\n    function logout() {\n        const storage = Storage.instance;\n        const wm = WindowManager.instance;\n        function signOut(save) {\n            Theme.playSound('LOGOUT');\n            const lout = cb => Authenticator.instance.logout().then(cb).catch(cb);\n            if (save) {\n                storage.saveSession(Process,SettingsManager).then(() => lout(stop)).catch(() => lout(stop)); // modified by lwf\n            } else {\n                lout(stop);\n            }\n        }\n        if (wm) {\n            const user = Authenticator.instance.getUser() || { name: Locales._('LBL_UNKNOWN') };\n            DialogWindow.create('Confirm', {\n                title: Locales._('DIALOG_LOGOUT_TITLE'),\n                message: Locales._('DIALOG_LOGOUT_MSG_FMT', user.name)\n            }, function (ev, btn) {\n                if ([\n                        'no',\n                        'yes'\n                    ].indexOf(btn) !== -1) {\n                    signOut(btn === 'yes');\n                }\n            });\n        } else {\n            signOut(true);\n        }\n    }\n    function running() {\n        return !hasShutDown;\n    }\n    return {\n        start: start,\n        stop: stop,\n        restart: restart,\n        logout: logout,\n        running: running\n    };\n});\ndefine('skylark-osjsv2-client/utils/pepjs',[], function () { \r\n  'use strict';\r\n\r\n  /**\r\n   * This is the constructor for new PointerEvents.\r\n   *\r\n   * New Pointer Events must be given a type, and an optional dictionary of\r\n   * initialization properties.\r\n   *\r\n   * Due to certain platform requirements, events returned from the constructor\r\n   * identify as MouseEvents.\r\n   *\r\n   * @constructor\r\n   * @param {String} inType The type of the event to create.\r\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\r\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\r\n   */\r\n  var MOUSE_PROPS = [\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n    'pageX',\r\n    'pageY'\r\n  ];\r\n\r\n  var MOUSE_DEFAULTS = [\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  function PointerEvent(inType, inDict) {\r\n    inDict = inDict || Object.create(null);\r\n\r\n    var e = document.createEvent('Event');\r\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\r\n\r\n    // define inherited MouseEvent properties\r\n    // skip bubbles and cancelable since they're set above in initEvent()\r\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\r\n      p = MOUSE_PROPS[i];\r\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\r\n    }\r\n    e.buttons = inDict.buttons || 0;\r\n\r\n    // Spec requires that pointers without pressure specified use 0.5 for down\r\n    // state and 0 for up state.\r\n    var pressure = 0;\r\n\r\n    if (inDict.pressure && e.buttons) {\r\n      pressure = inDict.pressure;\r\n    } else {\r\n      pressure = e.buttons ? 0.5 : 0;\r\n    }\r\n\r\n    // add x/y properties aliased to clientX/Y\r\n    e.x = e.clientX;\r\n    e.y = e.clientY;\r\n\r\n    // define the properties of the PointerEvent interface\r\n    e.pointerId = inDict.pointerId || 0;\r\n    e.width = inDict.width || 0;\r\n    e.height = inDict.height || 0;\r\n    e.pressure = pressure;\r\n    e.tiltX = inDict.tiltX || 0;\r\n    e.tiltY = inDict.tiltY || 0;\r\n    e.twist = inDict.twist || 0;\r\n    e.tangentialPressure = inDict.tangentialPressure || 0;\r\n    e.pointerType = inDict.pointerType || '';\r\n    e.hwTimestamp = inDict.hwTimestamp || 0;\r\n    e.isPrimary = inDict.isPrimary || false;\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * This module implements a map of pointer states\r\n   */\r\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\r\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\r\n\r\n  function SparseArrayMap() {\r\n    this.array = [];\r\n    this.size = 0;\r\n  }\r\n\r\n  SparseArrayMap.prototype = {\r\n    set: function(k, v) {\r\n      if (v === undefined) {\r\n        return this.delete(k);\r\n      }\r\n      if (!this.has(k)) {\r\n        this.size++;\r\n      }\r\n      this.array[k] = v;\r\n    },\r\n    has: function(k) {\r\n      return this.array[k] !== undefined;\r\n    },\r\n    delete: function(k) {\r\n      if (this.has(k)) {\r\n        delete this.array[k];\r\n        this.size--;\r\n      }\r\n    },\r\n    get: function(k) {\r\n      return this.array[k];\r\n    },\r\n    clear: function() {\r\n      this.array.length = 0;\r\n      this.size = 0;\r\n    },\r\n\r\n    // return value, key, map\r\n    forEach: function(callback, thisArg) {\r\n      return this.array.forEach(function(v, k) {\r\n        callback.call(thisArg, v, k, this);\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  var CLONE_PROPS = [\r\n\r\n    // MouseEvent\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n\r\n    // DOM Level 3\r\n    'buttons',\r\n\r\n    // PointerEvent\r\n    'pointerId',\r\n    'width',\r\n    'height',\r\n    'pressure',\r\n    'tiltX',\r\n    'tiltY',\r\n    'pointerType',\r\n    'hwTimestamp',\r\n    'isPrimary',\r\n\r\n    // event instance\r\n    'type',\r\n    'target',\r\n    'currentTarget',\r\n    'which',\r\n    'pageX',\r\n    'pageY',\r\n    'timeStamp'\r\n  ];\r\n\r\n  var CLONE_DEFAULTS = [\r\n\r\n    // MouseEvent\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n\r\n    // DOM Level 3\r\n    0,\r\n\r\n    // PointerEvent\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    '',\r\n    0,\r\n    false,\r\n\r\n    // event instance\r\n    '',\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  var BOUNDARY_EVENTS = {\r\n    'pointerover': 1,\r\n    'pointerout': 1,\r\n    'pointerenter': 1,\r\n    'pointerleave': 1\r\n  };\r\n\r\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\r\n\r\n  /**\r\n   * This module is for normalizing events. Mouse and Touch events will be\r\n   * collected here, and fire PointerEvents that have the same semantics, no\r\n   * matter the source.\r\n   * Events fired:\r\n   *   - pointerdown: a pointing is added\r\n   *   - pointerup: a pointer is removed\r\n   *   - pointermove: a pointer is moved\r\n   *   - pointerover: a pointer crosses into an element\r\n   *   - pointerout: a pointer leaves an element\r\n   *   - pointercancel: a pointer will no longer generate events\r\n   */\r\n  var dispatcher = {\r\n    pointermap: new PointerMap(),\r\n    eventMap: Object.create(null),\r\n    captureInfo: Object.create(null),\r\n\r\n    // Scope objects for native events.\r\n    // This exists for ease of testing.\r\n    eventSources: Object.create(null),\r\n    eventSourceList: [],\r\n    /**\r\n     * Add a new event source that will generate pointer events.\r\n     *\r\n     * `inSource` must contain an array of event names named `events`, and\r\n     * functions with the names specified in the `events` array.\r\n     * @param {string} name A name for the event source\r\n     * @param {Object} source A new source of platform events.\r\n     */\r\n    registerSource: function(name, source) {\r\n      var s = source;\r\n      var newEvents = s.events;\r\n      if (newEvents) {\r\n        newEvents.forEach(function(e) {\r\n          if (s[e]) {\r\n            this.eventMap[e] = s[e].bind(s);\r\n          }\r\n        }, this);\r\n        this.eventSources[name] = s;\r\n        this.eventSourceList.push(s);\r\n      }\r\n    },\r\n    register: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.register.call(es, element);\r\n      }\r\n    },\r\n    unregister: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.unregister.call(es, element);\r\n      }\r\n    },\r\n    contains: /*scope.external.contains || */function(container, contained) {\r\n      try {\r\n        return container.contains(contained);\r\n      } catch (ex) {\r\n\r\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\r\n        return false;\r\n      }\r\n    },\r\n\r\n    // EVENTS\r\n    down: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerdown', inEvent);\r\n    },\r\n    move: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointermove', inEvent);\r\n    },\r\n    up: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerup', inEvent);\r\n    },\r\n    enter: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerenter', inEvent);\r\n    },\r\n    leave: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerleave', inEvent);\r\n    },\r\n    over: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerover', inEvent);\r\n    },\r\n    out: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerout', inEvent);\r\n    },\r\n    cancel: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointercancel', inEvent);\r\n    },\r\n    leaveOut: function(event) {\r\n      this.out(event);\r\n      this.propagate(event, this.leave, false);\r\n    },\r\n    enterOver: function(event) {\r\n      this.over(event);\r\n      this.propagate(event, this.enter, true);\r\n    },\r\n\r\n    // LISTENER LOGIC\r\n    eventHandler: function(inEvent) {\r\n\r\n      // This is used to prevent multiple dispatch of pointerevents from\r\n      // platform events. This can happen when two elements in different scopes\r\n      // are set up to create pointer events, which is relevant to Shadow DOM.\r\n      if (inEvent._handledByPE) {\r\n        return;\r\n      }\r\n      var type = inEvent.type;\r\n      var fn = this.eventMap && this.eventMap[type];\r\n      if (fn) {\r\n        fn(inEvent);\r\n      }\r\n      inEvent._handledByPE = true;\r\n    },\r\n\r\n    // set up event listeners\r\n    listen: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.addEvent(target, e);\r\n      }, this);\r\n    },\r\n\r\n    // remove event listeners\r\n    unlisten: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.removeEvent(target, e);\r\n      }, this);\r\n    },\r\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\r\n      target.addEventListener(eventName, this.boundHandler);\r\n    },\r\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\r\n      target.removeEventListener(eventName, this.boundHandler);\r\n    },\r\n\r\n    // EVENT CREATION AND TRACKING\r\n    /**\r\n     * Creates a new Event of type `inType`, based on the information in\r\n     * `inEvent`.\r\n     *\r\n     * @param {string} inType A string representing the type of event to create\r\n     * @param {Event} inEvent A platform event with a target\r\n     * @return {Event} A PointerEvent of type `inType`\r\n     */\r\n    makeEvent: function(inType, inEvent) {\r\n\r\n      // relatedTarget must be null if pointer is captured\r\n      if (this.captureInfo[inEvent.pointerId]) {\r\n        inEvent.relatedTarget = null;\r\n      }\r\n      var e = new PointerEvent(inType, inEvent);\r\n      if (inEvent.preventDefault) {\r\n        e.preventDefault = inEvent.preventDefault;\r\n      }\r\n      e._target = e._target || inEvent.target;\r\n      return e;\r\n    },\r\n\r\n    // make and dispatch an event in one call\r\n    fireEvent: function(inType, inEvent) {\r\n      var e = this.makeEvent(inType, inEvent);\r\n      return this.dispatchEvent(e);\r\n    },\r\n    /**\r\n     * Returns a snapshot of inEvent, with writable properties.\r\n     *\r\n     * @param {Event} inEvent An event that contains properties to copy.\r\n     * @return {Object} An object containing shallow copies of `inEvent`'s\r\n     *    properties.\r\n     */\r\n    cloneEvent: function(inEvent) {\r\n      var eventCopy = Object.create(null);\r\n      var p;\r\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\r\n        p = CLONE_PROPS[i];\r\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\r\n\r\n        // Work around SVGInstanceElement shadow tree\r\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\r\n        // This is the behavior implemented by Firefox.\r\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\r\n          if (eventCopy[p] instanceof SVGElementInstance) {\r\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\r\n          }\r\n        }\r\n      }\r\n\r\n      // keep the semantics of preventDefault\r\n      if (inEvent.preventDefault) {\r\n        eventCopy.preventDefault = function() {\r\n          inEvent.preventDefault();\r\n        };\r\n      }\r\n      return eventCopy;\r\n    },\r\n    getTarget: function(inEvent) {\r\n      var capture = this.captureInfo[inEvent.pointerId];\r\n      if (!capture) {\r\n        return inEvent._target;\r\n      }\r\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\r\n        return capture;\r\n      }\r\n    },\r\n    propagate: function(event, fn, propagateDown) {\r\n      var target = event.target;\r\n      var targets = [];\r\n\r\n      // Order of conditions due to document.contains() missing in IE.\r\n      while (target !== document && !target.contains(event.relatedTarget)) {\r\n        targets.push(target);\r\n        target = target.parentNode;\r\n\r\n        // Touch: Do not propagate if node is detached.\r\n        if (!target) {\r\n          return;\r\n        }\r\n      }\r\n      if (propagateDown) {\r\n        targets.reverse();\r\n      }\r\n      targets.forEach(function(target) {\r\n        event.target = target;\r\n        fn.call(this, event);\r\n      }, this);\r\n    },\r\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\r\n      if (this.captureInfo[inPointerId]) {\r\n        this.releaseCapture(inPointerId, skipDispatch);\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = inTarget;\r\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\r\n      document.addEventListener('pointerup', this.implicitRelease);\r\n      document.addEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('gotpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = inTarget;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    releaseCapture: function(inPointerId, skipDispatch) {\r\n      var t = this.captureInfo[inPointerId];\r\n      if (!t) {\r\n        return;\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = undefined;\r\n      document.removeEventListener('pointerup', this.implicitRelease);\r\n      document.removeEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('lostpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = t;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    /**\r\n     * Dispatches the event to its target.\r\n     *\r\n     * @param {Event} inEvent The event to be dispatched.\r\n     * @return {Boolean} True if an event handler returns true, false otherwise.\r\n     */\r\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\r\n      var t = this.getTarget(inEvent);\r\n      if (t) {\r\n        return t.dispatchEvent(inEvent);\r\n      }\r\n    },\r\n    asyncDispatchEvent: function(inEvent) {\r\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\r\n    }\r\n  };\r\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\r\n\r\n  var targeting = {\r\n    shadow: function(inEl) {\r\n      if (inEl) {\r\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\r\n      }\r\n    },\r\n    canTarget: function(shadow) {\r\n      return shadow && Boolean(shadow.elementFromPoint);\r\n    },\r\n    targetingShadow: function(inEl) {\r\n      var s = this.shadow(inEl);\r\n      if (this.canTarget(s)) {\r\n        return s;\r\n      }\r\n    },\r\n    olderShadow: function(shadow) {\r\n      var os = shadow.olderShadowRoot;\r\n      if (!os) {\r\n        var se = shadow.querySelector('shadow');\r\n        if (se) {\r\n          os = se.olderShadowRoot;\r\n        }\r\n      }\r\n      return os;\r\n    },\r\n    allShadows: function(element) {\r\n      var shadows = [];\r\n      var s = this.shadow(element);\r\n      while (s) {\r\n        shadows.push(s);\r\n        s = this.olderShadow(s);\r\n      }\r\n      return shadows;\r\n    },\r\n    searchRoot: function(inRoot, x, y) {\r\n      if (inRoot) {\r\n        var t = inRoot.elementFromPoint(x, y);\r\n        var st, sr;\r\n\r\n        // is element a shadow host?\r\n        sr = this.targetingShadow(t);\r\n        while (sr) {\r\n\r\n          // find the the element inside the shadow root\r\n          st = sr.elementFromPoint(x, y);\r\n          if (!st) {\r\n\r\n            // check for older shadows\r\n            sr = this.olderShadow(sr);\r\n          } else {\r\n\r\n            // shadowed element may contain a shadow root\r\n            var ssr = this.targetingShadow(st);\r\n            return this.searchRoot(ssr, x, y) || st;\r\n          }\r\n        }\r\n\r\n        // light dom element is the target\r\n        return t;\r\n      }\r\n    },\r\n    owner: function(element) {\r\n      var s = element;\r\n\r\n      // walk up until you hit the shadow root or document\r\n      while (s.parentNode) {\r\n        s = s.parentNode;\r\n      }\r\n\r\n      // the owner element is expected to be a Document or ShadowRoot\r\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\r\n        s = document;\r\n      }\r\n      return s;\r\n    },\r\n    findTarget: function(inEvent) {\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n\r\n      // if the listener is in the shadow root, it is much faster to start there\r\n      var s = this.owner(inEvent.target);\r\n\r\n      // if x, y is not in this root, fall back to document search\r\n      if (!s.elementFromPoint(x, y)) {\r\n        s = document;\r\n      }\r\n      return this.searchRoot(s, x, y);\r\n    }\r\n  };\r\n\r\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\r\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\r\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\r\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\r\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\r\n  var SELECTOR = '[touch-action]';\r\n  var OBSERVER_INIT = {\r\n    subtree: true,\r\n    childList: true,\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: ['touch-action']\r\n  };\r\n\r\n  function Installer(add, remove, changed, binder) {\r\n    this.addCallback = add.bind(binder);\r\n    this.removeCallback = remove.bind(binder);\r\n    this.changedCallback = changed.bind(binder);\r\n    if (MO) {\r\n      this.observer = new MO(this.mutationWatcher.bind(this));\r\n    }\r\n  }\r\n\r\n  Installer.prototype = {\r\n    watchSubtree: function(target) {\r\n\r\n      // Only watch scopes that can target find, as these are top-level.\r\n      // Otherwise we can see duplicate additions and removals that add noise.\r\n      //\r\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\r\n      // a removal without an insertion when a node is redistributed among\r\n      // shadows. Since it all ends up correct in the document, watching only\r\n      // the document will yield the correct mutations to watch.\r\n      if (this.observer && targeting.canTarget(target)) {\r\n        this.observer.observe(target, OBSERVER_INIT);\r\n      }\r\n    },\r\n    enableOnSubtree: function(target) {\r\n      this.watchSubtree(target);\r\n      if (target === document && document.readyState !== 'complete') {\r\n        this.installOnLoad();\r\n      } else {\r\n        this.installNewSubtree(target);\r\n      }\r\n    },\r\n    installNewSubtree: function(target) {\r\n      forEach(this.findElements(target), this.addElement, this);\r\n    },\r\n    findElements: function(target) {\r\n      if (target.querySelectorAll) {\r\n        return target.querySelectorAll(SELECTOR);\r\n      }\r\n      return [];\r\n    },\r\n    removeElement: function(el) {\r\n      this.removeCallback(el);\r\n    },\r\n    addElement: function(el) {\r\n      this.addCallback(el);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      this.changedCallback(el, oldValue);\r\n    },\r\n    concatLists: function(accum, list) {\r\n      return accum.concat(toArray(list));\r\n    },\r\n\r\n    // register all touch-action = none nodes on document load\r\n    installOnLoad: function() {\r\n      document.addEventListener('readystatechange', function() {\r\n        if (document.readyState === 'complete') {\r\n          this.installNewSubtree(document);\r\n        }\r\n      }.bind(this));\r\n    },\r\n    isElement: function(n) {\r\n      return n.nodeType === Node.ELEMENT_NODE;\r\n    },\r\n    flattenMutationTree: function(inNodes) {\r\n\r\n      // find children with touch-action\r\n      var tree = map(inNodes, this.findElements, this);\r\n\r\n      // make sure the added nodes are accounted for\r\n      tree.push(filter(inNodes, this.isElement));\r\n\r\n      // flatten the list\r\n      return tree.reduce(this.concatLists, []);\r\n    },\r\n    mutationWatcher: function(mutations) {\r\n      mutations.forEach(this.mutationHandler, this);\r\n    },\r\n    mutationHandler: function(m) {\r\n      if (m.type === 'childList') {\r\n        var added = this.flattenMutationTree(m.addedNodes);\r\n        added.forEach(this.addElement, this);\r\n        var removed = this.flattenMutationTree(m.removedNodes);\r\n        removed.forEach(this.removeElement, this);\r\n      } else if (m.type === 'attributes') {\r\n        this.elementChanged(m.target, m.oldValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  function shadowSelector(v) {\r\n    return 'body /shadow-deep/ ' + selector(v);\r\n  }\r\n  function selector(v) {\r\n    return '[touch-action=\"' + v + '\"]';\r\n  }\r\n  function rule(v) {\r\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\r\n  }\r\n  var attrib2css = [\r\n    'none',\r\n    'auto',\r\n    'pan-x',\r\n    'pan-y',\r\n    {\r\n      rule: 'pan-x pan-y',\r\n      selectors: [\r\n        'pan-x pan-y',\r\n        'pan-y pan-x'\r\n      ]\r\n    }\r\n  ];\r\n  var styles = '';\r\n\r\n  // only install stylesheet if the browser has touch action support\r\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\r\n\r\n  // only add shadow selectors if shadowdom is supported\r\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\r\n\r\n  function applyAttributeStyles() {\r\n    if (hasNativePE) {\r\n      attrib2css.forEach(function(r) {\r\n        if (String(r) === r) {\r\n          styles += selector(r) + rule(r) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += shadowSelector(r) + rule(r) + '\\n';\r\n          }\r\n        } else {\r\n          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\r\n          }\r\n        }\r\n      });\r\n\r\n      var el = document.createElement('style');\r\n      el.textContent = styles;\r\n      document.head.appendChild(el);\r\n    }\r\n  }\r\n\r\n  var pointermap = dispatcher.pointermap;\r\n\r\n  // radius around touchend that swallows mouse events\r\n  var DEDUP_DIST = 25;\r\n\r\n  // left, middle, right, back, forward\r\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\r\n\r\n  var HAS_BUTTONS = false;\r\n  try {\r\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\r\n  } catch (e) {}\r\n\r\n  // handler block for native mouse events\r\n  var mouseEvents = {\r\n    POINTER_ID: 1,\r\n    POINTER_TYPE: 'mouse',\r\n    events: [\r\n      'mousedown',\r\n      'mousemove',\r\n      'mouseup',\r\n      'mouseover',\r\n      'mouseout'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    lastTouches: [],\r\n\r\n    // collide with the global mouse listener\r\n    isEventSimulatedFromTouch: function(inEvent) {\r\n      var lts = this.lastTouches;\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\r\n\r\n        // simulated mouse events will be swallowed near a primary touchend\r\n        var dx = Math.abs(x - t.x);\r\n        var dy = Math.abs(y - t.y);\r\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n    prepareEvent: function(inEvent) {\r\n      var e = dispatcher.cloneEvent(inEvent);\r\n\r\n      // forward mouse preventDefault\r\n      var pd = e.preventDefault;\r\n      e.preventDefault = function() {\r\n        inEvent.preventDefault();\r\n        pd();\r\n      };\r\n      e.pointerId = this.POINTER_ID;\r\n      e.isPrimary = true;\r\n      e.pointerType = this.POINTER_TYPE;\r\n      return e;\r\n    },\r\n    prepareButtonsForMove: function(e, inEvent) {\r\n      var p = pointermap.get(this.POINTER_ID);\r\n\r\n      // Update buttons state after possible out-of-document mouseup.\r\n      if (inEvent.which === 0 || !p) {\r\n        e.buttons = 0;\r\n      } else {\r\n        e.buttons = p.buttons;\r\n      }\r\n      inEvent.buttons = e.buttons;\r\n    },\r\n    mousedown: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\r\n          if (p) { e.buttons |= p.buttons; }\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        if (!p || p.buttons === 0) {\r\n          dispatcher.down(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mousemove: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.move(e);\r\n      }\r\n    },\r\n    mouseup: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          var up = BUTTON_TO_BUTTONS[e.button];\r\n\r\n          // Produces wrong state of buttons in Browsers without `buttons` support\r\n          // when a mouse button that was pressed outside the document is released\r\n          // inside and other buttons are still pressed down.\r\n          e.buttons = p ? p.buttons & ~up : 0;\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n\r\n        // Support: Firefox <=44 only\r\n        // FF Ubuntu includes the lifted button in the `buttons` property on\r\n        // mouseup.\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\r\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\r\n        if (e.buttons === 0) {\r\n          dispatcher.up(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mouseover: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.enterOver(e);\r\n      }\r\n    },\r\n    mouseout: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        dispatcher.leaveOut(e);\r\n      }\r\n    },\r\n    cancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.deactivateMouse();\r\n    },\r\n    deactivateMouse: function() {\r\n      pointermap.delete(this.POINTER_ID);\r\n    }\r\n  };\r\n\r\n  var captureInfo = dispatcher.captureInfo;\r\n  var findTarget = targeting.findTarget.bind(targeting);\r\n  var allShadows = targeting.allShadows.bind(targeting);\r\n  var pointermap$1 = dispatcher.pointermap;\r\n\r\n  // This should be long enough to ignore compat mouse events made by touch\r\n  var DEDUP_TIMEOUT = 2500;\r\n  var CLICK_COUNT_TIMEOUT = 200;\r\n  var ATTRIB = 'touch-action';\r\n  var INSTALLER;\r\n\r\n  // handler block for native touch events\r\n  var touchEvents = {\r\n    events: [\r\n      'touchstart',\r\n      'touchmove',\r\n      'touchend',\r\n      'touchcancel'\r\n    ],\r\n    register: function(target) {\r\n      INSTALLER.enableOnSubtree(target);\r\n    },\r\n    unregister: function() {\r\n\r\n      // TODO(dfreedman): is it worth it to disconnect the MO?\r\n    },\r\n    elementAdded: function(el) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      if (st) {\r\n        el._scrollType = st;\r\n        dispatcher.listen(el, this.events);\r\n\r\n        // set touch-action on shadows as well\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n          dispatcher.listen(s, this.events);\r\n        }, this);\r\n      }\r\n    },\r\n    elementRemoved: function(el) {\r\n      el._scrollType = undefined;\r\n      dispatcher.unlisten(el, this.events);\r\n\r\n      // remove touch-action from shadow\r\n      allShadows(el).forEach(function(s) {\r\n        s._scrollType = undefined;\r\n        dispatcher.unlisten(s, this.events);\r\n      }, this);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      var oldSt = this.touchActionToScrollType(oldValue);\r\n\r\n      // simply update scrollType if listeners are already established\r\n      if (st && oldSt) {\r\n        el._scrollType = st;\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n        }, this);\r\n      } else if (oldSt) {\r\n        this.elementRemoved(el);\r\n      } else if (st) {\r\n        this.elementAdded(el);\r\n      }\r\n    },\r\n    scrollTypes: {\r\n      EMITTER: 'none',\r\n      XSCROLLER: 'pan-x',\r\n      YSCROLLER: 'pan-y',\r\n      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\r\n    },\r\n    touchActionToScrollType: function(touchAction) {\r\n      var t = touchAction;\r\n      var st = this.scrollTypes;\r\n      if (t === 'none') {\r\n        return 'none';\r\n      } else if (t === st.XSCROLLER) {\r\n        return 'X';\r\n      } else if (t === st.YSCROLLER) {\r\n        return 'Y';\r\n      } else if (st.SCROLLER.exec(t)) {\r\n        return 'XY';\r\n      }\r\n    },\r\n    POINTER_TYPE: 'touch',\r\n    firstTouch: null,\r\n    isPrimaryTouch: function(inTouch) {\r\n      return this.firstTouch === inTouch.identifier;\r\n    },\r\n    setPrimaryTouch: function(inTouch) {\r\n\r\n      // set primary touch if there no pointers, or the only pointer is the mouse\r\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\r\n        this.firstTouch = inTouch.identifier;\r\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\r\n        this.scrolling = false;\r\n        this.cancelResetClickCount();\r\n      }\r\n    },\r\n    removePrimaryPointer: function(inPointer) {\r\n      if (inPointer.isPrimary) {\r\n        this.firstTouch = null;\r\n        this.firstXY = null;\r\n        this.resetClickCount();\r\n      }\r\n    },\r\n    clickCount: 0,\r\n    resetId: null,\r\n    resetClickCount: function() {\r\n      var fn = function() {\r\n        this.clickCount = 0;\r\n        this.resetId = null;\r\n      }.bind(this);\r\n      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\r\n    },\r\n    cancelResetClickCount: function() {\r\n      if (this.resetId) {\r\n        clearTimeout(this.resetId);\r\n      }\r\n    },\r\n    typeToButtons: function(type) {\r\n      var ret = 0;\r\n      if (type === 'touchstart' || type === 'touchmove') {\r\n        ret = 1;\r\n      }\r\n      return ret;\r\n    },\r\n    touchToPointer: function(inTouch) {\r\n      var cte = this.currentTouchEvent;\r\n      var e = dispatcher.cloneEvent(inTouch);\r\n\r\n      // We reserve pointerId 1 for Mouse.\r\n      // Touch identifiers can start at 0.\r\n      // Add 2 to the touch identifier for compatibility.\r\n      var id = e.pointerId = inTouch.identifier + 2;\r\n      e.target = captureInfo[id] || findTarget(e);\r\n      e.bubbles = true;\r\n      e.cancelable = true;\r\n      e.detail = this.clickCount;\r\n      e.button = 0;\r\n      e.buttons = this.typeToButtons(cte.type);\r\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\r\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\r\n      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\r\n      e.isPrimary = this.isPrimaryTouch(inTouch);\r\n      e.pointerType = this.POINTER_TYPE;\r\n\r\n      // forward modifier keys\r\n      e.altKey = cte.altKey;\r\n      e.ctrlKey = cte.ctrlKey;\r\n      e.metaKey = cte.metaKey;\r\n      e.shiftKey = cte.shiftKey;\r\n\r\n      // forward touch preventDefaults\r\n      var self = this;\r\n      e.preventDefault = function() {\r\n        self.scrolling = false;\r\n        self.firstXY = null;\r\n        cte.preventDefault();\r\n      };\r\n      return e;\r\n    },\r\n    processTouches: function(inEvent, inFunction) {\r\n      var tl = inEvent.changedTouches;\r\n      this.currentTouchEvent = inEvent;\r\n      for (var i = 0, t; i < tl.length; i++) {\r\n        t = tl[i];\r\n        inFunction.call(this, this.touchToPointer(t));\r\n      }\r\n    },\r\n\r\n    // For single axis scrollers, determines whether the element should emit\r\n    // pointer events or behave as a scroller\r\n    shouldScroll: function(inEvent) {\r\n      if (this.firstXY) {\r\n        var ret;\r\n        var scrollAxis = inEvent.currentTarget._scrollType;\r\n        if (scrollAxis === 'none') {\r\n\r\n          // this element is a touch-action: none, should never scroll\r\n          ret = false;\r\n        } else if (scrollAxis === 'XY') {\r\n\r\n          // this element should always scroll\r\n          ret = true;\r\n        } else {\r\n          var t = inEvent.changedTouches[0];\r\n\r\n          // check the intended scroll axis, and other axis\r\n          var a = scrollAxis;\r\n          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\r\n          var da = Math.abs(t['client' + a] - this.firstXY[a]);\r\n          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\r\n\r\n          // if delta in the scroll axis > delta other axis, scroll instead of\r\n          // making events\r\n          ret = da >= doa;\r\n        }\r\n        this.firstXY = null;\r\n        return ret;\r\n      }\r\n    },\r\n    findTouch: function(inTL, inId) {\r\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\r\n        if (t.identifier === inId) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n\r\n    // In some instances, a touchstart can happen without a touchend. This\r\n    // leaves the pointermap in a broken state.\r\n    // Therefore, on every touchstart, we remove the touches that did not fire a\r\n    // touchend event.\r\n    // To keep state globally consistent, we fire a\r\n    // pointercancel for this \"abandoned\" touch\r\n    vacuumTouches: function(inEvent) {\r\n      var tl = inEvent.touches;\r\n\r\n      // pointermap.size should be < tl.length here, as the touchstart has not\r\n      // been processed yet.\r\n      if (pointermap$1.size >= tl.length) {\r\n        var d = [];\r\n        pointermap$1.forEach(function(value, key) {\r\n\r\n          // Never remove pointerId == 1, which is mouse.\r\n          // Touch identifiers are 2 smaller than their pointerId, which is the\r\n          // index in pointermap.\r\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\r\n            var p = value.out;\r\n            d.push(p);\r\n          }\r\n        }, this);\r\n        d.forEach(this.cancelOut, this);\r\n      }\r\n    },\r\n    touchstart: function(inEvent) {\r\n      this.vacuumTouches(inEvent);\r\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\r\n      this.dedupSynthMouse(inEvent);\r\n      if (!this.scrolling) {\r\n        this.clickCount++;\r\n        this.processTouches(inEvent, this.overDown);\r\n      }\r\n    },\r\n    overDown: function(inPointer) {\r\n      pointermap$1.set(inPointer.pointerId, {\r\n        target: inPointer.target,\r\n        out: inPointer,\r\n        outTarget: inPointer.target\r\n      });\r\n      dispatcher.enterOver(inPointer);\r\n      dispatcher.down(inPointer);\r\n    },\r\n    touchmove: function(inEvent) {\r\n      if (!this.scrolling) {\r\n        if (this.shouldScroll(inEvent)) {\r\n          this.scrolling = true;\r\n          this.touchcancel(inEvent);\r\n        } else {\r\n          inEvent.preventDefault();\r\n          this.processTouches(inEvent, this.moveOverOut);\r\n        }\r\n      }\r\n    },\r\n    moveOverOut: function(inPointer) {\r\n      var event = inPointer;\r\n      var pointer = pointermap$1.get(event.pointerId);\r\n\r\n      // a finger drifted off the screen, ignore it\r\n      if (!pointer) {\r\n        return;\r\n      }\r\n      var outEvent = pointer.out;\r\n      var outTarget = pointer.outTarget;\r\n      dispatcher.move(event);\r\n      if (outEvent && outTarget !== event.target) {\r\n        outEvent.relatedTarget = event.target;\r\n        event.relatedTarget = outTarget;\r\n\r\n        // recover from retargeting by shadow\r\n        outEvent.target = outTarget;\r\n        if (event.target) {\r\n          dispatcher.leaveOut(outEvent);\r\n          dispatcher.enterOver(event);\r\n        } else {\r\n\r\n          // clean up case when finger leaves the screen\r\n          event.target = outTarget;\r\n          event.relatedTarget = null;\r\n          this.cancelOut(event);\r\n        }\r\n      }\r\n      pointer.out = event;\r\n      pointer.outTarget = event.target;\r\n    },\r\n    touchend: function(inEvent) {\r\n      this.dedupSynthMouse(inEvent);\r\n      this.processTouches(inEvent, this.upOut);\r\n    },\r\n    upOut: function(inPointer) {\r\n      if (!this.scrolling) {\r\n        dispatcher.up(inPointer);\r\n        dispatcher.leaveOut(inPointer);\r\n      }\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    touchcancel: function(inEvent) {\r\n      this.processTouches(inEvent, this.cancelOut);\r\n    },\r\n    cancelOut: function(inPointer) {\r\n      dispatcher.cancel(inPointer);\r\n      dispatcher.leaveOut(inPointer);\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    cleanUpPointer: function(inPointer) {\r\n      pointermap$1.delete(inPointer.pointerId);\r\n      this.removePrimaryPointer(inPointer);\r\n    },\r\n\r\n    // prevent synth mouse events from creating pointer events\r\n    dedupSynthMouse: function(inEvent) {\r\n      var lts = mouseEvents.lastTouches;\r\n      var t = inEvent.changedTouches[0];\r\n\r\n      // only the primary finger will synth mouse events\r\n      if (this.isPrimaryTouch(t)) {\r\n\r\n        // remember x/y of last touch\r\n        var lt = { x: t.clientX, y: t.clientY };\r\n        lts.push(lt);\r\n        var fn = (function(lts, lt) {\r\n          var i = lts.indexOf(lt);\r\n          if (i > -1) {\r\n            lts.splice(i, 1);\r\n          }\r\n        }).bind(null, lts, lt);\r\n        setTimeout(fn, DEDUP_TIMEOUT);\r\n      }\r\n    }\r\n  };\r\n\r\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\r\n    touchEvents.elementChanged, touchEvents);\r\n\r\n  var pointermap$2 = dispatcher.pointermap;\r\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\r\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\r\n  var msEvents = {\r\n    events: [\r\n      'MSPointerDown',\r\n      'MSPointerMove',\r\n      'MSPointerUp',\r\n      'MSPointerOut',\r\n      'MSPointerOver',\r\n      'MSPointerCancel',\r\n      'MSGotPointerCapture',\r\n      'MSLostPointerCapture'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    POINTER_TYPES: [\r\n      '',\r\n      'unavailable',\r\n      'touch',\r\n      'pen',\r\n      'mouse'\r\n    ],\r\n    prepareEvent: function(inEvent) {\r\n      var e = inEvent;\r\n      if (HAS_BITMAP_TYPE) {\r\n        e = dispatcher.cloneEvent(inEvent);\r\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\r\n      }\r\n      return e;\r\n    },\r\n    cleanup: function(id) {\r\n      pointermap$2.delete(id);\r\n    },\r\n    MSPointerDown: function(inEvent) {\r\n      pointermap$2.set(inEvent.pointerId, inEvent);\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.down(e);\r\n    },\r\n    MSPointerMove: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.move(e);\r\n    },\r\n    MSPointerUp: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.up(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSPointerOut: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.leaveOut(e);\r\n    },\r\n    MSPointerOver: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.enterOver(e);\r\n    },\r\n    MSPointerCancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSLostPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    },\r\n    MSGotPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    }\r\n  };\r\n\r\n  function applyPolyfill() {\r\n\r\n    // only activate if this platform does not have pointer events\r\n    if (!window.PointerEvent) {\r\n      window.PointerEvent = PointerEvent;\r\n\r\n      if (window.navigator.msPointerEnabled) {\r\n        var tp = window.navigator.msMaxTouchPoints;\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: tp,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('ms', msEvents);\r\n      } else {\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: 0,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('mouse', mouseEvents);\r\n        if (window.ontouchstart !== undefined) {\r\n          dispatcher.registerSource('touch', touchEvents);\r\n        }\r\n      }\r\n\r\n      dispatcher.register(document);\r\n    }\r\n  }\r\n\r\n  var n = window.navigator;\r\n  var s;\r\n  var r;\r\n  var h;\r\n  function assertActive(id) {\r\n    if (!dispatcher.pointermap.has(id)) {\r\n      var error = new Error('InvalidPointerId');\r\n      error.name = 'InvalidPointerId';\r\n      throw error;\r\n    }\r\n  }\r\n  function assertConnected(elem) {\r\n    var parent = elem.parentNode;\r\n    while (parent && parent !== elem.ownerDocument) {\r\n      parent = parent.parentNode;\r\n    }\r\n    if (!parent) {\r\n      var error = new Error('InvalidStateError');\r\n      error.name = 'InvalidStateError';\r\n      throw error;\r\n    }\r\n  }\r\n  function inActiveButtonState(id) {\r\n    var p = dispatcher.pointermap.get(id);\r\n    return p.buttons !== 0;\r\n  }\r\n  if (n.msPointerEnabled) {\r\n    s = function(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this, true);\r\n        this.msSetPointerCapture(pointerId);\r\n      }\r\n    };\r\n    r = function(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId, true);\r\n      this.msReleasePointerCapture(pointerId);\r\n    };\r\n  } else {\r\n    s = function setPointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this);\r\n      }\r\n    };\r\n    r = function releasePointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId);\r\n    };\r\n  }\r\n  h = function hasPointerCapture(pointerId) {\r\n    return !!dispatcher.captureInfo[pointerId];\r\n  };\r\n\r\n  function applyPolyfill$1() {\r\n    if (window.Element && !Element.prototype.setPointerCapture) {\r\n      Object.defineProperties(Element.prototype, {\r\n        'setPointerCapture': {\r\n          value: s\r\n        },\r\n        'releasePointerCapture': {\r\n          value: r\r\n        },\r\n        'hasPointerCapture': {\r\n          value: h\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  applyAttributeStyles();\r\n  applyPolyfill();\r\n  applyPolyfill$1();\r\n\r\n  var pointerevents = {\r\n    dispatcher: dispatcher,\r\n    Installer: Installer,\r\n    PointerEvent: PointerEvent,\r\n    PointerMap: PointerMap,\r\n    targetFinding: targeting\r\n  };\r\n\r\n  return pointerevents;\r\n\r\n});\ndefine('skylark-osjsv2-client/boot',[\n    './core/init',\n    \"./utils/pepjs\"\n], function (Init) {\n    'use strict';\n    window.OSjs = Object.assign({\n        error: (title, message, error, exception, bugreport) => {\n            console.error(title, message, error, exception);\n        },\n        runTests: () => {\n        },\n        getConfig: () => {\n            return {};\n        },\n        getManifest: () => {\n            return {};\n        },\n        Themes: {},\n        Dialogs: {},\n        Locales: {},\n        Extensions: {},\n        Applications: {}\n    }, window.OSjs || {});\n    window.OSjs.require = n => {\n        const mod = require('skylark-osjsv2-client/' + n);\n        return mod;\n        //return mod && mod.default ? mod.default : mod;\n    };\n    if (document.readyState !== 'loading') {\n        Init.start();\n    } else {\n        document.addEventListener('DOMContentLoaded', () => Init.start());\n    }\n});\ndefine('skylark-osjsv2-client/locales/en_EN',[],function() {\nreturn {\n    'ERR_FILE_OPEN': 'Error opening file',\n    'ERR_WM_NOT_RUNNING': 'Window manager is not running',\n    'ERR_FILE_OPEN_FMT': \"The file '**{0}**' could not be opened\",\n    'ERR_APP_MIME_NOT_FOUND_FMT': \"Could not find any Applications with support for '{0}' files\",\n    'ERR_APP_LAUNCH_FAILED': 'Failed to launch Application',\n    'ERR_APP_LAUNCH_FAILED_FMT': 'An error occured while trying to launch: {0}',\n    'ERR_APP_CONSTRUCT_FAILED_FMT': \"Application '{0}' construct failed: {1}\",\n    'ERR_APP_INIT_FAILED_FMT': \"Application '{0}' init() failed: {1}\",\n    'ERR_APP_RESOURCES_MISSING_FMT': \"Application resources missing for '{0}' or it failed to load!\",\n    'ERR_APP_PRELOAD_FAILED_FMT': \"Application '{0}' preloading failed: \\n{1}\",\n    'ERR_APP_LAUNCH_ALREADY_RUNNING_FMT': \"The application '{0}' is already launched and allows only one instance!\",\n    'ERR_APP_LAUNCH_MANIFEST_FAILED_FMT': \"Failed to launch '{0}'. Application manifest data not found!\",\n    'ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT': \"Failed to launch '{0}'. Your browser does not support: {1}\",\n    'ERR_NO_WM_RUNNING': 'No window manager is running',\n    'ERR_CORE_INIT_FAILED': 'Failed to initialize OS.js',\n    'ERR_CORE_INIT_FAILED_DESC': 'An error occured while initializing OS.js',\n    'ERR_CORE_INIT_NO_WM': 'Cannot launch OS.js: No window manager defined!',\n    'ERR_CORE_INIT_WM_FAILED_FMT': 'Cannot launch OS.js: Failed to launch Window Manager: {0}',\n    'ERR_CORE_INIT_PRELOAD_FAILED': 'Cannot launch OS.js: Failed to preload resources...',\n    'ERR_JAVASCRIPT_EXCEPTION': 'JavaScript Error Report',\n    'ERR_JAVACSRIPT_EXCEPTION_DESC': 'An unexpected error occured, maybe a bug.',\n    'ERR_APP_API_ERROR': 'Application API error',\n    'ERR_APP_API_ERROR_DESC_FMT': \"Application {0} failed to perform operation '{1}'\",\n    'ERR_APP_MISSING_ARGUMENT_FMT': 'Missing argument: {0}',\n    'ERR_APP_UNKNOWN_ERROR': 'Unknown error',\n    'ERR_OPERATION_TIMEOUT': 'Operation Timeout',\n    'ERR_OPERATION_TIMEOUT_FMT': 'Operation Timeout ({0})',\n    'ERR_ARGUMENT_FMT': \"'{0}' expects '{1}' to be a '{2}', '{3}' given\",\n    'ERR_INVALID_LOCATION': 'Invalid location',\n    'ERR_WIN_DUPLICATE_FMT': \"You already have a Window named '{0}'\",\n    'WINDOW_MINIMIZE': 'Minimize',\n    'WINDOW_MAXIMIZE': 'Maximize',\n    'WINDOW_RESTORE': 'Restore',\n    'WINDOW_CLOSE': 'Close',\n    'WINDOW_ONTOP_ON': 'Ontop (Enable)',\n    'WINDOW_ONTOP_OFF': 'Ontop (Disable)',\n    'TITLE_SIGN_OUT': 'Sign out',\n    'TITLE_SIGNED_IN_AS_FMT': 'Signed in as: {0}',\n    'ERR_LOGIN_FMT': 'Login error: {0}',\n    'ERR_LOGIN_INVALID': 'Invalid login',\n    'ERR_NO_SESSION': 'No session was created by the server. Do you want to retry login?',\n    'MSG_SESSION_WARNING': 'Are you sure you want to quit OS.js? All unsaved settings and application data will be lost!',\n    'BUGREPORT_MSG': 'Please report this if you think this is a bug.\\nInclude a brief description on how the error occured, and if you can; how to replicate it',\n    'SERVICENOTIFICATION_TOOLTIP': 'Logged into external services: {0}',\n    'CONNECTION_LOST': 'Connection to the server was lost. Reconnecting...',\n    'CONNECTION_RESTORED': 'Connection to the server was restored',\n    'CONNECTION_RESTORE_FAILED': 'Failed to re-establish connection. Trying again.',\n    'CONNECTION_ERROR': 'Connection error',\n    'ERR_UTILS_XHR_FATAL': 'Fatal Error',\n    'ERR_UTILS_XHR_FMT': 'AJAX/XHR Error: {0}',\n    'DIALOG_LOGOUT_TITLE': 'Log out (Exit)',\n    'DIALOG_LOGOUT_MSG_FMT': \"Logging out user '{0}'.\\nDo you want to save current session?\",\n    'DIALOG_CLOSE': 'Close',\n    'DIALOG_CANCEL': 'Cancel',\n    'DIALOG_APPLY': 'Apply',\n    'DIALOG_OK': 'OK',\n    'DIALOG_ALERT_TITLE': 'Alert Dialog',\n    'DIALOG_COLOR_TITLE': 'Color Dialog',\n    'DIALOG_COLOR_R': 'Red: {0}',\n    'DIALOG_COLOR_G': 'Green: {0}',\n    'DIALOG_COLOR_B': 'Blue: {0}',\n    'DIALOG_COLOR_A': 'Alpha: {0}',\n    'DIALOG_CONFIRM_TITLE': 'Confirm Dialog',\n    'DIALOG_ERROR_TITLE': 'Error',\n    'DIALOG_ERROR_MESSAGE': 'Message',\n    'DIALOG_ERROR_SUMMARY': 'Summary',\n    'DIALOG_ERROR_TRACE': 'Trace',\n    'DIALOG_ERROR_BUGREPORT': 'Report Bug',\n    'DIALOG_FILE_SAVE': 'Save',\n    'DIALOG_FILE_OPEN': 'Open',\n    'DIALOG_FILE_MKDIR': 'New Folder',\n    'DIALOG_FILE_MKDIR_MSG': 'Create a new directory in **{0}**',\n    'DIALOG_FILE_OVERWRITE': \"Are you sure you want to overwrite the file '{0}'?\",\n    'DIALOG_FILE_MNU_VIEWTYPE': 'View type',\n    'DIALOG_FILE_MNU_LISTVIEW': 'List View',\n    'DIALOG_FILE_MNU_TREEVIEW': 'Tree View',\n    'DIALOG_FILE_MNU_ICONVIEW': 'Icon View',\n    'DIALOG_FILE_ERROR': 'FileDialog Error',\n    'DIALOG_FILE_ERROR_SCANDIR': \"Failed listing directory '{0}' because an error occured\",\n    'DIALOG_FILE_ERROR_FIND': \"Failed searching directory '{0}' because an error occured\",\n    'DIALOG_FILE_MISSING_FILENAME': 'You need to select a file or enter new filename!',\n    'DIALOG_FILE_MISSING_SELECTION': 'You need to select a file!',\n    'DIALOG_FILEINFO_TITLE': 'File Information',\n    'DIALOG_FILEINFO_LOADING': 'Loading file information for: {0}',\n    'DIALOG_FILEINFO_ERROR': 'FileInformationDialog Error',\n    'DIALOG_FILEINFO_ERROR_LOOKUP': 'Failed to get file information for **{0}**',\n    'DIALOG_FILEINFO_ERROR_LOOKUP_FMT': 'Failed to get file information for: {0}',\n    'DIALOG_INPUT_TITLE': 'Input Dialog',\n    'DIALOG_FILEPROGRESS_TITLE': 'File Operation Progress',\n    'DIALOG_FILEPROGRESS_LOADING': 'Loading...',\n    'DIALOG_UPLOAD_TITLE': 'Upload Dialog',\n    'DIALOG_UPLOAD_DESC': 'Upload file to **{0}**.<br />Maximum size: {1} bytes',\n    'DIALOG_UPLOAD_MSG_FMT': \"Uploading '{0}' ({1} {2}) to {3}\",\n    'DIALOG_UPLOAD_MSG': 'Uploading file...',\n    'DIALOG_UPLOAD_FAILED': 'Upload failed',\n    'DIALOG_UPLOAD_FAILED_MSG': 'The upload has failed',\n    'DIALOG_UPLOAD_FAILED_UNKNOWN': 'Reason unknown...',\n    'DIALOG_UPLOAD_FAILED_CANCELLED': 'Cancelled by user...',\n    'DIALOG_UPLOAD_TOO_BIG': 'File is too big',\n    'DIALOG_UPLOAD_TOO_BIG_FMT': 'File is too big, exceeds {0}',\n    'DIALOG_FONT_TITLE': 'Font Dialog',\n    'DIALOG_APPCHOOSER_TITLE': 'Choose Application',\n    'DIALOG_APPCHOOSER_MSG': 'Choose an application to open',\n    'DIALOG_APPCHOOSER_NO_SELECTION': 'You need to select an application',\n    'DIALOG_APPCHOOSER_SET_DEFAULT': 'Use as default application for {0}',\n    'GAPI_DISABLED': 'GoogleAPI Module not configured or disabled',\n    'GAPI_SIGN_OUT': 'Sign out from Google API Services',\n    'GAPI_REVOKE': 'Revoke permissions and Sign Out',\n    'GAPI_AUTH_FAILURE': 'Google API Authentication failed or did not take place',\n    'GAPI_AUTH_FAILURE_FMT': 'Failed to authenticate: {0}:{1}',\n    'GAPI_LOAD_FAILURE': 'Failed to load Google API',\n    'WLAPI_DISABLED': 'Windows Live API module not configured or disabled',\n    'WLAPI_SIGN_OUT': 'Sign out from Window Live API',\n    'WLAPI_LOAD_FAILURE': 'Failed to load Windows Live API',\n    'WLAPI_LOGIN_FAILED': 'Failed to log into Windows Live API',\n    'WLAPI_LOGIN_FAILED_FMT': 'Failed to log into Windows Live API: {0}',\n    'WLAPI_INIT_FAILED_FMT': 'Windows Live API returned {0} status',\n    'IDB_MISSING_DBNAME': 'Cannot create IndexedDB without Database Name',\n    'IDB_NO_SUCH_ITEM': 'No such item',\n    'ERR_VFS_FATAL': 'Fatal Error',\n    'ERR_VFS_UNAVAILABLE': 'Not available',\n    'ERR_VFS_FILE_ARGS': 'File expects at least one argument',\n    'ERR_VFS_NUM_ARGS': 'Not enough arguments',\n    'ERR_VFS_EXPECT_FILE': 'Expects a file-object',\n    'ERR_VFS_EXPECT_SRC_FILE': 'Expects a source file-object',\n    'ERR_VFS_EXPECT_DST_FILE': 'Expects a destination file-object',\n    'ERR_VFS_FILE_EXISTS': 'Destination already exists',\n    'ERR_VFS_TARGET_NOT_EXISTS': 'Target does not exist',\n    'ERR_VFS_TRANSFER_FMT': 'An error occured while transfering between storage: {0}',\n    'ERR_VFS_UPLOAD_NO_DEST': 'Cannot upload a file without a destination',\n    'ERR_VFS_UPLOAD_NO_FILES': 'Cannot upload without any files defined',\n    'ERR_VFS_UPLOAD_FAIL_FMT': 'File upload failed: {0}',\n    'ERR_VFS_UPLOAD_CANCELLED': 'File upload was cancelled',\n    'ERR_VFS_DOWNLOAD_NO_FILE': 'Cannot download a path without a path',\n    'ERR_VFS_DOWNLOAD_FAILED': 'An error occured while downloading: {0}',\n    'ERR_VFS_REMOTEREAD_EMPTY': 'Response was empty',\n    'ERR_VFS_NO_MIME_DETECT': 'No mime type detected',\n    'ERR_VFSMODULE_INVALID': 'Invalid VFS Module',\n    'ERR_VFSMODULE_INVALID_FMT': 'Invalid VFS Module: {0}',\n    'ERR_VFSMODULE_INVALID_METHOD': 'Invalid VFS Method',\n    'ERR_VFSMODULE_INVALID_METHOD_FMT': 'Invalid VFS Method: {0}',\n    'ERR_VFSMODULE_INVALID_TYPE': 'Invalid VFS Module type',\n    'ERR_VFSMODULE_INVALID_TYPE_FMT': 'Invalid VFS Module type: {0}',\n    'ERR_VFSMODULE_INVALID_CONFIG': 'Invalid VFS Module configuration',\n    'ERR_VFSMODULE_INVALID_CONFIG_FMT': 'Invalid VFS Module configuration: {0}',\n    'ERR_VFSMODULE_ALREADY_MOUNTED': 'VFS Module already mounted',\n    'ERR_VFSMODULE_ALREADY_MOUNTED_FMT': \"VFS Module '{0}' already mounted\",\n    'ERR_VFSMODULE_NOT_MOUNTED': 'VFS Module not mounted',\n    'ERR_VFSMODULE_NOT_MOUNTED_FMT': \"VFS Module '{0}' not mounted\",\n    'ERR_VFSMODULE_EXCEPTION': 'VFS Module Exception',\n    'ERR_VFSMODULE_EXCEPTION_FMT': 'VFS Module Exception: {0}',\n    'ERR_VFSMODULE_NOT_FOUND_FMT': 'No VFS Module matches {0}. Wrong path or format ?',\n    'ERR_VFSMODULE_READONLY': 'This VFS Module is read-only',\n    'ERR_VFSMODULE_READONLY_FMT': 'This VFS Module is read-only: {0}',\n    'TOOLTIP_VFS_DOWNLOAD_NOTIFICATION': 'Downloading file',\n    'ERR_VFSMODULE_XHR_ERROR': 'XHR Error',\n    'ERR_VFSMODULE_ROOT_ID': 'Failed to find root folder id',\n    'ERR_VFSMODULE_NOSUCH': 'File does not exist',\n    'ERR_VFSMODULE_PARENT': 'No such parent',\n    'ERR_VFSMODULE_PARENT_FMT': 'Failed to look up parent: {0}',\n    'ERR_VFSMODULE_SCANDIR': 'Failed to scan directory',\n    'ERR_VFSMODULE_SCANDIR_FMT': 'Failed to scan directory: {0}',\n    'ERR_VFSMODULE_READ': 'Failed to read file',\n    'ERR_VFSMODULE_READ_FMT': 'Failed to read file: {0}',\n    'ERR_VFSMODULE_WRITE': 'Failed to write file',\n    'ERR_VFSMODULE_WRITE_FMT': 'Failed to write file: {0}',\n    'ERR_VFSMODULE_COPY': 'Failed to copy',\n    'ERR_VFSMODULE_COPY_FMT': 'Failed to copy: {0}',\n    'ERR_VFSMODULE_UNLINK': 'Failed to unlink file',\n    'ERR_VFSMODULE_UNLINK_FMT': 'Failed to unlink file: {0}',\n    'ERR_VFSMODULE_MOVE': 'Failed to move file',\n    'ERR_VFSMODULE_MOVE_FMT': 'Failed to move file: {0}',\n    'ERR_VFSMODULE_EXIST': 'Failed to check file existence',\n    'ERR_VFSMODULE_EXIST_FMT': 'Failed to check file existence: {0}',\n    'ERR_VFSMODULE_FILEINFO': 'Failed to get file information',\n    'ERR_VFSMODULE_FILEINFO_FMT': 'Failed to get file information: {0}',\n    'ERR_VFSMODULE_MKDIR': 'Failed to create directory',\n    'ERR_VFSMODULE_MKDIR_FMT': 'Failed to create directory: {0}',\n    'ERR_VFSMODULE_MKFILE': 'Failed to create file',\n    'ERR_VFSMODULE_MKFILE_FMT': 'Failed to create file: {0}',\n    'ERR_VFSMODULE_URL': 'Failed to get URL for file',\n    'ERR_VFSMODULE_URL_FMT': 'Failed to get URL for file: {0}',\n    'ERR_VFSMODULE_TRASH': 'Failed to move file to trash',\n    'ERR_VFSMODULE_TRASH_FMT': 'Failed to move file to trash: {0}',\n    'ERR_VFSMODULE_UNTRASH': 'Failed to move file out of trash',\n    'ERR_VFSMODULE_UNTRASH_FMT': 'Failed to move file out of trash: {0}',\n    'ERR_VFSMODULE_EMPTYTRASH': 'Failed to empty trash',\n    'ERR_VFSMODULE_EMPTYTRASH_FMT': 'Failed to empty trash: {0}',\n    'ERR_VFSMODULE_FIND': 'Failed to search',\n    'ERR_VFSMODULE_FIND_FMT': 'Failed to search: {0}',\n    'ERR_VFSMODULE_FREESPACE': 'Failed to get free space',\n    'ERR_VFSMODULE_FREESPACE_FMT': 'Failed to get free space: {0}',\n    'ERR_VFSMODULE_EXISTS': 'Failed to check if exists',\n    'ERR_VFSMODULE_EXISTS_FMT': 'Failed to check if exists: {0}',\n    'ERR_DROPBOX_API': 'Failed to load Dropbox API',\n    'ERR_DROPBOX_AUTH': 'Failed to authenticate via Dropbox',\n    'ERR_DROPBOX_KEY': 'No Dropbox client key configured',\n    'DROPBOX_NOTIFICATION_TITLE': 'You are signed in to Dropbox API',\n    'DROPBOX_SIGN_OUT': 'Sign out from Google API Services',\n    'ONEDRIVE_ERR_RESOLVE': 'Failed to resolve path: item not found',\n    'ZIP_PRELOAD_FAIL': 'Failed to load zip.js',\n    'ZIP_VENDOR_FAIL': 'zip.js library was not found. Did it load properly?',\n    'ZIP_NO_RESOURCE': 'No zip resource was given',\n    'ZIP_NO_PATH': 'No path given',\n    'SEARCH_LOADING': 'Searching...',\n    'SEARCH_NO_RESULTS': 'No results found',\n    'ERR_PACKAGE_EXISTS': 'Package installation directory already exists. Cannot continue!',\n    'ERR_PACKAGE_MANIFEST': 'Failed to load package manifest',\n    'ERR_PACKAGE_ENUM_FAILED': 'Failed to get package list. Make sure you\\'re not using \"Private Mode\" as this might case problems.',\n    'ERR_FILE_APP_OPEN': 'Cannot open file',\n    'ERR_FILE_APP_OPEN_FMT': 'The file {0} could not be opened because the mime {1} is not supported',\n    'ERR_FILE_APP_OPEN_ALT_FMT': 'The file {0} could not be opened: {1}',\n    'ERR_FILE_APP_SAVE_ALT_FMT': 'The file {0} could not be saved: {1}',\n    'ERR_GENERIC_APP_FMT': '{0} Application Error',\n    'ERR_GENERIC_APP_ACTION_FMT': \"Failed to perform action '{0}'\",\n    'ERR_GENERIC_APP_UNKNOWN': 'Unknown Error',\n    'ERR_GENERIC_APP_REQUEST': 'An error occured while handling your request',\n    'ERR_GENERIC_APP_FATAL_FMT': 'Fatal Error: {0}',\n    'MSG_GENERIC_APP_DISCARD': 'Discard changes?',\n    'MSG_FILE_CHANGED': 'The file has changed. Reload?',\n    'MSG_APPLICATION_WARNING': 'Application Warning',\n    'MSG_MIME_OVERRIDE': 'The filetype \"{0}\" is not supported, using \"{1}\" instead.',\n    'ERR_OPEN_LOCATION': 'Failed to open location',\n    'ERR_OPEN_LOCATION_FMT': 'Failed to open location: {0}',\n    'LBL_UNKNOWN': 'Unknown',\n    'LBL_APPEARANCE': 'Appearance',\n    'LBL_USER': 'User',\n    'LBL_NAME': 'Name',\n    'LBL_APPLY': 'Apply',\n    'LBL_FILENAME': 'Filename',\n    'LBL_PATH': 'Path',\n    'LBL_SIZE': 'Size',\n    'LBL_TYPE': 'Type',\n    'LBL_MIME': 'MIME',\n    'LBL_LOADING': 'Loading',\n    'LBL_SETTINGS': 'Settings',\n    'LBL_ADD_FILE': 'Add file',\n    'LBL_COMMENT': 'Comment',\n    'LBL_ACCOUNT': 'Account',\n    'LBL_CONNECT': 'Connect',\n    'LBL_ONLINE': 'Online',\n    'LBL_OFFLINE': 'Offline',\n    'LBL_AWAY': 'Away',\n    'LBL_BUSY': 'Busy',\n    'LBL_CHAT': 'Chat',\n    'LBL_HELP': 'Help',\n    'LBL_ABOUT': 'About',\n    'LBL_PANELS': 'Panels',\n    'LBL_LOCALES': 'Locales',\n    'LBL_THEME': 'Theme',\n    'LBL_COLOR': 'Color',\n    'LBL_PID': 'PID',\n    'LBL_KILL': 'Kill',\n    'LBL_ALIVE': 'Alive',\n    'LBL_INDEX': 'Index',\n    'LBL_ADD': 'Add',\n    'LBL_FONT': 'Font',\n    'LBL_YES': 'Yes',\n    'LBL_NO': 'No',\n    'LBL_CANCEL': 'Cancel',\n    'LBL_TOP': 'Top',\n    'LBL_LEFT': 'Left',\n    'LBL_RIGHT': 'Right',\n    'LBL_BOTTOM': 'Bottom',\n    'LBL_CENTER': 'Center',\n    'LBL_FILE': 'File',\n    'LBL_NEW': 'New',\n    'LBL_OPEN': 'Open',\n    'LBL_SAVE': 'Save',\n    'LBL_SAVEAS': 'Save as...',\n    'LBL_CLOSE': 'Close',\n    'LBL_MKDIR': 'Create directory',\n    'LBL_UPLOAD': 'Upload',\n    'LBL_VIEW': 'View',\n    'LBL_EDIT': 'Edit',\n    'LBL_RENAME': 'Rename',\n    'LBL_DELETE': 'Delete',\n    'LBL_OPENWITH': 'Open With ...',\n    'LBL_ICONVIEW': 'Icon View',\n    'LBL_TREEVIEW': 'Tree View',\n    'LBL_LISTVIEW': 'List View',\n    'LBL_REFRESH': 'Refresh',\n    'LBL_VIEWTYPE': 'View type',\n    'LBL_BOLD': 'Bold',\n    'LBL_ITALIC': 'Italic',\n    'LBL_UNDERLINE': 'Underline',\n    'LBL_REGULAR': 'Regular',\n    'LBL_STRIKE': 'Strike',\n    'LBL_INDENT': 'Indent',\n    'LBL_OUTDENT': 'Outdate',\n    'LBL_UNDO': 'Undo',\n    'LBL_REDO': 'Redo',\n    'LBL_CUT': 'Cut',\n    'LBL_UNLINK': 'Unlink',\n    'LBL_COPY': 'Copy',\n    'LBL_PASTE': 'Paste',\n    'LBL_INSERT': 'Insert',\n    'LBL_IMAGE': 'Image',\n    'LBL_LINK': 'Link',\n    'LBL_DISCONNECT': 'Disconnect',\n    'LBL_APPLICATIONS': 'Applications',\n    'LBL_ADD_FOLDER': 'Add folder',\n    'LBL_INFORMATION': 'Information',\n    'LBL_TEXT_COLOR': 'Text Color',\n    'LBL_BACK_COLOR': 'Back Color',\n    'LBL_RESET_DEFAULT': 'Reset to defaults',\n    'LBL_DOWNLOAD_COMP': 'Download to computer',\n    'LBL_ORDERED_LIST': 'Ordered List',\n    'LBL_BACKGROUND_IMAGE': 'Background Image',\n    'LBL_BACKGROUND_COLOR': 'Background Color',\n    'LBL_UNORDERED_LIST': 'Unordered List',\n    'LBL_STATUS': 'Status',\n    'LBL_READONLY': 'Read-Only',\n    'LBL_CREATED': 'Created',\n    'LBL_MODIFIED': 'Modified',\n    'LBL_SHOW_COLUMNS': 'Show Columns',\n    'LBL_MOVE': 'Move',\n    'LBL_OPTIONS': 'Options',\n    'LBL_OK': 'OK',\n    'LBL_DIRECTORY': 'Directory',\n    'LBL_CREATE': 'Create',\n    'LBL_BUGREPORT': 'Bugreport',\n    'LBL_INSTALL': 'Install',\n    'LBL_UPDATE': 'Update',\n    'LBL_REMOVE': 'Remove',\n    'LBL_SHOW_SIDEBAR': 'Show sidebar',\n    'LBL_SHOW_NAVIGATION': 'Show navigation',\n    'LBL_SHOW_HIDDENFILES': 'Show hidden files',\n    'LBL_SHOW_FILEEXTENSIONS': 'Show file extensions',\n    'LBL_MOUNT': 'Mount',\n    'LBL_DESCRIPTION': 'Description',\n    'LBL_USERNAME': 'Username',\n    'LBL_PASSWORD': 'Password',\n    'LBL_HOST': 'Host',\n    'LBL_NAMESPACE': 'Namespace',\n    'LBL_SEARCH': 'Search',\n    'LBL_BACK': 'Back',\n    'LBL_ICONS': 'Icons',\n    'LBL_ICON': 'Icon',\n    'LBL_UNINSTALL': 'Uninstall',\n    'LBL_REGENERATE': 'Regenerate',\n    'LBL_DESKTOP': 'Desktop',\n    'LBL_WINDOWMANAGER': 'Window Manager',\n    'LBL_HOTKEY': 'Hotkey',\n    'LBL_HOTKEYS': 'Hotkeys',\n    'LBL_MOUNTS': 'Mounts',\n    'LBL_ID': 'ID',\n    'LBL_APPLICATION': 'Application',\n    'LBL_SCOPE': 'Scope',\n    'LBL_HIDE': 'Hide',\n    'LBL_REPOSITORY': 'Repository',\n    'LBL_VERSION': 'Version',\n    'LBL_AUTHOR': 'Author',\n    'LBL_GROUPS': 'Groups',\n    'LBL_AUTOHIDE': 'Autohide',\n    'LBL_PERSONAL': 'Personal',\n    'LBL_SYSTEM': 'System',\n    'LBL_STARTING': 'Starting',\n    'LBL_SOUNDS': 'Sounds',\n    'LBL_STORE': 'Store',\n    'LBL_LOCALE': 'Locale',\n    'LBL_PACKAGE': 'Package',\n    'LBL_PACKAGES': 'Packages',\n    'LBL_INPUT': 'Input',\n    'LBL_MISC': 'Misc',\n    'LBL_OTHER': 'Other',\n    'LBL_USERS': 'Users',\n    'LBL_FONTS': 'Fonts',\n    'LBL_OPEN_LOCATION': 'Open Location',\n    'LBL_HOME': 'Home',\n    'LBL_WIDGET': 'Widget',\n    'LBL_WIDGETS': 'Widgets',\n    'LBL_LOCK': 'Lock',\n    'LBL_UNLOCK': 'Unlock',\n    'LBL_WARNING': 'Warning',\n    'LBL_INFO': 'Info',\n    'LBL_POSITION': 'Position',\n    'LBL_OPACITY': 'Opactiy',\n    'LBL_ITEMS': 'Items',\n    'LBL_ONTOP': 'On top',\n    'LBL_BACKGROUND': 'Background',\n    'LBL_QUIT': 'Quit',\n    'LBL_EXIT': 'Exit',\n    'LBL_WINDOWS': 'Windows'\n};\n});\n\ndefine('skylark-osjsv2-client/core/auth/database',[\n\t'../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class DatabaseAuthenticator extends Authenticator {\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/demo',[\n    '../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class DemoAuthenticator extends Authenticator {\n        _getSettings() {\n            let settings = {};\n            let key;\n            for (let i = 0; i < localStorage.length; i++) {\n                key = localStorage.key(i);\n                if (key.match(/^OSjs\\//)) {\n                    try {\n                        settings[key.replace(/^OSjs\\//, '')] = JSON.parse(localStorage.getItem(key));\n                    } catch (e) {\n                        console.warn('DemoAuthenticator::login()', e, e.stack);\n                    }\n                }\n            }\n            return settings;\n        }\n        login(login) {\n            return new Promise((resolve, reject) => {\n                super.login(login).then(result => {\n                    result.userSettings = this._getSettings();\n                    return resolve(result);\n                }).catch(reject);\n            });\n        }\n        createUI() {\n            return this.requestLogin({\n                username: 'demo',\n                password: 'demo'\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/pam',[\n\t'../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class PAMAuthenticator extends Authenticator {\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/standalone',[\n    './demo'\n], function (DemoAuthenticator) {\n    'use strict';\n    return class StandaloneAuthenticator extends DemoAuthenticator {\n        constructor() {\n            super();\n            this.isStandalone = true;\n        }\n        login(login) {\n            return Promise.resolve({\n                userData: {\n                    id: 1,\n                    username: 'root',\n                    name: 'Administrator User',\n                    groups: ['admin']\n                },\n                userSettings: this._getSettings(),\n                blacklistedPackages: []\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/http',[\n    '../../vfs/fs',\n    '../../vfs/file',\n    '../connection'\n], function (VFS, FileMetadata, Connection) {\n    'use strict';\n    return class HttpConnection extends Connection {\n        onVFSRequestCompleted(module, method, args, result, appRef) {\n            if ([\n                    'upload',\n                    'write',\n                    'mkdir',\n                    'copy',\n                    'move',\n                    'unlink'\n                ].indexOf(method) !== -1) {\n                const arg = method === 'move' ? {\n                    source: args[0] instanceof FileMetadata ? args[0] : null,\n                    destination: args[1] instanceof FileMetadata ? args[1] : null\n                } : args[method === 'copy' ? 1 : 0];\n                VFS.triggerWatch(method, arg, appRef);\n            }\n            return super.onVFSRequestCompleted(...arguments);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/standalone',[\n    './http'\n], function (HttpConnection) {\n    'use strict';\n    return class StandaloneConnection extends HttpConnection {\n        createRequest(method, args, options) {\n            if (method === 'packages') {\n                return Promise.resolve({ result: OSjs.getManifest() });\n            }\n            return Promise.reject(new Error('You are currently running locally and cannot perform this operation!'));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/ws',[\n    '../config',\n    '../locales',\n    '../../vfs/fs',\n    '../../vfs/file',\n    '../connection'\n], function (Config, Locales, VFS, FileMetadata, Connection) {\n    'use strict';\n    return class WSConnection extends Connection {\n        constructor() {\n            super(...arguments);\n            const port = Config.getConfig('Connection.WSPort');\n            const path = Config.getConfig('Connection.WSPath') || '';\n            let url = window.location.protocol.replace('http', 'ws') + '//' + window.location.host;\n            if (port !== 'upgrade') {\n                if (url.match(/:\\d+$/)) {\n                    url = url.replace(/:\\d+$/, '');\n                }\n                url += ':' + port;\n            }\n            url += path;\n            this.ws = null;\n            this.wsurl = url;\n            this.wsqueue = {};\n            this.destroying = false;\n        }\n        destroy() {\n            if (!this.destroying) {\n                if (this.ws) {\n                    this.ws.close();\n                }\n                this.ws = null;\n                this.wsqueue = {};\n            }\n            this.destroying = true;\n            return super.destroy.apply(this, arguments);\n        }\n        init() {\n            this.destroying = false;\n            return new Promise((resolve, reject) => {\n                this._connect(false, (err, res) => {\n                    if (err) {\n                        reject(err instanceof Error ? err : new Error(err));\n                    } else {\n                        resolve(res);\n                    }\n                });\n            });\n        }\n        _connect(reconnect, callback) {\n            if (this.destroying || this.ws && !reconnect) {\n                return;\n            }\n            console.info('Trying WebSocket Connection', this.wsurl);\n            let connected = false;\n            this.ws = new WebSocket(this.wsurl);\n            this.ws.onopen = function (ev) {\n                connected = true;\n                setTimeout(() => callback(false), 0);\n            };\n            this.ws.onmessage = ev => {\n                console.debug('websocket open', ev);\n                const data = JSON.parse(ev.data);\n                const idx = data._index;\n                this._onmessage(idx, data);\n            };\n            this.ws.onerror = ev => {\n                console.error('websocket error', ev);\n            };\n            this.ws.onclose = ev => {\n                console.debug('websocket close', ev);\n                if (!connected && ev.code !== 3001) {\n                    callback(Locales._('CONNECTION_ERROR'));\n                    return;\n                }\n                this._onclose();\n            };\n        }\n        _onmessage(idx, data) {\n            if (typeof idx === 'undefined') {\n                this.message(data);\n            } else {\n                if (this.wsqueue[idx]) {\n                    delete data._index;\n                    this.wsqueue[idx](false, data);\n                    delete this.wsqueue[idx];\n                }\n            }\n        }\n        _onclose(reconnecting) {\n            if (this.destroying) {\n                return;\n            }\n            this.onOffline(reconnecting);\n            this.ws = null;\n            setTimeout(() => {\n                this._connect(true, err => {\n                    if (err) {\n                        this._onclose((reconnecting || 0) + 1);\n                    } else {\n                        this.onOnline();\n                    }\n                });\n            }, reconnecting ? 10000 : 1000);\n        }\n        message(data) {\n            if (data.action === 'vfs:watch') {\n                VFS.triggerWatch(data.args.event, new FileMetadata(data.args.file));\n            }\n            if (this._evHandler) {\n                this._evHandler.emit(data.action, data.args);\n            }\n        }\n        createRequest(method, args, options) {\n            if (!this.ws) {\n                return Promise.reject(new Error('No websocket connection'));\n            }\n            if ([\n                    'FS:upload',\n                    'FS:get',\n                    'logout'\n                ].indexOf(method) !== -1) {\n                return super.createRequest(...arguments);\n            }\n            const idx = this.index++;\n            const base = method.match(/^FS:/) ? '/FS/' : '/API/';\n            try {\n                this.ws.send(JSON.stringify({\n                    _index: idx,\n                    path: base + method.replace(/^FS:/, ''),\n                    args: args\n                }));\n            } catch (e) {\n                return Promise.reject(e);\n            }\n            return new Promise((resolve, reject) => {\n                this.wsqueue[idx] = function (err, res) {\n                    return err ? reject(err) : resolve(res);\n                };\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/database',[\n\t'../storage'\n], function (Storage) {\n    'use strict';\n    return class DatabaseStorage extends Storage {\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/demo',[\n    '../config',\n    '../storage'\n], function (Config, Storage) {\n    'use strict';\n    return class DemoStorage extends Storage {\n        init() {\n            const curr = Config.getConfig('Version');\n            const version = localStorage.getItem('__version__');\n            if (curr !== version) {\n                localStorage.clear();\n            }\n            localStorage.setItem('__version__', String(curr));\n            return Promise.resolve();\n        }\n        saveSettings(pool, storage) {\n            Object.keys(storage).forEach(key => {\n                if (pool && key !== pool) {\n                    return;\n                }\n                try {\n                    localStorage.setItem('OSjs/' + key, JSON.stringify(storage[key]));\n                } catch (e) {\n                    console.warn('DemoStorage::settings()', e, e.stack);\n                }\n            });\n            return Promise.resolve();\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/standalone',[\n\t'./demo'\n], function (DemoStorage) {\n    'use strict';\n    return class StandaloneStorage extends DemoStorage {\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/system',[\n\t'../storage'\n], function (Storage) {\n    'use strict';\n    return class SystemStorage extends Storage {\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/containers',[\n    '../../utils/gui',\n    '../../utils/events',\n    '../element'\n], function (GUI, Events, GUIElement) {\n    'use strict';\n    function toggleState(el, expanded) {\n        if (typeof expanded === 'undefined') {\n            expanded = el.getAttribute('data-expanded') !== 'false';\n            expanded = !expanded;\n        }\n        el.setAttribute('aria-expanded', String(expanded));\n        el.setAttribute('data-expanded', String(expanded));\n        return expanded;\n    }\n    class GUIPanedView extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-paned-view',\n                type: 'container',\n                allowedChildren: ['gui-paned-view-container']\n            }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            if (evName === 'resize') {\n                evName = '_' + evName;\n            }\n            Events.$bind(el, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const orient = el.getAttribute('data-orientation') || 'horizontal';\n            function bindResizer(resizer, idx, cel) {\n                const resizeEl = resizer.previousElementSibling;\n                if (!resizeEl) {\n                    return;\n                }\n                let startWidth = resizeEl.offsetWidth;\n                let startHeight = resizeEl.offsetHeight;\n                let minSize = 16;\n                let maxSize = Number.MAX_VALUE;\n                GUI.createDrag(resizer, ev => {\n                    startWidth = resizeEl.offsetWidth;\n                    startHeight = resizeEl.offsetHeight;\n                    minSize = parseInt(cel.getAttribute('data-min-size'), 10) || minSize;\n                    const max = parseInt(cel.getAttribute('data-max-size'), 10);\n                    if (!max) {\n                        const totalSize = resizer.parentNode[orient === 'horizontal' ? 'offsetWidth' : 'offsetHeight'];\n                        const totalContainers = resizer.parentNode.querySelectorAll('gui-paned-view-container').length;\n                        const totalSpacers = resizer.parentNode.querySelectorAll('gui-paned-view-handle').length;\n                        maxSize = totalSize - totalContainers * 16 - totalSpacers * 8;\n                    }\n                }, (ev, diff) => {\n                    const newWidth = startWidth + diff.x;\n                    const newHeight = startHeight + diff.y;\n                    let flex;\n                    if (orient === 'horizontal') {\n                        if (!isNaN(newWidth) && newWidth > 0 && newWidth >= minSize && newWidth <= maxSize) {\n                            flex = newWidth.toString() + 'px';\n                        }\n                    } else {\n                        if (!isNaN(newHeight) && newHeight > 0 && newHeight >= minSize && newHeight <= maxSize) {\n                            flex = newHeight.toString() + 'px';\n                        }\n                    }\n                    if (flex) {\n                        resizeEl.style.webkitFlexBasis = flex;\n                        resizeEl.style.mozFflexBasis = flex;\n                        resizeEl.style.msFflexBasis = flex;\n                        resizeEl.style.oFlexBasis = flex;\n                        resizeEl.style.flexBasis = flex;\n                    }\n                }, ev => {\n                    el.dispatchEvent(new CustomEvent('_resize', { detail: { index: idx } }));\n                });\n            }\n            el.querySelectorAll('gui-paned-view-container').forEach((cel, idx) => {\n                if (idx % 2) {\n                    const resizer = document.createElement('gui-paned-view-handle');\n                    resizer.setAttribute('role', 'separator');\n                    cel.parentNode.insertBefore(resizer, cel);\n                    bindResizer(resizer, idx, cel);\n                }\n            });\n            return this;\n        }\n    }\n    class GUIPanedViewContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-paned-view-container',\n                type: 'container',\n                allowedParents: ['gui-paned-view']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIButtonBar extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-button-bar',\n                type: 'container'\n            }, this);\n        }\n        build() {\n            this.$element.setAttribute('role', 'toolbar');\n            return this;\n        }\n    }\n    class GUIToolBar extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-toolbar',\n                type: 'container'\n            }, this);\n        }\n        build() {\n            this.$element.setAttribute('role', 'toolbar');\n            return this;\n        }\n    }\n    class GUIGrid extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid',\n                type: 'container',\n                allowedChildren: ['gui-grid-row']\n            }, this);\n        }\n        build() {\n            const rows = this.$element.querySelectorAll('gui-grid-row');\n            const p = 100 / rows.length;\n            rows.forEach(r => {\n                r.style.height = String(p) + '%';\n            });\n            return this;\n        }\n    }\n    class GUIGridRow extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid-row',\n                type: 'container',\n                allowedChildren: ['gui-grid-entry'],\n                allowedParents: ['gui-grid-row']\n            }, this);\n        }\n    }\n    class GUIGridEntry extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid-entry',\n                type: 'container',\n                allowedParents: ['gui-grid-row']\n            }, this);\n        }\n    }\n    class GUIVBox extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-vbox',\n                type: 'container',\n                allowedChildren: ['gui-vbox-container']\n            }, this);\n        }\n    }\n    class GUIVBoxContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-vbox-container',\n                type: 'container',\n                allowedParents: ['gui-vbox']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIHBox extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-hbox',\n                type: 'container',\n                allowedChildren: ['gui-hbox-container']\n            }, this);\n        }\n    }\n    class GUIHBoxContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-hbox-container',\n                type: 'container',\n                allowedParents: ['gui-hbox']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIExpander extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-expander',\n                type: 'container'\n            }, this);\n        }\n        set(param, value) {\n            if (param === 'expanded') {\n                return toggleState(this.$element, value === true);\n            }\n            return super.set(...arguments);\n        }\n        on(evName, callback, params) {\n            if (['change'].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const lbltxt = el.getAttribute('data-label') || '';\n            const label = document.createElement('gui-expander-label');\n            Events.$bind(label, 'pointerdown', ev => {\n                el.dispatchEvent(new CustomEvent('_change', { detail: { expanded: toggleState(el) } }));\n            }, false);\n            label.appendChild(document.createTextNode(lbltxt));\n            el.setAttribute('role', 'toolbar');\n            el.setAttribute('aria-expanded', 'true');\n            el.setAttribute('data-expanded', 'true');\n            if (el.children.length) {\n                el.insertBefore(label, el.children[0]);\n            } else {\n                el.appendChild(label);\n            }\n            return this;\n        }\n    }\n    return {\n        GUIPanedView: GUIPanedView,\n        GUIPanedViewContainer: GUIPanedViewContainer,\n        GUIButtonBar: GUIButtonBar,\n        GUIToolBar: GUIToolBar,\n        GUIGrid: GUIGrid,\n        GUIGridRow: GUIGridRow,\n        GUIGridEntry: GUIGridEntry,\n        GUIVBox: GUIVBox,\n        GUIVBoxContainer: GUIVBoxContainer,\n        GUIHBox: GUIHBox,\n        GUIHBoxContainer: GUIHBoxContainer,\n        GUIExpander: GUIExpander\n    };\n});\ndefine('skylark-osjsv2-client/utils/clipboard',[],function () {\n    'use strict';\n    let _CLIPBOARD;\n    function setClipboard(data) {\n        console.debug('setClipboard()', data);\n        _CLIPBOARD = data;\n    }\n    function getClipboard() {\n        return _CLIPBOARD;\n    }\n    return {\n        setClipboard: setClipboard,\n        getClipboard: getClipboard\n    };\n});\ndefine('skylark-osjsv2-client/gui/dataview',[\n    '../utils/gui',\n    '../utils/dom',\n    '../utils/events',\n    '../utils/clipboard',\n    '../utils/keycodes',\n    '../vfs/file',\n    './element'\n], function (GUI, DOM, Events, Clipboard, Keycodes, FileMetadata, GUIElement) {\n    'use strict';\n    const _classMap = { 'gui-list-view': 'gui-list-view-row' };\n    function getEntryTagName(type) {\n        if (typeof type !== 'string') {\n            type = type.tagName.toLowerCase();\n        }\n        let className = _classMap[type];\n        if (!className) {\n            className = type + '-entry';\n        }\n        return className;\n    }\n    function getEntryFromEvent(ev, header) {\n        const t = ev.target;\n        const tn = t.tagName.toLowerCase();\n        if (tn.match(/(view|textarea|body)$/)) {\n            return null;\n        } else if (tn === 'gui-list-view-column' && !header) {\n            return t.parentNode;\n        }\n        return t;\n    }\n    function isHeader(ev, row) {\n        row = row || getEntryFromEvent(ev);\n        return row && row.parentNode.tagName === 'GUI-LIST-VIEW-HEAD';\n    }\n    function handleItemSelection(ev, item, idx, className, selected, root, multipleSelect) {\n        root = root || item.parentNode;\n        if (isHeader(null, item)) {\n            return multipleSelect ? [] : null;\n        }\n        if (idx === -1) {\n            root.querySelectorAll(getEntryTagName(root)).forEach(function (e) {\n                DOM.$removeClass(e, 'gui-active');\n            });\n            selected = [];\n        } else {\n            if (!multipleSelect || !ev.shiftKey) {\n                root.querySelectorAll(className).forEach(function (i) {\n                    DOM.$removeClass(i, 'gui-active');\n                });\n                selected = [];\n            }\n            const findex = selected.indexOf(idx);\n            if (findex >= 0) {\n                selected.splice(findex, 1);\n                DOM.$removeClass(item, 'gui-active');\n            } else {\n                selected.push(idx);\n                DOM.$addClass(item, 'gui-active');\n            }\n        }\n        selected.sort(function (a, b) {\n            return a - b;\n        });\n        return selected;\n    }\n    function handleKeyPress(cls, el, ev) {\n        const map = {};\n        const key = ev.keyCode;\n        const type = el.tagName.toLowerCase();\n        const className = getEntryTagName(type);\n        const root = el.querySelector(type + '-body');\n        const entries = root.querySelectorAll(className);\n        const count = entries.length;\n        if (!count) {\n            return;\n        }\n        if (key === Keycodes.ENTER) {\n            el.dispatchEvent(new CustomEvent('_activate', { detail: { entries: cls.values() } }));\n            return;\n        }\n        map[Keycodes.C] = function (ev) {\n            if (ev.ctrlKey) {\n                const selected = cls.values();\n                if (selected && selected.length) {\n                    const data = [];\n                    selected.forEach(function (s) {\n                        if (s && s.data) {\n                            data.push(new FileMetadata(s.data.path, s.data.mime));\n                        }\n                    });\n                    Clipboard.setClipboard(data);\n                }\n            }\n        };\n        const selected = el._selected.concat() || [];\n        const first = selected.length ? selected[0] : 0;\n        const last = selected.length > 1 ? selected[selected.length - 1] : first;\n        let current = 0;\n        function select() {\n            const item = entries[current];\n            if (item) {\n                el._selected = handleItemSelection(ev, item, current, className, selected, root, ev.shiftKey);\n                cls.scrollIntoView(item);\n            }\n        }\n        function getRowSize() {\n            let d = 0;\n            let lastTop = -1;\n            entries.forEach(function (e) {\n                if (lastTop === -1) {\n                    lastTop = e.offsetTop;\n                }\n                if (lastTop !== e.offsetTop) {\n                    return false;\n                }\n                lastTop = e.offsetTop;\n                d++;\n                return true;\n            });\n            return d;\n        }\n        function handleKey() {\n            function next() {\n                current = Math.min(last + 1, count);\n                select();\n            }\n            function prev() {\n                current = Math.max(0, first - 1);\n                select();\n            }\n            if (type === 'gui-tree-view' || type === 'gui-list-view') {\n                map[Keycodes.UP] = prev;\n                map[Keycodes.DOWN] = next;\n            } else {\n                map[Keycodes.UP] = function () {\n                    current = Math.max(0, first - getRowSize());\n                    select();\n                };\n                map[Keycodes.DOWN] = function () {\n                    current = Math.max(last, last + getRowSize());\n                    select();\n                };\n                map[Keycodes.LEFT] = prev;\n                map[Keycodes.RIGHT] = next;\n            }\n            if (map[key]) {\n                map[key](ev);\n            }\n        }\n        handleKey();\n    }\n    function getValueParameter(r) {\n        const value = r.getAttribute('data-value');\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n        }\n        return value;\n    }\n    function matchValueByKey(r, val, key, idx) {\n        const value = r.getAttribute('data-value');\n        if (!key && (val === idx || val === value)) {\n            return r;\n        } else {\n            try {\n                const json = JSON.parse(value);\n                if (typeof json[key] === 'object' ? json[key] === val : String(json[key]) === String(val)) {\n                    return r;\n                }\n            } catch (e) {\n            }\n        }\n        return false;\n    }\n    return class UIDataView extends GUIElement {\n        clear(body) {\n            const el = this.$element;\n            if (!arguments.length) {\n                body = el;\n            }\n            el.querySelectorAll(getEntryTagName(el)).forEach(row => {\n                Events.$unbind(row);\n            });\n            DOM.$empty(body);\n            body.scrollTop = 0;\n            el._selected = [];\n            return this;\n        }\n        add(entries, oncreate) {\n            oncreate = oncreate || function () {\n            };\n            if (!(entries instanceof Array)) {\n                entries = [entries];\n            }\n            entries.forEach(el => {\n                oncreate(this, el);\n            });\n            return this;\n        }\n        patch(entries, className, body, oncreate, oninit) {\n            let single = false;\n            if (!(entries instanceof Array)) {\n                entries = [entries];\n                single = true;\n            }\n            let inView = {};\n            body.querySelectorAll(className).forEach(row => {\n                const id = row.getAttribute('data-id');\n                if (id !== null) {\n                    inView[id] = row;\n                }\n            });\n            entries.forEach(entry => {\n                let insertBefore;\n                if (typeof entry.id !== 'undefined' && entry.id !== null) {\n                    if (inView[entry.id]) {\n                        insertBefore = inView[entry.id];\n                        delete inView[entry.id];\n                    }\n                    const row = oncreate(this, entry);\n                    if (row) {\n                        if (insertBefore) {\n                            if (DOM.$hasClass(insertBefore, 'gui-active')) {\n                                DOM.$addClass(row, 'gui-active');\n                            }\n                            body.insertBefore(row, insertBefore);\n                            UIDataView.prototype.remove.call(this, null, className, insertBefore, body);\n                        } else {\n                            body.appendChild(row);\n                        }\n                        oninit(this, row);\n                    }\n                }\n            });\n            if (!single) {\n                Object.keys(inView).forEach(k => {\n                    UIDataView.prototype.remove.call(this, null, className, inView[k]);\n                });\n            }\n            inView = {};\n            this.updateActiveSelection(className);\n            return this;\n        }\n        remove(args, className, target, parentEl) {\n            args = args || [];\n            parentEl = parentEl || this.$element;\n            if (target) {\n                DOM.$remove(target);\n            } else if (typeof args[1] === 'undefined' && typeof args[0] === 'number') {\n                DOM.$remove(parentEl.querySelectorAll(className)[args[0]]);\n            } else {\n                const findId = args[0];\n                const findKey = args[1] || 'id';\n                const q = 'data-' + findKey + '=\"' + findId + '\"';\n                parentEl.querySelectorAll(className + '[' + q + ']').forEach(DOM.$remove);\n            }\n            this.updateActiveSelection(className);\n            return this;\n        }\n        updateActiveSelection(className) {\n            const active = [];\n            this.$element.querySelectorAll(className + '.gui-active').forEach(cel => {\n                active.push(DOM.$index(cel));\n            });\n            this.$element._active = active;\n        }\n        scrollIntoView(element) {\n            const el = this.$element;\n            const pos = DOM.$position(element, el);\n            let marginTop = 0;\n            if (el.tagName.toLowerCase() === 'gui-list-view') {\n                const header = el.querySelector('gui-list-view-head');\n                if (header) {\n                    marginTop = header.offsetHeight;\n                }\n            }\n            const scrollSpace = el.scrollTop + el.offsetHeight - marginTop;\n            const scrollTop = el.scrollTop + marginTop;\n            const elTop = pos.top - marginTop;\n            if (pos !== null && (elTop > scrollSpace || elTop < scrollTop)) {\n                el.scrollTop = elTop;\n                return true;\n            }\n            return false;\n        }\n        bindEntryEvents(row, className) {\n            const el = this.$element;\n            function createDraggable() {\n                let value = row.getAttribute('data-value');\n                if (value !== null) {\n                    try {\n                        value = JSON.parse(value);\n                    } catch (e) {\n                    }\n                }\n                let source = row.getAttribute('data-draggable-source');\n                if (source === null) {\n                    source = GUI.getWindowId(el);\n                    if (source !== null) {\n                        source = { wid: source };\n                    }\n                }\n                GUI.createDraggable(row, {\n                    type: el.getAttribute('data-draggable-type') || row.getAttribute('data-draggable-type'),\n                    source: source,\n                    data: value\n                });\n                let tooltip = row.getAttribute('data-tooltip');\n                if (tooltip && !row.getAttribute('title')) {\n                    row.setAttribute('title', tooltip);\n                }\n            }\n            el.dispatchEvent(new CustomEvent('_render', {\n                detail: {\n                    element: row,\n                    data: GUI.getViewNodeValue(row)\n                }\n            }));\n            if (el.getAttribute('data-draggable') === 'true') {\n                createDraggable();\n            }\n        }\n        getSelected(entries) {\n            const selected = [];\n            entries.forEach((iter, idx) => {\n                if (DOM.$hasClass(iter, 'gui-active')) {\n                    selected.push({\n                        index: idx,\n                        data: GUI.getViewNodeValue(iter)\n                    });\n                }\n            });\n            return selected;\n        }\n        getEntry(entries, val, key, asValue) {\n            if (val) {\n                let result = null;\n                entries.forEach((r, idx) => {\n                    if (!result && matchValueByKey(r, val, key, idx)) {\n                        result = r;\n                    }\n                });\n                return asValue && result ? getValueParameter(result) : result;\n            }\n            if (asValue && entries) {\n                try {\n                    return entries.map(iter => {\n                        return getValueParameter(iter);\n                    });\n                } catch (e) {\n                    console.warn(e);\n                }\n            }\n            return entries;\n        }\n        setSelected(body, entries, val, key, opts) {\n            const select = [];\n            const el = this.$element;\n            let scrollIntoView = false;\n            if (typeof opts === 'object') {\n                scrollIntoView = opts.scroll === true;\n            }\n            const sel = (r, idx) => {\n                select.push(idx);\n                DOM.$addClass(r, 'gui-active');\n                if (scrollIntoView) {\n                    this.scrollIntoView(r);\n                }\n            };\n            entries.forEach((r, idx) => {\n                DOM.$removeClass(r, 'gui-active');\n                if (matchValueByKey(r, val, key, idx)) {\n                    sel(r, idx);\n                }\n            });\n            el._selected = select;\n        }\n        build(applyArgs) {\n            const el = this.$element;\n            el._selected = [];\n            el.scrollTop = 0;\n            DOM.$addClass(el, 'gui-data-view');\n            const singleClick = el.getAttribute('data-single-click') === 'true';\n            let moved;\n            let wasResized = false;\n            let multipleSelect = el.getAttribute('data-multiple');\n            multipleSelect = multipleSelect === null || multipleSelect === 'true';\n            const select = ev => {\n                if (moved || wasResized) {\n                    return false;\n                }\n                const row = getEntryFromEvent(ev);\n                if (!row) {\n                    return false;\n                }\n                const className = row.tagName.toLowerCase();\n                if (isHeader(null, row)) {\n                    const col = getEntryFromEvent(ev, true);\n                    if (col) {\n                        let sortBy = col.getAttribute('data-sortby');\n                        if (sortBy) {\n                            let sortDir = col.getAttribute('data-sortdir');\n                            let resetDir = sortDir === 'desc';\n                            sortDir = sortDir === 'asc' ? 'desc' : resetDir ? null : 'asc';\n                            sortBy = resetDir ? null : sortBy;\n                            col.setAttribute('data-sortdir', sortDir);\n                            el.setAttribute('data-sortby', sortBy || '');\n                            el.setAttribute('data-sortdir', sortDir || '');\n                            el.dispatchEvent(new CustomEvent('_sort', {\n                                detail: {\n                                    sortDir: sortDir,\n                                    sortBy: sortBy\n                                }\n                            }));\n                        }\n                    }\n                    return false;\n                }\n                if (className === 'gui-tree-view-expander') {\n                    this.expand({\n                        ev: ev,\n                        entry: row.parentNode\n                    });\n                    return true;\n                }\n                const idx = DOM.$index(row);\n                el._selected = handleItemSelection(ev, row, idx, className, el._selected, el, multipleSelect);\n                el.dispatchEvent(new CustomEvent('_select', { detail: { entries: this.values() } }));\n                return true;\n            };\n            const activate = ev => {\n                if (moved || isHeader(ev)) {\n                    return;\n                }\n                if (singleClick) {\n                    if (select(ev) === false) {\n                        return;\n                    }\n                } else {\n                    if (!getEntryFromEvent(ev)) {\n                        return;\n                    }\n                }\n                el.dispatchEvent(new CustomEvent('_activate', { detail: { entries: this.values() } }));\n            };\n            const context = ev => {\n                if (isHeader(ev)) {\n                    return;\n                }\n                select(ev);\n                el.dispatchEvent(new CustomEvent('_contextmenu', {\n                    detail: {\n                        entries: this.values(),\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                }));\n            };\n            if (!el.querySelector('textarea.gui-focus-element') && !el.getAttribute('no-selection')) {\n                const underlay = document.createElement('textarea');\n                underlay.setAttribute('aria-label', '');\n                underlay.setAttribute('aria-hidden', 'true');\n                underlay.setAttribute('readonly', 'true');\n                underlay.className = 'gui-focus-element';\n                Events.$bind(underlay, 'focus', ev => {\n                    ev.preventDefault();\n                    DOM.$addClass(el, 'gui-element-focused');\n                });\n                Events.$bind(underlay, 'blur', ev => {\n                    ev.preventDefault();\n                    DOM.$removeClass(el, 'gui-element-focused');\n                });\n                Events.$bind(underlay, 'keydown', ev => {\n                    ev.preventDefault();\n                    handleKeyPress(this, el, ev);\n                });\n                Events.$bind(underlay, 'keypress', ev => {\n                    ev.preventDefault();\n                });\n                Events.$bind(el, 'pointerdown,touchstart', ev => {\n                    moved = false;\n                    const target = ev.target;\n                    wasResized = target && target.tagName === 'GUI-LIST-VIEW-COLUMN-RESIZER';\n                }, true);\n                Events.$bind(el, 'touchmove', ev => {\n                    moved = true;\n                }, true);\n                if (singleClick) {\n                    Events.$bind(el, 'click', activate, true);\n                } else {\n                    Events.$bind(el, 'click', select, true);\n                    Events.$bind(el, 'dblclick', activate, true);\n                }\n                Events.$bind(el, 'contextmenu', ev => {\n                    ev.preventDefault();\n                    context(ev);\n                    return false;\n                }, true);\n                this.on('select', ev => {\n                    if (DOM.$hasClass(el, 'gui-element-focused')) {\n                        return;\n                    }\n                    const oldTop = el.scrollTop;\n                    underlay.focus();\n                    el.scrollTop = oldTop;\n                    setTimeout(() => {\n                        el.scrollTop = oldTop;\n                    }, 2);\n                }, true);\n                el.appendChild(underlay);\n            }\n        }\n        focus() {\n            try {\n                const underlay = this.$element.querySelector('.gui-focus-element');\n                underlay.focus();\n            } catch (e) {\n                console.warn(e, e.stack);\n            }\n        }\n        blur() {\n            try {\n                const underlay = this.$element.querySelector('.gui-focus-element');\n                underlay.blur();\n            } catch (e) {\n                console.warn(e, e.stack);\n            }\n        }\n        values() {\n            return [];\n        }\n        on(evName, callback, params) {\n            if ([\n                    'activate',\n                    'select',\n                    'expand',\n                    'contextmenu',\n                    'render',\n                    'drop',\n                    'sort'\n                ].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/date',[],function () {\n    'use strict';\n    class ExtendedDate {\n        constructor(date) {\n            if (date) {\n                if (date instanceof Date) {\n                    this.date = date;\n                } else if (date instanceof ExtendedDate) {\n                    this.date = date.date;\n                } else if (typeof date === 'string') {\n                    this.date = new Date(date);\n                }\n            }\n            if (!this.date) {\n                this.date = new Date();\n            }\n        }\n        static get config() {\n            return { defaultFormat: 'isoDateTime' };\n        }\n        static get dayNames() {\n            return [\n                'Sun',\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thu',\n                'Fri',\n                'Sat',\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Saturday'\n            ];\n        }\n        static get monthNames() {\n            return [\n                'Jan',\n                'Feb',\n                'Mar',\n                'Apr',\n                'May',\n                'Jun',\n                'Jul',\n                'Aug',\n                'Sep',\n                'Oct',\n                'Nov',\n                'Dec',\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December'\n            ];\n        }\n        get() {\n            return this.date;\n        }\n        format(fmt) {\n            return ExtendedDate.format(this, fmt);\n        }\n        getFirstDayInMonth(fmt) {\n            return ExtendedDate.getFirstDayInMonth(fmt, null, null, this);\n        }\n        getLastDayInMonth(fmt) {\n            return ExtendedDate.getLastDayInMonth(fmt, null, null, this);\n        }\n        getDaysInMonth() {\n            return ExtendedDate.getDaysInMonth(null, null, this);\n        }\n        getWeekNumber() {\n            return ExtendedDate.getWeekNumber(this);\n        }\n        isWithinMonth(from, to) {\n            return ExtendedDate.isWithinMonth(this, from, to);\n        }\n        getDayOfTheYear() {\n            return ExtendedDate.getDayOfTheYear();\n        }\n        static format(date, fmt) {\n            return format(fmt, date);\n        }\n        static getPreviousMonth(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            let current;\n            if (now.getMonth() === 0) {\n                current = new Date(now.getFullYear() - 1, 11, now.getDate());\n            } else {\n                current = new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n            }\n            return new ExtendedDate(current);\n        }\n        static getNextMonth(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            let current;\n            if (now.getMonth() === 11) {\n                current = new Date(now.getFullYear() + 1, 0, now.getDate());\n            } else {\n                current = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n            }\n            return new ExtendedDate(current);\n        }\n        static getFirstDayInMonth(fmt, y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 1);\n            if (fmt === true) {\n                return date.getDate();\n            }\n            return fmt ? format(fmt, date) : new ExtendedDate(date);\n        }\n        static getLastDayInMonth(fmt, y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 0);\n            if (fmt === true) {\n                return date.getDate();\n            }\n            return fmt ? format(fmt, date) : new ExtendedDate(date);\n        }\n        static getDaysInMonth(y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 0);\n            return parseInt(date.getDate(), 10);\n        }\n        static getWeekNumber(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            const d = new Date(+now);\n            d.setHours(0, 0, 0);\n            d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n            return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 86400000 + 1) / 7);\n        }\n        static getDayName(index, shrt) {\n            if (index < 0 || index === null || typeof index === 'undefined') {\n                return filter(ExtendedDate.dayNames, index, shrt, 7);\n            }\n            shrt = shrt ? 0 : 1;\n            const idx = index + (shrt + 7);\n            return ExtendedDate.dayNames[idx];\n        }\n        static getMonthName(index, shrt) {\n            if (index < 0 || index === null || typeof index === 'undefined') {\n                return filter(ExtendedDate.monthNames, index, shrt, 12);\n            }\n            shrt = shrt ? 0 : 1;\n            const idx = index + (shrt + 12);\n            return ExtendedDate.monthNames[idx];\n        }\n        static isWithinMonth(now, from, to) {\n            if (now.getFullYear() >= from.getFullYear() && now.getMonth() >= from.getMonth()) {\n                if (now.getFullYear() <= to.getFullYear() && now.getMonth() <= to.getMonth()) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        static getDayOfTheYear() {\n            const now = new Date();\n            const start = new Date(now.getFullYear(), 0, 0);\n            const diff = now - start;\n            const oneDay = 1000 * 60 * 60 * 24;\n            return Math.floor(diff / oneDay);\n        }\n    };\n    const methods = [\n        'UTC',\n        'toString',\n        'now',\n        'parse',\n        'getDate',\n        'getDay',\n        'getFullYear',\n        'getHours',\n        'getMilliseconds',\n        'getMinutes',\n        'getMonth',\n        'getSeconds',\n        'getTime',\n        'getTimezoneOffset',\n        'getUTCDate',\n        'getUTCDay',\n        'getUTCFullYear',\n        'getUTCHours',\n        'getUTCMilliseconds',\n        'getUTCMinutes',\n        'getUTCMonth',\n        'getUTCSeconds',\n        'getYear',\n        'setDate',\n        'setFullYear',\n        'setHours',\n        'setMilliseconds',\n        'setMinutes',\n        'setMonth',\n        'setSeconds',\n        'setTime',\n        'setUTCDate',\n        'setUTCFullYear',\n        'setUTCHours',\n        'setUTCMilliseconds',\n        'setUTCMinutes',\n        'setUTCMonth',\n        'setUTCSeconds',\n        'setYear',\n        'toDateString',\n        'toGMTString',\n        'toISOString',\n        'toJSON',\n        'toLocaleDateString',\n        'toLocaleFormat',\n        'toLocaleString',\n        'toLocaleTimeString',\n        'toSource',\n        'toString',\n        'toTimeString',\n        'toUTCString',\n        'valueOf'\n    ];\n    methods.forEach(function (m) {\n        ExtendedDate.prototype[m] = function () {\n            return this.date[m].apply(this.date, arguments);\n        };\n    });\n    function formatDate(date, format, utc) {\n        utc = utc === true;\n        function pad(val, len) {\n            val = String(val);\n            len = len || 2;\n            while (val.length < len) {\n                val = '0' + val;\n            }\n            return val;\n        }\n        const defaultFormats = {\n            'default': 'Y-m-d H:i:s',\n            shortDate: 'm/d/y',\n            mediumDate: 'M d, Y',\n            longDate: 'F d, Y',\n            fullDate: 'l, F d, Y',\n            shortTime: 'h:i A',\n            mediumTime: 'h:i:s A',\n            longTime: 'h:i:s A T',\n            isoDate: 'Y-m-d',\n            isoTime: 'H:i:s',\n            isoDateTime: 'Y-m-d H:i:s'\n        };\n        format = defaultFormats[format] || format;\n        if (!(date instanceof ExtendedDate)) {\n            date = new ExtendedDate(date);\n        }\n        const map = {\n            d: function (s) {\n                return pad(map.j(s));\n            },\n            D: function (s) {\n                return ExtendedDate.dayNames[utc ? date.getUTCDay() : date.getDay()];\n            },\n            j: function (s) {\n                return utc ? date.getUTCDate() : date.getDate();\n            },\n            l: function (s) {\n                return ExtendedDate.dayNames[(utc ? date.getUTCDay() : date.getDay()) + 7];\n            },\n            w: function (s) {\n                return utc ? date.getUTCDay() : date.getDay();\n            },\n            z: function (s) {\n                return date.getDayOfTheYear();\n            },\n            S: function (s) {\n                const d = utc ? date.getUTCDate() : date.getDate();\n                return [\n                    'th',\n                    'st',\n                    'nd',\n                    'rd'\n                ][d % 10 > 3 ? 0 : (d % 100 - d % 10 !== 10) * d % 10];\n            },\n            W: function (s) {\n                return date.getWeekNumber();\n            },\n            F: function (s) {\n                return ExtendedDate.monthNames[(utc ? date.getUTCMonth() : date.getMonth()) + 12];\n            },\n            m: function (s) {\n                return pad(map.n(s));\n            },\n            M: function (s) {\n                return ExtendedDate.monthNames[utc ? date.getUTCMonth() : date.getMonth()];\n            },\n            n: function (s) {\n                return (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n            },\n            t: function (s) {\n                return date.getDaysInMonth();\n            },\n            Y: function (s) {\n                return utc ? date.getUTCFullYear() : date.getFullYear();\n            },\n            y: function (s) {\n                return String(map.Y(s)).slice(2);\n            },\n            a: function (s) {\n                return map.G(s) < 12 ? 'am' : 'pm';\n            },\n            A: function (s) {\n                return map.a(s).toUpperCase();\n            },\n            g: function (s) {\n                return map.G(s) % 12 || 12;\n            },\n            G: function (s) {\n                return utc ? date.getUTCHours() : date.getHours();\n            },\n            h: function (s) {\n                return pad(map.g(s));\n            },\n            H: function (s) {\n                return pad(map.G(s));\n            },\n            i: function (s) {\n                return pad(utc ? date.getUTCMinutes() : date.getMinutes());\n            },\n            s: function (s) {\n                return pad(utc ? date.getUTCSeconds() : date.getSeconds());\n            },\n            O: function (s) {\n                const tzo = -date.getTimezoneOffset();\n                const dif = tzo >= 0 ? '+' : '-';\n                function ppad(num) {\n                    const norm = Math.abs(Math.floor(num));\n                    return (norm < 10 ? '0' : '') + norm;\n                }\n                const str = dif + ppad(tzo / 60) + ':' + ppad(tzo % 60);\n                return str;\n            },\n            T: function (s) {\n                if (utc) {\n                    return 'UTC';\n                }\n                const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n                const zones = String(date.date).match(timezone) || [''];\n                return zones.pop().replace(/(\\+|\\-)[0-9]+$/, '');\n            },\n            U: function (s) {\n                return date.getTime();\n            }\n        };\n        const result = [];\n        format.split('').forEach(function (s) {\n            result.push(map[s] ? map[s]() : s);\n        });\n        return result.join('');\n    }\n\n    function filter(from, index, shrt, toindex) {\n        const list = [];\n        for (let i = shrt ? 0 : toindex; i < from.length; i++) {\n            list.push(from[i]);\n        }\n        return list;\n    }\n    function format(fmt, date) {\n        let utc;\n        if (typeof fmt === 'undefined' || !fmt) {\n            fmt = ExtendedDate.config.defaultFormat;\n        } else {\n            if (typeof fmt !== 'string') {\n                utc = fmt.utc;\n                fmt = fmt.format;\n            } else {\n                utc = ExtendedDate.config.utc;\n            }\n        }\n        return formatDate(date, fmt, utc);\n    }\n    function _now(now) {\n        return now ? now instanceof ExtendedDate ? now.date : now : new Date();\n    }\n    function _y(y, now) {\n        return typeof y === 'undefined' || y === null || y < 0 ? now.getFullYear() : y;\n    }\n    function _m(m, now) {\n        return typeof m === 'undefined' || m === null || m < 0 ? now.getMonth() : m;\n    }\n    return ExtendedDate;\n});\ndefine('skylark-osjsv2-client/gui/elements/fileview',[\n    '../../utils/fs',\n    '../../vfs/fs',\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/misc',\n    '../../utils/events',\n    '../menu',\n    '../element',\n    '../dataview',\n    '../../core/package-manager',\n    '../../core/settings-manager',\n    '../../vfs/file',\n    '../../helpers/date',\n    '../../core/theme',\n    '../../core/locales',\n    '../../core/config'\n], function (\n    FS, \n    VFS, \n    DOM, \n    GUI, \n    Utils, \n    Events, \n    Menu, \n    GUIElement, \n    GUIDataView, \n    PackageManager, \n    SettingsManager, \n    FileMetadata, \n    DateExtended, \n    Theme, \n    Locales, \n    Config\n) {\n    'use strict';\n    let _iconSizes = { 'gui-icon-view': '32x32' };\n    function getFileIcon(iter, size) {\n        if (iter.icon && typeof iter.icon === 'object') {\n            if (iter.icon.application) {\n                return PackageManager.getPackageResource(iter.icon.filename, iter.icon.application);\n            }\n            return Theme.getIcon(iter.icon.filename, size, iter.icon.application);\n        }\n        const icon = 'status/dialog-question.png';\n        return Theme.getFileIcon(iter, size, icon);\n    }\n    function getFileSize(iter) {\n        let filesize = '';\n        if (iter.type !== 'dir' && iter.size >= 0) {\n            filesize = FS.humanFileSize(iter.size);\n        }\n        return filesize;\n    }\n    const removeExtension = (() => {\n        let mimeConfig;\n        return (str, opts) => {\n            if (!mimeConfig) {\n                mimeConfig = Config.getConfig('MIME.mapping');\n            }\n            if (opts.extensions === false) {\n                let ext = FS.filext(str);\n                if (ext) {\n                    ext = '.' + ext;\n                    if (mimeConfig[ext]) {\n                        str = str.substr(0, str.length - ext.length);\n                    }\n                }\n            }\n            return str;\n        };\n    })();\n    function getDateFromStamp(stamp) {\n        if (typeof stamp === 'string') {\n            let date = null;\n            try {\n                date = new Date(stamp);\n            } catch (e) {\n            }\n            if (date) {\n                return DateExtended.format(date);\n            }\n        }\n        return stamp;\n    }\n    function getListViewColumns(cls, iter, opts) {\n        opts = opts || {};\n        const columnMapping = {\n            filename: {\n                label: 'LBL_FILENAME',\n                icon: () => {\n                    return getFileIcon(iter);\n                },\n                value: () => {\n                    return removeExtension(iter.filename, opts);\n                }\n            },\n            mime: {\n                label: 'LBL_MIME',\n                size: '100px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return iter.mime;\n                }\n            },\n            mtime: {\n                label: 'LBL_MODIFIED',\n                size: '160px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getDateFromStamp(iter.mtime);\n                }\n            },\n            ctime: {\n                label: 'LBL_CREATED',\n                size: '160px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getDateFromStamp(iter.ctime);\n                }\n            },\n            size: {\n                label: 'LBL_SIZE',\n                size: '120px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getFileSize(iter);\n                }\n            }\n        };\n        let defColumns = [\n            'filename',\n            'mime',\n            'size'\n        ];\n        let useColumns = defColumns;\n        if (!opts.defaultcolumns) {\n            const vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n            const scandirOptions = vfsOptions.scandir || {};\n            useColumns = scandirOptions.columns || defColumns;\n        }\n        const columns = [];\n        const sortBy = cls.$element.getAttribute('data-sortby');\n        const sortDir = cls.$element.getAttribute('data-sortdir');\n        useColumns.forEach((key, idx) => {\n            const map = columnMapping[key];\n            if (iter) {\n                columns.push({\n                    sortBy: key,\n                    label: map.value(),\n                    icon: map.icon(),\n                    textalign: idx === 0 ? 'left' : 'right'\n                });\n            } else {\n                columns.push({\n                    sortBy: key,\n                    sortDir: key === sortBy ? sortDir : null,\n                    label: Locales._(map.label),\n                    size: map.size || '',\n                    resizable: idx > 0,\n                    textalign: idx === 0 ? 'left' : 'right'\n                });\n            }\n        });\n        return columns;\n    }\n    function scandir(dir, opts, cb, oncreate) {\n        const file = new FileMetadata(dir);\n        file.type = 'dir';\n        const scanopts = {\n            backlink: opts.backlink,\n            showDotFiles: opts.dotfiles === true,\n            showFileExtensions: opts.extensions === true,\n            mimeFilter: opts.filter || [],\n            typeFilter: opts.filetype || null,\n            sortBy: opts.sortby,\n            sortDir: opts.sortdir\n        };\n        VFS.scandir(file, scanopts).then(result => {\n            const list = [];\n            const summary = {\n                size: 0,\n                directories: 0,\n                files: 0,\n                hidden: 0\n            };\n            function isHidden(iter) {\n                return (iter.filename || '').substr(0) === '.';\n            }\n            (result || []).forEach(iter => {\n                list.push(oncreate(iter));\n                summary.size += iter.size || 0;\n                summary.directories += iter.type === 'dir' ? 1 : 0;\n                summary.files += iter.type !== 'dir' ? 1 : 0;\n                summary.hidden += isHidden(iter) ? 1 : 0;\n            });\n            cb(false, list, summary);\n        }).catch(cb);\n    }\n    function readdir(cls, dir, done, sopts) {\n        const childView = cls.getChildView();\n        if (!childView) {\n            return;\n        }\n        sopts = sopts || {};\n        const vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n        const scandirOptions = vfsOptions.scandir || {};\n        const el = cls.$element;\n        const target = childView.$element;\n        const tagName = target.tagName.toLowerCase();\n        el.setAttribute('data-path', dir);\n        const opts = {\n            filter: null,\n            backlink: sopts.backlink\n        };\n        function setOption(s, d, c, cc) {\n            if (el.hasAttribute(s)) {\n                opts[d] = c(el.getAttribute(s));\n            } else {\n                opts[d] = (cc || function () {\n                })();\n            }\n        }\n        setOption('data-sortby', 'sortby', val => {\n            return val;\n        });\n        setOption('data-sortdir', 'sortdir', val => {\n            return val;\n        });\n        setOption('data-dotfiles', 'dotfiles', val => {\n            return val === 'true';\n        }, () => {\n            return scandirOptions.showHiddenFiles === true;\n        });\n        setOption('data-extensions', 'extensions', val => {\n            return val === 'true';\n        }, () => {\n            return scandirOptions.showFileExtensions === true;\n        });\n        setOption('data-filetype', 'filetype', val => {\n            return val;\n        });\n        setOption('data-defaultcolumns', 'defaultcolumns', val => {\n            return val === 'true';\n        });\n        try {\n            opts.filter = JSON.parse(el.getAttribute('data-filter'));\n        } catch (e) {\n        }\n        scandir(dir, opts, (error, result, summary) => {\n            if (tagName === 'gui-list-view') {\n                cls.getChildView().set('zebra', true);\n                if (sopts.headers !== false) {\n                    cls.getChildView().set('columns', getListViewColumns(cls, null, opts));\n                }\n            }\n            done(error, result, summary);\n        }, iter => {\n            const tooltip = Utils.format('{0}\\n{1}\\n{2} {3}', iter.type.toUpperCase(), iter.filename, getFileSize(iter), iter.mime || '');\n            function _createEntry() {\n                const row = {\n                    value: iter,\n                    id: iter.id || removeExtension(iter.filename, opts),\n                    label: iter.filename,\n                    tooltip: tooltip,\n                    icon: getFileIcon(iter, _iconSizes[tagName] || '16x16')\n                };\n                if (tagName === 'gui-tree-view' && iter.type === 'dir') {\n                    if (iter.filename !== '..') {\n                        row.entries = [{ label: 'Loading...' }];\n                    }\n                }\n                return row;\n            }\n            if (tagName !== 'gui-list-view') {\n                return _createEntry();\n            }\n            return {\n                value: iter,\n                id: iter.id || iter.filename,\n                tooltip: tooltip,\n                columns: getListViewColumns(cls, iter, opts)\n            };\n        });\n    }\n    class GUIFileView extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-file-view' }, this);\n        }\n        on(evName, callback, params) {\n            if ([\n                    'activate',\n                    'select',\n                    'contextmenu',\n                    'sort'\n                ].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            const el = this.$element;\n            if (evName === '_contextmenu') {\n                el.setAttribute('data-has-contextmenu', 'true');\n            }\n            Events.$bind(el, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            if (param === 'type') {\n                const firstChild = el.children[0];\n                if (firstChild && firstChild.tagName.toLowerCase() === value) {\n                    return true;\n                }\n                el.setAttribute('data-type', value);\n                this.buildChildView();\n                if (typeof arg === 'undefined' || arg === true) {\n                    this.chdir({ path: el.getAttribute('data-path') });\n                }\n                return this;\n            } else if ([\n                    'filter',\n                    'dotfiles',\n                    'filetype',\n                    'extensions',\n                    'defaultcolumns',\n                    'sortby',\n                    'sortdir'\n                ].indexOf(param) >= 0) {\n                GUI.setProperty(el, param, value);\n                return this;\n            }\n            const childView = this.getChildView();\n            if (childView) {\n                return childView.set.apply(childView, arguments);\n            }\n            return GUIDataView.prototype.set.apply(this, arguments);\n        }\n        build() {\n            if (this.childView) {\n                return this;\n            }\n            this.buildChildView();\n            const el = this.$element;\n            Events.$bind(el, '_expand', ev => {\n                const target = ev.detail.element;\n                if (target.getAttribute('data-was-rendered')) {\n                    return;\n                }\n                if (ev.detail.expanded) {\n                    const entry = ev.detail.entries[0].data;\n                    target.setAttribute('data-was-rendered', String(true));\n                    readdir(this, entry.path, (error, result, summary) => {\n                        if (!error) {\n                            target.querySelectorAll('gui-tree-view-entry').forEach(e => {\n                                DOM.$remove(e);\n                            });\n                            const childView = this.getChildView();\n                            if (childView) {\n                                childView.add({\n                                    entries: result,\n                                    parentNode: target\n                                });\n                            }\n                        }\n                    }, { backlink: false });\n                }\n            });\n            return this;\n        }\n        values() {\n            const childView = this.getChildView();\n            if (childView) {\n                return childView.values();\n            }\n            return null;\n        }\n        contextmenu(ev) {\n            const vfsOptions = SettingsManager.instance('VFS');\n            const scandirOptions = vfsOptions.get('scandir') || {};\n            function setOption(opt, toggle) {\n                const opts = { scandir: {} };\n                opts.scandir[opt] = toggle;\n                vfsOptions.set(null, opts, true);\n            }\n            Menu.create([\n                {\n                    title: Locales._('LBL_SHOW_HIDDENFILES'),\n                    type: 'checkbox',\n                    checked: scandirOptions.showHiddenFiles === true,\n                    onClick: () => {\n                        setOption('showHiddenFiles', !scandirOptions.showHiddenFiles);\n                    }\n                },\n                {\n                    title: Locales._('LBL_SHOW_FILEEXTENSIONS'),\n                    type: 'checkbox',\n                    checked: scandirOptions.showFileExtensions === true,\n                    onClick: () => {\n                        setOption('showFileExtensions', !scandirOptions.showFileExtensions);\n                    }\n                }\n            ], ev);\n        }\n        chdir(args) {\n            let childView = this.getChildView();\n            if (!childView) {\n                childView = this.buildChildView();\n            }\n            const cb = args.done || function () {\n            };\n            const dir = args.path || Config.getDefaultPath();\n            const child = childView;\n            const el = this.$element;\n            clearTimeout(el._readdirTimeout);\n            el._readdirTimeout = setTimeout(() => {\n                readdir(this, dir, (error, result, summary) => {\n                    if (error) {\n                        OSjs.error(Locales._('ERR_VFSMODULE_XHR_ERROR'), Locales._('ERR_VFSMODULE_SCANDIR_FMT', dir), error);\n                    } else {\n                        child.clear();\n                        child.add(result);\n                    }\n                    cb(error, summary);\n                }, args.opts);\n            }, 50);\n        }\n        getChildViewType() {\n            let type = this.$element.getAttribute('data-type') || 'list-view';\n            if (!type.match(/^gui\\-/)) {\n                type = 'gui-' + type;\n            }\n            return type;\n        }\n        getChildView() {\n            return GUIElement.createFromNode(this.$element.children[0]);\n        }\n        buildChildView() {\n            const el = this.$element;\n            const type = this.getChildViewType();\n            const childView = this.getChildView();\n            if (childView) {\n                if (childView.$element && childView.$element.tagName.toLowerCase() === type) {\n                    return null;\n                }\n            }\n            DOM.$empty(el);\n            const nel = GUIElement.create(type, {\n                'draggable': true,\n                'draggable-type': 'file'\n            });\n            nel.build();\n            nel.on('select', ev => {\n                el.dispatchEvent(new CustomEvent('_select', { detail: ev.detail }));\n            });\n            nel.on('activate', ev => {\n                el.dispatchEvent(new CustomEvent('_activate', { detail: ev.detail }));\n            });\n            nel.on('sort', ev => {\n                el.setAttribute('data-sortby', String(ev.detail.sortBy));\n                el.setAttribute('data-sortdir', String(ev.detail.sortDir));\n                this.chdir({\n                    sopts: { headers: false },\n                    path: el.getAttribute('data-path')\n                });\n                el.dispatchEvent(new CustomEvent('_sort', { detail: ev.detail }));\n            });\n            nel.on('contextmenu', ev => {\n                if (!el.hasAttribute('data-has-contextmenu') || el.hasAttribute('data-has-contextmenu') === 'false') {\n                    this.contextmenu(ev);\n                }\n                el.dispatchEvent(new CustomEvent('_contextmenu', { detail: ev.detail }));\n            });\n            if (type === 'gui-tree-view') {\n                nel.on('expand', ev => {\n                    el.dispatchEvent(new CustomEvent('_expand', { detail: ev.detail }));\n                });\n            }\n            el.setAttribute('role', 'region');\n            el.appendChild(nel.$element);\n            return nel;\n        }\n    }\n    return { GUIFileView: GUIFileView };\n});\ndefine('skylark-osjsv2-client/gui/elements/iconview',[\n    '../../utils/gui',\n    '../dataview'\n], function (GUI, GUIDataView) {\n    'use strict';\n    function createEntry(cls, e) {\n        const entry = GUI.createElement('gui-icon-view-entry', e);\n        return entry;\n    }\n    function initEntry(cls, cel) {\n        const icon = cel.getAttribute('data-icon');\n        const label = GUI.getLabel(cel);\n        const dicon = document.createElement('div');\n        const dimg = document.createElement('img');\n        dimg.src = icon;\n        dicon.appendChild(dimg);\n        const dlabel = document.createElement('div');\n        const dspan = document.createElement('span');\n        dspan.appendChild(document.createTextNode(label));\n        dlabel.appendChild(dspan);\n        cls.bindEntryEvents(cel, 'gui-icon-view-entry');\n        cel.setAttribute('role', 'listitem');\n        cel.appendChild(dicon);\n        cel.appendChild(dlabel);\n    }\n    class GUIIconView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-icon-view'\n            }, this);\n        }\n        values() {\n            return this.getSelected(this.$element.querySelectorAll('gui-icon-view-entry'));\n        }\n        build() {\n            const el = this.$element;\n            let body = el.querySelector('gui-icon-view-body');\n            const found = !!body;\n            if (!found) {\n                body = document.createElement('gui-icon-view-body');\n                el.appendChild(body);\n            }\n            el.querySelectorAll('gui-icon-view-entry').forEach((cel, idx) => {\n                if (!found) {\n                    body.appendChild(cel);\n                }\n                initEntry(this, cel);\n            });\n            el.setAttribute('role', 'list');\n            return super.build(...arguments);\n        }\n        get(param, value, arg, asValue) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-icon-view-body');\n                const rows = body.querySelectorAll('gui-icon-view-entry');\n                return this.getEntry(rows, value, arg, asValue);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            if (param === 'selected' || param === 'value') {\n                if (body) {\n                    this.setSelected(body, body.querySelectorAll('gui-icon-view-entry'), value, arg);\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.add(entries, (cls, e) => {\n                const entry = createEntry(this, e);\n                body.appendChild(entry);\n                initEntry(this, entry);\n            });\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.clear(body);\n        }\n        remove(entries) {\n            return super.remove(entries, 'gui-icon-view-entry');\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.patch(entries, 'gui-icon-view-entry', body, createEntry, initEntry);\n        }\n    }\n    return { GUIIconView: GUIIconView };\n});\ndefine('skylark-osjsv2-client/gui/elements/inputs',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/clipboard',\n    '../../utils/events',\n    '../../utils/keycodes',\n    '../element',\n    '../../core/locales'\n], function (DOM, GUI, Clipboard, Events, Keycodes, GUIElement, locales) {\n    'use strict';\n    let _buttonCount = 0;\n    function createInputOfType(el, type) {\n        const group = el.getAttribute('data-group');\n        const placeholder = el.getAttribute('data-placeholder');\n        const disabled = String(el.getAttribute('data-disabled')) === 'true';\n        const value = el.childNodes.length ? el.childNodes[0].nodeValue : null;\n        DOM.$empty(el);\n        const input = document.createElement(type === 'textarea' ? 'textarea' : 'input');\n        const attribs = {\n            value: null,\n            type: type,\n            tabindex: -1,\n            placeholder: placeholder,\n            disabled: disabled ? 'disabled' : null,\n            name: group ? group + '[]' : null\n        };\n        [\n            'autocomplete',\n            'autocorrect',\n            'autocapitalize',\n            'spellcheck'\n        ].forEach(a => {\n            attribs[a] = el.getAttribute('data-' + a) || 'false';\n        });\n        function _bindDefaults() {\n            if ([\n                    'range',\n                    'slider'\n                ].indexOf(type) >= 0) {\n                attribs.min = el.getAttribute('data-min');\n                attribs.max = el.getAttribute('data-max');\n                attribs.step = el.getAttribute('data-step');\n            } else if ([\n                    'radio',\n                    'checkbox'\n                ].indexOf(type) >= 0) {\n                if (el.getAttribute('data-value') === 'true') {\n                    attribs.checked = 'checked';\n                }\n            } else if ([\n                    'text',\n                    'password',\n                    'textarea'\n                ].indexOf(type) >= 0) {\n                attribs.value = value || '';\n            }\n            Object.keys(attribs).forEach(a => {\n                if (attribs[a] !== null) {\n                    if (a === 'value') {\n                        input.value = attribs[a];\n                    } else {\n                        input.setAttribute(a, attribs[a]);\n                    }\n                }\n            });\n        }\n        function _bindEvents() {\n            if (type === 'text' || type === 'password' || type === 'textarea') {\n                Events.$bind(input, 'keydown', ev => {\n                    if (ev.keyCode === Keycodes.ENTER) {\n                        input.dispatchEvent(new CustomEvent('_enter', { detail: input.value }));\n                    } else if (ev.keyCode === Keycodes.C && ev.ctrlKey) {\n                        Clipboard.setClipboard(input.value);\n                    }\n                    if (type === 'textarea' && ev.keyCode === Keycodes.TAB) {\n                        ev.preventDefault();\n                        input.value += '\\t';\n                    }\n                }, false);\n            }\n        }\n        function _create() {\n            _bindDefaults();\n            _bindEvents();\n            GUI.createInputLabel(el, type, input);\n            const rolemap = {\n                'TEXTAREA': () => {\n                    return 'textbox';\n                },\n                'INPUT': i => {\n                    const typemap = {\n                        'range': 'slider',\n                        'text': 'textbox',\n                        'password': 'textbox'\n                    };\n                    return typemap[i.type] || i.type;\n                }\n            };\n            if (rolemap[el.tagName]) {\n                input.setAttribute('role', rolemap[el.tagName](input));\n            }\n            input.setAttribute('aria-label', el.getAttribute('title') || '');\n            el.setAttribute('role', 'region');\n            el.setAttribute('aria-disabled', String(disabled));\n            Events.$bind(input, 'change', ev => {\n                let value = input.value;\n                if (type === 'radio' || type === 'checkbox') {\n                    value = input.checked;\n                }\n                input.dispatchEvent(new CustomEvent('_change', { detail: value }));\n            }, false);\n        }\n        _create();\n    }\n    function addToSelectBox(el, entries) {\n        const target = el.querySelector('select');\n        if (!(entries instanceof Array)) {\n            entries = [entries];\n        }\n        entries.forEach(e => {\n            const opt = document.createElement('option');\n            opt.setAttribute('role', 'option');\n            opt.setAttribute('value', e.value);\n            opt.appendChild(document.createTextNode(e.label));\n            target.appendChild(opt);\n        });\n    }\n    function removeFromSelectBox(el, what) {\n        const target = el.querySelector('select');\n        target.querySelectorAll('option').forEach(opt => {\n            if (String(opt.value) === String(what)) {\n                DOM.$remove(opt);\n                return false;\n            }\n            return true;\n        });\n    }\n    function createSelectInput(el, multiple) {\n        const disabled = el.getAttribute('data-disabled') !== null;\n        const selected = el.getAttribute('data-selected');\n        const select = document.createElement('select');\n        if (multiple) {\n            select.setAttribute('size', el.getAttribute('data-size') || 2);\n            multiple = el.getAttribute('data-multiple') === 'true';\n        }\n        if (multiple) {\n            select.setAttribute('multiple', 'multiple');\n        }\n        if (disabled) {\n            select.setAttribute('disabled', 'disabled');\n        }\n        if (selected !== null) {\n            select.selectedIndex = selected;\n        }\n        el.querySelectorAll('gui-select-option').forEach(sel => {\n            const value = sel.getAttribute('data-value') || '';\n            const label = sel.childNodes.length ? sel.childNodes[0].nodeValue : '';\n            const option = document.createElement('option');\n            option.setAttribute('role', 'option');\n            option.setAttribute('value', value);\n            option.appendChild(document.createTextNode(label));\n            if (sel.getAttribute('selected')) {\n                option.setAttribute('selected', 'selected');\n            }\n            select.appendChild(option);\n            sel.parentNode.removeChild(sel);\n        });\n        Events.$bind(select, 'change', ev => {\n            select.dispatchEvent(new CustomEvent('_change', { detail: select.value }));\n        }, false);\n        select.setAttribute('role', 'listbox');\n        select.setAttribute('aria-label', el.getAttribute('title') || '');\n        el.setAttribute('aria-disabled', String(disabled));\n        el.setAttribute('role', 'region');\n        el.appendChild(select);\n    }\n    function setSwitchValue(val, input, button) {\n        if (val !== true) {\n            input.removeAttribute('checked');\n            DOM.$removeClass(button, 'gui-active');\n            button.innerHTML = '0';\n        } else {\n            input.setAttribute('checked', 'checked');\n            DOM.$addClass(button, 'gui-active');\n            button.innerHTML = '1';\n        }\n    }\n    class _GUIInput extends GUIElement {\n        on(evName, callback, params) {\n            if (evName === 'enter') {\n                evName = '_enter';\n            } else if (evName === 'change') {\n                evName = '_change';\n            }\n            const target = this.$element.querySelector('textarea, input, select');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n    }\n    class GUILabel extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-label' }, this);\n        }\n        set(param, value, isHTML) {\n            const el = this.$element;\n            if (param === 'value' || param === 'label') {\n                el.setAttribute('data-label', String(value));\n                const lbl = el.querySelector('label');\n                DOM.$empty(lbl);\n                if (isHTML) {\n                    lbl.innerHTML = value;\n                } else {\n                    lbl.appendChild(document.createTextNode(value));\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const label = GUI.getValueLabel(el, true);\n            const lbl = document.createElement('label');\n            lbl.appendChild(document.createTextNode(label));\n            el.setAttribute('role', 'heading');\n            el.setAttribute('data-label', String(label));\n            el.appendChild(lbl);\n            return this;\n        }\n    }\n    class GUITextarea extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-textarea',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'textarea');\n            return this;\n        }\n        set(param, value) {\n            const el = this.$element;\n            if (el && param === 'scrollTop') {\n                if (typeof value !== 'number') {\n                    value = el.firstChild.scrollHeight;\n                }\n                el.firstChild.scrollTop = value;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n    }\n    class GUIText extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-text',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'text');\n            return this;\n        }\n    }\n    class GUIPassword extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-password',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'password');\n            return this;\n        }\n    }\n    class GUIFileUpload extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-file-upload',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            const input = document.createElement('input');\n            input.setAttribute('role', 'button');\n            input.setAttribute('type', 'file');\n            input.onchange = ev => {\n                input.dispatchEvent(new CustomEvent('_change', { detail: input.files[0] }));\n            };\n            this.$element.appendChild(input);\n            return this;\n        }\n    }\n    class GUIRadio extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-radio',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'radio');\n            return this;\n        }\n    }\n    class GUICheckbox extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-checkbox',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'checkbox');\n            return this;\n        }\n    }\n    class GUISwitch extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-switch',\n                type: 'input'\n            }, this);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                const button = this.$element.querySelector('button');\n                setSwitchValue(value, input, button);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const input = document.createElement('input');\n            input.type = 'checkbox';\n            el.appendChild(input);\n            const inner = document.createElement('div');\n            const button = document.createElement('button');\n            inner.appendChild(button);\n            GUI.createInputLabel(el, 'switch', inner);\n            function toggleValue(v) {\n                let val = false;\n                if (typeof v === 'undefined') {\n                    val = !!input.checked;\n                    val = !val;\n                } else {\n                    val = v;\n                }\n                setSwitchValue(val, input, button);\n            }\n            Events.$bind(inner, 'pointerup', ev => {\n                ev.preventDefault();\n                const disabled = el.getAttribute('data-disabled') !== null;\n                if (!disabled) {\n                    toggleValue();\n                }\n            }, false);\n            toggleValue(false);\n            return this;\n        }\n    }\n    class GUIButton extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-button',\n                type: 'input'\n            }, this);\n        }\n        set(param, value, isHTML) {\n            if (param === 'value' || param === 'label') {\n                const lbl = this.$element.querySelector('button');\n                DOM.$empty(lbl);\n                if (isHTML) {\n                    lbl.innerHTML = value;\n                } else {\n                    lbl.appendChild(document.createTextNode(value));\n                }\n                lbl.setAttribute('aria-label', value);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        create(params) {\n            const label = params.label;\n            if (params.label) {\n                delete params.label;\n            }\n            const el = GUI.createElement('gui-button', params);\n            if (label) {\n                el.appendChild(document.createTextNode(label));\n            }\n            return el;\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('button');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const icon = el.getAttribute('data-icon');\n            const disabled = el.getAttribute('data-disabled') !== null;\n            const group = el.getAttribute('data-group');\n            const label = GUI.getValueLabel(el);\n            const input = document.createElement('button');\n            function setGroup(g) {\n                if (g) {\n                    input.setAttribute('name', g + '[' + _buttonCount + ']');\n                    Events.$bind(input, 'pointerup', () => {\n                        let root = el;\n                        while (root.parentNode) {\n                            if (root.tagName.toLowerCase() === 'application-window-content') {\n                                break;\n                            }\n                            root = root.parentNode;\n                        }\n                        DOM.$addClass(input, 'gui-active');\n                        root.querySelectorAll('gui-button[data-group=\"' + g + '\"] > button').forEach(b => {\n                            if (b.name === input.name) {\n                                return;\n                            }\n                            DOM.$removeClass(b, 'gui-active');\n                        });\n                    });\n                }\n            }\n            function setImage() {\n                if (icon && icon !== 'null') {\n                    const tip = locales._(el.getAttribute('data-tooltip') || '');\n                    const img = document.createElement('img');\n                    img.src = icon;\n                    img.alt = tip;\n                    img.title = tip;\n                    if (input.firstChild) {\n                        input.insertBefore(img, input.firstChild);\n                    } else {\n                        input.appendChild(img);\n                    }\n                    DOM.$addClass(el, 'gui-has-image');\n                }\n            }\n            function setLabel() {\n                if (label) {\n                    DOM.$addClass(el, 'gui-has-label');\n                }\n                input.appendChild(document.createTextNode(label));\n                input.setAttribute('aria-label', label);\n            }\n            if (disabled) {\n                input.setAttribute('disabled', 'disabled');\n            }\n            setLabel();\n            setImage();\n            setGroup(group);\n            _buttonCount++;\n            el.setAttribute('role', 'navigation');\n            el.appendChild(input);\n            return this;\n        }\n    }\n    class _GUISelect extends _GUIInput {\n        add(arg) {\n            addToSelectBox(this.$element, arg);\n            return this;\n        }\n        remove(arg) {\n            removeFromSelectBox(this.$element, arg);\n            return this;\n        }\n        clear() {\n            const target = this.$element.querySelector('select');\n            DOM.$empty(target);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const multiple = el.tagName.toLowerCase() === 'gui-select-list';\n            createSelectInput(el, multiple);\n            return this;\n        }\n    }\n    class GUISelect extends _GUISelect {\n        static register() {\n            return super.register({\n                tagName: 'gui-select',\n                type: 'input'\n            }, this);\n        }\n    }\n    class GUISelectList extends _GUISelect {\n        static register() {\n            return super.register({\n                tagName: 'gui-select-list',\n                type: 'input'\n            }, this);\n        }\n    }\n    class GUISlider extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-slider',\n                type: 'input'\n            }, this);\n        }\n        get(param) {\n            const val = GUIElement.getProperty(this.$element, param); // modified by lwf\n            if (param === 'value') {\n                return parseInt(val, 10);\n            }\n            return val;\n        }\n        build() {\n            createInputOfType(this.$element, 'range');\n            return this;\n        }\n    }\n    class GUIInputModal extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-input-modal',\n                type: 'input'\n            }, this);\n        }\n        on(evName, callback, params) {\n            if (evName === 'open') {\n                evName = '_open';\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        get(param) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                return input.value;\n            }\n            return super.get(...arguments);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                input.removeAttribute('disabled');\n                input.value = value;\n                input.setAttribute('disabled', 'disabled');\n                input.setAttribute('aria-disabled', 'true');\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const container = document.createElement('div');\n            const input = document.createElement('input');\n            input.type = 'text';\n            input.setAttribute('disabled', 'disabled');\n            const button = document.createElement('button');\n            button.innerHTML = '...';\n            Events.$bind(button, 'pointerup', ev => {\n                el.dispatchEvent(new CustomEvent('_open', { detail: input.value }));\n            }, false);\n            container.appendChild(input);\n            container.appendChild(button);\n            el.appendChild(container);\n            return this;\n        }\n    }\n    return {\n        GUILabel: GUILabel,\n        GUITextarea: GUITextarea,\n        GUIText: GUIText,\n        GUIPassword: GUIPassword,\n        GUIFileUpload: GUIFileUpload,\n        GUIRadio: GUIRadio,\n        GUICheckbox: GUICheckbox,\n        GUISwitch: GUISwitch,\n        GUIButton: GUIButton,\n        GUISelect: GUISelect,\n        GUISelectList: GUISelectList,\n        GUISlider: GUISlider,\n        GUIInputModal: GUIInputModal\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/listview',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../dataview'\n], function (DOM, GUI, Events, GUIDataView) {\n    'use strict';\n    function createFakeHeader(el) {\n        function createResizers() {\n            const fhead = el.querySelector('gui-list-view-fake-head');\n            const head = el.querySelector('gui-list-view-head');\n            const fcols = fhead.querySelectorAll('gui-list-view-column');\n            const cols = head.querySelectorAll('gui-list-view-column');\n            fhead.querySelectorAll('gui-list-view-column-resizer').forEach(rel => {\n                DOM.$remove(rel);\n            });\n            cols.forEach((col, idx) => {\n                const attr = col.getAttribute('data-resizable');\n                if (attr === 'true') {\n                    const fcol = fcols[idx];\n                    const resizer = document.createElement('gui-list-view-column-resizer');\n                    fcol.appendChild(resizer);\n                    let startWidth = 0;\n                    let maxWidth = 0;\n                    let widthOffset = 16;\n                    let minWidth = widthOffset;\n                    let tmpEl = null;\n                    GUI.createDrag(resizer, ev => {\n                        startWidth = col.offsetWidth;\n                        minWidth = widthOffset;\n                        maxWidth = el.offsetWidth - el.children.length * widthOffset;\n                    }, (ev, diff) => {\n                        const newWidth = startWidth - diff.x;\n                        if (!isNaN(newWidth) && newWidth > minWidth && newWidth < maxWidth) {\n                            col.style.width = String(newWidth) + 'px';\n                            fcol.style.width = String(newWidth) + 'px';\n                        }\n                        tmpEl = DOM.$remove(tmpEl);\n                    });\n                }\n            });\n        }\n        const fh = el.querySelector('gui-list-view-fake-head gui-list-view-head');\n        DOM.$empty(fh);\n        const row = el.querySelector('gui-list-view-head gui-list-view-row');\n        if (row) {\n            fh.appendChild(row.cloneNode(true));\n            createResizers();\n        }\n    }\n    function initRow(cls, row) {\n        const el = cls.$element;\n        row.querySelectorAll('gui-list-view-column').forEach((cel, idx) => {\n            const icon = cel.getAttribute('data-icon');\n            if (icon && icon !== 'null') {\n                DOM.$addClass(cel, 'gui-has-image');\n                cel.style.backgroundImage = 'url(' + icon + ')';\n            }\n            const text = cel.firstChild;\n            if (text && text.nodeType === 3) {\n                const span = document.createElement('span');\n                span.appendChild(document.createTextNode(text.nodeValue));\n                cel.insertBefore(span, text);\n                cel.removeChild(text);\n            }\n            if (el._columns[idx] && !el._columns[idx].visible) {\n                cel.style.display = 'none';\n            }\n            cel.setAttribute('role', 'listitem');\n        });\n        cls.bindEntryEvents(row, 'gui-list-view-row');\n    }\n    function createEntry(cls, v, head) {\n        const label = v.label || '';\n        if (v.label) {\n            delete v.label;\n        }\n        let setSize = null;\n        if (v.size) {\n            setSize = v.size;\n            delete v.size;\n        }\n        const nel = GUI.createElement('gui-list-view-column', v);\n        if (setSize) {\n            nel.style.width = setSize;\n        }\n        if (typeof label === 'function') {\n            nel.appendChild(label.call(nel, nel, v));\n        } else {\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(label));\n            nel.appendChild(span);\n        }\n        return nel;\n    }\n    function createRow(cls, e) {\n        e = e || {};\n        if (e.columns) {\n            const row = GUI.createElement('gui-list-view-row', e, ['columns']);\n            e.columns.forEach(se => {\n                row.appendChild(createEntry(cls, se));\n            });\n            return row;\n        }\n        return null;\n    }\n    class GUIListView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-list-view'\n            }, this);\n        }\n        values() {\n            const body = this.$element.querySelector('gui-list-view-body');\n            const values = this.getSelected(body.querySelectorAll('gui-list-view-row'));\n            return values;\n        }\n        get(param, value, arg, asValue) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-list-view-body');\n                const rows = body.querySelectorAll('gui-list-view-row');\n                return this.getEntry(rows, value, arg, asValue);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            if (param === 'columns') {\n                const head = el.querySelector('gui-list-view-head');\n                const row = document.createElement('gui-list-view-row');\n                DOM.$empty(head);\n                el._columns = [];\n                value.forEach(v => {\n                    v.visible = typeof v.visible === 'undefined' || v.visible === true;\n                    const nel = createEntry(this, v, true);\n                    el._columns.push(v);\n                    if (!v.visible) {\n                        nel.style.display = 'none';\n                    }\n                    row.appendChild(nel);\n                });\n                head.appendChild(row);\n                createFakeHeader(el);\n                return this;\n            } else if (param === 'selected' || param === 'value') {\n                const body = el.querySelector('gui-list-view-body');\n                this.setSelected(body, body.querySelectorAll('gui-list-view-row'), value, arg, arg2);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.add(entries, (cls, e) => {\n                const cbCreated = e.onCreated || function () {\n                };\n                const row = createRow(this, e);\n                if (row) {\n                    body.appendChild(row);\n                    initRow(this, row);\n                }\n                cbCreated(row);\n            });\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.clear(body);\n        }\n        remove(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.remove(entries, 'gui-list-view-row', null, body);\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.patch(entries, 'gui-list-view-row', body, createRow, initRow);\n        }\n        build() {\n            const el = this.$element;\n            el._columns = [];\n            let inner = el.querySelector('gui-list-view-inner');\n            let head = el.querySelector('gui-list-view-head');\n            let body = el.querySelector('gui-list-view-body');\n            function moveIntoInner(cel) {\n                if (cel.parentNode.tagName !== 'GUI-LIST-VIEW-INNER') {\n                    inner.appendChild(cel);\n                }\n            }\n            let fakeHead = el.querySelector('gui-list-view-fake-head');\n            if (!fakeHead) {\n                fakeHead = document.createElement('gui-list-view-fake-head');\n                const fakeHeadInner = document.createElement('gui-list-view-inner');\n                fakeHeadInner.appendChild(document.createElement('gui-list-view-head'));\n                fakeHead.appendChild(fakeHeadInner);\n            }\n            if (!inner) {\n                inner = document.createElement('gui-list-view-inner');\n                el.appendChild(inner);\n            }\n            (function _createBody() {\n                if (body) {\n                    moveIntoInner(body);\n                } else {\n                    body = document.createElement('gui-list-view-body');\n                    inner.appendChild(body);\n                }\n                body.setAttribute('role', 'group');\n            }());\n            (function _createHead() {\n                if (head) {\n                    moveIntoInner(head);\n                } else {\n                    head = document.createElement('gui-list-view-head');\n                    inner.insertBefore(head, body);\n                }\n                head.setAttribute('role', 'group');\n            }());\n            el.setAttribute('role', 'list');\n            el.appendChild(fakeHead);\n            Events.$bind(el, 'scroll', ev => {\n                fakeHead.style.top = el.scrollTop + 'px';\n            }, false);\n            const hcols = el.querySelectorAll('gui-list-view-head gui-list-view-column');\n            hcols.forEach((cel, idx) => {\n                const vis = cel.getAttribute('data-visible');\n                const iter = {\n                    visible: vis === null || vis === 'true',\n                    size: cel.getAttribute('data-size')\n                };\n                if (iter.size) {\n                    cel.style.width = iter.size;\n                }\n                el._columns.push(iter);\n                if (!iter.visible) {\n                    cel.style.display = 'none';\n                }\n            });\n            createFakeHeader(el);\n            el.querySelectorAll('gui-list-view-body gui-list-view-row').forEach(row => {\n                initRow(this, row);\n            });\n            return super.build(...arguments);\n        }\n    }\n    return { GUIListView: GUIListView };\n});\ndefine('skylark-osjsv2-client/gui/elements/menus',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../menu',\n    '../element'\n], function (DOM, GUI, Events, Menu, GUIElement) {\n    'use strict';\n    let debounce;\n    function getSelectionEventAttribs(mel, didx) {\n        const id = mel.getAttribute('data-id');\n        let idx = DOM.$index(mel);\n        if (!didx) {\n            idx = parseInt(mel.getAttribute('data-index'), 10);\n        }\n        const result = {\n            index: idx,\n            id: id\n        };\n        Array.prototype.slice.call(mel.attributes).forEach(item => {\n            if (item.name.match(/^data\\-/)) {\n                const an = item.name.replace(/^data\\-/, '');\n                if (typeof result[an] === 'undefined') {\n                    result[an] = item.value;\n                }\n            }\n        });\n        return result;\n    }\n    function getEventName(evName) {\n        if ([\n                'select',\n                'click'\n            ].indexOf(evName) !== -1) {\n            return '_select';\n        }\n        return evName;\n    }\n    function runChildren(pel, level, winRef, cb) {\n        level = level || 0;\n        cb = cb || function () {\n        };\n        if (pel.children) {\n            pel.children.forEach((child, i) => {\n                if (child && child.tagName.toLowerCase() === 'gui-menu-entry') {\n                    GUIElement.createFromNode(child).build(null, winRef);\n                    cb(child, level);\n                }\n            });\n        }\n    }\n    function onEntryClick(ev, pos, target, original) {\n        const isExpander = !!target.querySelector('gui-menu');\n        if (!isExpander) {\n            const dispatcher = (original || target).querySelector('label');\n            dispatcher.dispatchEvent(new CustomEvent('_select', { detail: getSelectionEventAttribs(target, true) }));\n        }\n    }\n    function createTyped(child, par) {\n        const type = child.getAttribute('data-type');\n        const value = child.getAttribute('data-checked') === 'true';\n        let input = null;\n        if (type) {\n            const group = child.getAttribute('data-group');\n            input = document.createElement('input');\n            input.type = type;\n            input.name = group ? group + '[]' : '';\n            if (value) {\n                input.setAttribute('checked', 'checked');\n            }\n            par.setAttribute('role', 'menuitem' + type);\n            par.appendChild(input);\n        }\n    }\n    class GUIMenuEntry extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu-entry' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            const target = this.$element.querySelector('gui-menu-entry > label');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(arg, winRef) {\n            const child = this.$element;\n            if (arguments.length < 2) {\n                return this;\n            }\n            child.setAttribute('role', 'menuitem' + (child.getAttribute('data-type') || ''));\n            const label = GUI.getLabel(child);\n            const icon = GUI.getIcon(child, winRef);\n            child.setAttribute('aria-label', label);\n            const span = document.createElement('label');\n            if (icon) {\n                child.style.backgroundImage = 'url(' + icon + ')';\n                DOM.$addClass(span, 'gui-has-image');\n            }\n            child.appendChild(span);\n            createTyped(child, span);\n            if (child.getAttribute('data-labelhtml') === 'true') {\n                span.innerHTML = label;\n            } else {\n                span.appendChild(document.createTextNode(label));\n            }\n            if (child.querySelector('gui-menu')) {\n                DOM.$addClass(child, 'gui-menu-expand');\n                child.setAttribute('aria-haspopup', 'true');\n            } else {\n                child.setAttribute('aria-haspopup', 'false');\n            }\n            return this;\n        }\n    }\n    class GUIMenu extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            Events.$bind(this.$element, evName, function (ev) {\n                if (ev.target.tagName === 'LABEL') {\n                    callback.apply(new GUIElement(ev.target.parentNode), arguments);\n                }\n            }, true);\n            return this;\n        }\n        show(ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            const newNode = this.$element.cloneNode(true);\n            Menu.create(null, ev, newNode);\n        }\n        set(param, value, arg) {\n            if (param === 'checked') {\n                const found = this.$element.querySelector('gui-menu-entry[data-id=\"' + value + '\"]');\n                if (found) {\n                    const input = found.querySelector('input');\n                    if (input) {\n                        if (arg) {\n                            input.setAttribute('checked', 'checked');\n                        } else {\n                            input.removeAttribute('checked');\n                        }\n                    }\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build(customMenu, winRef) {\n            const el = this.$element;\n            el.setAttribute('role', 'menu');\n            try {\n                runChildren(el, 0, winRef, (child, level) => {\n                    if (customMenu) {\n                        if (child) {\n                            const submenus = child.getElementsByTagName('gui-menu');\n                            submenus.forEach(sub => {\n                                if (sub) {\n                                    runChildren(sub, level + 1, winRef);\n                                }\n                            });\n                        }\n                    }\n                });\n            } catch (e) {\n                console.warn(e);\n            }\n            if (!customMenu) {\n                Events.$bind(el, 'click', (ev, pos) => {\n                    clearTimeout(debounce);\n                    debounce = setTimeout(() => {\n                        debounce = clearTimeout(debounce);\n                        Menu.clickWrapper(ev, pos, onEntryClick);\n                    }, 1);\n                }, true);\n            }\n            return this;\n        }\n    }\n    class GUIMenuBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu-bar' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            this.$element.querySelectorAll('gui-menu-bar-entry').forEach(target => {\n                Events.$bind(target, evName, callback.bind(this), params);\n            });\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            el.setAttribute('role', 'menubar');\n            function updateChildren(sm, level) {\n                if (sm && sm.children) {\n                    const children = sm.children;\n                    let child;\n                    for (let i = 0; i < children.length; i++) {\n                        child = children[i];\n                        if (child.tagName === 'GUI-MENU-ENTRY') {\n                            child.setAttribute('aria-haspopup', String(!!child.firstChild));\n                            updateChildren(child.firstChild, level + 1);\n                        }\n                    }\n                }\n            }\n            function _onClick(ev) {\n                ev.preventDefault();\n                const mel = ev.target;\n                const submenu = mel.querySelector('gui-menu');\n                if (mel.getAttribute('data-disabled') === 'true') {\n                    return;\n                }\n                mel.querySelectorAll('gui-menu-entry').forEach(c => {\n                    DOM.$removeClass(c, 'gui-hover');\n                });\n                if (submenu) {\n                    Menu.setActive(ev => {\n                        if (ev instanceof window.Event) {\n                            ev.stopPropagation();\n                        }\n                        DOM.$removeClass(mel, 'gui-active');\n                    });\n                }\n                if (DOM.$hasClass(mel, 'gui-active')) {\n                    if (submenu) {\n                        DOM.$removeClass(mel, 'gui-active');\n                    }\n                } else {\n                    if (submenu) {\n                        DOM.$addClass(mel, 'gui-active');\n                    }\n                    mel.dispatchEvent(new CustomEvent('_select', { detail: getSelectionEventAttribs(mel) }));\n                }\n            }\n            el.querySelectorAll('gui-menu-bar-entry').forEach((mel, idx) => {\n                const label = GUI.getLabel(mel);\n                const span = document.createElement('span');\n                span.appendChild(document.createTextNode(label));\n                mel.setAttribute('role', 'menuitem');\n                mel.insertBefore(span, mel.firstChild);\n                const submenu = mel.querySelector('gui-menu');\n                Menu.clamp(submenu);\n                mel.setAttribute('aria-haspopup', String(!!submenu));\n                mel.setAttribute('data-index', String(idx));\n                updateChildren(submenu, 2);\n            });\n            Events.$bind(el, 'click', ev => {\n                if (ev.target.tagName === 'GUI-MENU-BAR-ENTRY') {\n                    _onClick(ev);\n                }\n            }, true);\n            return this;\n        }\n    }\n    return {\n        GUIMenuEntry: GUIMenuEntry,\n        GUIMenuBar: GUIMenuBar,\n        GUIMenu: GUIMenu\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/misc',[\n    '../../utils/dom',\n    '../../utils/events',\n    '../../utils/colors',\n    '../element'\n], function (DOM, Events, Colors, GUIElement) {\n    'use strict';\n    class GUIColorBox extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-color-box' }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            const target = el.querySelector('div');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value) {\n            if (param === 'value') {\n                this.$element.firstChild.style.backgroundColor = value;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const inner = document.createElement('div');\n            this.$element.appendChild(inner);\n            return this;\n        }\n    }\n    class GUIColorSwatch extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-color-swatch' }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            const target = el.querySelector('canvas');\n            if (evName === 'select' || evName === 'change') {\n                evName = '_change';\n            }\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const cv = document.createElement('canvas');\n            cv.width = 100;\n            cv.height = 100;\n            const ctx = cv.getContext('2d');\n            let gradient = ctx.createLinearGradient(0, 0, ctx.canvas.width, 0);\n            function getColor(ev) {\n                const pos = DOM.$position(cv);\n                const cx = typeof ev.offsetX === 'undefined' ? ev.clientX - pos.left : ev.offsetX;\n                const cy = typeof ev.offsetY === 'undefined' ? ev.clientY - pos.top : ev.offsetY;\n                if (isNaN(cx) || isNaN(cy)) {\n                    return null;\n                }\n                const data = ctx.getImageData(cx, cy, 1, 1).data;\n                return {\n                    r: data[0],\n                    g: data[1],\n                    b: data[2],\n                    hex: Colors.convertToHEX(data[0], data[1], data[2])\n                };\n            }\n            gradient.addColorStop(0, 'rgb(255,   0,   0)');\n            gradient.addColorStop(0.15, 'rgb(255,   0, 255)');\n            gradient.addColorStop(0.33, 'rgb(0,     0, 255)');\n            gradient.addColorStop(0.49, 'rgb(0,   255, 255)');\n            gradient.addColorStop(0.67, 'rgb(0,   255,   0)');\n            gradient.addColorStop(0.84, 'rgb(255, 255,   0)');\n            gradient.addColorStop(1, 'rgb(255,   0,   0)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            gradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n            gradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n            gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0)');\n            gradient.addColorStop(0.5, 'rgba(0,     0,   0, 0)');\n            gradient.addColorStop(1, 'rgba(0,     0,   0, 1)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            Events.$bind(cv, 'pointerdown', ev => {\n                const c = getColor(ev);\n                if (c) {\n                    cv.dispatchEvent(new CustomEvent('_change', { detail: c }));\n                }\n            }, false);\n            el.appendChild(cv);\n            return this;\n        }\n    }\n    class GUIIframe extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-iframe' }, this);\n        }\n        static get _tagName() {\n            let isStandalone = false;\n            try {\n                isStandalone = window.navigator.standalone || window.matchMedia('(display-mode: standalone)').matches;\n            } catch (e) {\n            }\n            return isStandalone ? 'webview' : 'iframe';\n        }\n        set(key, val) {\n            if (key === 'src') {\n                this.$element.querySelector(GUIIframe._tagName).src = val;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const src = el.getAttribute('data-src') || 'about:blank';\n            const iframe = document.createElement(GUIIframe._tagName);\n            iframe.src = src;\n            iframe.setAttribute('border', 0);\n            el.appendChild(iframe);\n            return this;\n        }\n    }\n    class GUIProgressBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-progress-bar' }, this);\n        }\n        set(param, value) {\n            const el = this.$element;\n            el.setAttribute('data-' + param, value);\n            if (param === 'progress' || param === 'value') {\n                value = parseInt(value, 10);\n                value = Math.max(0, Math.min(100, value));\n                el.setAttribute('aria-label', String(value));\n                el.setAttribute('aria-valuenow', String(value));\n                el.querySelector('div').style.width = value.toString() + '%';\n                el.querySelector('span').innerHTML = value + '%';\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            let p = el.getAttribute('data-progress') || 0;\n            p = Math.max(0, Math.min(100, p));\n            const percentage = p.toString() + '%';\n            const progress = document.createElement('div');\n            progress.style.width = percentage;\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(percentage));\n            el.setAttribute('role', 'progressbar');\n            el.setAttribute('aria-valuemin', 0);\n            el.setAttribute('aria-valuemax', 100);\n            el.setAttribute('aria-label', 0);\n            el.setAttribute('aria-valuenow', 0);\n            el.appendChild(progress);\n            el.appendChild(span);\n            return this;\n        }\n    }\n    class GUIStatusBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-statusbar' }, this);\n        }\n        set(param, value) {\n            if (param === 'label' || param === 'value') {\n                const span = this.$element.getElementsByTagName('gui-statusbar-label')[0];\n                if (span) {\n                    DOM.$empty(span);\n                    span.innerHTML = value;\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build(args, win) {\n            const el = this.$element;\n            const span = document.createElement('gui-statusbar-label');\n            let lbl = el.getAttribute('data-label') || el.getAttribute('data-value');\n            if (!lbl) {\n                lbl = (() => {\n                    let textNodes = [];\n                    let node, value;\n                    for (let i = 0; i < el.childNodes.length; i++) {\n                        node = el.childNodes[i];\n                        if (node.nodeType === Node.TEXT_NODE) {\n                            value = node.nodeValue.replace(/\\s+/g, '').replace(/^\\s+/g, '');\n                            if (value.length > 0) {\n                                textNodes.push(value);\n                            }\n                            el.removeChild(node);\n                            i++;\n                        }\n                    }\n                    return textNodes.join(' ');\n                })();\n            }\n            span.innerHTML = lbl;\n            el.setAttribute('role', 'log');\n            el.appendChild(span);\n            return this;\n        }\n    }\n    return {\n        GUIColorBox: GUIColorBox,\n        GUIColorSwatch: GUIColorSwatch,\n        GUIIframe: GUIIframe,\n        GUIProgressBar: GUIProgressBar,\n        GUIStatusBar: GUIStatusBar\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/richtext',[\n    '../../utils/dom',\n    '../../utils/events',\n    '../../core/theme',\n    '../element'\n], function (DOM, Events, Theme, GUIElement) {\n    'use strict';\n    function getDocument(el, iframe) {\n        iframe = iframe || el.querySelector('iframe');\n        return iframe.contentDocument || iframe.contentWindow.document;\n    }\n    function getDocumentData(el) {\n        try {\n            const doc = getDocument(el);\n            return doc.body.innerHTML;\n        } catch (error) {\n            console.error('gui-richtext', 'getDocumentData()', error.stack, error);\n        }\n        return '';\n    }\n    function destroyFixInterval(el) {\n        el._fixTry = 0;\n        el._fixInterval = clearInterval(el._fixInterval);\n    }\n    function createFixInterval(el, doc, text) {\n        if (el._fixTry > 10) {\n            el._fixTry = 0;\n            return;\n        }\n        el._fixInterval = setInterval(() => {\n            try {\n                if (text) {\n                    doc.body.innerHTML = text;\n                }\n                destroyFixInterval(el);\n            } catch (error) {\n                console.warn('gui-richtext', 'setDocumentData()', error.stack, error, '... trying again');\n            }\n            el._fixTry++;\n        }, 100);\n    }\n    function setDocumentData(el, text) {\n        destroyFixInterval(el);\n        text = text || '';\n        const themeName = Theme.getStyleTheme();\n        const themeSrc = '/themes.css';\n        let editable = el.getAttribute('data-editable');\n        editable = editable === null || editable === 'true';\n        function onMouseDown(ev) {\n            function insertTextAtCursor(text) {\n                let sel, range;\n                if (window.getSelection) {\n                    sel = window.getSelection();\n                    if (sel.getRangeAt && sel.rangeCount) {\n                        range = sel.getRangeAt(0);\n                        range.deleteContents();\n                        range.insertNode(document.createTextNode(text));\n                    }\n                } else if (document.selection && document.selection.createRange) {\n                    document.selection.createRange().text = text;\n                }\n            }\n            if (ev.keyCode === 9) {\n                insertTextAtCursor('\\xA0');\n                ev.preventDefault();\n            }\n        }\n        const script = onMouseDown.toString() + ';window.addEventListener(\"keydown\", onMouseDown)';\n        let template = '<!DOCTYPE html><html><head><link rel=\"stylesheet\" type=\"text/css\" href=\"' + themeSrc + '\" /><script>' + script + '</script></head><body contentEditable=\"true\" data-style-theme=\"' + themeName + '\"></body></html>';\n        if (!editable) {\n            template = template.replace(' contentEditable=\"true\"', '');\n        }\n        const doc = getDocument(el);\n        doc.open();\n        doc.write(template);\n        doc.close();\n        createFixInterval(el, doc, text);\n    }\n    class GUIRichText extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-richtext' }, this);\n        }\n        on(evName, callback, params) {\n            if (['selection'].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const text = el.childNodes.length ? el.childNodes[0].nodeValue : '';\n            DOM.$empty(el);\n            const iframe = document.createElement('iframe');\n            iframe.setAttribute('border', 0);\n            iframe.onload = () => {\n                iframe.contentWindow.addEventListener('selectstart', () => {\n                    el.dispatchEvent(new CustomEvent('_selection', { detail: {} }));\n                });\n                iframe.contentWindow.addEventListener('pointerup', () => {\n                    el.dispatchEvent(new CustomEvent('_selection', { detail: {} }));\n                });\n            };\n            el.appendChild(iframe);\n            setTimeout(() => {\n                try {\n                    setDocumentData(el, text);\n                } catch (e) {\n                    console.warn('gui-richtext', 'build()', e);\n                }\n            }, 1);\n            return this;\n        }\n        command() {\n            try {\n                const doc = getDocument(this.$element);\n                if (doc && doc.execCommand) {\n                    return doc.execCommand.apply(doc, arguments);\n                }\n            } catch (e) {\n                console.warn('gui-richtext call() warning', e.stack, e);\n            }\n            return this;\n        }\n        query() {\n            try {\n                const doc = getDocument(this.$element);\n                if (doc && doc.queryCommandValue) {\n                    return doc.queryCommandValue.apply(doc, arguments);\n                }\n            } catch (e) {\n                console.warn('gui-richtext call() warning', e.stack, e);\n            }\n            return null;\n        }\n        get(param, value) {\n            if (param === 'value') {\n                return getDocumentData(this.$element);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                setDocumentData(this.$element, value);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n    }\n    return { GUIRichText: GUIRichText };\n});\ndefine('skylark-osjsv2-client/gui/elements/tabs',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../element'\n], function (DOM, GUI, Events, GUIElement) {\n    'use strict';\n    function toggleActive(el, eidx, idx) {\n        DOM.$removeClass(el, 'gui-active');\n        if (eidx === idx) {\n            DOM.$addClass(el, 'gui-active');\n        }\n    }\n    function selectTab(el, tabs, ev, idx, tab) {\n        tabs.querySelectorAll('li').forEach((tel, eidx) => {\n            toggleActive(tel, eidx, idx);\n        });\n        el.querySelectorAll('gui-tab-container').forEach((tel, eidx) => {\n            toggleActive(tel, eidx, idx);\n        });\n        DOM.$addClass(tab, 'gui-active');\n        el.dispatchEvent(new CustomEvent('_change', { detail: { index: idx } }));\n    }\n    function findTab(el, tabs, idx) {\n        let found = null;\n        if (typeof idx === 'number') {\n            found = idx;\n        } else {\n            tabs.querySelectorAll('li').forEach((iter, i) => {\n                if (found === null && iter.firstChild.textContent === idx) {\n                    found = i;\n                }\n            });\n        }\n        return found;\n    }\n    function removeTab(el, tabs, idx) {\n        const found = findTab(el, tabs, idx);\n        if (found !== null) {\n            tabs.children[found].remove();\n            el.querySelectorAll('gui-tab-container')[found].remove();\n        }\n    }\n    function createTab(el, tabs, label, prog) {\n        const tab = document.createElement('li');\n        const idx = tabs.children.length;\n        Events.$bind(tab, 'pointerdown', ev => {\n            selectTab(el, tabs, ev, idx, tab);\n        }, false);\n        tab.setAttribute('role', 'tab');\n        tab.setAttribute('aria-label', label);\n        tab.appendChild(document.createTextNode(label));\n        tabs.appendChild(tab);\n        if (prog) {\n            const tel = document.createElement('gui-tab-container');\n            tel.setAttribute('data-label', label);\n            tel.setAttribute('role', 'tabpanel');\n            el.appendChild(tel);\n        }\n    }\n    class GUITabs extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-tabs' }, this);\n        }\n        on(evName, callback, params) {\n            if ([\n                    'select',\n                    'activate'\n                ].indexOf(evName) !== -1) {\n                evName = 'change';\n            }\n            if (evName === 'change') {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value) {\n            if ([\n                    'current',\n                    'selected',\n                    'active'\n                ].indexOf(param) !== -1) {\n                const el = this.$element;\n                const tabs = el.querySelector('ul');\n                const found = findTab(el, tabs, value);\n                if (found !== null) {\n                    selectTab(el, tabs, null, found, tabs[found]);\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        get(param, value) {\n            if ([\n                    'current',\n                    'selected',\n                    'active'\n                ].indexOf(param) !== -1) {\n                const cur = this.$element.querySelector('ul > li[class=\"gui-active\"]');\n                return DOM.$index(cur);\n            }\n            return super.get(...arguments);\n        }\n        add(newtabs) {\n            const el = this.$element;\n            const tabs = el.querySelector('ul');\n            if (!(newtabs instanceof Array)) {\n                newtabs = [newtabs];\n            }\n            newtabs.forEach(label => {\n                createTab(el, tabs, label, true);\n            });\n            return this;\n        }\n        remove(removetabs) {\n            const el = this.$element;\n            const tabs = el.querySelector('ul');\n            if (!(removetabs instanceof Array)) {\n                removetabs = [removetabs];\n            }\n            removetabs.forEach(id => {\n                removeTab(el, tabs, id);\n            });\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const tabs = document.createElement('ul');\n            el.querySelectorAll('gui-tab-container').forEach((tel, idx) => {\n                createTab(el, tabs, GUI.getLabel(tel));\n                tel.setAttribute('role', 'tabpanel');\n            });\n            tabs.setAttribute('role', 'tablist');\n            el.setAttribute('role', 'navigation');\n            if (el.children.length) {\n                el.insertBefore(tabs, el.children[0]);\n            } else {\n                el.appendChild(tabs);\n            }\n            const currentTab = parseInt(el.getAttribute('data-selected-index'), 10) || 0;\n            selectTab(el, tabs, null, currentTab);\n            return this;\n        }\n    }\n    return { GUITabs: GUITabs };\n});\ndefine('skylark-osjsv2-client/gui/elements/treeview',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../dataview'\n], function (DOM, GUI, GUIDataView) {\n    'use strict';\n    function createEntry(cls, e) {\n        const entry = GUI.createElement('gui-tree-view-entry', e, ['entries']);\n        return entry;\n    }\n    function handleItemExpand(ev, el, root, expanded) {\n        if (typeof expanded === 'undefined') {\n            expanded = !DOM.$hasClass(root, 'gui-expanded');\n        }\n        DOM.$removeClass(root, 'gui-expanded');\n        if (expanded) {\n            DOM.$addClass(root, 'gui-expanded');\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            if (children[i].tagName.toLowerCase() === 'gui-tree-view-entry') {\n                children[i].style.display = expanded ? 'block' : 'none';\n            }\n        }\n        const selected = {\n            index: DOM.$index(root),\n            data: GUI.getViewNodeValue(root)\n        };\n        root.setAttribute('data-expanded', String(expanded));\n        root.setAttribute('aria-expanded', String(expanded));\n        el.dispatchEvent(new CustomEvent('_expand', {\n            detail: {\n                entries: [selected],\n                expanded: expanded,\n                element: root\n            }\n        }));\n    }\n    function initEntry(cls, sel) {\n        const el = cls.$element;\n        if (sel._rendered) {\n            return;\n        }\n        sel._rendered = true;\n        const icon = sel.getAttribute('data-icon');\n        const label = GUI.getLabel(sel);\n        const expanded = el.getAttribute('data-expanded') === 'true';\n        const next = sel.querySelector('gui-tree-view-entry');\n        const container = document.createElement('div');\n        const dspan = document.createElement('span');\n        function onDndEnter(ev) {\n            ev.stopPropagation();\n            DOM.$addClass(sel, 'dnd-over');\n        }\n        function onDndLeave(ev) {\n            DOM.$removeClass(sel, 'dnd-over');\n        }\n        if (icon) {\n            dspan.style.backgroundImage = 'url(' + icon + ')';\n            DOM.$addClass(dspan, 'gui-has-image');\n        }\n        dspan.appendChild(document.createTextNode(label));\n        container.appendChild(dspan);\n        if (next) {\n            DOM.$addClass(sel, 'gui-expandable');\n            const expander = document.createElement('gui-tree-view-expander');\n            sel.insertBefore(container, next);\n            sel.insertBefore(expander, container);\n        } else {\n            sel.appendChild(container);\n        }\n        if (String(sel.getAttribute('data-draggable')) === 'true') {\n            GUI.createDraggable(container, (() => {\n                let data = {};\n                try {\n                    data = JSON.parse(sel.getAttribute('data-value'));\n                } catch (e) {\n                }\n                return { data: data };\n            })());\n        }\n        if (String(sel.getAttribute('data-droppable')) === 'true') {\n            let timeout;\n            GUI.createDroppable(container, {\n                onEnter: onDndEnter,\n                onOver: onDndEnter,\n                onLeave: onDndLeave,\n                onDrop: onDndLeave,\n                onItemDropped: (ev, eel, item) => {\n                    ev.stopPropagation();\n                    ev.preventDefault();\n                    timeout = clearTimeout(timeout);\n                    timeout = setTimeout(() => {\n                        DOM.$removeClass(sel, 'dnd-over');\n                    }, 10);\n                    let dval = {};\n                    try {\n                        dval = JSON.parse(eel.parentNode.getAttribute('data-value'));\n                    } catch (e) {\n                    }\n                    el.dispatchEvent(new CustomEvent('_drop', {\n                        detail: {\n                            src: item.data,\n                            dest: dval\n                        }\n                    }));\n                }\n            });\n        }\n        handleItemExpand(null, el, sel, expanded);\n        cls.bindEntryEvents(sel, 'gui-tree-view-entry');\n    }\n    class GUITreeView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-tree-view'\n            }, this);\n        }\n        values() {\n            const el = this.$element;\n            return this.getSelected(el.querySelectorAll('gui-tree-view-entry'));\n        }\n        build(applyArgs) {\n            const el = this.$element;\n            let body = el.querySelector('gui-tree-view-body');\n            let found = !!body;\n            if (!body) {\n                body = document.createElement('gui-tree-view-body');\n                el.appendChild(body);\n            }\n            body.setAttribute('role', 'group');\n            el.setAttribute('role', 'tree');\n            el.setAttribute('aria-multiselectable', body.getAttribute('data-multiselect') || 'false');\n            el.querySelectorAll('gui-tree-view-entry').forEach((sel, idx) => {\n                sel.setAttribute('aria-expanded', 'false');\n                if (!found) {\n                    body.appendChild(sel);\n                }\n                sel.setAttribute('role', 'treeitem');\n                initEntry(this, sel);\n            });\n            return super.build(...arguments);\n        }\n        get(param, value, arg) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-tree-view-body');\n                return this.getEntry(body.querySelectorAll('gui-tree-view-entry'), value, arg);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            const body = el.querySelector('gui-tree-view-body');\n            if (param === 'selected' || param === 'value') {\n                this.setSelected(body, body.querySelectorAll('gui-tree-view-entry'), value, arg, arg2);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            return super.clear(body);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            let parentNode = body;\n            const recurse = (a, root, level) => {\n                super.add(a, (cls, e) => {\n                    if (e) {\n                        if (e.parentNode) {\n                            delete e.parentNode;\n                        }\n                        const entry = createEntry(this, e);\n                        root.appendChild(entry);\n                        if (e.entries) {\n                            recurse(e.entries, entry, level + 1);\n                        }\n                        initEntry(this, entry);\n                    }\n                });\n            };\n            if (typeof entries === 'object' && !(entries instanceof Array) && Object.keys(entries).length) {\n                parentNode = entries.parentNode || body;\n                entries = entries.entries || [];\n            }\n            recurse(entries, parentNode, 0);\n            return this;\n        }\n        remove(entries) {\n            return super.remove(entries, 'gui-tree-view-entry');\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            return super.patch(entries, 'gui-list-view-entry', body, createEntry, initEntry);\n        }\n        expand(entry) {\n            handleItemExpand(entry.ev, this.$element, entry.entry);\n            return this;\n        }\n    }\n    return { GUITreeView: GUITreeView };\n});\ndefine('skylark-osjsv2-client/gui/elements/visual',[\n    '../../utils/events',\n    '../element'\n], function (Events, GUIElement) {\n    'use strict';\n    function createVisualElement(el, nodeType, applyArgs) {\n        applyArgs = applyArgs || {};\n        if (typeof applyArgs !== 'object') {\n            console.error('Derp', 'applyArgs was not an object ?!');\n            applyArgs = {};\n        }\n        const img = document.createElement(nodeType);\n        const src = el.getAttribute('data-src');\n        const controls = el.getAttribute('data-controls');\n        if (controls) {\n            img.setAttribute('controls', 'controls');\n        }\n        const autoplay = el.getAttribute('data-autoplay');\n        if (autoplay) {\n            img.setAttribute('autoplay', 'autoplay');\n        }\n        Object.keys(applyArgs).forEach(function (k) {\n            let val = applyArgs[k];\n            if (typeof val === 'function') {\n                k = k.replace(/^on/, '');\n                if ((nodeType === 'video' || nodeType === 'audio') && k === 'load') {\n                    k = 'loadedmetadata';\n                }\n                Events.$bind(img, k, val.bind(img), false);\n            } else {\n                if (typeof applyArgs[k] === 'boolean') {\n                    val = val ? 'true' : 'false';\n                }\n                img.setAttribute(k, val);\n            }\n        });\n        img.src = src || 'about:blank';\n        el.appendChild(img);\n    }\n    class GUIAudio extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-audio' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('audio');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'audio', applyArgs);\n            return this;\n        }\n    }\n    class GUIVideo extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-video' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('video');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'video', applyArgs);\n            return this;\n        }\n    }\n    class GUIImage extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-image' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('img');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'img', applyArgs);\n            return this;\n        }\n    }\n    class GUICanvas extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-canvas' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('canvas');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const canvas = document.createElement('canvas');\n            this.$element.appendChild(canvas);\n            return this;\n        }\n    }\n    return {\n        GUIAudio: GUIAudio,\n        GUIVideo: GUIVideo,\n        GUIImage: GUIImage,\n        GUICanvas: GUICanvas\n    };\n});\ndefine('skylark-osjsv2-client/helpers/default-application-window',[\n    '../vfs/file',\n    '../core/window',\n    '../core/dialog',\n    '../core/locales'\n], function (FileMetadata, Window, DialogWindow, Locales) {\n    'use strict';\n    return class DefaultApplicationWindow extends Window {\n        constructor(name, args, app, file) {\n            super(...arguments);\n            this.hasClosingDialog = false;\n            this.currentFile = file ? new FileMetadata(file) : null;\n            this.hasChanged = false;\n        }\n        destroy() {\n            super.destroy(...arguments);\n            this.currentFile = null;\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            return root;\n        }\n        _inited() {\n            const result = Window.prototype._inited.apply(this, arguments);\n            const app = this._app;\n            const menuMap = {\n                MenuNew: () => {\n                    app.newDialog(this.currentFile, this);\n                },\n                MenuSave: () => {\n                    app.saveDialog(this.currentFile, this);\n                },\n                MenuSaveAs: () => {\n                    app.saveDialog(this.currentFile, this, true);\n                },\n                MenuOpen: () => {\n                    app.openDialog(this.currentFile, this);\n                },\n                MenuClose: () => {\n                    this._close();\n                }\n            };\n            this._find('SubmenuFile').on('select', ev => {\n                if (menuMap[ev.detail.id]) {\n                    menuMap[ev.detail.id]();\n                }\n            });\n            this._find('MenuSave').set('disabled', true);\n            if (this.currentFile) {\n                if (!this._app.openFile(this.currentFile, this)) {\n                    this.currentFile = null;\n                }\n            }\n            return result;\n        }\n        _onDndEvent(ev, type, item, args) {\n            if (!Window.prototype._onDndEvent.apply(this, arguments)) {\n                return;\n            }\n            if (type === 'itemDrop' && item) {\n                const data = item.data;\n                if (data && data.type === 'file' && data.mime) {\n                    this._app.openFile(new FileMetadata(data), this);\n                }\n            }\n        }\n        _close() {\n            if (this.hasClosingDialog) {\n                return;\n            }\n            if (this.hasChanged) {\n                this.hasClosingDialog = true;\n                this.checkHasChanged(discard => {\n                    this.hasClosingDialog = false;\n                    if (discard) {\n                        this.hasChanged = false;\n                        this._close();\n                    }\n                });\n                return;\n            }\n            Window.prototype._close.apply(this, arguments);\n        }\n        checkHasChanged(cb) {\n            if (this.hasChanged) {\n                DialogWindow.create('Confirm', {\n                    buttons: [\n                        'yes',\n                        'no'\n                    ],\n                    message: Locales._('MSG_GENERIC_APP_DISCARD')\n                }, function (ev, button) {\n                    cb(button === 'ok' || button === 'yes');\n                }, {\n                    parent: this,\n                    modal: true\n                });\n                return;\n            }\n            cb(true);\n        }\n        showFile(file, content) {\n            this.updateFile(file);\n        }\n        updateFile(file) {\n            this.currentFile = file || null;\n            this.hasChanged = false;\n            if (this._scheme) {\n                this._find('MenuSave').set('disabled', !file);\n            }\n            if (file) {\n                this._setTitle(file.filename, true);\n            } else {\n                this._setTitle();\n            }\n        }\n        getFileData() {\n            return null;\n        }\n        _onKeyEvent(ev, type, shortcut) {\n            if (shortcut === 'SAVE') {\n                this._app.saveDialog(this.currentFile, this, !this.currentFile);\n                return false;\n            } else if (shortcut === 'SAVEAS') {\n                this._app.saveDialog(this.currentFile, this, true);\n                return false;\n            } else if (shortcut === 'OPEN') {\n                this._app.openDialog(this.currentFile, this);\n                return false;\n            }\n            return Window.prototype._onKeyEvent.apply(this, arguments);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/default-application',[\n    '../core/application',\n    '../core/dialog',\n    '../vfs/file',\n    '../vfs/fs',\n    '../utils/fs',\n    '../core/locales'\n], function (Application, DialogWindow, FileMetadata, VFS, FS, Locales) {\n    'use strict';\n    return class DefaultApplication extends Application {\n        constructor(name, args, metadata, opts) {\n            super(...arguments);\n            this.defaultOptions = Object.assign({}, {\n                readData: true,\n                rawData: false,\n                extension: '',\n                mime: 'application/octet-stream',\n                filetypes: [],\n                filename: 'New file'\n            }, opts);\n        }\n        destroy() {\n            super.destroy(...arguments);\n        }\n        _onMessage(msg, obj, args) {\n            super._onMessage(...arguments);\n            const current = this._getArgument('file');\n            const win = this._getWindow(this.__mainwindow);\n            if (msg === 'vfs' && args.source !== null && args.source !== this.__pid && args.file) {\n                if (win && current && current.path === args.file.path) {\n                    DialogWindow.create('Confirm', {\n                        buttons: [\n                            'yes',\n                            'no'\n                        ],\n                        message: Locales._('MSG_FILE_CHANGED')\n                    }, (ev, button) => {\n                        if (button === 'ok' || button === 'yes') {\n                            this.openFile(new FileMetadata(args.file), win);\n                        }\n                    }, {\n                        parent: win,\n                        modal: true\n                    });\n                }\n            }\n        }\n        openFile(file, win) {\n            if (!file) {\n                return false;\n            }\n            const onError = error => {\n                if (error) {\n                    OSjs.error(this.__label, Locales._('ERR_FILE_APP_OPEN'), Locales._('ERR_FILE_APP_OPEN_ALT_FMT', file.path, error));\n                    return true;\n                }\n                return false;\n            };\n            const onDone = result => {\n                this._setArgument('file', file);\n                win.showFile(file, result);\n            };\n            const check = this.__metadata.mime || [];\n            if (!FS.checkAcceptMime(file.mime, check)) {\n                OSjs.error(this.__label, Locales._('ERR_FILE_APP_OPEN'), Locales._('ERR_FILE_APP_OPEN_FMT', file.path, file.mime));\n                return false;\n            }\n            win._toggleLoading(true);\n            function callbackVFS(error, result) {\n                win._toggleLoading(false);\n                if (onError(error)) {\n                    return;\n                }\n                onDone(result);\n            }\n            if (this.defaultOptions.readData) {\n                VFS.read(file, { type: this.defaultOptions.rawData ? 'binary' : 'text' }, this).then(res => callbackVFS(false, res)).catch(err => callbackVFS(err));\n            } else {\n                VFS.url(file).then(res => callbackVFS(false, res)).catch(err => callbackVFS(err));\n            }\n            return true;\n        }\n        saveFile(file, value, win) {\n            if (!file) {\n                return;\n            }\n            win._toggleLoading(true);\n            VFS.write(file, value || '', null, this).then(() => {\n                this._setArgument('file', file);\n                win.updateFile(file);\n                return true;\n            }).catch(error => {\n                OSjs.error(this.__label, Locales._('ERR_FILE_APP_SAVE'), Locales._('ERR_FILE_APP_SAVE_ALT_FMT', file.path, error));\n            }).finally(() => {\n                win._toggleLoading(false);\n            });\n        }\n        saveDialog(file, win, saveAs, cb) {\n            const value = win.getFileData();\n            if (!saveAs) {\n                this.saveFile(file, value, win);\n                return;\n            }\n            DialogWindow.create('File', {\n                file: file,\n                filename: file ? file.filename : this.defaultOptions.filename,\n                filetypes: this.defaultOptions.filetypes,\n                filter: this.__metadata.mime,\n                extension: this.defaultOptions.extension,\n                mime: this.defaultOptions.mime,\n                type: 'save'\n            }, (ev, button, result) => {\n                if (button === 'ok') {\n                    this.saveFile(result, value, win);\n                }\n                if (typeof cb === 'function') {\n                    cb(ev, button, result);\n                }\n            }, {\n                parent: win,\n                modal: true\n            });\n        }\n        openDialog(file, win) {\n            const openDialog = () => {\n                DialogWindow.create('File', {\n                    file: file,\n                    filter: this.__metadata.mime\n                }, (ev, button, result) => {\n                    if (button === 'ok' && result) {\n                        this.openFile(new FileMetadata(result), win);\n                    }\n                }, {\n                    parent: win,\n                    modal: true\n                });\n            };\n            win.checkHasChanged(discard => {\n                if (discard) {\n                    openDialog();\n                }\n            });\n        }\n        newDialog(path, win) {\n            win.checkHasChanged(discard => {\n                if (discard) {\n                    this._setArgument('file', null);\n                    win.showFile(null, null);\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/iframe-application-window',['../core/window'], function (Window) {\n    'use strict';\n    let IFRAME_COUNT = 0;\n    return class IFrameApplicationWindow extends Window {\n        constructor(name, opts, app) {\n            opts = Object.assign({}, {\n                src: 'about:blank',\n                focus: function () {\n                },\n                blur: function () {\n                },\n                icon: null,\n                title: 'IframeApplicationWindow',\n                width: 320,\n                height: 240,\n                allow_resize: false,\n                allow_restore: false,\n                allow_maximize: false\n            }, opts);\n            super('IFrameApplicationWindow', opts, app);\n            this._iwin = null;\n            this._frame = null;\n        }\n        destroy() {\n            this.postMessage('Window::destroy');\n            return super.destroy(...arguments);\n        }\n        init(wmRef, app) {\n            const root = super.init(...arguments);\n            root.style.overflow = 'visible';\n            const id = 'IframeApplicationWindow' + IFRAME_COUNT.toString();\n            const iframe = document.createElement('iframe');\n            iframe.setAttribute('border', 0);\n            iframe.id = id;\n            iframe.className = 'IframeApplicationFrame';\n            iframe.addEventListener('load', () => {\n                this._iwin = iframe.contentWindow;\n                this.postMessage('Window::init');\n            });\n            this.setLocation(this._opts.src, iframe);\n            root.appendChild(iframe);\n            this._frame = iframe;\n            try {\n                this._iwin = iframe.contentWindow;\n            } catch (e) {\n            }\n            if (this._iwin) {\n                this._iwin.focus();\n            }\n            this._frame.focus();\n            this._opts.focus(this._frame, this._iwin);\n            IFRAME_COUNT++;\n            return root;\n        }\n        _blur() {\n            if (super._blur(...arguments)) {\n                if (this._iwin) {\n                    this._iwin.blur();\n                }\n                if (this._frame) {\n                    this._frame.blur();\n                }\n                this._opts.blur(this._frame, this._iwin);\n                return true;\n            }\n            return false;\n        }\n        _focus() {\n            if (super._focus(...arguments)) {\n                if (this._iwin) {\n                    this._iwin.focus();\n                }\n                if (this._frame) {\n                    this._frame.focus();\n                }\n                this._opts.focus(this._frame, this._iwin);\n                return true;\n            }\n            return false;\n        }\n        postMessage(message) {\n            if (this._iwin && this._app) {\n                console.debug('IFrameApplicationWindow::postMessage()', message);\n                this._iwin.postMessage({\n                    message: message,\n                    pid: this._app.__pid,\n                    wid: this._wid\n                }, window.location.href);\n            }\n        }\n        onPostMessage(message, ev) {\n            console.debug('IFrameApplicationWindow::onPostMessage()', message);\n        }\n        setLocation(src, iframe) {\n            iframe = iframe || this._frame;\n            const oldbefore = window.onbeforeunload;\n            window.onbeforeunload = null;\n            iframe.src = src;\n            window.onbeforeunload = oldbefore;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/iframe-application',[\n    './iframe-application-window',\n    '../core/application'\n], function (IFrameApplicationWindow, Application) {\n    'use strict';\n    return class IFrameApplication extends Application {\n        constructor(name, args, metadata, opts) {\n            super(...arguments);\n            this.options = Object.assign({}, {\n                icon: '',\n                title: 'IframeApplicationWindow'\n            }, opts);\n            this.options.src = this._getResource(this.options.src);\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            const name = this.__pname + 'Window';\n            this._addWindow(new IFrameApplicationWindow(name, this.options, this));\n        }\n        onPostMessage(message, ev) {\n            console.debug('IFrameApplication::onPostMessage()', message);\n            const _response = (err, res) => {\n                this.postMessage({\n                    id: message.id,\n                    method: message.method,\n                    error: err,\n                    result: Object.assign({}, res)\n                });\n            };\n            if (typeof message.id === 'number' && message.method) {\n                if (this[message.method]) {\n                    this[message.method](message.args || {}, _response);\n                } else {\n                    _response('No such method');\n                }\n            }\n        }\n        postMessage(message) {\n            const win = this._getMainWindow();\n            if (win) {\n                win.postMessage(message);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/main',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"./boot\",\r\n\t\"./locales/en_EN\",\r\n\t\"./core/auth/database\",\r\n\t\"./core/auth/demo\",\r\n\t\"./core/auth/pam\",\r\n\t\"./core/auth/standalone\",\r\n\t\"./core/connections/http\",\r\n\t\"./core/connections/standalone\",\r\n\t\"./core/connections/ws\",\r\n\t\"./core/storage/database\",\r\n\t\"./core/storage/demo\",\r\n\t\"./core/storage/standalone\",\r\n\t\"./core/storage/system\",\r\n\t\"./gui/elements/containers\",\r\n\t\"./gui/elements/fileview\",\r\n\t\"./gui/elements/iconview\",\r\n\t\"./gui/elements/inputs\",\r\n\t\"./gui/elements/listview\",\r\n\t\"./gui/elements/menus\",\r\n\t\"./gui/elements/misc\",\r\n\t\"./gui/elements/richtext\",\r\n\t\"./gui/elements/tabs\",\r\n\t\"./gui/elements/treeview\",\r\n\t\"./gui/elements/visual\",\r\n\t\"./helpers/default-application-window\",\r\n\t\"./helpers/default-application\",\r\n\t\"./helpers/event-handler\",\r\n\t\"./helpers/handle-qs\",\r\n\t\"./helpers/hooks\",\r\n\t\"./helpers/iframe-application-window\",\r\n\t\"./helpers/iframe-application\",\r\n\t\"./helpers/settings-fragment\",\r\n\t\"./helpers/window-behaviour\",\r\n\r\n],function(){\r\n\treturn {};\r\n});\ndefine('skylark-osjsv2-client', ['skylark-osjsv2-client/main'], function (main) { return main; });\n\n"]}