{"version":3,"sources":["skylark-osjsv2-client.js"],"names":["define","format","args","Array","prototype","slice","call","arguments","replace","match","number","parseurl","url","modify","protocol","split","splitted","tmp","proto","window","location","host","shift","path","join","parts","username","authstr","String","password","push","_parts","urlparams","search","hash","indexOf","reduce","params","key","val","Object","assign","[object Object]","decodeURIComponent","argumentDefaults","defaults","undef","keys","forEach","mergeObject","obj1","obj2","opts","p","hasOwnProperty","overwrite","constructor","e","cloneObject","o","alternative","_clone","i","map","iter","k","JSON","parse","stringify","value","tagName","undefined","misc","DefaultLocale","CurrentLocale","CurrentRTL","_","userLocale","systemLocale","OSjs","require","console","warn","s","a","length","apply","stack","__","l","getLocale","setLocale","locale","major","html","document","querySelector","setAttribute","info","createLocalizer","locales","unshift","init","options","languages","names","RTL","Locales","name","this","events","n","debug","cb","thisArg","Function","TypeError","added","_register","RegExp","test","index","splice","applyArgs","fn","loaders","loaderGraze","$container","createElement","parentNode","body","appendChild","el","title","icon","img","src","setTimeout","style","display","clearTimeout","remove","isObject","item","isArray","exports","from","obj","getJSON","defaultValue","setJSON","json","result","ns","queue","isTree","prune","guess","guessValue","newTree","resulted","getNewTree","mergeDeep","target","source","removeNulls","SimpleJSON","getConfig","config","getDefaultPath","fallback","getBrowserPath","app","str","getUserLocale","loc","navigator","userLanguage","language","nb","es","ru","en","minor","toUpperCase","axios","EventHandler","Loader","progressHandler","ev","onprogress","lengthComputable","loaded","total","_instance","instance","offline","_evHandler","onlineFn","onOnline","offlineFn","onOffline","onLine","addEventListener","Promise","resolve","removeEventListener","destroy","base","defaultDist","substr","q","encodeURIComponent","mount","method","response","appRef","emit","reconnecting","reject","Error","raw","requestOptions","createRequestOptions","data","ignore","onUploadProgress","onDownloadProgress","appendRequestOptions","then","error","catch","message","realMethod","responseType","getVFSPath","func","on","idx","off","m","create","indicator","createRequest","err","finally","Connection","saveTimeout","pool","storage","request","settings","Process","SettingsManager","getProcesses","filter","proc","_getSessionData","set","res","get","list","__resume__","__windows__","windows","SettingsFragment","poolName","sm","_sm","_pool","_settings","ret","save","triggerWatch","changed","callback","nestedSetting","every","Storage","defaultSettings","watches","promise","saveableStorage","saveSettings","mergeDefaults","watch","Utils","filename","pop","_abToSomething","arrayBuffer","mime","blob","Blob","type","r","FileReader","onerror","onloadend","getPathFromVirtual","getPathProtocol","orig","href","filext","d","ext","toLowerCase","dirname","f","pstr","prot","_parentDir","humanFileSize","bytes","si","units","thresh","u","toFixed","escapeFilename","trim","replaceFileExtension","rep","spl","replaceFilename","newname","pathJoin","prefix","getPart","getFilenameRange","range","min","max","btoaUrlsafe","btoa","atobUrlsafe","atob","btoaUtf","_unescape","unescape","x","fromCharCode","parseInt","atobUtf","trans","escape","c","charCodeAt","toString","checkAcceptMime","re","filterScandir","defaultOptions","ioptions","ooptions","scandir","sortBy","sortDir","typeFilter","mimeFilter","showHiddenFiles","filterFile","some","miter","validMime","sb","types","mtime","ctime","sort","b","Date","localeCompare","reverse","concat","addFormFile","fd","file","File","append","ArrayBuffer","dataSourceToAb","byteString","ab","ia","Uint8Array","textToAb","abToDataSource","abToText","abToBinaryString","abToBlob","blobToAb","readAsArrayBuffer","FS","FileMetadata","arg","size","id","shortcut","setData","_guessMime","destination","resolvePreloads","metadata","pm","packageURI","mapIter","additions","preload","depends","Applications","pkg","getPackage","pkgs","getPackages","pn","uses","scope","VFS","packages","blacklist","Authenticator","isStandalone","setPackages","_loadMetadata","len","paths","command","action","currLocale","newIter","descriptions","description","root","dest","zip","generateUserMetadata","repos","entries","all","yes","no","_repository","freeze","filtered","hidden","allowed","groups","checkPermission","vfspath","appname","__pname","fsuri","checkEntry","resolveIcon","packagePath","each","className","compability","getCanvasSupported","getContext","getVideoSupported","canPlayType","canPlayCodec","support","check","enabled","isSupported","supported","chk","_checkSupport","codec","getAudioSupported","getCanvasContexts","cache","canvas","tst","eee","detectCSSFeature","featurename","feature","domPrefixes","elm","featurenameCapital","charAt","checkWindow","indexedDB","localStorage","sessionStorage","globalStorage","openDatabase","socket","worker","orientation","touch","userAgent","getTouch","upload","xhr","XMLHttpRequest","getUpload","getUserMedia","getMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","fileSystem","dnd","css","transition","animation","canvasContext","webgl","contexts","getWebGL","audioContext","getAudioContext","svg","createElementNS","createSVGRect","video","videoTypes","webm","ogg","h264","mpeg","mkv","audio","audioTypes","mp3","wav","richtext","contentEditable","getRichText","getCompability","isIE","documentMode","$getStyle","oElm","strCssRule","strValue","defaultView","getComputedStyle","getPropertyValue","currentStyle","strMatch","p1","$","getElementById","$safeName","$remove","node","removeChild","$empty","myNode","firstChild","$position","parentEl","left","top","width","offsetWidth","height","offsetHeight","offsetLeft","offsetTop","offsetParent","getBoundingClientRect","$parent","current","$index","nodeList","children","nodeIndex","$selectRange","field","start","end","createTextRange","selRange","collapse","moveStart","moveEnd","select","focus","setSelectionRange","selectionStart","selectionEnd","$addClass","classList","add","$removeClass","$hasClass","contains","$escape","div","createTextNode","innerHTML","$create","properties","element","_foreach","dict","aria","$createCSS","onload","link","getElementsByTagName","$createJS","onreadystatechange","attrs","charset","$isFormElement","input","Event","srcElement","Element","readOnly","disabled","$css","ink","inv","$path","_path","ix","siblings","childNodes","sibling","nodeType","$fromPath","doc","XPathEvaluator","evaluate","documentElement","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","$clean","PackageManager","Compability","DOM","$themeScript","audioAvailable","oggAvailable","enableSounds","styleTheme","soundTheme","iconTheme","sounds","settheme","setTheme","theme","getStyleTheme","Themes","isFirefox","typeMap","image","image-center","image-fill","image-strech","back","wallpaper","background","backgroundImage","backgroundColor","fontFamily","backgroundAttachment","themeAction","setThemeScript","getThemeResource","animations","_setBackground","returnMetadata","convert","found","getStyleThemes","t","tmpEl","visibility","position","wd","margin","marginf","parseFloat","border","borderf","getName","getSoundTheme","volume","getSoundFilename","getSound","Audio","play","getIconTheme","meta","getPackageResource","getIcon","handler","triggerHook","thisarg","addHook","removeHook","limiter","count","outstanding","jobs","job","semaphore","run","items","mapper","failed","limit","addExtras","promiseLimit","getFileType","getSource","handlers","javascript","readyState","stylesheet","timeout","styleSheet","checkCss","preloads","force","group","done","preloadData","progress","groupEnd","success","Theme","Config","hooks","Preloader","alreadyLaunching","runningProcesses","_kill","pid","__pid","__args","__metadata","__started","__destroyed","__evHandler","__label","__path","__scope","__iter","_emit","msg","sourceId","_app","application","v","matcher","_onMessage","first","getProcess","__preload__","onconstruct","fail","alreadyRunning","compabilityFailures","singular","pargs","preloadParallel","ResolvedPackage","getLaunchObject","fm","pack","getPackagesByMime","forceList","DialogWindow","default","btn","useDefault","transport","visible","searchable","dynamic","internal","special","sname","createMatch","isMounted","notify","option","mounted","Mountpoint","inited","mountpoints","loadTransports","transports","mountPoints","point","T","moduleName","module","getModule","unmount","hits","filterName","find","dataURL","FileDataURL","MountManager","noop","hasAlias","retm","getModuleFromPath","alias","checkMetadataArgument","checkRo","mountpoint","isReadOnly","hasSameTransport","msrc","mdst","existsWrapper","exists","requestWrapper","onVFSRequestCompleted","performRequest","errorStr","broadcastMessage","_message","w","checkPath","_check","wasTouched","checkWatches","aliased","_transform","getModules","findAlias","tuple","move","dialogProgress","prog","dialog","setProgress","sourceMountpoint","destMountpoint","vfsSettings","oitem","isShortcut","niter","opt","backlink","isOnRoot","foundBack","createBackLink","write","convertTo","convertWriteData","read","datasource","dataSource","text","jsn","copy","rename","unlink","pkgdir","chkdir","idir","mkdir","fileinfo","files","fileDest","download","trash","untrash","emptyTrash","freeSpace","unwatch","ApplicationModule","query","getFileIcon","launch","fields","applications","results","qry","dlimit","reindex","FilesystemModule","recursive","modules","errors","next","userData","loggedIn","createUI","isLoggedIn","user","getUser","userGroups","g","login","onLogin","userSettings","curLocale","detectedLocale","CoreWM","blacklistedPackages","setBlacklist","_renderUI","_createUI","tempNode","nn","cloneNode","container","_restore","removeAttribute","onsubmit","preventDefault","requestLogin","alert","Keycodes","F1","F2","F3","F4","F6","F7","F8","F9","F10","F11","F12","TILDE","GRAVE","CMD","LSUPER","RSUPER","DELETE","INSERT","HOME","END","PGDOWN","PGUP","PAUSE","BREAK","CAPS_LOCK","SCROLL_LOCK","BACKSPACE","SPACE","TAB","ENTER","ESC","LEFT","RIGHT","UP","DOWN","getEventList","mousePosition","detail","y","touches","changedTouches","clientX","clientY","keyCombination","modifiers","CTRL","ctrlKey","SHIFT","shiftKey","ALT","altKey","META","metaKey","checkFor","checks","checkMods","checkKeys","hasmod","fk","haskey","keyCode","getKeyName","$bind","makeFakeEvent","pos","nev","MouseEvent","addEventHandler","useCapture","realType","_boundEvents","customEvents","mousewheel","_wheel","direction","wheelDelta","z","click","firstTarget","firstEvent","cancelled","tempMove","newEvent","defineProperty","enumerable","dispatchEvent","dblclick","debounce","cancel","stopPropagation","contextmenu","evName","noBind","addEvent","nsType","realName","PointerEvent","MSPointerEvent","tmpName","getRealEventName","initNamespace","mouseButton","button","which","$unbind","unbindNamed","Events","BehaviourState","wm","win","$element","_$element","$top","_$top","$handle","_$resize","rectWorkspace","getWindowSpace","rectWindow","_position","_dimension","h","topMargin","borderSize","snapping","cornerSize","getSetting","windowSize","moved","startX","startY","minWidth","_properties","min_width","minHeight","min_height","windowRects","getWindows","_wid","dim","rect","right","bottom","snapRects","dir","dirX","dirY","nw","ne","se","sw","createWindowBehaviour","newRect","onMouseMove","getMouseLocked","dx","dy","newLeft","newTop","cornerSnapSize","windowSnapSize","newRight","newBottom","onWindowMove","nh","nl","nt","Math","onWindowResize","_move","_resize","onMouseDown","_state","maximized","_focus","calculateDirection","getRect","_mouselock","_onChange","onMouseUp","allow_move","_destroyed","allow_resize","triggerFullscreen","state","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","ALLOW_KEYBOARD_INPUT","webkitCancelFullScreen","mozCancelFullScreen","exitFullscreen","super","_windows","_currentWin","_lastWin","_stylesheet","_sessionLoaded","_fullyLoaded","_isResponsive","_responsiveRes","_dcTimeout","_resizeTimeout","_$fullscreen","_$lastDomInput","__name","destroyStylesheet","onbeforeunload","Notification","subscribe","_onMouseLeave","_onOrientationChange","_onHashChange","_onResize","_onScroll","_onFullscreen","_onContextMenu","_onMouseDown","_onClick","_onKeyUp","_onKeyDown","_onKeyPress","_onError","bind","_onBeforeUnload","queries","getDefaultSetting","maxWidth","resize","_inited","foundIndex","findIndex","styles","rawStyles","rules","innerWidth","onResize","prev","_onDisplayChange","relatedTarget","toElement","nodeName","screen","onOrientationChange","getArgs","space","scrollTop","scrollLeft","notif","fullScreen","mozFullScreen","webkitIsFullScreen","msFullscreenElement","_isFullscreen","setImage","onContextMenu","blur","hitWindow","hitMenu","getAttribute","getCurrentWindow","_blur","onKeyUp","_onKeyEvent","reacted","combination","onKeyDown","accept","doPrevent","key_capture","checkPrevent","linenumber","column","exception","fileName","lineNumber","winCount","getLabel","label","createInputLabel","lbl","span","getWindowId","attr","getValueLabel","nodeValue","getViewNodeValue","siz","getProperty","param","isDataView","checked","setProperty","_setKnownAttribute","_setValueAttribute","inner","readonly","ignoreParams","classMap","textalign","fvalue","getValue","setFlexbox","grow","shrink","basis","checkel","flex","webkitBoxFlex","mozBoxFlex","webkitFlex","mozFlex","msFlex","oFlex","align","createDrag","onDown","onMove","onUp","currentX","currentY","dragging","_onMouseMove","touchDevice","diffX","diffY","_onMouseUp","getNextElement","elements","ignore_roles","querySelectorAll","getElements","currentParent","els","cur","getCurrentParent","currentIndex","getCurrentIndex","nextIndex","getNextIndex","getNext","createDraggable","effect","dragImage","onStart","onEnd","_dragStart","dataTransfer","effectAllowed","setDragImage","dragEl","dragPos","offset","opacity","createDroppable","onFilesDropped","onItemDropped","onEnter","onOver","onLeave","onDrop","_onDrop","getData","_doDrop","getParent","dropEffect","GUI","REGISTRY","getFocusElement","inst","tagMap","gui-switch","gui-list-view","gui-tree-view","gui-icon-view","gui-input-modal","createElementInstance","buildArgs","component","build","GUIElement","oldDisplay","arg2","outer","_append","parseNode","rui","createFromNode","_call","gel","values","onparse","lcase","translator","isNative","hasAttribute","parseDynamic","pel","_wasParsed","classRef","allowedChildren","allowedParents","parent","addChildren","frag","before","insertBefore","cleanScheme","newhtml","edsplit","removeSelfClosingTags","GUIScheme","scheme","triggers","render","createDocumentFragment","wrapper","gelData","getRegisteredElement","ac","childrenTagNames","sNode","ap","parentTagName","cbxhr","_load","content","getFragment","_resolve","nodes","resolving","resolveFragments","_getRoot","_restored","allow_maximize","allow_minimize","allow_close","isNaN","_setProperty","setWindowProperties","_trigger","cleaned","WindowManager","lastMenu","clickWrapper","onclick","original","isExpander","subMenu","isTrusted","clamp","_clamp","rm","srm","customInstance","callbackMap","resolveItems","arr","par","props","labelHTML","titleHTML","entry","menu","nroot","onClick","diff","marginTop","clampSubMenu","round","setActive","Menu","getNextZindex","_lzindex","_ltzindex","ontop","waitForAnimation","anim","_animationCallback","createMediaQueries","qs","ref","_createQueries","_WID","_NAMES","dimension","tag","auto_size","_$root","_$winicon","_$loading","_$disabled","_$warning","_opts","_loaded","_initialized","_disabled","_loading","_icon","_name","_title","_tag","_children","_parent","_origtitle","_lastDimension","_lastPosition","_sound","_soundVolume","_scheme","gravity","allow_windowlist","allow_drop","allow_iconmenu","allow_ontop","allow_hotkeys","allow_session","start_focused","max_width","max_height","media_queries","focused","modal","minimized","onbottom","_queryTimer","np","getWindowPosition","restore","restored","grav","innerHeight","_wm","classNames","zIndex","window_id","role","live","windowTitle","preventTimeout","_onanimationend","_onWindowButtonClick","_onWindowIconClick","_maximize","main","_onDndEvent","_toggleLoading","_toggleDisabled","_setIcon","_updateMarkup","playSound","_minimize","maxHeight","traverseTree","sel","inittimeout","shutdown","_removeDOM","_setWarning","animatetimeout","_animateClose","_removeChild","_removeChildren","_destroyDOM","removeWindow","curWin","setCurrentWindow","lastWin","getLastWindow","setLastWindow","_destroyWin","_args","_findByQuery","fromString","createInto","Node","wmAdd","wmFocus","addWindow","child","_getChildren","_getChild","_getMaximizedSize","restoreMaximized","restoreMinimized","_toggleAttentionBlink","_blurGUI","dw","dh","cpos","cx","cy","newW","newH","newX","newY","_limitTo","_moveTo","_resizeFinished","getNewSize","ui","dmax","dmin","dclose","dres","stat","_blink","nextElement","activeElement","_nextTabIndex","checkMediaQueries","control","_close","close","minimize","maximize","byUser","eventWindow","delimiter","tel","Window","closeWithMain","closeOnEmpty","__inited","__mainwindow","__windows","__settings","__destroying","__options","focusLastWindow","last","__scheme","_removeWindow","setmain","_getWindow","wins","Application","dialogsHtml","buttonClicked","closeCallback","windowName","focusButtons","buttonMap","ButtonOK","ButtonCancel","ButtonYes","ButtonNo","_render","_findDOM","_find","onClose","parentObj","parentIsWindow","parentIsProcess","Dialogs","_on","_addChild","_addWindow","$el","$progress","Watermark","ver","Version","lines","per","$notifications","visibles","animationCallback","_remove","alt","line","getNotificationArea","pitem","createNotification","removeNotification","getNotification","cols","rows","columns","selected","convertToRGB","hex","rgb","convertToHEX","invertHEX","color","Colors","getColor","updateHex","update","hide","buttons","parseMessage","empty","extMessage","traceMessage","bugreport","open","txt","filetypes","extension","mfilter","multiple","setTo","settingsWatch","changePath","view","home","mlist","checkEmptyInput","disable","dpath","activated","checkSelection","ft","newinput","rootPath","clear","fromDropdown","lastDir","resetLastSelected","chdir","wasActivated","checkFileExtension","busy","pb","maxSize","setFile","progressDialog","fileSize","desc","fontName","fontSize","fontColor","fonts","minSize","unit","selection","preview","sizes","j","updatePreview","listFonts","listSizes","placeholder","newArgs","Transport","cors","statusText","binary","_request","FormData","byteLength","shortcuts","parentfile","_requestUpload","OSjsTransport","getTargetPath","getTargetUrl","moduleOptions","baseUrl","basename","parseListing","reqpath","uri","getElementsByTagNameNS","textContent","getFilePath","getFileId","getFileSize","getFileMime","headers","Destination","aopts","auth","copts","code","httpCode","DOMParser","parseFromString","requestUrl","show","displayMenu","createIcon","onInited","_updateIcon","destroyIcon","setTitle","Response","statusCode","getBody","encoding","baseQs","handleQs","jsonpID","queues","followRedirects","callbackName","abortTimeout","script","head","onComplete","async","callbackParameter","methodParameter","nodeify","ServiceNotificationIcon","jsonp","gapi","SingletonInstance","GoogleAPI","clientId","accessToken","userId","preloaded","authenticated","load","client","authenticate","loadAll","finished","lload","_next","signOut","immediate","authorize","client_id","user_id","createRingNotification","revoke","handleAuthResult","authResult","error_subtype","access_token","oauth2","userinfo","execute","resp","_run","CACHE_CLEAR_TIMEOUT","_authenticated","_clearCacheTimeout","_rootFolderId","_treeCache","createDirectoryList","rdir","fileType","mimeType","kind","quotaBytesUsed","createItem","getAllDirectoryFiles","doRetrieve","initialRequest","drive","retrievePageOfFiles","nextPageToken","pageToken","retrieveAllFiles","idList","parentList","parents","piter","resolves","currentParentId","_getFileList","foundId","_nextDir","completed","getFilesBelongingTo","about","rootFolderId","getFileFromPath","tmpItem","ldir","getParentPathId","setFolder","insert","folderId","resource","delete","childId","fargs","_init","ritem","fileId","getToken","downloadUrl","Authorization","parentId","boundary","close_delim","contentType","createBody","base64Data","multipartRequestBody","reqContentType","toBase64","createBoundary","fileData","uploadType","Content-Type","patch","req","useKeys","webContentLink","dirDest","rootDest","redirectURI","WindowsLiveAPI","hasSession","lastScope","WL","_login","currScope","onLogout","onLog","onSessionChange","redirect_uri","session","status","error_description","unsubscribe","_removeRing","logout","getSession","_mimeCache","_isMounted","onedriveCall","api","responseFailed","getItemType","getMetadataFromItem","itemFile","getItemMime","getFilesInFolder","resolvePath","useParent","lfound","iargs","relativePath","drivePath","fileList","srcDrivePath","dstDrivePath","authed","dbx","Dropbox","timedOut","loginTimeout","redirectUrl","authUrl","getAuthenticationUrl","_loadDependencies","_createClient","error_summary","path_display","filesSearch","max_results","mode",".tag","matches","_createMetadata","cursor","has_more","dl","sharingGetSharedLinkFile","fileBlob","filesUpload","contents","filesCopy","from_path","to_path","filesMove","filesGetMetadata","hasLink","sharingGetSharedLinks","links","newLink","sharingCreateSharedLinkWithSettings","requested_visibility","filesCreateFolder","usersGetSpaceUsage","allocation","individual","allocated","filesDelete","SearchEngine","SplashScreen","AlertDialog","ApplicationChooserDialog","ColorDialog","ConfirmDialog","ErrorDialog","FileInfoDialog","FileDialog","FileProgressDialog","FileUploadDialog","FontDialog","InputDialog","WebTransport","OsjsTransport","DistTransport","ApplicationTransport","WebdavTransport","GdriveTransport","OnedriveTransport","DropboxTransport","OSJS_DEBUG","web","osjs","dist","webdav","google-drive","onedrive","dropbox","hasBooted","hasShutDown","onError","testMode","_dialog","initPreloading","flatten","Preloads","initHandlers","log","authenticator","connection","connectionName","initVFS","addList","initSettingsManager","pools","initPackageManager","PreloadOnBoot","getManifest","initExtensions","preloadExtensions","exts","Extensions","launchExtensions","initSearchEngine","initGUI","register","Alert","ApplicationChooser","Color","Confirm","FileInfo","FileProgress","FileUpload","Font","Input","initWindowManager","wmConfig","exec","setup","initMocha","overflow","runTests","onMessage","onPostMessage","wid","Locale","LocaleOptions","Languages","watermark","AutoStart","checkMap","skipMap","getLastSession","adds","refid","createFromArray","initSession","stop","restart","toggleFullscreen","killAll","reload","lout","saveSession","running","MOUSE_PROPS","MOUSE_DEFAULTS","inType","inDict","createEvent","initEvent","bubbles","cancelable","pressure","pointerId","tiltX","tiltY","twist","tangentialPressure","pointerType","hwTimestamp","isPrimary","USE_MAP","Map","PointerMap","SparseArrayMap","array","has","CLONE_PROPS","CLONE_DEFAULTS","BOUNDARY_EVENTS","pointerover","pointerout","pointerenter","pointerleave","HAS_SVG_INSTANCE","SVGElementInstance","dispatcher","pointermap","eventMap","captureInfo","eventSources","eventSourceList","registerSource","newEvents","unregister","contained","ex","down","inEvent","fireEvent","up","enter","leave","over","out","leaveOut","event","propagate","enterOver","eventHandler","_handledByPE","listen","unlisten","removeEvent","eventName","boundHandler","makeEvent","_target","cloneEvent","eventCopy","correspondingUseElement","getTarget","capture","propagateDown","targets","setCapture","inPointerId","inTarget","skipDispatch","releaseCapture","implicitRelease","asyncDispatchEvent","requestAnimationFrame","targeting","shadow","inEl","shadowRoot","webkitShadowRoot","canTarget","Boolean","elementFromPoint","targetingShadow","olderShadow","os","olderShadowRoot","allShadows","shadows","searchRoot","inRoot","st","sr","ssr","owner","DOCUMENT_NODE","DOCUMENT_FRAGMENT_NODE","findTarget","toArray","MO","MutationObserver","WebKitMutationObserver","OBSERVER_INIT","subtree","childList","attributes","attributeOldValue","attributeFilter","Installer","binder","addCallback","removeCallback","changedCallback","observer","mutationWatcher","shadowSelector","selector","rule","watchSubtree","observe","enableOnSubtree","installOnLoad","installNewSubtree","findElements","addElement","removeElement","elementChanged","oldValue","concatLists","accum","isElement","ELEMENT_NODE","flattenMutationTree","inNodes","tree","mutations","mutationHandler","addedNodes","removed","removedNodes","attrib2css","selectors","hasNativePE","hasShadowRoot","ShadowDOMPolyfill","createShadowRoot","BUTTON_TO_BUTTONS","HAS_BUTTONS","INSTALLER","mouseEvents","POINTER_ID","POINTER_TYPE","lastTouches","isEventSimulatedFromTouch","lts","abs","prepareEvent","pd","prepareButtonsForMove","mousedown","mousemove","mouseup","mouseover","mouseout","deactivateMouse","pointermap$1","touchEvents","elementAdded","touchActionToScrollType","_scrollType","elementRemoved","oldSt","scrollTypes","EMITTER","XSCROLLER","YSCROLLER","SCROLLER","touchAction","firstTouch","isPrimaryTouch","inTouch","identifier","setPrimaryTouch","firstXY","X","Y","scrolling","cancelResetClickCount","removePrimaryPointer","inPointer","resetClickCount","clickCount","resetId","typeToButtons","touchToPointer","cte","currentTouchEvent","radiusX","webkitRadiusX","radiusY","webkitRadiusY","webkitForce","self","processTouches","inFunction","tl","shouldScroll","scrollAxis","currentTarget","oa","da","doa","findTouch","inTL","inId","vacuumTouches","cancelOut","touchstart","dedupSynthMouse","overDown","outTarget","touchmove","touchcancel","moveOverOut","pointer","outEvent","touchend","upOut","cleanUpPointer","lt","pointermap$2","HAS_BITMAP_TYPE","MSPOINTER_TYPE_MOUSE","msEvents","POINTER_TYPES","cleanup","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSLostPointerCapture","MSGotPointerCapture","assertActive","assertConnected","elem","ownerDocument","inActiveButtonState","msPointerEnabled","msSetPointerCapture","msReleasePointerCapture","applyAttributeStyles","tp","msMaxTouchPoints","ontouchstart","applyPolyfill","setPointerCapture","defineProperties","releasePointerCapture","hasPointerCapture","pointerevents","targetFinding","mod","ERR_FILE_OPEN","ERR_WM_NOT_RUNNING","ERR_FILE_OPEN_FMT","ERR_APP_MIME_NOT_FOUND_FMT","ERR_APP_LAUNCH_FAILED","ERR_APP_LAUNCH_FAILED_FMT","ERR_APP_CONSTRUCT_FAILED_FMT","ERR_APP_INIT_FAILED_FMT","ERR_APP_RESOURCES_MISSING_FMT","ERR_APP_PRELOAD_FAILED_FMT","ERR_APP_LAUNCH_ALREADY_RUNNING_FMT","ERR_APP_LAUNCH_MANIFEST_FAILED_FMT","ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT","ERR_NO_WM_RUNNING","ERR_CORE_INIT_FAILED","ERR_CORE_INIT_FAILED_DESC","ERR_CORE_INIT_NO_WM","ERR_CORE_INIT_WM_FAILED_FMT","ERR_CORE_INIT_PRELOAD_FAILED","ERR_JAVASCRIPT_EXCEPTION","ERR_JAVACSRIPT_EXCEPTION_DESC","ERR_APP_API_ERROR","ERR_APP_API_ERROR_DESC_FMT","ERR_APP_MISSING_ARGUMENT_FMT","ERR_APP_UNKNOWN_ERROR","ERR_OPERATION_TIMEOUT","ERR_OPERATION_TIMEOUT_FMT","ERR_ARGUMENT_FMT","ERR_INVALID_LOCATION","ERR_WIN_DUPLICATE_FMT","WINDOW_MINIMIZE","WINDOW_MAXIMIZE","WINDOW_RESTORE","WINDOW_CLOSE","WINDOW_ONTOP_ON","WINDOW_ONTOP_OFF","TITLE_SIGN_OUT","TITLE_SIGNED_IN_AS_FMT","ERR_LOGIN_FMT","ERR_LOGIN_INVALID","ERR_NO_SESSION","MSG_SESSION_WARNING","BUGREPORT_MSG","SERVICENOTIFICATION_TOOLTIP","CONNECTION_LOST","CONNECTION_RESTORED","CONNECTION_RESTORE_FAILED","CONNECTION_ERROR","ERR_UTILS_XHR_FATAL","ERR_UTILS_XHR_FMT","DIALOG_LOGOUT_TITLE","DIALOG_LOGOUT_MSG_FMT","DIALOG_CLOSE","DIALOG_CANCEL","DIALOG_APPLY","DIALOG_OK","DIALOG_ALERT_TITLE","DIALOG_COLOR_TITLE","DIALOG_COLOR_R","DIALOG_COLOR_G","DIALOG_COLOR_B","DIALOG_COLOR_A","DIALOG_CONFIRM_TITLE","DIALOG_ERROR_TITLE","DIALOG_ERROR_MESSAGE","DIALOG_ERROR_SUMMARY","DIALOG_ERROR_TRACE","DIALOG_ERROR_BUGREPORT","DIALOG_FILE_SAVE","DIALOG_FILE_OPEN","DIALOG_FILE_MKDIR","DIALOG_FILE_MKDIR_MSG","DIALOG_FILE_OVERWRITE","DIALOG_FILE_MNU_VIEWTYPE","DIALOG_FILE_MNU_LISTVIEW","DIALOG_FILE_MNU_TREEVIEW","DIALOG_FILE_MNU_ICONVIEW","DIALOG_FILE_ERROR","DIALOG_FILE_ERROR_SCANDIR","DIALOG_FILE_ERROR_FIND","DIALOG_FILE_MISSING_FILENAME","DIALOG_FILE_MISSING_SELECTION","DIALOG_FILEINFO_TITLE","DIALOG_FILEINFO_LOADING","DIALOG_FILEINFO_ERROR","DIALOG_FILEINFO_ERROR_LOOKUP","DIALOG_FILEINFO_ERROR_LOOKUP_FMT","DIALOG_INPUT_TITLE","DIALOG_FILEPROGRESS_TITLE","DIALOG_FILEPROGRESS_LOADING","DIALOG_UPLOAD_TITLE","DIALOG_UPLOAD_DESC","DIALOG_UPLOAD_MSG_FMT","DIALOG_UPLOAD_MSG","DIALOG_UPLOAD_FAILED","DIALOG_UPLOAD_FAILED_MSG","DIALOG_UPLOAD_FAILED_UNKNOWN","DIALOG_UPLOAD_FAILED_CANCELLED","DIALOG_UPLOAD_TOO_BIG","DIALOG_UPLOAD_TOO_BIG_FMT","DIALOG_FONT_TITLE","DIALOG_APPCHOOSER_TITLE","DIALOG_APPCHOOSER_MSG","DIALOG_APPCHOOSER_NO_SELECTION","DIALOG_APPCHOOSER_SET_DEFAULT","GAPI_DISABLED","GAPI_SIGN_OUT","GAPI_REVOKE","GAPI_AUTH_FAILURE","GAPI_AUTH_FAILURE_FMT","GAPI_LOAD_FAILURE","WLAPI_DISABLED","WLAPI_SIGN_OUT","WLAPI_LOAD_FAILURE","WLAPI_LOGIN_FAILED","WLAPI_LOGIN_FAILED_FMT","WLAPI_INIT_FAILED_FMT","IDB_MISSING_DBNAME","IDB_NO_SUCH_ITEM","ERR_VFS_FATAL","ERR_VFS_UNAVAILABLE","ERR_VFS_FILE_ARGS","ERR_VFS_NUM_ARGS","ERR_VFS_EXPECT_FILE","ERR_VFS_EXPECT_SRC_FILE","ERR_VFS_EXPECT_DST_FILE","ERR_VFS_FILE_EXISTS","ERR_VFS_TARGET_NOT_EXISTS","ERR_VFS_TRANSFER_FMT","ERR_VFS_UPLOAD_NO_DEST","ERR_VFS_UPLOAD_NO_FILES","ERR_VFS_UPLOAD_FAIL_FMT","ERR_VFS_UPLOAD_CANCELLED","ERR_VFS_DOWNLOAD_NO_FILE","ERR_VFS_DOWNLOAD_FAILED","ERR_VFS_REMOTEREAD_EMPTY","ERR_VFS_NO_MIME_DETECT","ERR_VFSMODULE_INVALID","ERR_VFSMODULE_INVALID_FMT","ERR_VFSMODULE_INVALID_METHOD","ERR_VFSMODULE_INVALID_METHOD_FMT","ERR_VFSMODULE_INVALID_TYPE","ERR_VFSMODULE_INVALID_TYPE_FMT","ERR_VFSMODULE_INVALID_CONFIG","ERR_VFSMODULE_INVALID_CONFIG_FMT","ERR_VFSMODULE_ALREADY_MOUNTED","ERR_VFSMODULE_ALREADY_MOUNTED_FMT","ERR_VFSMODULE_NOT_MOUNTED","ERR_VFSMODULE_NOT_MOUNTED_FMT","ERR_VFSMODULE_EXCEPTION","ERR_VFSMODULE_EXCEPTION_FMT","ERR_VFSMODULE_NOT_FOUND_FMT","ERR_VFSMODULE_READONLY","ERR_VFSMODULE_READONLY_FMT","TOOLTIP_VFS_DOWNLOAD_NOTIFICATION","ERR_VFSMODULE_XHR_ERROR","ERR_VFSMODULE_ROOT_ID","ERR_VFSMODULE_NOSUCH","ERR_VFSMODULE_PARENT","ERR_VFSMODULE_PARENT_FMT","ERR_VFSMODULE_SCANDIR","ERR_VFSMODULE_SCANDIR_FMT","ERR_VFSMODULE_READ","ERR_VFSMODULE_READ_FMT","ERR_VFSMODULE_WRITE","ERR_VFSMODULE_WRITE_FMT","ERR_VFSMODULE_COPY","ERR_VFSMODULE_COPY_FMT","ERR_VFSMODULE_UNLINK","ERR_VFSMODULE_UNLINK_FMT","ERR_VFSMODULE_MOVE","ERR_VFSMODULE_MOVE_FMT","ERR_VFSMODULE_EXIST","ERR_VFSMODULE_EXIST_FMT","ERR_VFSMODULE_FILEINFO","ERR_VFSMODULE_FILEINFO_FMT","ERR_VFSMODULE_MKDIR","ERR_VFSMODULE_MKDIR_FMT","ERR_VFSMODULE_MKFILE","ERR_VFSMODULE_MKFILE_FMT","ERR_VFSMODULE_URL","ERR_VFSMODULE_URL_FMT","ERR_VFSMODULE_TRASH","ERR_VFSMODULE_TRASH_FMT","ERR_VFSMODULE_UNTRASH","ERR_VFSMODULE_UNTRASH_FMT","ERR_VFSMODULE_EMPTYTRASH","ERR_VFSMODULE_EMPTYTRASH_FMT","ERR_VFSMODULE_FIND","ERR_VFSMODULE_FIND_FMT","ERR_VFSMODULE_FREESPACE","ERR_VFSMODULE_FREESPACE_FMT","ERR_VFSMODULE_EXISTS","ERR_VFSMODULE_EXISTS_FMT","ERR_DROPBOX_API","ERR_DROPBOX_AUTH","ERR_DROPBOX_KEY","DROPBOX_NOTIFICATION_TITLE","DROPBOX_SIGN_OUT","ONEDRIVE_ERR_RESOLVE","ZIP_PRELOAD_FAIL","ZIP_VENDOR_FAIL","ZIP_NO_RESOURCE","ZIP_NO_PATH","SEARCH_LOADING","SEARCH_NO_RESULTS","ERR_PACKAGE_EXISTS","ERR_PACKAGE_MANIFEST","ERR_PACKAGE_ENUM_FAILED","ERR_FILE_APP_OPEN","ERR_FILE_APP_OPEN_FMT","ERR_FILE_APP_OPEN_ALT_FMT","ERR_FILE_APP_SAVE_ALT_FMT","ERR_GENERIC_APP_FMT","ERR_GENERIC_APP_ACTION_FMT","ERR_GENERIC_APP_UNKNOWN","ERR_GENERIC_APP_REQUEST","ERR_GENERIC_APP_FATAL_FMT","MSG_GENERIC_APP_DISCARD","MSG_FILE_CHANGED","MSG_APPLICATION_WARNING","MSG_MIME_OVERRIDE","ERR_OPEN_LOCATION","ERR_OPEN_LOCATION_FMT","LBL_UNKNOWN","LBL_APPEARANCE","LBL_USER","LBL_NAME","LBL_APPLY","LBL_FILENAME","LBL_PATH","LBL_SIZE","LBL_TYPE","LBL_MIME","LBL_LOADING","LBL_SETTINGS","LBL_ADD_FILE","LBL_COMMENT","LBL_ACCOUNT","LBL_CONNECT","LBL_ONLINE","LBL_OFFLINE","LBL_AWAY","LBL_BUSY","LBL_CHAT","LBL_HELP","LBL_ABOUT","LBL_PANELS","LBL_LOCALES","LBL_THEME","LBL_COLOR","LBL_PID","LBL_KILL","LBL_ALIVE","LBL_INDEX","LBL_ADD","LBL_FONT","LBL_YES","LBL_NO","LBL_CANCEL","LBL_TOP","LBL_LEFT","LBL_RIGHT","LBL_BOTTOM","LBL_CENTER","LBL_FILE","LBL_NEW","LBL_OPEN","LBL_SAVE","LBL_SAVEAS","LBL_CLOSE","LBL_MKDIR","LBL_UPLOAD","LBL_VIEW","LBL_EDIT","LBL_RENAME","LBL_DELETE","LBL_OPENWITH","LBL_ICONVIEW","LBL_TREEVIEW","LBL_LISTVIEW","LBL_REFRESH","LBL_VIEWTYPE","LBL_BOLD","LBL_ITALIC","LBL_UNDERLINE","LBL_REGULAR","LBL_STRIKE","LBL_INDENT","LBL_OUTDENT","LBL_UNDO","LBL_REDO","LBL_CUT","LBL_UNLINK","LBL_COPY","LBL_PASTE","LBL_INSERT","LBL_IMAGE","LBL_LINK","LBL_DISCONNECT","LBL_APPLICATIONS","LBL_ADD_FOLDER","LBL_INFORMATION","LBL_TEXT_COLOR","LBL_BACK_COLOR","LBL_RESET_DEFAULT","LBL_DOWNLOAD_COMP","LBL_ORDERED_LIST","LBL_BACKGROUND_IMAGE","LBL_BACKGROUND_COLOR","LBL_UNORDERED_LIST","LBL_STATUS","LBL_READONLY","LBL_CREATED","LBL_MODIFIED","LBL_SHOW_COLUMNS","LBL_MOVE","LBL_OPTIONS","LBL_OK","LBL_DIRECTORY","LBL_CREATE","LBL_BUGREPORT","LBL_INSTALL","LBL_UPDATE","LBL_REMOVE","LBL_SHOW_SIDEBAR","LBL_SHOW_NAVIGATION","LBL_SHOW_HIDDENFILES","LBL_SHOW_FILEEXTENSIONS","LBL_MOUNT","LBL_DESCRIPTION","LBL_USERNAME","LBL_PASSWORD","LBL_HOST","LBL_NAMESPACE","LBL_SEARCH","LBL_BACK","LBL_ICONS","LBL_ICON","LBL_UNINSTALL","LBL_REGENERATE","LBL_DESKTOP","LBL_WINDOWMANAGER","LBL_HOTKEY","LBL_HOTKEYS","LBL_MOUNTS","LBL_ID","LBL_APPLICATION","LBL_SCOPE","LBL_HIDE","LBL_REPOSITORY","LBL_VERSION","LBL_AUTHOR","LBL_GROUPS","LBL_AUTOHIDE","LBL_PERSONAL","LBL_SYSTEM","LBL_STARTING","LBL_SOUNDS","LBL_STORE","LBL_LOCALE","LBL_PACKAGE","LBL_PACKAGES","LBL_INPUT","LBL_MISC","LBL_OTHER","LBL_USERS","LBL_FONTS","LBL_OPEN_LOCATION","LBL_HOME","LBL_WIDGET","LBL_WIDGETS","LBL_LOCK","LBL_UNLOCK","LBL_WARNING","LBL_INFO","LBL_POSITION","LBL_OPACITY","LBL_ITEMS","LBL_ONTOP","LBL_BACKGROUND","LBL_QUIT","LBL_EXIT","LBL_WINDOWS","getItem","_getSettings","DemoAuthenticator","HttpConnection","port","ws","wsurl","wsqueue","destroying","_connect","reconnect","connected","WebSocket","onopen","onmessage","_index","_onmessage","onclose","_onclose","send","curr","version","setItem","DemoStorage","toggleState","expanded","GUIPanedView","orient","cel","resizer","resizeEl","previousElementSibling","startWidth","startHeight","Number","MAX_VALUE","totalSize","totalContainers","totalSpacers","newWidth","newHeight","webkitFlexBasis","mozFflexBasis","msFflexBasis","oFlexBasis","flexBasis","CustomEvent","bindResizer","GUIPanedViewContainer","GUIButtonBar","GUIToolBar","GUIGrid","GUIGridRow","GUIGridEntry","GUIVBox","GUIVBoxContainer","GUIHBox","GUIHBoxContainer","GUIExpander","lbltxt","_CLIPBOARD","setClipboard","getClipboard","Clipboard","_classMap","getEntryTagName","getEntryFromEvent","header","tn","isHeader","row","handleItemSelection","multipleSelect","findex","getValueParameter","matchValueByKey","UIDataView","_selected","oncreate","oninit","single","inView","updateActiveSelection","findId","findKey","active","_active","scrollSpace","elTop","tooltip","asValue","scrollIntoView","scroll","singleClick","wasResized","col","resetDir","expand","activate","context","underlay","cls","C","getRowSize","lastTop","handleKey","handleKeyPress","oldTop","ExtendedDate","date","defaultFormat","dayNames","monthNames","fmt","getFirstDayInMonth","getLastDayInMonth","getDaysInMonth","getWeekNumber","to","isWithinMonth","getDayOfTheYear","now","getMonth","getFullYear","getDate","_now","_y","_m","setFullYear","setHours","setDate","getDay","ceil","shrt","floor","toindex","utc","pad","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","D","getUTCDay","getUTCDate","S","W","F","getUTCMonth","M","getUTCFullYear","G","A","getUTCHours","getHours","H","getUTCMinutes","getMinutes","getUTCSeconds","getSeconds","O","tzo","getTimezoneOffset","dif","ppad","num","norm","zones","U","getTime","formatDate","GUIDataView","DateExtended","_iconSizes","filesize","removeExtension","mimeConfig","extensions","getDateFromStamp","stamp","getListViewColumns","columnMapping","defColumns","useColumns","defaultcolumns","vfsOptions","scandirOptions","resizable","readdir","sopts","childView","getChildView","setOption","cc","showFileExtensions","scanopts","showDotFiles","dotfiles","filetype","sortby","sortdir","summary","directories","_createEntry","GUIFileView","buildChildView","toggle","_readdirTimeout","getChildViewType","nel","draggable","draggable-type","createEntry","initEntry","dicon","dimg","dlabel","dspan","bindEntryEvents","GUIIconView","getSelected","getEntry","setSelected","_buttonCount","createInputOfType","attribs","tabindex","step","_bindDefaults","rolemap","TEXTAREA","INPUT","_create","setSwitchValue","_GUIInput","_GUISelect","addToSelectBox","what","selectedIndex","createSelectInput","GUILabel","isHTML","GUITextarea","scrollHeight","GUIText","GUIPassword","GUIFileUpload","onchange","GUIRadio","GUICheckbox","GUISwitch","toggleValue","GUIButton","setLabel","tip","GUISelect","GUISelectList","GUISlider","GUIInputModal","createFakeHeader","fh","fhead","fcols","rel","fcol","widthOffset","createResizers","initRow","_columns","setSize","createRow","GUIListView","cbCreated","onCreated","moveIntoInner","fakeHead","fakeHeadInner","hcols","vis","getSelectionEventAttribs","mel","didx","an","getEventName","runChildren","level","winRef","onEntryClick","GUIMenuEntry","createTyped","GUIMenuBar","submenu","updateChildren","GUIMenu","newNode","customMenu","submenus","sub","GUIIframe","_tagName","standalone","matchMedia","iframe","GUIColorBox","GUIColorSwatch","cv","ctx","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","offsetX","offsetY","getImageData","GUIProgressBar","percentage","GUIStatusBar","textNodes","TEXT_NODE","getDocument","contentDocument","contentWindow","destroyFixInterval","_fixTry","_fixInterval","clearInterval","setDocumentData","themeName","editable","getSelection","getRangeAt","rangeCount","deleteContents","insertNode","createRange","insertTextAtCursor","template","setInterval","createFixInterval","GUIRichText","execCommand","queryCommandValue","getDocumentData","toggleActive","eidx","selectTab","tabs","tab","findTab","createTab","GUITabs","newtabs","removetabs","removeTab","currentTab","handleItemExpand","_rendered","onDndEnter","onDndLeave","expander","eel","dval","GUITreeView","recurse","createVisualElement","controls","autoplay","GUIAudio","GUIVideo","GUIImage","GUICanvas","hasClosingDialog","currentFile","hasChanged","menuMap","MenuNew","newDialog","MenuSave","saveDialog","MenuSaveAs","MenuOpen","openDialog","MenuClose","openFile","checkHasChanged","discard","updateFile","_setTitle","readData","rawData","_getArgument","onDone","_setArgument","showFile","callbackVFS","saveAs","getFileData","saveFile","IFRAME_COUNT","allow_restore","_iwin","_frame","postMessage","wmRef","setLocation","oldbefore","IFrameApplicationWindow","_getResource","_response","_getMainWindow"],"mappings":"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","file":"../skylark-osjsv2-client.js","sourcesContent":["define('skylark-osjsv2-client/utils/misc',[],function () {\n    'use strict';\n    function format(format) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        const sprintfRegex = /\\{(\\d+)\\}/g;\n        function sprintf(match, number) {\n            return number in args ? args[number] : match;\n        }\n        return format.replace(sprintfRegex, sprintf);\n    }\n    function parseurl(url, modify) {\n        modify = modify || {};\n        if (!url.match(/^(\\w+\\:)\\/\\//)) {\n            url = '//' + url;\n        }\n        const protocol = url.split(/^(\\w+\\:)?\\/\\//);\n        const splitted = (() => {\n            const tmp = protocol[2].replace(/^\\/\\//, '').split('/');\n            return {\n                proto: (modify.protocol || protocol[1] || window.location.protocol || '').replace(/\\:$/, ''),\n                host: modify.host || tmp.shift(),\n                path: modify.path || '/' + tmp.join('/')\n            };\n        })();\n        function _parts() {\n            const parts = [\n                splitted.proto,\n                '://'\n            ];\n            if (modify.username) {\n                const authstr = String(modify.username) + ':' + String(modify.password);\n                parts.push(authstr);\n                parts.push('@');\n            }\n            parts.push(splitted.host);\n            parts.push(splitted.path);\n            return parts.join('');\n        }\n        return {\n            protocol: splitted.proto,\n            host: splitted.host,\n            path: splitted.path,\n            url: _parts()\n        };\n    }\n    function urlparams(search, hash) {\n        let hashes = search.slice(search.indexOf(hash ? '#' : '?') + 1).split('&');\n        return hashes.reduce((params, hash) => {\n            let [key, val] = hash.split('=');\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    }\n    function argumentDefaults(args, defaults, undef) {\n        args = args || {};\n        Object.keys(defaults).forEach(key => {\n            if (typeof defaults[key] === 'boolean' || typeof defaults[key] === 'number') {\n                if (typeof args[key] === 'undefined' || args[key] === null) {\n                    args[key] = defaults[key];\n                }\n            } else {\n                args[key] = args[key] || defaults[key];\n            }\n        });\n        return args;\n    }\n    function mergeObject(obj1, obj2, opts) {\n        opts = opts || {};\n        for (let p in obj2) {\n            if (obj2.hasOwnProperty(p)) {\n                try {\n                    if (opts.overwrite === false && obj1.hasOwnProperty(p)) {\n                        continue;\n                    }\n                    if (obj2[p].constructor === Object) {\n                        obj1[p] = mergeObject(obj1[p], obj2[p]);\n                    } else {\n                        obj1[p] = obj2[p];\n                    }\n                } catch (e) {\n                    obj1[p] = obj2[p];\n                }\n            }\n        }\n        return obj1;\n    }\n    function cloneObject(o, alternative) {\n        function _clone(i) {\n            if (typeof i !== 'object' || i === null) {\n                return i;\n            } else if (i instanceof Array) {\n                return i.map(_clone);\n            }\n            const iter = {};\n            Object.keys(i).forEach(k => {\n                iter[k] = _clone(i[k]);\n            });\n            return iter;\n        }\n        if (alternative) {\n            return _clone(o);\n        }\n        return JSON.parse(JSON.stringify(o, (key, value) => {\n            if (value && typeof value === 'object' && value.tagName) {\n                return window.undefined;\n            }\n            return value;\n        }));\n    }\n    return {\n        format: format,\n        parseurl: parseurl,\n        urlparams: urlparams,\n        argumentDefaults: argumentDefaults,\n        mergeObject: mergeObject,\n        cloneObject: cloneObject\n    };\n});\ndefine('skylark-osjsv2-client/core/locales',[\n    '../utils/misc'\n], function (misc) {\n    'use strict';\n    let DefaultLocale = 'en_EN';\n    let CurrentLocale = 'en_EN';\n    let CurrentRTL = [];\n    function _() {\n        let userLocale = {};\n        let systemLocale = {};\n        try {\n            userLocale = OSjs.require('locales/' + CurrentLocale ); // modified by lwf\n            systemLocale = OSjs.require('locales/' + DefaultLocale ); // modified by lwf\n        } catch (e) {\n            console.warn('Locale error', e);\n        }\n        const s = arguments[0];\n        let a = arguments;\n        try {\n            if (userLocale && userLocale[s]) {\n                a[0] = userLocale[s];\n            } else {\n                a[0] = systemLocale[s] || s;\n            }\n            return a.length > 1 ? misc.format.apply(null, a) : a[0];\n        } catch (e) {\n            console.warn(e.stack, e);\n        }\n        return s;\n    }\n    function __() {\n        const l = arguments[0];\n        const s = arguments[1];\n        let a = Array.prototype.slice.call(arguments, 1);\n        if (l[CurrentLocale] && l[CurrentLocale][s]) {\n            a[0] = l[CurrentLocale][s];\n        } else {\n            a[0] = l[DefaultLocale] ? l[DefaultLocale][s] || s : s;\n            if (a[0] && a[0] === s) {\n                a[0] = _.apply(null, a);\n            }\n        }\n        return a.length > 1 ? misc.format.apply(null, a) : a[0];\n    }\n    function getLocale() {\n        return CurrentLocale;\n    }\n    function setLocale(l) {\n        let locale;\n        try {\n            locale = OSjs.require('locales/' + l); // modified by lwf\n        } catch (e) {\n            console.warn('Failed to set locale', e);\n            return;\n        }\n        if (locale) {\n            CurrentLocale = l;\n        } else {\n            console.warn('Locales::setLocale()', 'Invalid locale', l, '(Using default)');\n            CurrentLocale = DefaultLocale;\n        }\n        const major = CurrentLocale.split('_')[0];\n        const html = document.querySelector('html');\n        if (html) {\n            html.setAttribute('lang', l);\n            html.setAttribute('dir', CurrentRTL.indexOf(major) !== -1 ? 'rtl' : 'ltr');\n        }\n        console.info('Locales::setLocale()', CurrentLocale);\n    }\n    function createLocalizer(locales) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments, 0);\n            args.unshift(locales);\n            return __(...args);\n        };\n    }\n    function init(locale, options, languages) {\n        options = options || {};\n        const names = languages ? Object.keys(languages) : {};\n        if (names instanceof Array && names.indexOf(locale) !== -1) {\n            CurrentLocale = locale;\n        }\n        CurrentRTL = options.RTL || [];\n        names.forEach(k => {\n            OSjs.Locales[k] = OSjs.require('locales/' + k);//modified by lwf\n        });\n    }\n    return {\n        _: _,\n        __: __,\n        getLocale: getLocale,\n        setLocale: setLocale,\n        createLocalizer: createLocalizer,\n        init: init\n    };\n});\ndefine('skylark-osjsv2-client/helpers/event-handler',[],function () {\n    'use strict';\n    return class EventHandler {\n        constructor(name, names) {\n            this.name = name;\n            this.events = {};\n            (names || []).forEach(function (n) {\n                this.events[n] = [];\n            }, this);\n            console.debug('EventHandler::constructor()', this.events);\n        }\n        destroy() {\n            this.events = {};\n        }\n        on(name, cb, thisArg) {\n            thisArg = thisArg || this;\n            if (!(cb instanceof Function)) {\n                throw new TypeError('EventHandler::on() expects cb to be a Function');\n            }\n            const added = [];\n            const _register = n => {\n                if (!(this.events[n] instanceof Array)) {\n                    this.events[n] = [];\n                }\n                added.push(this.events[n].push(args => {\n                    return cb.apply(thisArg, args);\n                }));\n            };\n            if (name instanceof RegExp) {\n                Object.keys(this.events).forEach(function (n) {\n                    if (name.test(n)) {\n                        _register(n);\n                    }\n                });\n            } else {\n                name.replace(/\\s/g, '').split(',').forEach(function (n) {\n                    _register(n);\n                });\n            }\n            return added.length === 1 ? added[0] : added;\n        }\n        off(name, index) {\n            if (!(this.events[name] instanceof Array)) {\n                throw new TypeError('Invalid event name');\n            }\n            if (arguments.length > 1 && typeof index === 'number') {\n                this.events[name].splice(index, 1);\n            } else {\n                this.events[name] = [];\n            }\n        }\n        emit(name, args, thisArg, applyArgs) {\n            args = args || [];\n            thisArg = thisArg || this;\n            if (!(this.events[name] instanceof Array)) {\n                return;\n            }\n            this.events[name].forEach(fn => {\n                try {\n                    if (applyArgs) {\n                        fn.apply(thisArg, args);\n                    } else {\n                        fn.call(thisArg, args);\n                    }\n                } catch (e) {\n                    console.warn('EventHandler::emit() exception', name, e);\n                    console.warn(e.stack);\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/loader',[],function () {\n    'use strict';\n    class Loader {\n        constructor() {\n            this.loaders = {};\n            this.loaderGraze = {};\n            this.$container = document.createElement('osjs-loaders');\n        }\n        create(name, opts) {\n            opts = opts || {};\n            if (!this.$container.parentNode) {\n                document.body.appendChild(this.$container);\n            }\n            if (this.loaders[name]) {\n                return;\n            }\n            const el = document.createElement('osjs-loading');\n            el.title = opts.title || '';\n            if (opts.icon) {\n                const img = document.createElement('img');\n                img.src = opts.icon;\n                el.appendChild(img);\n            }\n            this.$container.appendChild(el);\n            this.loaderGraze[name] = setTimeout(() => {\n                el.style.display = 'inline-block';\n            }, 100);\n            this.loaders[name] = el;\n        }\n        destroy(name) {\n            if (!this.loaders[name]) {\n                return;\n            }\n            clearTimeout(this.loaderGraze[name]);\n            this.loaders[name].remove();\n            delete this.loaders[name];\n            delete this.loaderGraze[name];\n        }\n    }\n    return new Loader();\n});\ndefine('skylark-osjsv2-client/helpers/simplejsonconf',[],function(){\r\n  /*!\r\n   * Module: simplejsonconf\r\n   *\r\n   * Use JSON as a configuration file\r\n   *\r\n   * @author Anders Evenrud <andersevenrud@gmail.com>\r\n   * @license MIT\r\n   */\r\n\r\n  'use strict';\r\n\r\n  /*\r\n   * Check if this is an \"Object\"\r\n   */\r\n  function isObject(item) {\r\n    return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n  }\r\n\r\n  /*\r\n   * Merges the two objects together\r\n   */\r\n  function mergeDeep(target, source) {\r\n    if ( isObject(target) && isObject(source) ) {\r\n      for ( var key in source ) {\r\n        if ( isObject(source[key]) ) {\r\n          if ( !target[key] || typeof target[key] !== typeof source[key] ) {\r\n            Object.assign(target, {\r\n              [key]: {}\r\n            });\r\n          }\r\n          mergeDeep(target[key], source[key]);\r\n        } else {\r\n          Object.assign(target, {\r\n            [key]: source[key]\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  var exports = {};\r\n\r\n  /**\r\n   * Creates a new proxy object with getJSON/setJSON methods for given JSON object.\r\n   *\r\n   * @param {Object}  obj       The JSON object\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function from\r\n   * @return {Object} A proxy object\r\n   */\r\n  exports.from = (obj) => {\r\n    return {\r\n      getJSON: (path, defaultValue) => {\r\n        return exports.getJSON(obj, path, defaultValue);\r\n      },\r\n      setJSON: (path, value, opts) => {\r\n        return exports.setJSON(obj, path, value, opts);\r\n      }\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Resolves the given path in JSON object and returns value\r\n   *\r\n   * @example .getJSON({foo: {bar: 'baz'}}, 'foo.bar') => 'baz'\r\n   *\r\n   * @param {Object}  json          The JSON object\r\n   * @param {String}  [path=null]   The path to seek. If empty, the entire tree is returned\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function getJSON\r\n   * @return {Mixed} Result for the path\r\n   */\r\n  exports.getJSON = (json, path, defaultValue) => {\r\n    if ( typeof path === 'string' ) {\r\n      let result = null;\r\n      let ns = json;\r\n\r\n      path.split(/\\./).forEach((k, i, queue) => {\r\n        if ( i >= queue.length - 1 ) {\r\n          result = ns[k];\r\n        } else {\r\n          ns = ns[k];\r\n        }\r\n      });\r\n\r\n      return typeof result === 'undefined' ? defaultValue : result;\r\n    }\r\n\r\n    return json;\r\n  };\r\n\r\n\r\n  /**\r\n   * Resolves the given path in JSON object and returns value\r\n   *\r\n   * @example .setJSON({foo: {bar: 'baz'}}, 'foo.bar', 'jazz') => {foo: {bar: 'jazz'}}\r\n   *\r\n   * @param {Object}          json                      The JSON object\r\n   * @param {String}          path                      The path to seek. If you set this as 'null' you can define the value as a tree\r\n   * @param {Mixed}           value                     The value to set on the path\r\n   * @param {Object}          [options]                 A set of options\r\n   * @param {Boolean}         [options.prune=false]     Remove 'null' from the tree (this also prunes empty objects)\r\n   * @param {Boolean}         [options.guess=false]     Try to guess what kind of type this value is\r\n   *\r\n   * @memberof simplejsonconf\r\n   * @function setJSON\r\n   * @return {Object} The new JSON object\r\n   */\r\n  exports.setJSON = (() => {\r\n\r\n    function removeNulls(obj) {\r\n      const isArray = obj instanceof Array;\r\n\r\n      for ( let k in obj ) {\r\n        if ( obj[k] === null ) {\r\n          if ( isArray ) {\r\n            obj.splice(k, 1);\r\n          } else {\r\n            delete obj[k];\r\n          }\r\n        } else if ( typeof obj[k] === 'object') {\r\n          removeNulls(obj[k]);\r\n        }\r\n      }\r\n    }\r\n\r\n    function getNewTree(key, value) {\r\n      const queue = key.split(/\\./);\r\n\r\n      let resulted = {};\r\n      let ns = resulted;\r\n\r\n      queue.forEach((k, i) => {\r\n        if ( i >= queue.length - 1 ) {\r\n          ns[k] = value;\r\n        } else {\r\n          if ( typeof ns[k] === 'undefined' ) {\r\n            ns[k] = {};\r\n          }\r\n          ns = ns[k];\r\n        }\r\n      });\r\n\r\n      return resulted;\r\n    }\r\n\r\n    function guessValue(value) {\r\n      try {\r\n        return JSON.parse(value);\r\n      } catch ( e ) {}\r\n      return String(value);\r\n    }\r\n\r\n    return function(json, path, value, opts) {\r\n      const isTree = !path;\r\n      const options = Object.assign({\r\n        prune: false,\r\n        guess: false,\r\n        value: null,\r\n      }, opts || {});\r\n\r\n      if ( !isTree && options.guess ) {\r\n        value = guessValue(value);\r\n      }\r\n\r\n      let newTree = isTree ? value : getNewTree(path, value);\r\n      let result = mergeDeep(json, newTree);\r\n\r\n      if ( options.prune ) {\r\n        removeNulls(result);\r\n      }\r\n\r\n      return result;\r\n    };\r\n  })();\r\n\r\nreturn exports;\r\n\r\n});\ndefine('skylark-osjsv2-client/core/config',['../helpers/simplejsonconf'], function (SimpleJSON) {\n    'use strict';\n    function getConfig(path, defaultValue) {\n        const config = OSjs.getConfig();\n        if (!path) {\n            return config;\n        }\n        const result = SimpleJSON.getJSON(config, path, defaultValue);\n        return typeof result === 'object' && !(result instanceof Array) ? Object.assign({}, result) : result;\n    }\n    function getDefaultPath(fallback) {\n        if (fallback && fallback.match(/^\\//)) {\n            fallback = null;\n        }\n        return getConfig('VFS.Home') || fallback || getConfig('VFS.Dist');\n    }\n    function getBrowserPath(app) {\n        let str = getConfig('Connection.RootURI');\n        if (typeof app === 'string') {\n            str = str.replace(/\\/?$/, app.replace(/^\\/?/, '/'));\n        }\n        return str;\n    }\n    function getUserLocale() {\n        const loc = (window.navigator.userLanguage || window.navigator.language || 'en-EN').replace('-', '_');\n        const map = {\n            'nb': 'no_NO',\n            'es': 'es_ES',\n            'ru': 'ru_RU',\n            'en': 'en_EN'\n        };\n        const major = loc.split('_')[0] || 'en';\n        const minor = loc.split('_')[1] || major.toUpperCase();\n        if (map[major]) {\n            return map[major];\n        }\n        return major + '_' + minor;\n    }\n    return {\n        getConfig: getConfig,\n        getDefaultPath: getDefaultPath,\n        getBrowserPath: getBrowserPath,\n        getUserLocale: getUserLocale\n    };\n});\ndefine('skylark-osjsv2-client/core/connection',[\n    'skylark-axios',\n    '../helpers/event-handler',\n    '../helpers/loader',\n    './config'\n], function (axios, EventHandler, Loader, a) {\n    'use strict';\n    function progressHandler(ev, onprogress) {\n        if (ev.lengthComputable) {\n            onprogress(ev, ev.loaded / ev.total);\n        } else {\n            onprogress(ev, -1);\n        }\n    }\n    function appendRequestOptions(data, options) {\n        options = options || {};\n        const onprogress = options.onprogress || function () {\n        };\n        const ignore = [\n            'onsuccess',\n            'onerror',\n            'onprogress',\n            'oncanceled'\n        ];\n        Object.keys(options).forEach(key => {\n            if (ignore.indexOf(key) === -1) {\n                data[key] = options[key];\n            }\n        });\n        data.onUploadProgress = ev => progressHandler(ev, onprogress);\n        data.onDownloadProgress = ev => progressHandler(ev, onprogress);\n        return data;\n    }\n    let _instance;\n    return class Connection {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            if (!_instance) {\n                _instance = this;\n            }\n            this.offline = false;\n            this.index = 0;\n            this._evHandler = new EventHandler(name, []);\n            this.onlineFn = () => this.onOnline();\n            this.offlineFn = () => this.onOffline();\n        }\n        init() {\n            if (typeof navigator.onLine !== 'undefined') {\n                window.addEventListener('offline', this.offlineFn);\n                window.addEventListener('online', this.onlineFn);\n            }\n            return Promise.resolve();\n        }\n        destroy() {\n            window.removeEventListener('offline', this.offlineFn);\n            window.removeEventListener('online', this.onlineFn);\n            if (this._evHandler) {\n                this._evHandler = this._evHandler.destroy();\n            }\n            _instance = null;\n        }\n        getVFSPath(item, options) {\n            options = options || {};\n            const base = a.getConfig('Connection.RootURI', '/').replace(/\\/?$/, '/');\n            const defaultDist = a.getConfig('VFS.Dist');\n            if (window.location.protocol === 'file:') {\n                return item ? base + item.path.substr(defaultDist.length) : base;\n            }\n            let url = a.getConfig('Connection.FSURI', '/');\n            if (item) {\n                url += '/read';\n                options.path = item.path;\n            } else {\n                url += '/upload';\n            }\n            if (options) {\n                const q = Object.keys(options).map(k => {\n                    return k + '=' + encodeURIComponent(options[k]);\n                });\n                if (q.length) {\n                    url += '?' + q.join('&');\n                }\n            }\n            return url;\n        }\n        isOnline() {\n            return !this.offline;\n        }\n        isOffline() {\n            return this.offline;\n        }\n        onVFSRequestCompleted(mount, method, args, response, appRef) {\n            return Promise.resolve(true);\n        }\n        onOnline() {\n            console.warn('Connection::onOnline()', 'Going online...');\n            this.offline = false;\n            if (this._evHandler) {\n                this._evHandler.emit('online');\n            }\n        }\n        onOffline(reconnecting) {\n            console.warn('Connection::onOffline()', 'Going offline...');\n            if (!this.offline && this._evHandler) {\n                this._evHandler.emit('offline', [reconnecting]);\n            }\n            this.offline = true;\n        }\n        createRequest(method, args, options) {\n            args = args || {};\n            options = options || {};\n            if (this.offline) {\n                return Promise.reject(new Error('You are currently off-line and cannot perform this operation!'));\n            }\n            const {raw, requestOptions} = this.createRequestOptions(method, args);\n            return new Promise((resolve, reject) => {\n                axios(appendRequestOptions(requestOptions, options)).then(result => {\n                    return resolve(raw ? result.data : {\n                        error: false,\n                        result: result.data\n                    });\n                }).catch(error => {\n                    reject(new Error(error.message || error));\n                });\n            });\n        }\n        createRequestOptions(method, args) {\n            const realMethod = method.replace(/^FS:/, '');\n            let raw = true;\n            let requestOptions = {\n                responseType: 'json',\n                url: a.getConfig('Connection.APIURI') + '/' + realMethod,\n                method: 'POST',\n                data: args\n            };\n            if (method.match(/^FS:/)) {\n                if (realMethod === 'get') {\n                    requestOptions.responseType = 'arraybuffer';\n                    requestOptions.url = args.url || this.getVFSPath({ path: args.path });\n                    requestOptions.method = args.method || 'GET';\n                    raw = false;\n                } else if (realMethod === 'upload') {\n                    requestOptions.url = this.getVFSPath();\n                } else {\n                    requestOptions.url = a.getConfig('Connection.FSURI') + '/' + realMethod;\n                }\n            }\n            return {\n                raw,\n                requestOptions\n            };\n        }\n        subscribe(k, func) {\n            return this._evHandler.on(k, func, this);\n        }\n        unsubscribe(k, idx) {\n            return this._evHandler.off(k, idx);\n        }\n        static request(m, a, options) {\n            a = a || {};\n            options = options || {};\n            if (options && typeof options !== 'object') {\n                return Promise.reject(new TypeError('request() expects an object as options'));\n            }\n            Loader.create('Connection.request');\n            if (typeof options.indicator !== 'undefined') {\n                delete options.indicator;\n            }\n            return new Promise((resolve, reject) => {\n                this.instance.createRequest(m, a, options).then(response => {\n                    if (response.error) {\n                        return reject(new Error(response.error));\n                    }\n                    return resolve(response.result);\n                }).catch(err => {\n                    reject(new Error(err));\n                }).finally(() => {\n                    Loader.destroy('Connection.request');\n                });\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage',[\n    './connection',\n], function (Connection) {\n    'use strict';\n    let _instance;\n    return class Storage {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            _instance = this;\n            this.saveTimeout = null;\n        }\n        init() {\n            return Promise.resolve();\n        }\n        destroy() {\n            _instance = null;\n        }\n        saveSettings(pool, storage) {\n            clearTimeout(this.saveTimeout);\n            return new Promise((resolve, reject) => {\n                this.saveTimeout = setTimeout(() => {\n                    Connection.request('settings', {\n                        pool: pool,\n                        settings: Object.assign({}, storage)\n                    }).then(resolve).catch(reject);\n                    clearTimeout(this.saveTimeout);\n                }, 250);\n            });\n        }\n        saveSession(Process,SettingsManager) { // modified by lwf\n            return new Promise((resolve, reject) => {\n                const data = Process.getProcesses().filter(proc => typeof proc._getSessionData === 'function').map(proc => proc._getSessionData());\n                SettingsManager.set('UserSession', null, data, (err, res) => {\n                    return err ? reject(err) : resolve(res);\n                });\n            });\n        }\n        getLastSession(SettingsManager) { // modified by lwf\n            const res = SettingsManager.get('UserSession');\n            const list = (res || []).map(iter => {\n                const args = iter.args;\n                args.__resume__ = true;\n                args.__windows__ = iter.windows || [];\n                return {\n                    name: iter.name,\n                    args\n                };\n            });\n            return Promise.resolve(list);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/settings-fragment',['../utils/misc'], function (a) {\n    'use strict';\n    return class SettingsFragment {\n        constructor(obj, poolName, sm) {\n            this._sm = sm;\n            this._pool = poolName;\n            if (obj.constructor !== {}.constructor) {\n                if (!(obj instanceof Array)) {\n                    throw new Error('SettingsFragment will not work unless you give it a object to manage.');\n                }\n            }\n            this._settings = obj;\n        }\n        get(key, defaultValue) {\n            const ret = key ? this._settings[key] : this._settings;\n            return typeof ret === 'undefined' ? defaultValue : ret;\n        }\n        set(key, value, save, triggerWatch) {\n            if (key === null) {\n                a.mergeObject(this._settings, value);\n            } else {\n                if ([\n                        'number',\n                        'string'\n                    ].indexOf(typeof key) >= 0) {\n                    this._settings[key] = value;\n                } else {\n                    console.warn('SettingsFragment::set()', 'expects key to be a valid iter, not', key);\n                }\n            }\n            if (save) {\n                this._sm.save(this._pool, save);\n            }\n            if (typeof triggerWatch === 'undefined' || triggerWatch === true) {\n                this._sm.changed(this._pool);\n            }\n            return this;\n        }\n        save(callback) {\n            return this._sm.save(this._pool, callback);\n        }\n        getChained() {\n            let nestedSetting = this._settings;\n            arguments.every(function (key) {\n                if (nestedSetting[key]) {\n                    nestedSetting = nestedSetting[key];\n                    return true;\n                }\n                return false;\n            });\n            return nestedSetting;\n        }\n        mergeDefaults(defaults) {\n            a.mergeObject(this._settings, defaults, { overwrite: false });\n            return this;\n        }\n        instance(key) {\n            if (typeof this._settings[key] === 'undefined') {\n                throw new Error(\"The object doesn't contain that key. SettingsFragment will not work.\");\n            }\n            return new SettingsFragment(this._settings[key], this._pool, this._sm);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/settings-manager',[\n    './storage',\n    '../helpers/settings-fragment'\n], function (Storage, SettingsFragment) {\n    'use strict';\n    class SettingsManager {\n        constructor() {\n            this.storage = {};\n            this.defaultSettings = {};\n            this.watches = [];\n        }\n        init(settings) {\n            this.storage = settings || {};\n            return Promise.resolve();\n        }\n        get(pool, key) {\n            try {\n                if (this.storage[pool] && Object.keys(this.storage[pool]).length) {\n                    return key ? this.storage[pool][key] : this.storage[pool];\n                }\n                return key ? this.defaultSettings[pool][key] : this.defaultSettings[pool];\n            } catch (e) {\n                console.warn('SettingsManager::get()', 'exception', e, e.stack);\n            }\n            return false;\n        }\n        set(pool, key, value, save, triggerWatch) {\n            let promise = Promise.resolve(true);\n            try {\n                if (key) {\n                    if (typeof this.storage[pool] === 'undefined') {\n                        this.storage[pool] = {};\n                    }\n                    if ([\n                            'number',\n                            'string'\n                        ].indexOf(typeof key) >= 0) {\n                        this.storage[pool][key] = value;\n                    } else {\n                        console.warn('SettingsManager::set()', 'expects key to be a valid iter, not', key);\n                    }\n                } else {\n                    this.storage[pool] = value;\n                }\n            } catch (e) {\n                console.warn('SettingsManager::set()', 'exception', e, e.stack);\n            }\n            if (save) {\n                promise = this.save(pool);\n                if (typeof save === 'function') {\n                    console.warn('Using a callback is deprecated, you should use the returned promise');\n                    promise.then(res => save(false, res)).catch(err => save(err, false));\n                }\n            }\n            if (typeof triggerWatch === 'undefined' || triggerWatch === true) {\n                this.changed(pool);\n            }\n            return promise;\n        }\n        save(pool) {\n            console.debug('SettingsManager::save()', pool, this.storage);\n            const saveableStorage = {};\n            Object.keys(this.storage).filter(n => {\n                return !n.match(/^__/);\n            }).forEach(n => {\n                saveableStorage[n] = this.storage[n];\n            });\n            return Storage.instance.saveSettings(pool, saveableStorage);\n        }\n        defaults(pool, defaults) {\n            this.defaultSettings[pool] = defaults;\n        }\n        instance(pool, defaults) {\n            if (!this.storage[pool] || this.storage[pool] instanceof Array) {\n                this.storage[pool] = {};\n            }\n            const instance = new SettingsFragment(this.storage[pool], pool, this);\n            if (arguments.length > 1) {\n                this.defaults(pool, defaults);\n                instance.mergeDefaults(defaults);\n            }\n            return instance;\n        }\n        unwatch(index) {\n            if (typeof this.watches[index] !== 'undefined') {\n                delete this.watches[index];\n            }\n        }\n        watch(pool, callback) {\n            if (!this.storage[pool]) {\n                return false;\n            }\n            const index = this.watches.push({\n                pool: pool,\n                callback: callback\n            });\n            return index - 1;\n        }\n        changed(pool) {\n            this.watches.forEach(watch => {\n                if (watch && watch.pool === pool) {\n                    watch.callback(this.storage[pool]);\n                }\n            });\n            return this;\n        }\n        clear(pool, save) {\n            save = typeof save === 'undefined' || save === true;\n            this.set(pool, null, {}, save);\n            return this;\n        }\n    }\n    return new SettingsManager();\n});\ndefine('utils/misc',[],function () {\n    'use strict';\n    function format(format) {\n        const args = Array.prototype.slice.call(arguments, 1);\n        const sprintfRegex = /\\{(\\d+)\\}/g;\n        function sprintf(match, number) {\n            return number in args ? args[number] : match;\n        }\n        return format.replace(sprintfRegex, sprintf);\n    }\n    function parseurl(url, modify) {\n        modify = modify || {};\n        if (!url.match(/^(\\w+\\:)\\/\\//)) {\n            url = '//' + url;\n        }\n        const protocol = url.split(/^(\\w+\\:)?\\/\\//);\n        const splitted = (() => {\n            const tmp = protocol[2].replace(/^\\/\\//, '').split('/');\n            return {\n                proto: (modify.protocol || protocol[1] || window.location.protocol || '').replace(/\\:$/, ''),\n                host: modify.host || tmp.shift(),\n                path: modify.path || '/' + tmp.join('/')\n            };\n        })();\n        function _parts() {\n            const parts = [\n                splitted.proto,\n                '://'\n            ];\n            if (modify.username) {\n                const authstr = String(modify.username) + ':' + String(modify.password);\n                parts.push(authstr);\n                parts.push('@');\n            }\n            parts.push(splitted.host);\n            parts.push(splitted.path);\n            return parts.join('');\n        }\n        return {\n            protocol: splitted.proto,\n            host: splitted.host,\n            path: splitted.path,\n            url: _parts()\n        };\n    }\n    function urlparams(search, hash) {\n        let hashes = search.slice(search.indexOf(hash ? '#' : '?') + 1).split('&');\n        return hashes.reduce((params, hash) => {\n            let [key, val] = hash.split('=');\n            return Object.assign(params, { [key]: decodeURIComponent(val) });\n        }, {});\n    }\n    function argumentDefaults(args, defaults, undef) {\n        args = args || {};\n        Object.keys(defaults).forEach(key => {\n            if (typeof defaults[key] === 'boolean' || typeof defaults[key] === 'number') {\n                if (typeof args[key] === 'undefined' || args[key] === null) {\n                    args[key] = defaults[key];\n                }\n            } else {\n                args[key] = args[key] || defaults[key];\n            }\n        });\n        return args;\n    }\n    function mergeObject(obj1, obj2, opts) {\n        opts = opts || {};\n        for (let p in obj2) {\n            if (obj2.hasOwnProperty(p)) {\n                try {\n                    if (opts.overwrite === false && obj1.hasOwnProperty(p)) {\n                        continue;\n                    }\n                    if (obj2[p].constructor === Object) {\n                        obj1[p] = mergeObject(obj1[p], obj2[p]);\n                    } else {\n                        obj1[p] = obj2[p];\n                    }\n                } catch (e) {\n                    obj1[p] = obj2[p];\n                }\n            }\n        }\n        return obj1;\n    }\n    function cloneObject(o, alternative) {\n        function _clone(i) {\n            if (typeof i !== 'object' || i === null) {\n                return i;\n            } else if (i instanceof Array) {\n                return i.map(_clone);\n            }\n            const iter = {};\n            Object.keys(i).forEach(k => {\n                iter[k] = _clone(i[k]);\n            });\n            return iter;\n        }\n        if (alternative) {\n            return _clone(o);\n        }\n        return JSON.parse(JSON.stringify(o, (key, value) => {\n            if (value && typeof value === 'object' && value.tagName) {\n                return window.undefined;\n            }\n            return value;\n        }));\n    }\n    return {\n        format: format,\n        parseurl: parseurl,\n        urlparams: urlparams,\n        argumentDefaults: argumentDefaults,\n        mergeObject: mergeObject,\n        cloneObject: cloneObject\n    };\n});\ndefine('skylark-osjsv2-client/utils/fs',['utils/misc'], function (Utils) {\n    'use strict';\n    function getPathFromVirtual(str) {\n        str = str || '';\n        const res = str.split(/([A-z0-9\\-_]+)\\:\\/\\/(.*)/)[2] || '';\n        return res.replace(/^\\/?/, '/');\n    }\n    function getPathProtocol(orig) {\n        const tmp = document.createElement('a');\n        tmp.href = orig;\n        return tmp.protocol.replace(/:$/, '');\n    }\n    function filename(p) {\n        return (p || '').replace(/\\/$/, '').split('/').pop();\n    }\n    function filext(d) {\n        const ext = filename(d).split('.').pop();\n        return ext ? ext.toLowerCase() : null;\n    }\n    function dirname(f) {\n        function _parentDir(p) {\n            const pstr = p.split(/^(.*)\\:\\/\\/(.*)/).filter(function (n) {\n                return n !== '';\n            });\n            const args = pstr.pop();\n            const prot = pstr.pop();\n            let result = '';\n            const tmp = args.split('/').filter(function (n) {\n                return n !== '';\n            });\n            if (tmp.length) {\n                tmp.pop();\n            }\n            result = tmp.join('/');\n            if (!result.match(/^\\//)) {\n                result = '/' + result;\n            }\n            if (prot) {\n                result = prot + '://' + result;\n            }\n            return result;\n        }\n        return f.match(/^((.*)\\:\\/\\/)?\\/$/) ? f : _parentDir(f.replace(/\\/$/, ''));\n    }\n    function humanFileSize(bytes, si) {\n        const units = si ? [\n            'kB',\n            'MB',\n            'GB',\n            'TB',\n            'PB',\n            'EB',\n            'ZB',\n            'YB'\n        ] : [\n            'KiB',\n            'MiB',\n            'GiB',\n            'TiB',\n            'PiB',\n            'EiB',\n            'ZiB',\n            'YiB'\n        ];\n        const thresh = si ? 1000 : 1024;\n        if (bytes < thresh) {\n            return bytes + ' B';\n        }\n        let u = -1;\n        do {\n            bytes /= thresh;\n            ++u;\n        } while (bytes >= thresh);\n        return bytes.toFixed(1) + ' ' + units[u];\n    }\n    function escapeFilename(n) {\n        return (n || '').replace(/[\\|&;\\$%@\"<>\\(\\)\\+,\\*\\/]/g, '').trim();\n    }\n    function replaceFileExtension(filename, rep) {\n        const spl = filename.split('.');\n        spl.pop();\n        spl.push(rep);\n        return spl.join('.');\n    }\n    function replaceFilename(orig, newname) {\n        const spl = orig.split('/');\n        spl.pop();\n        spl.push(newname);\n        return spl.join('/');\n    }\n    function pathJoin() {\n        let parts = [];\n        let prefix = '';\n        function getPart(s) {\n            if (s.match(/^([A-z0-9\\-_]+)\\:\\//)) {\n                const spl = s.split(/^([A-z0-9\\-_]+)\\:\\//);\n                if (!prefix) {\n                    prefix = spl[1] + '://';\n                }\n                s = spl[2] || '';\n            }\n            s = s.replace(/^\\/+/, '').replace(/\\/+$/, '');\n            return s.split('/').filter(function (i) {\n                return [\n                    '',\n                    '.',\n                    '..'\n                ].indexOf(i) === -1;\n            }).join('/');\n        }\n        for (let i = 0; i < arguments.length; i++) {\n            const str = getPart(String(arguments[i]));\n            if (str) {\n                parts.push(str);\n            }\n        }\n        return prefix + parts.join('/').replace(/^\\/?/, '/');\n    }\n    function getFilenameRange(val) {\n        val = val || '';\n        const range = {\n            min: 0,\n            max: val.length\n        };\n        if (val.match(/^\\./)) {\n            if (val.length >= 2) {\n                range.min = 1;\n            }\n        } else {\n            if (val.match(/\\.(\\w+)$/)) {\n                const m = val.split(/\\.(\\w+)$/);\n                for (let i = m.length - 1; i >= 0; i--) {\n                    if (m[i].length) {\n                        range.max = val.length - m[i].length - 1;\n                        break;\n                    }\n                }\n            }\n        }\n        return range;\n    }\n    function btoaUrlsafe(str) {\n        return !str || !str.length ? '' : btoa(str).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n    }\n    function atobUrlsafe(str) {\n        if (str && str.length) {\n            str = (str + '===').slice(0, str.length + str.length % 4);\n            return atob(str.replace(/-/g, '+').replace(/_/g, '/'));\n        }\n        return '';\n    }\n    function btoaUtf(str) {\n        const _unescape = window.unescape || function (s) {\n            function d(x, n) {\n                return String.fromCharCode(parseInt(n, 16));\n            }\n            return s.replace(/%([0-9A-F]{2})/i, d);\n        };\n        str = _unescape(encodeURIComponent(str));\n        return btoa(str);\n    }\n    function atobUtf(str) {\n        const _escape = window.escape || function (s) {\n            function q(c) {\n                c = c.charCodeAt();\n                return '%' + (c < 16 ? '0' : '') + c.toString(16).toUpperCase();\n            }\n            return s.replace(/[\\x00-),:-?[-^`{-\\xFF]/g, q);\n        };\n        const trans = _escape(atob(str));\n        return decodeURIComponent(trans);\n    }\n    function checkAcceptMime(mime, list) {\n        if (mime && list.length) {\n            let re;\n            for (let i = 0; i < list.length; i++) {\n                re = new RegExp(list[i]);\n                if (re.test(mime) === true) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    function filterScandir(list, options, defaultOptions) {\n        defaultOptions = Utils.cloneObject(defaultOptions || {});\n        const ioptions = Utils.cloneObject(options, true);\n        let ooptions = Object.assign({}, defaultOptions.scandir || {}, ioptions);\n        ooptions = Object.assign({}, {\n            sortBy: null,\n            sortDir: 'asc',\n            typeFilter: null,\n            mimeFilter: [],\n            showHiddenFiles: true\n        }, ooptions);\n        function filterFile(iter) {\n            if (ooptions.typeFilter && iter.type !== ooptions.typeFilter || !ooptions.showHiddenFiles && iter.filename.match(/^\\.\\w/)) {\n                return false;\n            }\n            return true;\n        }\n        function validMime(iter) {\n            if (ooptions.mimeFilter && ooptions.mimeFilter.length && iter.mime) {\n                return ooptions.mimeFilter.some(function (miter) {\n                    if (iter.mime.match(miter)) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return true;\n        }\n        const result = list.filter(function (iter) {\n            if (iter.filename === '..' || !filterFile(iter)) {\n                return false;\n            }\n            if (iter.type === 'file' && !validMime(iter)) {\n                return false;\n            }\n            return true;\n        }).map(function (iter) {\n            if (iter.mime === 'application/vnd.google-apps.folder') {\n                iter.type = 'dir';\n            }\n            return iter;\n        });\n        const sb = ooptions.sortBy;\n        const types = {\n            mtime: 'date',\n            ctime: 'date'\n        };\n        if ([\n                'filename',\n                'size',\n                'mime',\n                'ctime',\n                'mtime'\n            ].indexOf(sb) !== -1) {\n            if (types[sb] === 'date') {\n                result.sort(function (a, b) {\n                    a = new Date(a[sb]);\n                    b = new Date(b[sb]);\n                    return a > b ? 1 : b > a ? -1 : 0;\n                });\n            } else {\n                if (sb === 'size' || !String.prototype.localeCompare) {\n                    result.sort(function (a, b) {\n                        return a[sb] > b[sb] ? 1 : b[sb] > a[sb] ? -1 : 0;\n                    });\n                } else {\n                    result.sort(function (a, b) {\n                        return String(a[sb]).localeCompare(String(b[sb]));\n                    });\n                }\n            }\n            if (ooptions.sortDir === 'desc') {\n                result.reverse();\n            }\n        }\n        return result.filter(function (iter) {\n            return iter.type === 'dir';\n        }).concat(result.filter(function (iter) {\n            return iter.type !== 'dir';\n        }));\n    }\n    function _abToSomething(m, arrayBuffer, mime, callback) {\n        mime = mime || 'application/octet-stream';\n        try {\n            const blob = new Blob([arrayBuffer], { type: mime });\n            const r = new FileReader();\n            r.onerror = function (e) {\n                callback(e);\n            };\n            r.onloadend = function () {\n                callback(false, r.result);\n            };\n            r[m](blob);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    function addFormFile(fd, key, data, file) {\n        file = file || {\n            mime: 'application/octet-stream',\n            filename: 'filename'\n        };\n        if (data instanceof window.File) {\n            fd.append(key, data);\n        } else if (data instanceof window.ArrayBuffer) {\n            try {\n                data = new Blob([data], { type: file.mime });\n            } catch (e) {\n                data = null;\n                console.warn(e, e.stack);\n            }\n            fd.append(key, data, file.filename);\n        } else {\n            if (data.data && data.filename) {\n                fd.append(key, data.data, data.filename);\n            }\n        }\n    }\n    function dataSourceToAb(data, mime, callback) {\n        const byteString = atob(data.split(',')[1]);\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n        for (let i = 0; i < byteString.length; i++) {\n            ia[i] = byteString.charCodeAt(i);\n        }\n        callback(false, ab);\n    }\n    function textToAb(data, mime, callback) {\n        _abToSomething('readAsArrayBuffer', data, mime, callback);\n    }\n    function abToDataSource(arrayBuffer, mime, callback) {\n        _abToSomething('readAsDataURL', arrayBuffer, mime, callback);\n    }\n    function abToText(arrayBuffer, mime, callback) {\n        _abToSomething('readAsText', arrayBuffer, mime, callback);\n    }\n    function abToBinaryString(arrayBuffer, mime, callback) {\n        _abToSomething('readAsBinaryString', arrayBuffer, mime, callback);\n    }\n    function abToBlob(arrayBuffer, mime, callback) {\n        mime = mime || 'application/octet-stream';\n        try {\n            const blob = new Blob([arrayBuffer], { type: mime });\n            callback(false, blob);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    function blobToAb(data, callback) {\n        try {\n            const r = new FileReader();\n            r.onerror = function (e) {\n                callback(e);\n            };\n            r.onloadend = function () {\n                callback(false, r.result);\n            };\n            r.readAsArrayBuffer(data);\n        } catch (e) {\n            console.warn(e, e.stack);\n            callback(e);\n        }\n    }\n    return {\n        getPathFromVirtual: getPathFromVirtual,\n        getPathProtocol: getPathProtocol,\n        filename: filename,\n        filext: filext,\n        dirname: dirname,\n        humanFileSize: humanFileSize,\n        escapeFilename: escapeFilename,\n        replaceFileExtension: replaceFileExtension,\n        replaceFilename: replaceFilename,\n        pathJoin: pathJoin,\n        getFilenameRange: getFilenameRange,\n        btoaUrlsafe: btoaUrlsafe,\n        atobUrlsafe: atobUrlsafe,\n        btoaUtf: btoaUtf,\n        atobUtf: atobUtf,\n        checkAcceptMime: checkAcceptMime,\n        filterScandir: filterScandir,\n        addFormFile: addFormFile,\n        dataSourceToAb: dataSourceToAb,\n        textToAb: textToAb,\n        abToDataSource: abToDataSource,\n        abToText: abToText,\n        abToBinaryString: abToBinaryString,\n        abToBlob: abToBlob,\n        blobToAb: blobToAb\n    };\n});\ndefine('skylark-osjsv2-client/vfs/file',[\n    '../utils/fs',\n    '../core/config',\n    '../core/locales'\n], function (FS, a, b) {\n    'use strict';\n    return class FileMetadata {\n        constructor(arg, mime) {\n            if (!arg) {\n                throw new Error(b._('ERR_VFS_FILE_ARGS'));\n            }\n            this.path = null;\n            this.filename = null;\n            this.type = null;\n            this.size = null;\n            this.mime = null;\n            this.id = null;\n            this.shortcut = false;\n            if (typeof arg === 'object') {\n                this.setData(arg);\n            } else if (typeof arg === 'string') {\n                this.path = arg;\n                this.setData();\n            }\n            if (typeof mime === 'string') {\n                if (mime.match(/\\//)) {\n                    this.mime = mime;\n                } else {\n                    this.type = mime;\n                }\n            }\n            this._guessMime();\n        }\n        setData(o) {\n            if (o) {\n                Object.keys(o).forEach(k => {\n                    if (k !== '_element') {\n                        this[k] = o[k];\n                    }\n                });\n            }\n            if (!this.filename) {\n                this.filename = FS.filename(this.path);\n            }\n        }\n        getData() {\n            return {\n                path: this.path,\n                filename: this.filename,\n                type: this.type,\n                size: this.size,\n                mime: this.mime,\n                id: this.id\n            };\n        }\n        _guessMime() {\n            if (this.mime || this.type === 'dir' || (!this.path || this.path.match(/\\/$/))) {\n                return;\n            }\n            const ext = FS.filext(this.path);\n            this.mime = a.getConfig('MIME.mapping')['.' + ext] || 'application/octet-stream';\n        }\n        static fromUpload(destination, f) {\n            return new FileMetadata({\n                filename: f.name,\n                path: (destination + '/' + f.name).replace(/\\/\\/\\/\\/+/, '///'),\n                mime: f.mime || 'application/octet-stream',\n                size: f.size\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/package-manager',[\n    './settings-manager',\n    '../utils/misc',\n    './locales',\n    './config',\n    '../utils/fs',\n    './connection'\n], function ( SettingsManager, misc, locales, config, FS, Connection) {\n    'use strict';\n    const resolvePreloads = (metadata, pm) => {\n        const packageURI = config.getConfig('Connection.PackageURI');\n        const mapIter = s => typeof s === 'string' ? { src: s } : s;\n        let additions = [];\n        let list = (metadata.preload || []).slice(0).map(mapIter);\n        if (metadata.depends instanceof Array) {\n            metadata.depends.forEach(k => {\n                if (!OSjs.Applications[k]) {\n                    const pkg = pm.getPackage(k);\n                    if (pkg) {\n                        console.info('Using dependency', k);\n                        additions = additions.concat(pkg.preload.map(mapIter));\n                    }\n                }\n            });\n        }\n        const pkgs = pm.getPackages(false); \n        Object.keys(pkgs).forEach(pn => {\n            const p = pkgs[pn];\n            if (p.type === 'extension' && p.uses === name) {\n                if (p) {\n                    console.info('Using extension', pn);\n                    additions = additions.concat(p.preload.map(mapIter));\n                }\n            }\n        });\n        return additions.concat(list).map(p => {\n            if (!p.src.match(/^(\\/|https?|ftp)/)) {\n                if (metadata.scope === 'user') {\n                    pm.VFS.url(FS.pathJoin(metadata.path, p.src)).then(url => {\n                        p.src = url;\n                        return true;\n                    });\n                } else {\n                    p.src = FS.pathJoin(packageURI, metadata.path, p.src);\n                }\n            }\n            return p;\n        });\n    };\n    class PackageManager {\n        constructor() { \n            this.packages = {};\n            this.blacklist = [];\n        }\n        destroy() {\n            this.packages = {};\n            this.blacklist = [];\n        }\n        init(Authenticator,VFS, metadata, isStandalone) { // modified by lwf\n            this.Authenticator = Authenticator;\n            this.VFS = VFS;\n            console.debug('PackageManager::load()', metadata);\n            return new Promise((resolve, reject) => {\n                const setPackages = metadata ? this.setPackages(metadata) : Promise.resolve();\n                setPackages.then(() => {\n                    if (isStandalone) {\n                        return resolve(true);\n                    }\n                    return this._loadMetadata().then(() => {\n                        const len = Object.keys(this.packages).length;\n                        if (len) {\n                            return resolve(true);\n                        }\n                        return reject(new Error(locales._('ERR_PACKAGE_ENUM_FAILED')));\n                    }).catch(reject);\n                }).catch(reject);\n            });\n        }\n        _loadMetadata() {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'list',\n                    args: { paths: paths }\n                }).then(res => {\n                    return this.setPackages(res).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        generateUserMetadata() {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            return new Promise((resolve, reject) => {\n                const cb = () => this._loadMetadata().then(resolve).catch(reject);\n                Connection.request('packages', {\n                    command: 'cache',\n                    args: {\n                        action: 'generate',\n                        scope: 'user',\n                        paths: paths\n                    }\n                }).then(cb).catch(cb);\n            });\n        }\n        _addPackages(result, scope) {\n            console.debug('PackageManager::_addPackages()', result);\n            const keys = Object.keys(result);\n            if (!keys.length) {\n                return;\n            }\n            const currLocale = locales.getLocale();\n            keys.forEach(i => {\n                const newIter = misc.cloneObject(result[i]);\n                if (typeof newIter !== 'object') {\n                    return;\n                }\n                if (typeof newIter.names !== 'undefined' && newIter.names[currLocale]) {\n                    newIter.name = newIter.names[currLocale];\n                }\n                if (typeof newIter.descriptions !== 'undefined' && newIter.descriptions[currLocale]) {\n                    newIter.description = newIter.descriptions[currLocale];\n                }\n                if (!newIter.description) {\n                    newIter.description = newIter.name;\n                }\n                newIter.scope = scope || 'system';\n                newIter.type = newIter.type || 'application';\n                this.packages[i] = newIter;\n            });\n        }\n        install(file, root) {\n            const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n            if (typeof root !== 'string') {\n                root = paths[0];\n            }\n            const dest = FS.pathJoin(root, file.filename.replace(/\\.zip$/i, ''));\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'install',\n                    args: {\n                        zip: file.path,\n                        dest: dest,\n                        paths: paths\n                    }\n                }).then(() => {\n                    return this.generateUserMetadata().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        uninstall(file) {\n            return new Promise((resolve, reject) => {\n                Connection.request('packages', {\n                    command: 'uninstall',\n                    args: { path: file.path }\n                }).then(() => {\n                    return this.generateUserMetadata().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        setBlacklist(list) {\n            this.blacklist = list || [];\n        }\n        getStorePackages(opts) {\n            const repos = SettingsManager.instance('PackageManager').get('Repositories', []);\n            let entries = [];\n            return new Promise((resolve, reject) => {\n                Promise.all(repos.map(url => {\n                    return new Promise((yes, no) => {\n                        Connection.request('curl', {\n                            url: url,\n                            method: 'GET'\n                        }).then(result => {\n                            let list = [];\n                            if (typeof result.body === 'string') {\n                                try {\n                                    list = JSON.parse(result.body);\n                                } catch (e) {\n                                }\n                            }\n                            entries = entries.concat(list.map(iter => {\n                                iter._repository = url;\n                                return iter;\n                            }));\n                            return yes();\n                        }).catch(no);\n                    });\n                })).then(() => resolve(entries)).catch(reject);\n            });\n        }\n        getPackage(name) {\n            if (typeof this.packages[name] !== 'undefined') {\n                return Object.freeze(misc.cloneObject(this.packages)[name]);\n            }\n            return false;\n        }\n        getPackages(filtered) {\n            const Authenticator = this.Authenticator;\n\n            const hidden = SettingsManager.instance('PackageManager').get('Hidden', []);\n            const p = misc.cloneObject(this.packages);\n            const allowed = iter => {\n                if (this.blacklist.indexOf(iter.path) >= 0) {\n                    return false;\n                }\n                if (iter && iter.groups instanceof Array) {\n                    if (!Authenticator.instance().checkPermission(iter.groups)) { // modified by lwf\n                        return false;\n                    }\n                }\n                return true;\n            };\n            if (typeof filtered === 'undefined' || filtered === true) {\n                const result = {};\n                Object.keys(p).forEach(name => {\n                    const iter = p[name];\n                    if (!allowed(iter)) {\n                        return;\n                    }\n                    if (iter && hidden.indexOf(name) < 0) {\n                        result[name] = iter;\n                    }\n                });\n                return Object.freeze(result);\n            }\n            return Object.freeze(p);\n        }\n        getPackagesByMime(mime) {\n            const list = [];\n            const p = misc.cloneObject(this.packages);\n            Object.keys(p).forEach(i => {\n                if (this.blacklist.indexOf(i) < 0) {\n                    const a = p[i];\n                    if (a && a.mime) {\n                        if (FS.checkAcceptMime(mime, a.mime)) {\n                            list.push(i);\n                        }\n                    }\n                }\n            });\n            return list;\n        }\n        getPackageResource(app, name, vfspath) {\n            if (name.match(/^((https?:)|\\.)?\\//)) {\n                return name;\n            }\n            name = name.replace(/^\\.\\//, '');\n            const appname = typeof app === 'string' ? app : app.__pname;\n            const fsuri = config.getConfig('Connection.FSURI');\n            const pkg = this.getPackage(appname);\n            let path = name;\n            if (pkg) {\n                path = pkg.scope === 'user' ? '/user-package/' + FS.filename(pkg.path) + '/' + name.replace(/^\\//, '') : 'packages/' + pkg.path + '/' + name;\n                if (vfspath) {\n                    return pkg.scope === 'user' ? path.substr(fsuri.length) : config.getConfig('VFS.Dist') + path;\n                }\n            }\n            return path;\n        }\n        setPackages(res) { \n            const packages = {};\n            const locale = locales.getLocale();\n            const checkEntry = (key, iter, scope) => {\n                iter = Object.assign({}, iter);\n                iter.type = iter.type || 'application';\n                if (scope) {\n                    iter.scope = scope;\n                }\n                if (iter.names && iter.names[locale]) {\n                    iter.name = iter.names[locale];\n                }\n                if (iter.descriptions && iter.descriptions[locale]) {\n                    iter.description = iter.descriptions[locale];\n                }\n                let resolveIcon = () => {\n                    if (iter.icon && iter.path) {\n                        let packagePath = iter.path.replace(/^\\//, '');\n                        if (iter.scope === 'user') {\n                            return this.VFS.url(FS.pathJoin(packagePath, iter.icon));\n                        } else {\n                            if (iter.icon.match(/^\\.\\//)) {\n                                const packageURI = config.getConfig('Connection.PackageURI').replace(/\\/?$/, '/');\n                                return Promise.resolve(packageURI + packagePath + iter.icon.replace(/^\\./, ''));\n                            }\n                        }\n                    }\n                    return Promise.resolve(iter.icon);\n                };\n                iter.preload = resolvePreloads(iter, this); \n                return new Promise((resolve, reject) => {\n                    resolveIcon().then(icon => {\n                        if (icon) {\n                            iter.icon = icon;\n                        }\n                        return resolve(iter);\n                    }).catch(reject);\n                });\n            };\n            return new Promise((resolve, reject) => {\n                const entries = Object.keys(res || {});\n                Promise.each(entries, key => {\n                    return new Promise((yes, no) => {\n                        const iter = res[key];\n                        if (iter && !packages[iter.className]) {\n                            checkEntry(key, iter).then(pkg => {\n                                packages[iter.className] = pkg;\n                                return yes();\n                            }).catch(no);\n                        } else {\n                            console.warn('No such package', key);\n                            yes();\n                        }\n                    });\n                }).catch(reject).then(() => {\n                    this.packages = packages;\n                    return resolve();\n                });\n            });\n        }\n    }\n    return new PackageManager();\n});\ndefine('skylark-osjsv2-client/utils/compability',[],function () {\n    'use strict';\n    const compability = function () {\n        function _checkSupport(enabled, check, isSupported) {\n            const supported = {};\n            Object.keys(check).forEach(key => {\n                let chk = check[key];\n                let value = false;\n                if (chk instanceof Array) {\n                    chk.forEach(c => {\n                        value = isSupported(c);\n                        return !value;\n                    });\n                } else {\n                    value = isSupported(chk);\n                }\n                supported[key] = value;\n            });\n            return supported;\n        }\n        function getUpload() {\n            try {\n                const xhr = new XMLHttpRequest();\n                return !!(xhr && 'upload' in xhr && 'onprogress' in xhr.upload);\n            } catch (e) {\n            }\n            return false;\n        }\n        function getCanvasSupported() {\n            return document.createElement('canvas').getContext ? document.createElement('canvas') : null;\n        }\n        function getVideoSupported() {\n            return document.createElement('video').canPlayType ? document.createElement('video') : null;\n        }\n        function canPlayCodec(support, check) {\n            return _checkSupport(support, check, codec => {\n                try {\n                    return !!support.canPlayType(codec);\n                } catch (e) {\n                }\n                return false;\n            });\n        }\n        function getVideoTypesSupported() {\n            return canPlayCodec(getVideoSupported(), {\n                webm: 'video/webm; codecs=\"vp8.0, vorbis\"',\n                ogg: 'video/ogg; codecs=\"theora\"',\n                h264: [\n                    'video/mp4; codecs=\"avc1.42E01E\"',\n                    'video/mp4; codecs=\"avc1.42E01E, mp4a.40.2\"'\n                ],\n                mpeg: 'video/mp4; codecs=\"mp4v.20.8\"',\n                mkv: 'video/x-matroska; codecs=\"theora, vorbis\"'\n            });\n        }\n        function getAudioSupported() {\n            return document.createElement('audio').canPlayType ? document.createElement('audio') : null;\n        }\n        function getAudioTypesSupported() {\n            return canPlayCodec(getAudioSupported(), {\n                ogg: 'audio/ogg; codecs=\"vorbis',\n                mp3: 'audio/mpeg',\n                wav: 'audio/wav; codecs=\"1\"'\n            });\n        }\n        function getAudioContext() {\n            if (window.hasOwnProperty('AudioContext') || window.hasOwnProperty('webkitAudioContext')) {\n                return true;\n            }\n            return false;\n        }\n        const getCanvasContexts = (() => {\n            const cache = [];\n            return () => {\n                if (!cache.length) {\n                    const canvas = getCanvasSupported();\n                    if (canvas) {\n                        const test = [\n                            '2d',\n                            'webgl',\n                            'experimental-webgl',\n                            'webkit-3d',\n                            'moz-webgl'\n                        ];\n                        test.forEach((tst, i) => {\n                            try {\n                                if (!!canvas.getContext(tst)) {\n                                    cache.push(tst);\n                                }\n                            } catch (eee) {\n                            }\n                        });\n                    }\n                }\n                return cache;\n            };\n        })();\n        function getWebGL() {\n            let result = false;\n            let contexts = getCanvasContexts();\n            try {\n                result = contexts.length > 1;\n                if (!result) {\n                    if ('WebGLRenderingContext' in window) {\n                        result = true;\n                    }\n                }\n            } catch (e) {\n            }\n            return result;\n        }\n        function detectCSSFeature(featurename) {\n            let feature = false;\n            let domPrefixes = 'Webkit Moz ms O'.split(' ');\n            let elm = document.createElement('div');\n            let featurenameCapital = null;\n            featurename = featurename.toLowerCase();\n            if (elm.style[featurename]) {\n                feature = true;\n            }\n            if (feature === false) {\n                featurenameCapital = featurename.charAt(0).toUpperCase() + featurename.substr(1);\n                for (let i = 0; i < domPrefixes.length; i++) {\n                    if (typeof elm.style[domPrefixes[i] + featurenameCapital] !== 'undefined') {\n                        feature = true;\n                        break;\n                    }\n                }\n            }\n            return feature;\n        }\n        function getUserMedia() {\n            let getMedia = false;\n            if (window.navigator) {\n                getMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n            }\n            return !!getMedia;\n        }\n        function getRichText() {\n            try {\n                return !!document.createElement('textarea').contentEditable;\n            } catch (e) {\n            }\n            return false;\n        }\n        function getTouch() {\n            try {\n                if (navigator.userAgent.match(/Windows NT 6\\.(2|3)/)) {\n                    return false;\n                }\n            } catch (e) {\n            }\n            try {\n                if (navigator.userAgent.match(/iOS|Android|BlackBerry|IEMobile|iPad|iPhone|iPad/i)) {\n                    return true;\n                }\n            } catch (e) {\n            }\n            return false;\n        }\n        function getDnD() {\n            return !!('draggable' in document.createElement('span'));\n        }\n        function getSVG() {\n            return !!document.createElementNS && !!document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect;\n        }\n        function getFileSystem() {\n            return 'requestFileSystem' in window || 'webkitRequestFileSystem' in window;\n        }\n        const checkWindow = {\n            indexedDB: 'indexedDB',\n            localStorage: 'localStorage',\n            sessionStorage: 'sessionStorage',\n            globalStorage: 'globalStorage',\n            openDatabase: 'openDatabase',\n            socket: 'WebSocket',\n            worker: 'Worker',\n            file: 'File',\n            blob: 'Blob',\n            orientation: 'onorientationchange'\n        };\n        const compability = {\n            touch: getTouch(),\n            upload: getUpload(),\n            getUserMedia: getUserMedia(),\n            fileSystem: getFileSystem(),\n            localStorage: false,\n            sessionStorage: false,\n            globalStorage: false,\n            openDatabase: false,\n            socket: false,\n            worker: false,\n            file: false,\n            blob: false,\n            orientation: false,\n            dnd: getDnD(),\n            css: {\n                transition: detectCSSFeature('transition'),\n                animation: detectCSSFeature('animation')\n            },\n            canvas: !!getCanvasSupported(),\n            canvasContext: getCanvasContexts(),\n            webgl: getWebGL(),\n            audioContext: getAudioContext(),\n            svg: getSVG(),\n            video: !!getVideoSupported(),\n            videoTypes: getVideoTypesSupported(),\n            audio: !!getAudioSupported(),\n            audioTypes: getAudioTypesSupported(),\n            richtext: getRichText()\n        };\n        Object.keys(checkWindow).forEach(key => {\n            try {\n                compability[key] = checkWindow[key] in window && window[checkWindow[key]] !== null;\n            } catch (e) {\n                console.warn(e);\n            }\n        });\n        return () => {\n            return compability;\n        };\n    }();\n    function getCompability() {\n        return compability();\n    }\n    function isIE() {\n        const dm = parseInt(document.documentMode, 10);\n        return dm <= 11 || !!navigator.userAgent.match(/(MSIE|Edge)/);\n    }\n    return {\n        getCompability: getCompability,\n        isIE: isIE\n    };\n});\ndefine('skylark-osjsv2-client/utils/dom',[],function () {\n    'use strict';\n    function $(id) {\n        return document.getElementById(id);\n    }\n    function $safeName(str) {\n        return (str || '').replace(/[^a-zA-Z0-9]/g, '_');\n    }\n    function $remove(node) {\n        if (node) {\n            if (typeof node.remove === 'function') {\n                node.remove();\n            } else if (node.parentNode) {\n                node.parentNode.removeChild(node);\n            }\n        }\n    }\n    function $empty(myNode) {\n        if (myNode) {\n            while (myNode.firstChild) {\n                myNode.removeChild(myNode.firstChild);\n            }\n        }\n    }\n    function $getStyle(oElm, strCssRule) {\n        let strValue = '';\n        if (document.defaultView && document.defaultView.getComputedStyle) {\n            strValue = document.defaultView.getComputedStyle(oElm, '').getPropertyValue(strCssRule);\n        } else if (oElm.currentStyle) {\n            strCssRule = strCssRule.replace(/\\-(\\w)/g, (strMatch, p1) => {\n                return p1.toUpperCase();\n            });\n            strValue = oElm.currentStyle[strCssRule];\n        }\n        return strValue;\n    }\n    function $position(el, parentEl) {\n        if (el) {\n            if (parentEl) {\n                const result = {\n                    left: 0,\n                    top: 0,\n                    width: el.offsetWidth,\n                    height: el.offsetHeight\n                };\n                while (true) {\n                    result.left += el.offsetLeft;\n                    result.top += el.offsetTop;\n                    if (el.offsetParent === parentEl || el.offsetParent === null) {\n                        break;\n                    }\n                    el = el.offsetParent;\n                }\n                return result;\n            }\n            return el.getBoundingClientRect();\n        }\n        return null;\n    }\n    function $parent(el, cb) {\n        let result = null;\n        if (el && cb) {\n            let current = el;\n            while (current.parentNode) {\n                if (cb(current)) {\n                    result = current;\n                    break;\n                }\n                current = current.parentNode;\n            }\n        }\n        return result;\n    }\n    function $index(el, parentEl) {\n        if (el) {\n            parentEl = parentEl || el.parentNode;\n            if (parentEl) {\n                const nodeList = Array.prototype.slice.call(parentEl.children);\n                const nodeIndex = nodeList.indexOf(el, parentEl);\n                return nodeIndex;\n            }\n        }\n        return -1;\n    }\n    function $selectRange(field, start, end) {\n        if (!field) {\n            throw new Error('Cannot select range: missing element');\n        }\n        if (typeof start === 'undefined' || typeof end === 'undefined') {\n            throw new Error('Cannot select range: mising start/end');\n        }\n        if (field.createTextRange) {\n            const selRange = field.createTextRange();\n            selRange.collapse(true);\n            selRange.moveStart('character', start);\n            selRange.moveEnd('character', end);\n            selRange.select();\n            field.focus();\n        } else if (field.setSelectionRange) {\n            field.focus();\n            field.setSelectionRange(start, end);\n        } else if (typeof field.selectionStart !== 'undefined') {\n            field.selectionStart = start;\n            field.selectionEnd = end;\n            field.focus();\n        }\n    }\n    function $addClass(el, name) {\n        if (el) {\n            name.split(' ').forEach(n => {\n                el.classList.add(n);\n            });\n        }\n    }\n    function $removeClass(el, name) {\n        if (el) {\n            name.split(' ').forEach(n => {\n                el.classList.remove(n);\n            });\n        }\n    }\n    function $hasClass(el, name) {\n        if (el && name) {\n            return name.split(' ').every(n => {\n                return el.classList.contains(n);\n            });\n        }\n        return false;\n    }\n    function $escape(str) {\n        const div = document.createElement('div');\n        div.appendChild(document.createTextNode(str));\n        return div.innerHTML;\n    }\n    function $create(tagName, properties) {\n        const element = document.createElement(tagName);\n        function _foreach(dict, l) {\n            dict = dict || {};\n            Object.keys(dict).forEach(name => {\n                l(name.replace(/_/g, '-'), String(dict[name]));\n            });\n        }\n        _foreach(properties.style, (key, val) => {\n            element.style[key] = val;\n        });\n        _foreach(properties.aria, (key, val) => {\n            if (['role'].indexOf(key) !== -1) {\n                key = 'aria-' + key;\n            }\n            element.setAttribute(key, val);\n        });\n        _foreach(properties.data, (key, val) => {\n            element.setAttribute('data-' + key, val);\n        });\n        _foreach(properties, (key, val) => {\n            if ([\n                    'style',\n                    'aria',\n                    'data'\n                ].indexOf(key) === -1) {\n                element[key] = val;\n            }\n        });\n        return element;\n    }\n    function $createCSS(src, onload, onerror) {\n        const link = document.createElement('link');\n        link.setAttribute('rel', 'stylesheet');\n        link.setAttribute('type', 'text/css');\n        link.onload = onload || function () {\n        };\n        link.onerror = onerror || function () {\n        };\n        link.setAttribute('href', src);\n        document.getElementsByTagName('head')[0].appendChild(link);\n        return link;\n    }\n    function $createJS(src, onreadystatechange, onload, onerror, attrs) {\n        const res = document.createElement('script');\n        res.onreadystatechange = onreadystatechange || function () {\n        };\n        res.onerror = onerror || function () {\n        };\n        res.onload = onload || function () {\n        };\n        attrs = Object.assign({}, {\n            type: 'text/javascript',\n            charset: 'utf-8',\n            src: src\n        }, attrs || {});\n        Object.keys(attrs).forEach(k => {\n            res[k] = String(attrs[k]);\n        });\n        document.getElementsByTagName('head')[0].appendChild(res);\n        return res;\n    }\n    function $isFormElement(input, types) {\n        types = types || [\n            'TEXTAREA',\n            'INPUT',\n            'SELECT'\n        ];\n        if (input instanceof window.Event) {\n            input = input.srcElement || input.target;\n        }\n        if (input instanceof window.Element) {\n            if (types.indexOf(input.tagName.toUpperCase()) >= 0) {\n                if (!(input.readOnly || input.disabled)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    function $css(el, ink, inv) {\n        function rep(k) {\n            return k.replace(/\\-(\\w)/g, (strMatch, p1) => {\n                return p1.toUpperCase();\n            });\n        }\n        let obj = {};\n        if (arguments.length === 2) {\n            if (typeof ink === 'string') {\n                return el.parentNode ? $getStyle(el, ink) : el.style[rep(ink)];\n            }\n            obj = ink;\n        } else if (arguments.length === 3) {\n            obj[ink] = inv;\n        }\n        Object.keys(obj).forEach(k => {\n            el.style[rep(k)] = String(obj[k]);\n        });\n        return null;\n    }\n    function $path(el) {\n        function _path(e) {\n            if (e === document.body) {\n                return e.tagName;\n            } else if (e === window) {\n                return 'WINDOW';\n            } else if (e === document) {\n                return 'DOCUMENT';\n            }\n            if (e.id !== '') {\n                return 'id(\"' + e.id + '\")';\n            }\n            let ix = 0;\n            const siblings = e.parentNode ? e.parentNode.childNodes : [];\n            for (let i = 0; i < siblings.length; i++) {\n                const sibling = siblings[i];\n                if (sibling === e) {\n                    return _path(e.parentNode) + '/' + e.tagName + '[' + (ix + 1) + ']';\n                }\n                if (sibling.nodeType === 1 && sibling.tagName === e.tagName) {\n                    ix++;\n                }\n            }\n            return null;\n        }\n        return _path(el);\n    }\n    function $fromPath(path, doc) {\n        doc = doc || document;\n        const evaluator = new XPathEvaluator();\n        const result = evaluator.evaluate(path, doc.documentElement, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);\n        return result.singleNodeValue;\n    }\n    function $clean(html) {\n        if (typeof html !== 'string') {\n            html = html.innerHTML;\n        }\n        return (html || '').replace(/\\n/g, '').replace(/[\\t ]+</g, '<').replace(/\\>[\\t ]+</g, '><').replace(/\\>[\\t ]+$/g, '>');\n    }\n    return {\n        $: $,\n        $safeName: $safeName,\n        $remove: $remove,\n        $empty: $empty,\n        $getStyle: $getStyle,\n        $position: $position,\n        $parent: $parent,\n        $index: $index,\n        $selectRange: $selectRange,\n        $addClass: $addClass,\n        $removeClass: $removeClass,\n        $hasClass: $hasClass,\n        $escape: $escape,\n        $create: $create,\n        $createCSS: $createCSS,\n        $createJS: $createJS,\n        $isFormElement: $isFormElement,\n        $css: $css,\n        $path: $path,\n        $fromPath: $fromPath,\n        $clean: $clean\n    };\n});\ndefine('skylark-osjsv2-client/core/theme',[\n    './settings-manager',\n    './config',\n    '../vfs/file',\n    './package-manager',\n    '../utils/fs',\n    '../utils/compability',\n    '../utils/dom'\n], function (SettingsManager, a, FileMetadata, PackageManager, FS, Compability, DOM) {\n    'use strict';\n    class Theme {\n        constructor() {\n            const compability = Compability.getCompability();\n            this.settings = null;\n            this.$themeScript = null;\n            this.audioAvailable = !!compability.audio;\n            this.oggAvailable = !!compability.audioTypes.ogg;\n        }\n        init(VFS) { // modified by lwf\n            this.VFS = VFS;\n\n            this.settings = SettingsManager.instance('__theme__', {\n                enableSounds: true,\n                styleTheme: 'default',\n                soundTheme: 'default',\n                iconTheme: 'default',\n                sounds: {}\n            });\n        }\n        update(settings, settheme) {\n            this.settings.set(null, settings);\n            if (settheme) {\n                this.setTheme(settings);\n            }\n        }\n        destroy() {\n            this.$themeScript = DOM.$remove(this.$themeScript);\n        }\n        themeAction(action, args) {\n            const theme = this.getStyleTheme();\n            args = args || [];\n            try {\n                if (OSjs.Themes[theme]) {\n                    return OSjs.Themes[theme][action].apply(null, args);\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n            return null;\n        }\n        _setBackground(settings) {\n            const isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n            const typeMap = {\n                'image': 'normal',\n                'image-center': 'center',\n                'image-fill': 'fill',\n                'image-strech': 'strech'\n            };\n            let className = 'color';\n            let back = 'none';\n            if (settings.wallpaper && settings.background.match(/^image/)) {\n                back = settings.wallpaper;\n                className = typeMap[settings.background] || 'default';\n            }\n            if (back !== 'none') {\n                try {\n                    this.VFS.url(back).then(result => {\n                        back = \"url('\" + result + \"')\";\n                        document.body.style.backgroundImage = back;\n                        return true;\n                    });\n                } catch (e) {\n                    console.warn(e);\n                }\n            } else {\n                document.body.style.backgroundImage = back;\n            }\n            if (settings.backgroundColor) {\n                document.body.style.backgroundColor = settings.backgroundColor;\n            }\n            if (settings.fontFamily) {\n                document.body.style.fontFamily = settings.fontFamily;\n            }\n            if (isFirefox) {\n                document.body.style.backgroundAttachment = 'fixed';\n            } else {\n                document.body.style.backgroundAttachment = 'scroll';\n            }\n            document.body.setAttribute('data-background-style', className);\n        }\n        getThemeCSS(name) {\n            let root = a.getConfig('Connection.RootURI', '/');\n            if (name === null) {\n                return root + 'blank.css';\n            }\n            root = a.getConfig('Connection.ThemeURI');\n            return root + '/' + name + '.css';\n        }\n        setTheme(settings) {\n            this.themeAction('destroy');\n            this.setThemeScript(this.getThemeResource('theme.js'));\n            document.body.setAttribute('data-style-theme', settings.styleTheme);\n            document.body.setAttribute('data-icon-theme', settings.iconTheme);\n            document.body.setAttribute('data-sound-theme', settings.soundTheme);\n            document.body.setAttribute('data-animations', String(settings.animations));\n            this._setBackground(settings);\n            this.settings.set(null, settings);\n        }\n        setThemeScript(src) {\n            if (this.$themeScript) {\n                this.$themeScript = DOM.$remove(this.$themeScript);\n            }\n            if (src) {\n                this.$themeScript = DOM.$createJS(src, null, () => {\n                    this.themeAction('init');\n                });\n            }\n        }\n        getStyleTheme(returnMetadata, convert) {\n            const name = this.settings.get('styleTheme') || null;\n            if (returnMetadata) {\n                let found = null;\n                if (name) {\n                    this.getStyleThemes().forEach(function (t) {\n                        if (t && t.name === name) {\n                            found = t;\n                        }\n                    });\n                }\n                if (found && convert === true) {\n                    const tmpEl = document.createElement('div');\n                    tmpEl.style.visibility = 'hidden';\n                    tmpEl.style.position = 'fixed';\n                    tmpEl.style.top = '-10000px';\n                    tmpEl.style.left = '-10000px';\n                    tmpEl.style.width = '1em';\n                    tmpEl.style.height = '1em';\n                    document.body.appendChild(tmpEl);\n                    const wd = tmpEl.offsetWidth;\n                    tmpEl.parentNode.removeChild(tmpEl);\n                    if (typeof found.style.window.margin === 'string' && found.style.window.margin.match(/em$/)) {\n                        const marginf = parseFloat(found.style.window.margin);\n                        found.style.window.margin = marginf * wd;\n                    }\n                    if (typeof found.style.window.border === 'string' && found.style.window.border.match(/em$/)) {\n                        const borderf = parseFloat(found.style.window.border);\n                        found.style.window.border = borderf * wd;\n                    }\n                }\n                return found;\n            }\n            return name;\n        }\n        getThemeResource(name, type) {\n            name = name || null;\n            type = type || null;\n            const root = a.getConfig('Connection.ThemeURI');\n            function getName(str, theme) {\n                if (!str.match(/^\\//)) {\n                    if (type === 'base' || type === null) {\n                        str = `${ root }/${ theme }/${ str }`;\n                    } else {\n                        str = `${ root }/${ theme }/${ type }/${ str }`;\n                    }\n                }\n                return str;\n            }\n            if (name) {\n                const theme = this.getStyleTheme();\n                name = getName(name, theme);\n            }\n            return name;\n        }\n        getSound(name) {\n            name = name || null;\n            if (name && !name.match(/^(https?:)?\\//)) {\n                const theme = this.getSoundTheme();\n                const root = a.getConfig('Connection.SoundURI');\n                const ext = this.oggAvailable ? 'oga' : 'mp3';\n                name = `${ root }/${ theme }/${ name }.${ ext }`;\n            }\n            return name;\n        }\n        playSound(name, volume) {\n            const filename = this.getSoundFilename(name);\n            if (!filename) {\n                console.debug('playSound()', 'Cannot play sound, no compability or not enabled!');\n                return null;\n            }\n            if (typeof volume === 'undefined') {\n                volume = 1;\n            }\n            const f = this.getSound(filename);\n            console.debug('playSound()', name, filename, f, volume);\n            const a = new Audio(f);\n            a.volume = volume;\n            a.play();\n            return a;\n        }\n        getIcon(name, size) {\n            name = name || '';\n            size = size || '16x16';\n            if (!name.match(/^(https:?)?\\//)) {\n                const root = a.getConfig('Connection.IconURI');\n                const theme = this.getIconTheme();\n                name = `${ root }/${ theme }/${ size }/${ name }`;\n            }\n            return name;\n        }\n        getFileIcon(file, size, icon) {\n            icon = icon || 'mimetypes/text-x-preview.png';\n            if (typeof file === 'object' && !(file instanceof FileMetadata)) {\n                file = new FileMetadata(file);\n            }\n            if (!file.filename) {\n                throw new Error('Filename is required for getFileIcon()');\n            }\n            const map = [\n                {\n                    match: 'application/pdf',\n                    icon: 'mimetypes/x-office-document.png'\n                },\n                {\n                    match: 'application/zip',\n                    icon: 'mimetypes/package-x-generic.png'\n                },\n                {\n                    match: 'application/x-python',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'application/x-lua',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'application/javascript',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'text/html',\n                    icon: 'mimetypes/text-html.png'\n                },\n                {\n                    match: 'text/xml',\n                    icon: 'mimetypes/text-html.png'\n                },\n                {\n                    match: 'text/css',\n                    icon: 'mimetypes/text-x-script.png'\n                },\n                {\n                    match: 'osjs/document',\n                    icon: 'mimetypes/x-office-document.png'\n                },\n                {\n                    match: 'osjs/draw',\n                    icon: 'mimetypes/image-x-generic.png'\n                },\n                {\n                    match: /^text\\//,\n                    icon: 'mimetypes/text-x-generic.png'\n                },\n                {\n                    match: /^audio\\//,\n                    icon: 'mimetypes/audio-x-generic.png'\n                },\n                {\n                    match: /^video\\//,\n                    icon: 'mimetypes/video-x-generic.png'\n                },\n                {\n                    match: /^image\\//,\n                    icon: 'mimetypes/image-x-generic.png'\n                },\n                {\n                    match: /^application\\//,\n                    icon: 'mimetypes/application-x-executable.png'\n                }\n            ];\n            if (file.type === 'dir') {\n                icon = 'places/folder.png';\n            } else if (file.type === 'trash') {\n                icon = 'places/user-trash.png';\n            } else if (file.type === 'application') {\n                const appname = FS.filename(file.path);\n                const meta = PackageManager.getPackage(appname);\n                if (meta) {\n                    if (!meta.icon.match(/^((https?:)|\\.)?\\//)) {\n                        return this.getIcon(meta.icon, size);\n                    }\n                    return PackageManager.getPackageResource(appname, meta.icon);\n                }\n            } else {\n                const mime = file.mime || 'application/octet-stream';\n                map.every(iter => {\n                    let match = false;\n                    if (typeof iter.match === 'string') {\n                        match = mime === iter.match;\n                    } else {\n                        match = mime.match(iter.match);\n                    }\n                    if (match) {\n                        icon = iter.icon;\n                        return false;\n                    }\n                    return true;\n                });\n            }\n            return this.getIcon(icon, size);\n        }\n        getIconTheme() {\n            return this.settings.get('iconTheme', 'default');\n        }\n        getSoundTheme() {\n            return this.settings.get('soundTheme', 'default');\n        }\n        getSoundFilename(k) {\n            if (!this.audioAvailable || !this.settings.get('enableSounds') || !k) {\n                return false;\n            }\n            const sounds = this.settings.get('sounds', {});\n            return sounds[k] || null;\n        }\n        getStyleThemes() {\n            return a.getConfig('Styles', []);\n        }\n        getSoundThemes() {\n            return a.getConfig('Sounds', []);\n        }\n        getIconThemes() {\n            return a.getConfig('Icons', []);\n        }\n    }\n    return new Theme();\n});\ndefine('skylark-osjsv2-client/helpers/hooks',['./event-handler'], function (EventHandler) {\n    'use strict';\n    let handler = new EventHandler('core-hooks', [\n        'initialize',\n        'initialized',\n        'sessionLoaded',\n        'shudown',\n        'processStart',\n        'processStarted',\n        'menuBlur'\n    ]);\n    function triggerHook(name, args, thisarg) {\n        if (handler) {\n            handler.emit(name, args, thisarg, true);\n        }\n    }\n    function addHook(name, fn) {\n        if (handler) {\n            return handler.on(name, fn);\n        }\n        return -1;\n    }\n    function removeHook(name, index) {\n        if (handler) {\n            return handler.off(name, index);\n        }\n        return false;\n    }\n    return {\n        triggerHook: triggerHook,\n        addHook: addHook,\n        removeHook: removeHook\n    };\n});\ndefine('skylark-osjsv2-client/helpers/promise-limit',[],function() {\r\n  function limiter (count) {\r\n    var outstanding = 0\r\n    var jobs = []\r\n\r\n    function remove () {\r\n      outstanding--\r\n\r\n      if (outstanding < count) {\r\n        dequeue()\r\n      }\r\n    }\r\n\r\n    function dequeue () {\r\n      var job = jobs.shift()\r\n      semaphore.queue = jobs.length\r\n\r\n      if (job) {\r\n        run(job.fn).then(job.resolve).catch(job.reject)\r\n      }\r\n    }\r\n\r\n    function queue (fn) {\r\n      return new Promise(function (resolve, reject) {\r\n        jobs.push({fn: fn, resolve: resolve, reject: reject})\r\n        semaphore.queue = jobs.length\r\n      })\r\n    }\r\n\r\n    function run (fn) {\r\n      outstanding++\r\n      try {\r\n        return Promise.resolve(fn()).then(function (result) {\r\n          remove()\r\n          return result\r\n        }, function (error) {\r\n          remove()\r\n          throw error\r\n        })\r\n      } catch (err) {\r\n        remove()\r\n        return Promise.reject(err)\r\n      }\r\n    }\r\n\r\n    var semaphore = function (fn) {\r\n      if (outstanding >= count) {\r\n        return queue(fn)\r\n      } else {\r\n        return run(fn)\r\n      }\r\n    }\r\n\r\n    return semaphore\r\n  }\r\n\r\n  function map (items, mapper) {\r\n    var failed = false\r\n\r\n    var limit = this\r\n\r\n    return Promise.all(items.map(function () {\r\n      var args = arguments\r\n      return limit(function () {\r\n        if (!failed) {\r\n          return mapper.apply(undefined, args).catch(function (e) {\r\n            failed = true\r\n            throw e\r\n          })\r\n        }\r\n      })\r\n    }))\r\n  }\r\n\r\n  function addExtras (fn) {\r\n    fn.queue = 0\r\n    fn.map = map\r\n    return fn\r\n  }\r\n\r\n  return function (count) {\r\n    if (count) {\r\n      return addExtras(limiter(count))\r\n    } else {\r\n      return addExtras(function (fn) {\r\n        return fn()\r\n      })\r\n    }\r\n  }\r\n});\r\n\ndefine('skylark-osjsv2-client/utils/preloader',[\n    '../helpers/promise-limit',\n    '../core/config',\n    'skylark-axios'\n], function (promiseLimit, a, axios) {\n    'use strict';\n    const getFileType = src => {\n        if (src.match(/\\.js$/i)) {\n            return 'javascript';\n        } else if (src.match(/\\.css$/i)) {\n            return 'stylesheet';\n        }\n        return 'unknown';\n    };\n    const getSource = src => {\n        if (src && !src.match(/^(\\/|file|https?)/)) {\n            return a.getBrowserPath(src);\n        }\n        return src;\n    };\n    const checkCss = path => {\n        let result = false;\n        (document.styleSheet || []).forEach((iter, i) => {\n            if (iter.href.indexOf(path) !== -1) {\n                result = true;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    };\n    const handlers = {\n        javascript: src => new Promise((resolve, reject) => {\n            const el = document.createElement('script');\n            el.onreadystatechange = function () {\n                if (this.readyState === 'complete' || this.readyState === 'loaded') {\n                    resolve();\n                }\n            };\n            el.onerror = err => {\n                let error = new Error();\n                error.name = '<script> error';\n                error.message = 'Failed to load script';\n                reject(error);\n            };\n            el.onload = () => resolve();\n            el.src = src;\n            document.getElementsByTagName('head')[0].appendChild(el);\n        }),\n        stylesheet: src => new Promise((resolve, reject) => {\n            let timeout;\n            const onerror = str => {\n                clearTimeout(timeout);\n                let error = new Error();\n                error.name = '<link> error';\n                error.message = str;\n                reject(error);\n            };\n            const link = document.createElement('link');\n            link.setAttribute('rel', 'stylesheet');\n            link.setAttribute('type', 'text/css');\n            link.onload = () => resolve();\n            link.onerror = err => onerror('Failed to load link');\n            link.setAttribute('href', src);\n            document.getElementsByTagName('head')[0].appendChild(link);\n            timeout = setTimeout(() => {\n                onerror('Loading stylesheet timed out');\n            }, 30000);\n            setTimeout(() => {\n                if (checkCss(src)) {\n                    clearTimeout(timeout);\n                    resolve();\n                }\n            }, 10);\n        }),\n        html: src => new Promise((resolve, reject) => {\n            axios.get(src).then(result => {\n                return resolve(result.data);\n            }).catch(err => reject(err.message));\n        })\n    };\n    class Preloader {\n        constructor() {\n            this.cache = {};\n        }\n        clear() {\n            this.cache = {};\n        }\n        preload(preloads, args) {\n            args = args || {};\n            preloads = preloads.map(p => {\n                if (typeof p === 'string') {\n                    return {\n                        src: getSource(p),\n                        force: false,\n                        type: getFileType(p)\n                    };\n                } else {\n                    p.src = getSource(p.src);\n                    if (!p.type) {\n                        p.type = getFileType(p.src);\n                    }\n                }\n                return p;\n            }).filter(p => !!p.src);\n            console.group('Preloader.load()', preloads);\n            const limit = promiseLimit(args.max || 1);\n            const total = preloads.length;\n            const failed = [];\n            const loaded = [];\n            const data = [];\n            const done = (item, preloadData, yes) => {\n                if (typeof preloadData !== 'undefined') {\n                    data.push({\n                        item,\n                        data: preloadData\n                    });\n                }\n                if (args.cache !== false && typeof this.cache[item.src] === 'undefined') {\n                    this.cache[item.src] = preloadData;\n                }\n                loaded.push(item.src);\n                return yes();\n            };\n            const job = (item, index) => {\n                if (typeof args.progress === 'function') {\n                    args.progress(index, total);\n                }\n                if (handlers[item.type]) {\n                    return new Promise((yes, no) => {\n                        if (!args.force && this.cache[item.src]) {\n                            done(item, this.cache[item.src], yes);\n                            return;\n                        }\n                        handlers[item.type](item.src).then(preloadData => {\n                            return done(item, preloadData, yes);\n                        }).catch(e => {\n                            console.warn('Failed loading', item.src, e);\n                            failed.push(item.src);\n                            return yes();\n                        });\n                    });\n                }\n                return Promise.resolve();\n            };\n            return new Promise((resolve, reject) => {\n                Promise.all(preloads.map((iter, index) => {\n                    return limit(() => job(iter, index));\n                })).then(() => {\n                    console.groupEnd();\n                    return resolve({\n                        success: false,\n                        data: data,\n                        failed: failed,\n                        loaded: loaded\n                    });\n                }).catch(reject);\n            });\n        }\n    }\n    return new Preloader();\n});\ndefine('skylark-osjsv2-client/core/process',[\n    './connection',\n    '../helpers/event-handler',\n    './theme',\n    '../utils/fs',\n    './config',\n    '../utils/compability',\n    './locales',\n    '../helpers/hooks',\n    '../helpers/loader',\n    '../vfs/file',\n    '../utils/preloader',\n    './settings-manager',\n    './package-manager'\n], function (Connection, EventHandler, Theme, FS, Config, Compability, locales, hooks, Loader, FileMetadata, Preloader, SettingsManager, PackageManager) {\n    'use strict';\n    let alreadyLaunching = [];\n    let runningProcesses = [];\n    function _kill(pid, force) {\n        if (pid >= 0 && runningProcesses[pid]) {\n            try {\n                const res = runningProcesses[pid].destroy(force);\n                console.warn('Killing application', pid, res);\n                if (res !== false) {\n                    runningProcesses[pid] = null;\n                    return true;\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n        }\n        return false;\n    }\n    function getLaunchObject(s) {\n        if (typeof s === 'string') {\n            const spl = s.split('@');\n            const name = spl[0];\n            let args = {};\n            if (typeof spl[1] !== 'undefined') {\n                try {\n                    args = JSON.parse(spl[1]);\n                } catch (e) {\n                }\n            }\n            s = {\n                name: name,\n                args: args\n            };\n        }\n        return s;\n    }\n    return class Process {\n        constructor(name, args, metadata) {\n            console.group('Process::constructor()', runningProcesses.length, arguments);\n            this.__pid = runningProcesses.push(this) - 1;\n            this.__pname = name;\n            this.__args = args || {};\n            this.__metadata = metadata || {};\n            this.__started = new Date();\n            this.__destroyed = false;\n            this.__evHandler = new EventHandler(name, [\n                'message',\n                'attention',\n                'hashchange',\n                'api',\n                'destroy',\n                'destroyWindow',\n                'vfs',\n                'vfs:mount',\n                'vfs:unmount',\n                'vfs:mkdir',\n                'vfs:write',\n                'vfs:move',\n                'vfs:copy',\n                'vfs:delete',\n                'vfs:upload',\n                'vfs:update'\n            ]);\n            this.__label = this.__metadata.name;\n            this.__path = this.__metadata.path;\n            this.__scope = this.__metadata.scope || 'system';\n            this.__iter = this.__metadata.className;\n            console.groupEnd();\n        }\n        destroy() {\n            if (!this.__destroyed) {\n                this.__destroyed = true;\n                console.group('Process::destroy()', this.__pid, this.__pname);\n                this._emit('destroy', []);\n                if (this.__evHandler) {\n                    this.__evHandler = this.__evHandler.destroy();\n                }\n                if (this.__pid >= 0) {\n                    runningProcesses[this.__pid] = null;\n                }\n                console.groupEnd();\n                return true;\n            }\n            return false;\n        }\n        _onMessage(msg, obj, opts) {\n            opts = opts || {};\n            let sourceId = opts.source;\n            if (sourceId && typeof sourceId === 'object') {\n                if (sourceId instanceof Process) {\n                    sourceId = sourceId.__pid;\n                } else if (sourceId._app) {\n                    sourceId = sourceId._app ? sourceId._app.__pid : -1;\n                }\n            }\n            if (this.__evHandler && sourceId !== this.__pid) {\n                console.debug('Process::_onMessage()', msg, obj, opts, this.__pid, this.__pname);\n                this.__evHandler.emit('message', [\n                    msg,\n                    obj,\n                    opts\n                ]);\n                if (msg.substr(0, 3) === 'vfs') {\n                    this.__evHandler.emit('vfs', [\n                        msg,\n                        obj,\n                        opts\n                    ]);\n                }\n                this.__evHandler.emit(msg, [\n                    obj,\n                    opts,\n                    msg\n                ]);\n            }\n        }\n        _emit(k, args) {\n            return this.__evHandler ? this.__evHandler.emit(k, args) : null;\n        }\n        _on(k, func) {\n            return this.__evHandler ? this.__evHandler.on(k, func, this) : null;\n        }\n        _off(k, idx) {\n            if (this.__evHandler) {\n                this.__evHandler.off(k, idx);\n            }\n        }\n        _api(method, args, options) {\n            if (typeof options === 'boolean') {\n                options = { indicator: options };\n            } else if (typeof options !== 'object') {\n                options = {};\n            }\n            this._emit('api', [method]);\n            return new Promise((resolve, reject) => {\n                Connection.request('application', {\n                    application: this.__iter,\n                    path: this.__path,\n                    method: method,\n                    args: args\n                }, options).then(res => {\n                    if (!this.__destroyed) {\n                        resolve(res);\n                        return true;\n                    }\n                    console.warn('Process::_api()', 'INGORED RESPONSE: Process was closed');\n                    return false;\n                }).catch(err => {\n                    if (!this.__destroyed) {\n                        reject(err instanceof Error ? err : new Error(err));\n                    }\n                });\n            });\n        }\n        _getArgument(k) {\n            return typeof this.__args[k] === 'undefined' ? null : this.__args[k];\n        }\n        _getArguments() {\n            return this.__args;\n        }\n        _getResource(src, vfspath) {\n            return PackageManager.getPackageResource(this, src, vfspath);\n        }\n        _setArgument(k, v) {\n            this.__args[k] = v;\n        }\n        static kill(pid) {\n            return _kill(pid);\n        }\n        static killAll(match) {\n            let matcher = () => true;\n            if (match) {\n                matcher = match instanceof RegExp ? p => p.__pname.match(match) : p => p.__pname === match;\n            }\n            this.getProcesses().filter(p => matcher(p)).forEach(p => _kill(p.__pid, true));\n            runningProcesses = [];\n        }\n        static message(msg, obj, opts) {\n            opts = opts || {};\n            console.debug('Process::message()', msg, obj, opts);\n            let filter = opts.filter || (() => true);\n            if (typeof filter === 'string') {\n                const s = filter;\n                filter = p => {\n                    return p.__pname === s;\n                };\n            }\n            this.getProcesses().filter(filter).forEach(p => p._onMessage(msg, obj, opts));\n        }\n        static getProcess(name, first) {\n            if (typeof name === 'number') {\n                return runningProcesses[name];\n            }\n            const found = this.getProcesses().filter(p => {\n                return p.__pname === name;\n            });\n            return first ? found[0] : found;\n        }\n        static getProcesses() {\n            return runningProcesses.filter(p => !!p);\n        }\n        static reload(n) {\n            if (!(n instanceof Array)) {\n                n = [n];\n            }\n            n.map(name => this.getProcess(name, true)).filter(p => !!p).forEach(p => {\n                let promise = null;\n                let data = p._getSessionData();\n                let args = {};\n                let name;\n                try {\n                    name = p.__pname;\n                    promise = p.destroy();\n                } catch (e) {\n                    console.warn('Process::reload()', e.stack, e);\n                }\n                if (data !== null) {\n                    args = data.args;\n                    args.__resume__ = true;\n                    args.__windows__ = data.windows || [];\n                }\n                args.__preload__ = { force: true };\n                if (!(promise instanceof Promise)) {\n                    promise = Promise.resolve(true);\n                }\n                if (name) {\n                    promise.then(() => {\n                        return setTimeout(() => {\n                            this.create(name, args);\n                        }, 500);\n                    });\n                }\n            });\n        }\n        static create(name, args, onconstruct) {\n            args = args || {};\n            onconstruct = onconstruct || function () {\n            };\n            const hash = name + JSON.stringify(args);\n            if (alreadyLaunching.indexOf(hash) !== -1) {\n                return Promise.resolve(null);\n            }\n            alreadyLaunching.push(hash);\n            const init = () => {\n                if (!name) {\n                    throw new Error('Cannot Process::create() witout a application name');\n                }\n                const compability = Compability.getCompability();\n                const metadata = PackageManager.getPackage(name);\n                const alreadyRunning = Process.getProcess(name, true);\n                if (!metadata) {\n                    throw new Error(locales._('ERR_APP_LAUNCH_MANIFEST_FAILED_FMT', name));\n                }\n                const compabilityFailures = (metadata.compability || []).filter(c => {\n                    if (typeof compability[c] !== 'undefined') {\n                        return !compability[c];\n                    }\n                    return false;\n                });\n                if (compabilityFailures.length) {\n                    throw new Error(locales._('ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT', name, compabilityFailures.join(', ')));\n                }\n                if (metadata.singular === true && alreadyRunning) {\n                    console.warn('Process::create()', 'detected that this application is a singular and already running...');\n                    alreadyRunning._onMessage('attention', args);\n                    return Promise.resolve(alreadyRunning);\n                }\n                hooks.triggerHook('processStart', [\n                    name,\n                    args\n                ]);\n                Loader.create('Main.launch.' + name, {\n                    title: locales._('LBL_STARTING') + ' ' + metadata.name,\n                    icon: Theme.getIcon(metadata.icon, '16x16')\n                });\n                let pargs = { max: metadata.preloadParallel === true ? Config.getConfig('Connection.PreloadParallel') : metadata.preloadParallel };\n                if (args.__preload__) {\n                    pargs = Object.assign(pargs, args.__preload__);\n                    delete args.__preload__;\n                }\n                return new Promise((resolve, reject) => {\n                    const onerror = e => {\n                        console.warn(e);\n                        return reject(new Error(e));\n                    };\n                    Preloader.preload(metadata.preload, pargs).then(result => {\n                        if (result.failed.length) {\n                            return onerror(locales._('ERR_APP_PRELOAD_FAILED_FMT', name, result.failed.join(',')));\n                        }\n                        if (typeof OSjs.Applications[name] === 'undefined') {\n                            return onerror(new Error(locales._('ERR_APP_RESOURCES_MISSING_FMT', name)));\n                        }\n                        let instance;\n                        try {\n                            const ResolvedPackage = OSjs.Applications[name];\n                            instance = new ResolvedPackage(args, metadata);\n                            onconstruct(instance, metadata);\n                        } catch (e) {\n                            return onerror(e);\n                        }\n                        try {\n                            const settings = SettingsManager.get(instance.__pname) || {};\n                            instance.init(settings, metadata);\n                            hooks.triggerHook('processStarted', [{\n                                    application: instance,\n                                    name: name,\n                                    args: args,\n                                    settings: settings,\n                                    metadata: metadata\n                                }]);\n                        } catch (e) {\n                            return onerror(e);\n                        }\n                        return resolve(instance);\n                    }).catch(onerror);\n                });\n            };\n            const onerror = err => {\n                OSjs.error(locales._('ERR_APP_LAUNCH_FAILED'), locales._('ERR_APP_LAUNCH_FAILED_FMT', name), err, err, true);\n            };\n            return new Promise((resolve, reject) => {\n                console.group('Process::create()', name, args);\n                const remove = () => {\n                    console.groupEnd();\n                    const i = alreadyLaunching.indexOf(hash);\n                    if (i >= 0) {\n                        alreadyLaunching.splice(i, 1);\n                    }\n                    Loader.destroy('Main.launch.' + name);\n                };\n                const fail = e => {\n                    Loader.destroy('Main.launch.' + name);\n                    remove();\n                    onerror(e);\n                    return reject(e);\n                };\n                try {\n                    init().then(resolve).catch(fail).finally(remove);\n                } catch (e) {\n                    fail(e);\n                }\n            });\n        }\n        static createFromArray(list, onconstruct) {\n            list = list || [];\n            onconstruct = onconstruct || function () {\n            };\n            console.info('Process::createFromArray()', list);\n            return Promise.each(list, s => {\n                return new Promise((resolve, reject) => {\n                    s = getLaunchObject(s);\n                    if (s.name) {\n                        try {\n                            this.create(s.name, s.args, (instance, metadata) => {\n                                onconstruct(instance, metadata, s.name, s.args);\n                            }).then(resolve).catch(reject);\n                        } catch (e) {\n                            reject(e);\n                        }\n                    } else {\n                        resolve();\n                    }\n                });\n            });\n        }\n        static createFromFile(file, args) {\n            file = new FileMetadata(file);\n            args = Object.assign({ file: file }, args || {});\n            if (args.args) {\n                Object.keys(args.args).forEach(i => {\n                    args[i] = args.args[i];\n                });\n            }\n            if (!file.path) {\n                throw new Error('Cannot open file without a path');\n            }\n            console.info('Process::createFromFile()', file, args);\n            if (file.mime === 'osjs/application') {\n                return this.create(FS.filename(file.path));\n            } else if (file.type === 'dir') {\n                const fm = SettingsManager.instance('DefaultApplication').get('dir', 'ApplicationFileManager');\n                return this.create(fm, { path: file.path });\n            }\n            return new Promise((resolve, reject) => {\n                const val = SettingsManager.get('DefaultApplication', file.mime);\n                let pack = PackageManager.getPackagesByMime(file.mime);\n                if (!args.forceList && val) {\n                    if (PackageManager.getPackage(val)) {\n                        console.debug('Process::createFromFile()', 'default application', val);\n                        pack = [val];\n                    }\n                }\n                if (pack.length === 0) {\n                    OSjs.error(locales._('ERR_FILE_OPEN'), locales._('ERR_FILE_OPEN_FMT', file.path), locales._('ERR_APP_MIME_NOT_FOUND_FMT', file.mime));\n                    reject(new Error(locales._('ERR_APP_MIME_NOT_FOUND_FMT', file.mime)));\n                } else if (pack.length === 1) {\n                    this.create(pack[0], args).then(resolve).catch(reject);\n                } else {\n                    const DialogWindow = OSjs.require('core/dialog');\n                    DialogWindow.default.create('ApplicationChooser', {\n                        file: file,\n                        list: pack\n                    }, (ev, btn, result) => {\n                        if (btn === 'ok') {\n                            this.create(result.name, args);\n                            SettingsManager.set('DefaultApplication', file.mime, result.useDefault ? result.name : null, true).then(resolve).catch(err => {\n                                reject(typeof err === 'string' ? new Error(err) : err);\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/mountpoint',[\n    '../core/process',\n    '../core/locales'\n], function ( Process, a) {\n    'use strict';\n    function createMatch(m, sname) {\n        if (typeof m === 'string') {\n            return new RegExp(m);\n        } else if (!m) {\n            return new RegExp('^' + (sname + '://').replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&'));\n        }\n        return m;\n    }\n    return class Mountpoint {\n        constructor(options) {\n            this.options = Object.assign({\n                name: null,\n                root: null,\n                match: null,\n                enabled: true,\n                readOnly: false,\n                transport: null,\n                visible: true,\n                searchable: false,\n                dynamic: true,\n                internal: false,\n                special: false,\n                options: {}\n            }, options);\n            if (!this.options.transport) {\n                throw new Error('No transport was defined for mountpoint ' + this.options.name);\n            }\n            if (!this.options.name) {\n                throw new Error(a._('ERR_VFSMODULE_INVALID_CONFIG_FMT'));\n            }\n            const sname = this.options.name.replace(/\\s/g, '-').toLowerCase();\n            const defaults = {\n                icon: 'devices/drive-harddisk.png',\n                name: sname,\n                title: this.options.name,\n                description: this.options.description || this.options.name,\n                root: sname + ':///',\n                match: createMatch(this.options.match, sname)\n            };\n            Object.keys(defaults).forEach(k => {\n                if (!this.options[k]) {\n                    this.options[k] = defaults[k];\n                }\n            });\n            this.name = sname;\n            this.isMounted = false;\n        }\n        mount(options) {\n            options = Object.assign({ notify: true }, options || {});\n            if (!this.isMounted && !this.option('special')) {\n                if (options.notify) {\n                    Process.message('vfs:mount', this.option('name'), { source: null });\n                }\n                this.isMounted = true;\n            }\n            return Promise.resolve();\n        }\n        unmount(options) {\n            options = Object.assign({ notify: true }, options || {});\n            if (this.isMounted && !this.option('special')) {\n                if (options.notify) {\n                    Process.message('vfs:unmount', this.option('name'), { source: null });\n                }\n                this.isMounted = false;\n            }\n            return Promise.resolve();\n        }\n        mounted() {\n            return this.isMounted;\n        }\n        enabled() {\n            return this.option('enabled');\n        }\n        option(name) {\n            return this.options[name];\n        }\n        isReadOnly() {\n            return this.option('readOnly');\n        }\n        setMounted(mounted) {\n            this.isMounted = mounted === true;\n        }\n        request(method, args, options) {\n            const transport = this.option('transport');\n            if (transport) {\n                return transport.request(method, args, options, this);\n            }\n            return Promise.reject(new Error(a._('ERR_VFSMODULE_NOT_FOUND_FMT', test)));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/mount-manager',[\n    '../vfs/mountpoint',\n    './locales',\n    './config'\n], function (Mountpoint, a, b) {\n    'use strict';\n\n    class MountManager {\n        constructor() {\n            this.inited = false;\n            this.mountpoints = [];\n//            this.transports = loadTransports();\n        }\n        init(loadTransports) { // modified by lwf\n            if (this.inited) {\n                return Promise.resolve();\n            }\n            this.transports = loadTransports();\n            this.inited = true;\n            const config = b.getConfig('VFS.Mountpoints', {});\n            const enabled = Object.keys(config).filter(name => {\n                return config[name].enabled !== false;\n            });\n            return Promise.each(enabled, name => {\n                return new Promise(resolve => {\n                    const iter = Object.assign({\n                        name: name,\n                        dynamic: false\n                    }, config[name]);\n                    this.add(iter, true, { notify: false }).then(resolve).catch(e => {\n                        console.warn('Failed to init VFS Mountpoint', name, iter, String(e));\n                        return resolve(false);\n                    });\n                });\n            });\n        }\n        addList(mountPoints) {\n            return Promise.each(mountPoints, iter => this.add(iter));\n        }\n        add(point, mount, options) {\n            try {\n                if (!(point instanceof Mountpoint)) {\n                    if (typeof point.transport === 'string') {\n                        const T = this.transports[point.transport];\n                        if (!T) {\n                            return Promise.reject(new Error('No such transport: ' + point.transport));\n                        }\n                        point.transport = new T();\n                    }\n                    point = new Mountpoint(point);\n                }\n                const found = this.mountpoints.filter(m => {\n                    if (m.option('name') === point.option('name')) {\n                        return true;\n                    }\n                    if (m.option('root') === point.option('root')) {\n                        return true;\n                    }\n                    return false;\n                });\n                if (found.length) {\n                    return Promise.reject(new Error(a._('ERR_VFSMODULE_ALREADY_MOUNTED_FMT', point.option('name'))));\n                }\n                this.mountpoints.push(point);\n            } catch (e) {\n                return Promise.reject(e);\n            }\n            console.info('Mounting', point);\n            return new Promise((resolve, reject) => {\n                if (mount) {\n                    point.mount().then(() => {\n                        return resolve(point);\n                    }).catch(reject);\n                } else {\n                    resolve(point);\n                }\n            });\n        }\n        remove(moduleName, options) {\n            const module = this.getModule(moduleName);\n            const index = this.getModule(moduleName, true);\n            if (module) {\n                return new Promise((resolve, reject) => {\n                    module.unmount(options).then(res => {\n                        if (index !== -1) {\n                            this.mountpoints.splice(index, 1);\n                        }\n                        return resolve(res);\n                    }).catch(reject);\n                });\n            }\n            return Promise.reject(new Error(a._('ERR_VFSMODULE_NOT_MOUNTED_FMT', moduleName)));\n        }\n        getModules(filter) {\n            filter = Object.assign({}, {\n                visible: true,\n                special: false\n            }, filter);\n            return this.mountpoints.filter(mount => {\n                if (mount.enabled() && mount.option('visible')) {\n                    const hits = Object.keys(filter).filter(filterName => {\n                        return mount.option(filterName) === filter[filterName];\n                    });\n                    return hits.length > 0;\n                }\n                return false;\n            });\n        }\n        getModuleFromPath(test) {\n            return this.mountpoints.find(mount => {\n                if (typeof test === 'string' && mount.enabled()) {\n                    if (mount.option('match') && test.match(mount.option('match'))) {\n                        return true;\n                    }\n                }\n                return false;\n            });\n        }\n        getModule(name, idx) {\n            const m = idx ? 'findIndex' : 'find';\n            return this.mountpoints[m](i => i.option('name') === name);\n        }\n        getTransport(name) {\n            return this.transports[name];\n        }\n    }\n    return new MountManager();\n});\ndefine('skylark-osjsv2-client/vfs/filedataurl',[],function () {\n    'use strict';\n    return class FileDataURL {\n        constructor(dataURL) {\n            this.dataURL = dataURL;\n        }\n        toBase64() {\n            return this.data.split(',')[1];\n        }\n        toString() {\n            return this.dataURL;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/fs',[\n    '../utils/fs',\n    './file',\n    './filedataurl',\n    '../core/process',\n    '../core/mount-manager',\n    '../core/package-manager',\n    '../core/settings-manager',\n    '../core/connection',\n    '../core/locales'\n], function (FS, FileMetadata, FileDataURL, Process, MountManager, PackageManager, SettingsManager, Connection, a) {\n    'use strict';\n    let watches = [];\n    function noop(err, res) {\n        if (err) {\n            console.error('VFS operation without callback caused an error', err);\n        } else {\n            console.warn('VFS operation without callback', res);\n        }\n    }\n    function hasAlias(item, retm) {\n        const module = MountManager.getModuleFromPath(item.path);\n        if (module) {\n            const match = module.option('match');\n            const options = module.option('options');\n            if (options && options.alias) {\n                return retm ? module : item.path.replace(match, options.alias);\n            }\n        }\n        return false;\n    }\n    function checkMetadataArgument(item, err, checkRo) {\n        if (typeof item === 'string') {\n            item = new FileMetadata(item);\n        } else if (typeof item === 'object' && item.path) {\n            item = new FileMetadata(item);\n        }\n        if (!(item instanceof FileMetadata)) {\n            throw new TypeError(err || a._('ERR_VFS_EXPECT_FILE'));\n        }\n        const alias = hasAlias(item);\n        if (alias) {\n            item.path = alias;\n        }\n        const mountpoint = MountManager.getModuleFromPath(item.path);\n        if (!mountpoint) {\n            throw new Error(a._('ERR_VFSMODULE_NOT_FOUND_FMT', item.path));\n        }\n        if (checkRo && mountpoint.isReadOnly()) {\n            throw new Error(a._('ERR_VFSMODULE_READONLY_FMT', mountpoint.name));\n        }\n        return item;\n    }\n    function hasSameTransport(src, dest) {\n        const msrc = MountManager.getModuleFromPath(src.path);\n        const mdst = MountManager.getModuleFromPath(dest.path);\n        if (!msrc || !mdst || msrc === mdst) {\n            return true;\n        }\n        if (msrc && mdst && (msrc.option('internal') && mdst.option('internal'))) {\n            return true;\n        }\n        return msrc.option('transport') === mdst.option('tranport');\n    }\n    function existsWrapper(item, options) {\n        options = options || {};\n        if (options.overwrite) {\n            return Promise.resolve();\n        }\n        return new Promise((resolve, reject) => {\n            exists(item).then(result => {\n                if (result) {\n                    return reject(new Error(a._('ERR_VFS_FILE_EXISTS')));\n                }\n                return resolve();\n            }).catch(error => {\n                if (error) {\n                    console.warn('existsWrapper() error', error);\n                }\n                reject(error);\n            });\n        });\n    }\n    function createBackLink(item, result, alias, oitem) {\n        const path = item.path.split('://')[1].replace(/\\/+/g, '/').replace(/^\\/?/, '/');\n        let isOnRoot = path === '/';\n        if (alias) {\n            isOnRoot = oitem.path === alias.root;\n        }\n        if (!isOnRoot) {\n            const foundBack = result.some(function (iter) {\n                return iter.filename === '..';\n            });\n            if (!foundBack) {\n                return new FileMetadata({\n                    filename: '..',\n                    path: FS.dirname(item.path),\n                    mime: null,\n                    size: 0,\n                    type: 'dir'\n                });\n            }\n        }\n        return false;\n    }\n    function checkWatches(msg, obj) {\n        watches.forEach(function (w) {\n            const checkPath = w.path;\n            function _check(f) {\n                if (w.type === 'dir') {\n                    return f.path.substr(0, checkPath.length) === checkPath;\n                }\n                return f.path === checkPath;\n            }\n            let wasTouched = false;\n            if (obj.destination) {\n                wasTouched = _check(obj.destination);\n                if (!wasTouched) {\n                    wasTouched = _check(obj.source);\n                }\n            } else {\n                wasTouched = _check(obj);\n            }\n            if (wasTouched) {\n                w.cb(msg, obj);\n            }\n        });\n    }\n    function findAlias(item) {\n        const mm = MountManager;\n        let found = null;\n        mm.getModules().forEach(function (iter) {\n            if (!found && iter.option('options').alias) {\n                const a = iter.option('options').alias;\n                if (item.path.substr(0, a.length) === a) {\n                    found = iter;\n                }\n            }\n        });\n        return found;\n    }\n    function convertWriteData(data, mime) {\n        const convertTo = (m, d, resolve, reject) => {\n            FS[m](d, mime, function (error, response) {\n                if (error) {\n                    reject(new Error(error));\n                } else {\n                    resolve(response);\n                }\n            });\n        };\n        return new Promise((resolve, reject) => {\n            try {\n                if (typeof data === 'string') {\n                    if (data.length) {\n                        return convertTo('textToAb', data, resolve, reject);\n                    }\n                } else {\n                    if (data instanceof FileDataURL) {\n                        return convertTo('dataSourceToAb', data.toString(), resolve, reject);\n                    } else if (window.Blob && data instanceof window.Blob) {\n                        return convertTo('blobToAb', data, resolve, reject);\n                    }\n                }\n            } catch (e) {\n                return reject(e);\n            }\n            return resolve(data);\n        });\n    }\n    function requestWrapper(mountpoint, method, args, options, appRef) {\n        console.info('VFS operation', ...arguments);\n        if (!mountpoint) {\n            return Promise.reject(new Error(a._('ERR_VFSMODULE_INVALID')));\n        }\n        return new Promise((resolve, reject) => {\n            mountpoint.request(method, args, options).then(response => {\n                return Connection.instance.onVFSRequestCompleted(mountpoint, method, args, response, appRef).then(() => resolve(response)).catch(reject);\n            }).catch(reject);\n        });\n    }\n    function performRequest(method, args, options, test, appRef, errorStr) {\n        return new Promise((resolve, reject) => {\n            if (options && !(options instanceof Object)) {\n                reject(new TypeError(a._('ERR_ARGUMENT_FMT', 'VFS::' + method, 'options', 'Object', typeof options)));\n                return;\n            }\n            const mountpoint = MountManager.getModuleFromPath(test);\n            if (!mountpoint) {\n                reject(new Error(a._('ERR_VFSMODULE_NOT_FOUND_FMT', test)));\n                return;\n            }\n            requestWrapper(mountpoint, method, args, options, appRef).then(resolve).catch(reject);\n        });\n    }\n    function broadcastMessage(msg, item, appRef) {\n        function _message(i) {\n            Process.message(msg, i, { source: appRef ? appRef.__pid : null });\n            checkWatches(msg, item);\n        }\n        const aliased = function () {\n            function _transform(i) {\n                if (i instanceof FileMetadata) {\n                    const n = new FileMetadata(i);\n                    const alias = findAlias(n);\n                    if (alias) {\n                        n.path = n.path.replace(alias.option('options').alias, alias.option('root'));\n                        return n;\n                    }\n                }\n                return false;\n            }\n            if (item instanceof FileMetadata) {\n                return _transform(item);\n            } else if (item && item.destination && item.source) {\n                return {\n                    source: _transform(item.source),\n                    destination: _transform(item.destination)\n                };\n            }\n            return null;\n        }();\n        _message(item);\n        const tuple = aliased.source || aliased.destination;\n        if (aliased && (aliased instanceof FileMetadata || tuple)) {\n            if (tuple) {\n                aliased.source = aliased.source || item.source;\n                aliased.destination = aliased.destination || item.destination;\n            }\n            _message(aliased);\n        }\n    }\n    function find(item, args, options) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('find', [\n            item,\n            args\n        ], options, item.path, null, 'ERR_VFSMODULE_FIND_FMT');\n    }\n    function scandir(item, options) {\n        const vfsSettings = SettingsManager.get('VFS');\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        const oitem = new FileMetadata(item);\n        const alias = hasAlias(oitem, true);\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            performRequest('scandir', [item], options, item.path, null, 'ERR_VFSMODULE_SCANDIR_FMT').then(result => {\n                if (result instanceof Array) {\n                    result = FS.filterScandir(result, options, vfsSettings);\n                    if (alias) {\n                        result = result.map(function (iter) {\n                            const isShortcut = iter.shortcut === true;\n                            const niter = new FileMetadata(iter);\n                            if (!isShortcut) {\n                                const str = iter.path.replace(/\\/?$/, '');\n                                const opt = alias.option('options') || {};\n                                const tmp = opt.alias.replace(/\\/?$/, '');\n                                niter.path = FS.pathJoin(alias.option('root'), str.replace(tmp, ''));\n                            }\n                            return niter;\n                        });\n                    }\n                    if (options.backlink !== false) {\n                        const back = createBackLink(item, result, alias, oitem);\n                        if (back) {\n                            result.unshift(back);\n                        }\n                    }\n                }\n                return resolve(result);\n            }).catch(reject);\n        });\n    }\n    function write(item, data, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(item.path);\n            convertWriteData(data, item.mime).then(ab => {\n                requestWrapper(mountpoint, 'write', [\n                    item,\n                    ab\n                ], options, appRef).then(resolve).catch(e => {\n                    reject(new Error(a._('ERR_VFSMODULE_WRITE_FMT', e)));\n                });\n                return true;\n            }).catch(e => {\n                reject(new Error(a._('ERR_VFSMODULE_WRITE_FMT', e)));\n            });\n        });\n    }\n    function read(item, options) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(item.path);\n            requestWrapper(mountpoint, 'read', [item], options).then(response => {\n                if (options.type) {\n                    const types = {\n                        datasource: () => new Promise((yes, no) => {\n                            FS.abToDataSource(response, item.mime, function (error, dataSource) {\n                                return error ? no(error) : yes(dataSource);\n                            });\n                        }),\n                        text: () => new Promise((yes, no) => {\n                            FS.abToText(response, item.mime, function (error, text) {\n                                return error ? no(error) : yes(text);\n                            });\n                        }),\n                        blob: () => new Promise((yes, no) => {\n                            FS.abToBlob(response, item.mime, function (error, blob) {\n                                return error ? no(error) : yes(blob);\n                            });\n                        }),\n                        json: () => new Promise((yes, no) => {\n                            FS.abToText(response, item.mime, function (error, text) {\n                                let jsn;\n                                if (typeof text === 'string') {\n                                    try {\n                                        jsn = JSON.parse(text);\n                                    } catch (e) {\n                                        console.warn('VFS::read()', 'readToJSON', e.stack, e);\n                                    }\n                                }\n                                return error ? no(error) : yes(jsn);\n                            });\n                        })\n                    };\n                    const type = options.type.toLowerCase();\n                    if (types[type]) {\n                        return types[type]().then(resolve).catch(reject);\n                    }\n                }\n                return resolve(response);\n            }).catch(e => {\n                reject(new Error(a._('ERR_VFSMODULE_READ_FMT', e)));\n            });\n        });\n    }\n    function copy(src, dest, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            src = checkMetadataArgument(src, a._('ERR_VFS_EXPECT_SRC_FILE'));\n            dest = checkMetadataArgument(dest, a._('ERR_VFS_EXPECT_DST_FILE'), true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        options = Object.assign({}, {\n            type: 'binary',\n            dialog: null\n        }, options);\n        options.arrayBuffer = true;\n        function dialogProgress(prog) {\n            if (options.dialog) {\n                options.dialog.setProgress(prog);\n            }\n        }\n        const promise = new Promise((resolve, reject) => {\n            existsWrapper(dest, options).then(() => {\n                const sourceMountpoint = MountManager.getModuleFromPath(src.path);\n                const destMountpoint = MountManager.getModuleFromPath(dest.path);\n                if (hasSameTransport(src, dest)) {\n                    requestWrapper(sourceMountpoint, 'copy', [\n                        src,\n                        dest\n                    ], options, appRef).then(() => {\n                        dialogProgress(100);\n                        return resolve(true);\n                    }).catch(reject);\n                } else {\n                    requestWrapper(sourceMountpoint, 'read', [src], options, appRef).then(data => {\n                        dialogProgress(50);\n                        return requestWrapper(destMountpoint, 'write', [\n                            dest,\n                            data\n                        ], options, appRef).then(res => {\n                            dialogProgress(100);\n                            return resolve(res);\n                        }).catch(reject);\n                    }).catch(reject);\n                }\n                return true;\n            }).catch(reject);\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                dialogProgress(100);\n                reject(new Error(a._('ERR_VFSMODULE_COPY_FMT', e)));\n            });\n        });\n    }\n    function move(src, dest, options, appRef) {\n        options = options || {};\n        if (arguments.length < 2) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            src = checkMetadataArgument(src, a._('ERR_VFS_EXPECT_SRC_FILE'));\n            dest = checkMetadataArgument(dest, a._('ERR_VFS_EXPECT_DST_FILE'), true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        function dialogProgress(prog) {\n            if (options.dialog) {\n                options.dialog.setProgress(prog);\n            }\n        }\n        const promise = new Promise((resolve, reject) => {\n            existsWrapper(dest, options).then(() => {\n                const sourceMountpoint = MountManager.getModuleFromPath(src.path);\n                const destMountpoint = MountManager.getModuleFromPath(dest.path);\n                if (hasSameTransport(src, dest)) {\n                    requestWrapper(sourceMountpoint, 'move', [\n                        src,\n                        dest\n                    ], options, appRef).then(() => {\n                        dialogProgress(100);\n                        return resolve(true);\n                    }).catch(reject);\n                } else {\n                    requestWrapper(sourceMountpoint, 'read', [src], options, appRef).then(data => {\n                        dialogProgress(50);\n                        return requestWrapper(destMountpoint, 'write', [\n                            dest,\n                            data\n                        ], options, appRef).then(res => {\n                            return requestWrapper(sourceMountpoint, 'unlink', [src], options, appRef).then(res => {\n                                dialogProgress(100);\n                                return resolve(res);\n                            }).catch(reject);\n                        }).catch(reject);\n                    }).catch(reject);\n                }\n                return true;\n            }).catch(reject);\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                dialogProgress(100);\n                reject(new Error(a._('ERR_VFSMODULE_MOVE_FMT', e)));\n            });\n        });\n    }\n    function rename(src, dest) {\n        return move(...arguments);\n    }\n    function unlink(item, options, appRef) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return new Promise((resolve, reject) => {\n            performRequest('unlink', [item], options, item.path, appRef, 'ERR_VFSMODULE_UNLINK_FMT').then(response => {\n                const pkgdir = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n                const found = pkgdir.some(function (i) {\n                    const chkdir = new FileMetadata(i);\n                    const idir = FS.dirname(item.path);\n                    return idir === chkdir.path;\n                });\n                if (found) {\n                    PackageManager.generateUserMetadata(function () {\n                    });\n                }\n                return resolve(response);\n            }).catch(reject);\n        });\n    }\n    function mkdir(item, options, appRef) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item, null, true);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('mkdir', [item], options, item.path, appRef, 'ERR_VFSMODULE_MKDIR_FMT');\n    }\n    function exists(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('exists', [item], {}, item.path, null, 'ERR_VFSMODULE_EXISTS_FMT');\n    }\n    function fileinfo(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('fileinfo', [item], {}, item.path, null, 'ERR_VFSMODULE_FILEINFO_FMT');\n    }\n    function url(item, options) {\n        options = options || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('url', [item], options, item.path, null, 'ERR_VFSMODULE_URL_FMT');\n    }\n    function upload(args, options, appRef) {\n        args = args || {};\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        if (!args.files) {\n            return Promise.reject(new Error(a._('ERR_VFS_UPLOAD_NO_FILES')));\n        }\n        if (!args.destination) {\n            return Promise.reject(new Error(a._('ERR_VFS_UPLOAD_NO_DEST')));\n        }\n        const dest = new FileMetadata(args.destination);\n        const mountpoint = MountManager.getModuleFromPath(args.destination);\n        return new Promise((resolve, reject) => {\n            Promise.all(args.files.map(f => {\n                const filename = f instanceof window.File ? f.name : f.filename;\n                const fileDest = new FileMetadata(FS.pathJoin(args.destination, filename));\n                return new Promise((resolve, reject) => {\n                    existsWrapper(fileDest, options).then(() => {\n                        return requestWrapper(mountpoint, 'upload', [\n                            dest,\n                            f\n                        ], options, appRef).then(resolve).catch(reject);\n                    }).catch(reject);\n                });\n            })).then(resolve).catch(e => {\n                reject(new Error(a._('ERR_VFS_UPLOAD_FAIL_FMT', e)));\n            });\n        });\n    }\n    function download(file) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            file = checkMetadataArgument(file);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        if (!file.path) {\n            return Promise.reject(new Error(a._('ERR_VFS_DOWNLOAD_NO_FILE')));\n        }\n        const promise = new Promise((resolve, reject) => {\n            const mountpoint = MountManager.getModuleFromPath(file);\n            requestWrapper(mountpoint, 'download', [file], {}).then(() => {\n                if (mountpoint.option('internal')) {\n                    mountpoint.download(file).then(resolve).catch(reject);\n                } else {\n                    mountpoint.read(file).then(resolve).catch(reject);\n                }\n                return true;\n            });\n        });\n        return new Promise((resolve, reject) => {\n            promise.then(resolve).catch(e => {\n                reject(new Error(a._('ERR_VFS_DOWNLOAD_FAILED', e)));\n            });\n        });\n    }\n    function trash(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('trash', [item], {}, item.path, null, 'ERR_VFSMODULE_TRASH_FMT');\n    }\n    function untrash(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return performRequest('untrash', [item], {}, item.path, null, 'ERR_VFSMODULE_UNTRASH_FMT');\n    }\n    function emptyTrash() {\n        return performRequest('emptyTrash', [], {}, null, null, 'ERR_VFSMODULE_EMPTYTRASH_FMT');\n    }\n    function freeSpace(item) {\n        if (arguments.length < 1) {\n            return Promise.reject(new Error(a._('ERR_VFS_NUM_ARGS')));\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        const m = MountManager.getModuleFromPath(item.path, false, true);\n        return performRequest('freeSpace', [m.option('root')], {}, item.path, null, 'ERR_VFSMODULE_FREESPACE_FMT');\n    }\n    function watch(item, callback) {\n        callback = callback || noop;\n        if (arguments.length < 2) {\n            callback(a._('ERR_VFS_NUM_ARGS'));\n            return -1;\n        }\n        try {\n            item = checkMetadataArgument(item);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n        return Promise.resolve(watches.push({\n            path: item.path,\n            type: item.type,\n            cb: callback\n        }) - 1);\n    }\n    function unwatch(idx) {\n        if (typeof watches[idx] !== 'undefined') {\n            delete watches[idx];\n        }\n    }\n    function triggerWatch(method, arg, appRef) {\n        broadcastMessage('vfs:' + method, arg, appRef);\n    }\n    return {\n        broadcastMessage: broadcastMessage,\n        find: find,\n        scandir: scandir,\n        write: write,\n        read: read,\n        copy: copy,\n        move: move,\n        rename: rename,\n        unlink: unlink,\n        mkdir: mkdir,\n        exists: exists,\n        fileinfo: fileinfo,\n        url: url,\n        upload: upload,\n        download: download,\n        trash: trash,\n        untrash: untrash,\n        emptyTrash: emptyTrash,\n        freeSpace: freeSpace,\n        watch: watch,\n        unwatch: unwatch,\n        triggerWatch: triggerWatch\n    };\n});\ndefine('skylark-osjsv2-client/core/search-engine',[\n    './package-manager',\n    './settings-manager',\n    '../vfs/file',\n    './theme',\n    '../vfs/fs'\n], function (PackageManager, SettingsManager, FileMetadata, Theme, VFS) {\n    'use strict';\n    function search(list, query) {\n        const result = [];\n        list.forEach(obj => {\n            let found = false;\n            obj.fields.forEach(s => {\n                if (found) {\n                    return;\n                }\n                const qry = String(query).toLowerCase();\n                const str = String(s).toLowerCase();\n                if (str.indexOf(qry) !== -1) {\n                    result.push(obj.value);\n                    found = true;\n                }\n            });\n        });\n        return result;\n    }\n    function SearchObject(obj) {\n        Object.keys(obj).forEach(k => {\n            this[k] = obj[k];\n        });\n    }\n    const ApplicationModule = function () {\n        function query() {\n            const packages = PackageManager.getPackages(); \n            return Object.keys(packages).map(pn => {\n                const p = packages[pn];\n                return new SearchObject({\n                    value: {\n                        title: p.name,\n                        description: p.description,\n                        icon: Theme.getFileIcon(new FileMetadata('applications:///' + p.className, 'application'), '16x16'),\n                        launch: {\n                            application: pn,\n                            args: {}\n                        }\n                    },\n                    fields: [\n                        p.className,\n                        p.name,\n                        p.description\n                    ]\n                });\n            });\n        }\n        return {\n            search: function (q, args, settings) {\n                if (settings.applications) {\n                    let results = search(query(), q);\n                    if (args.limit && results.length > args.dlimit) {\n                        results = results.splice(0, args.dlimit);\n                    }\n                    return Promise.resolve(results);\n                }\n                return Promise.resolve([]);\n            },\n            reindex: function (args) {\n                return Promise.resolve(true);\n            },\n            destroy: function () {\n            }\n        };\n    }();\n    const FilesystemModule = {\n        search: function (q, args, settings, cb) {\n            if (!settings.files || !settings.paths) {\n                return Promise.resolve([]);\n            }\n            let found = [];\n            const append = result => {\n                if (result) {\n                    found = found.concat(result.map(iter => {\n                        return {\n                            title: iter.filename,\n                            description: iter.path,\n                            icon: Theme.getFileIcon(new FileMetadata(iter)),\n                            launch: {\n                                application: '',\n                                args: '',\n                                file: iter\n                            }\n                        };\n                    }));\n                }\n            };\n            return new Promise((resolve, reject) => {\n                Promise.each(settings.paths, e => {\n                    return new Promise(n => {\n                        VFS.find(e, {\n                            query: q,\n                            limit: args.limit ? args.dlimit : 0,\n                            recursive: args.recursive\n                        }).then(result => {\n                            return n(append(result));\n                        }).catch(error => {\n                            console.warn(error);\n                            n();\n                        });\n                    });\n                }).then(() => {\n                    return resolve(found);\n                }).catch(reject);\n            });\n        },\n        reindex: function (args) {\n            return Promise.resolve();\n        },\n        destroy: function () {\n        }\n    };\n    class SearchEngine {\n        constructor() {\n            this.settings = {};\n            this.inited = false;\n            this.modules = [\n                ApplicationModule,\n                FilesystemModule\n            ];\n        }\n        init() {\n            console.debug('SearchEngine::init()');\n            if (!this.inited) {\n                this.settings = SettingsManager.get('SearchEngine') || {};\n                this.inited = true;\n            }\n            return Promise.resolve();\n        }\n        destroy() {\n            console.debug('SearchEngine::destroy()');\n            this.modules.forEach(m => {\n                m.destroy();\n            });\n            this.modules = [];\n            this.settings = {};\n            this.inited = false;\n        }\n        search(q, args) {\n            let result = [];\n            let errors = [];\n            args = Object.assign({}, {\n                recursive: false,\n                limit: 0,\n                dlimit: 0\n            }, args);\n            if (args.limit) {\n                args.dlimit = args.limit;\n            }\n            return new Promise((resolve, reject) => {\n                Promise.each(this.modules, module => {\n                    return new Promise((next, reject) => {\n                        console.debug('SearchEngine::search()', '=>', module);\n                        if (!args.limit || args.dlimit > 0) {\n                            module.search(q, args, this.settings).then(res => {\n                                args.dlimit -= res.length;\n                                result = result.concat(res);\n                                next();\n                            }).catch(err => {\n                                console.warn(err);\n                                errors.push(err instanceof Error ? err.toString() : err);\n                                next();\n                            });\n                        } else {\n                            next();\n                        }\n                    });\n                }).then(() => resolve(result)).catch(reject);\n            });\n        }\n        reindex(args) {\n            const errors = [];\n            return Promise.each(this.modules, module => {\n                return new Promise(next => {\n                    console.debug('SearchEngine::reindex()', '=>', module);\n                    module.reindex(args).then(next).catch(err => {\n                        if (err) {\n                            errors.push(err);\n                        }\n                        next();\n                    });\n                });\n            });\n        }\n        configure(opts, save) {\n        }\n    }\n    return new SearchEngine();\n});\ndefine('skylark-osjsv2-client/core/authenticator',[\n    './locales',\n    './config',\n    './connection',\n    './settings-manager',\n    './package-manager'\n], function ( a, b, Connection, SettingsManager, PackageManager) {\n    'use strict';\n    let _instance;\n    return class Authenticator {\n        static get instance() {\n            return _instance;\n        }\n        constructor() {\n            _instance = this;\n            this.userData = {\n                id: 0,\n                username: 'root',\n                name: 'root user',\n                groups: ['admin']\n            };\n            this.loggedIn = false;\n            this.isStandalone = false;\n        }\n        init() {\n            return this.createUI();\n        }\n        destroy() {\n            _instance = null;\n        }\n        getUser() {\n            return Object.assign({}, this.userData);\n        }\n        isLoggedIn() {\n            return this.isLoggedIn;\n        }\n        login(data) {\n            return new Promise((resolve, reject) => {\n                Connection.request('login', data).then(result => {\n                    return resolve(result ? result : a._('ERR_LOGIN_INVALID'));\n                }).catch(error => {\n                    reject(new Error(a._('ERR_LOGIN_FMT', error)));\n                });\n            });\n        }\n        logout() {\n            return new Promise((resolve, reject) => {\n                Connection.request('logout', {}).then(result => {\n                    return resolve(!!result);\n                }).catch(err => {\n                    reject(new Error('An error occured: ' + err));\n                });\n            });\n        }\n        checkPermission(group) {\n            const user = this.getUser();\n            const userGroups = user.groups || [];\n            if (!(group instanceof Array)) {\n                group = [group];\n            }\n            if (userGroups.indexOf('admin') === -1) {\n                return !!group.every(g => userGroups.indexOf(g) >= 0);\n            }\n            return true;\n        }\n        requestLogin(data) {\n            return new Promise((resolve, reject) => {\n                this.login(data).then(res => {\n                    return this.onLogin(res).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        onLogin(data) {\n            let userSettings = data.userSettings;\n            if (!userSettings || userSettings instanceof Array) {\n                userSettings = {};\n            }\n            this.userData = data.userData;\n            function getLocale() {\n                let curLocale = b.getConfig('Locale');\n                let detectedLocale = b.getUserLocale();\n                if (b.getConfig('LocaleOptions.AutoDetect', true) && detectedLocale) {\n                    console.info('Auto-detected user locale via browser', detectedLocale);\n                    curLocale = detectedLocale;\n                }\n                let result = SettingsManager.get('CoreWM');\n                if (!result) {\n                    try {\n                        result = userSettings.CoreWM;\n                    } catch (e) {\n                    }\n                }\n                return result ? result.language || curLocale : curLocale;\n            }\n            document.getElementById('LoadingScreen').style.display = 'block';\n            a.setLocale(getLocale());\n            SettingsManager.init(userSettings);\n            if (data.blacklistedPackages) {\n                PackageManager.setBlacklist(data.blacklistedPackages);\n            }\n            this.loggedIn = true;\n            return Promise.resolve(true);\n        }\n        createUI() {\n            this._renderUI();\n            return this._createUI();\n        }\n        _renderUI(html) {\n            if (!html) {\n                html = require('osjs-scheme-loader!login.html');\n            }\n            const tempNode = document.createElement('div');\n            tempNode.innerHTML = html;\n            tempNode.childNodes.forEach(n => {\n                const nn = n.cloneNode(true);\n                if ([\n                        'STYLE',\n                        'SCRIPT'\n                    ].indexOf(n.tagName) === -1) {\n                    document.body.appendChild(nn);\n                } else {\n                    document.querySelector('head').appendChild(nn);\n                }\n            });\n        }\n        _createUI() {\n            const container = document.getElementById('Login');\n            const login = document.getElementById('LoginForm');\n            const u = document.getElementById('LoginUsername');\n            const p = document.getElementById('LoginPassword');\n            const s = document.getElementById('LoginSubmit');\n            function _restore() {\n                s.removeAttribute('disabled');\n                u.removeAttribute('disabled');\n                p.removeAttribute('disabled');\n            }\n            function _lock() {\n                s.setAttribute('disabled', 'disabled');\n                u.setAttribute('disabled', 'disabled');\n                p.setAttribute('disabled', 'disabled');\n            }\n            container.style.display = 'block';\n            _restore();\n            return new Promise((resolve, reject) => {\n                login.onsubmit = ev => {\n                    _lock();\n                    if (ev) {\n                        ev.preventDefault();\n                    }\n                    this.requestLogin({\n                        username: u.value,\n                        password: p.value\n                    }).then(() => {\n                        container.parentNode.removeChild(container);\n                        return resolve();\n                    }).catch(err => {\n                        alert(err);\n                        _restore();\n                    });\n                };\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/keycodes',[],function () {\n    'use strict';\n    const Keycodes = function () {\n        const list = {\n            F1: 112,\n            F2: 113,\n            F3: 114,\n            F4: 115,\n            F6: 118,\n            F7: 119,\n            F8: 120,\n            F9: 121,\n            F10: 122,\n            F11: 123,\n            F12: 124,\n            TILDE: 220,\n            GRAVE: 192,\n            CMD: 17,\n            LSUPER: 91,\n            RSUPER: 92,\n            DELETE: 46,\n            INSERT: 45,\n            HOME: 36,\n            END: 35,\n            PGDOWN: 34,\n            PGUP: 33,\n            PAUSE: 19,\n            BREAK: 19,\n            CAPS_LOCK: 20,\n            SCROLL_LOCK: 186,\n            BACKSPACE: 8,\n            SPACE: 32,\n            TAB: 9,\n            ENTER: 13,\n            ESC: 27,\n            LEFT: 37,\n            RIGHT: 39,\n            UP: 38,\n            DOWN: 40\n        };\n        for (let n = 33; n <= 126; n++) {\n            list[String.fromCharCode(n)] = n;\n        }\n        return Object.freeze(list);\n    }();\n    return Keycodes;\n});\ndefine('skylark-osjsv2-client/utils/events',[\n    './keycodes'\n], function (Keycodes) {\n    'use strict';\n    function getRealEventName(evName) {\n        let realName = evName;\n        if (evName !== 'mousewheel' && evName.match(/^mouse/)) {\n            if (window.PointerEvent) {\n                realName = evName.replace(/^mouse/, 'pointer');\n            } else if (window.MSPointerEvent) {\n                const tmpName = evName.replace(/^mouse/, '');\n                realName = 'MSPointer' + tmpName.charAt(0).toUpperCase() + tmpName.slice(1).toLowerCase();\n            }\n        }\n        return realName;\n    }\n    function getEventList(str) {\n        return str.replace(/\\s/g, '').split(',');\n    }\n    function mousePosition(ev) {\n        if (ev.detail && typeof ev.detail.x !== 'undefined' && typeof ev.detail.y !== 'undefined') {\n            return {\n                x: ev.detail.x,\n                y: ev.detail.y\n            };\n        }\n        const touch = ev.touches || ev.changedTouches || [];\n        if (touch.length) {\n            return {\n                x: touch[0].clientX,\n                y: touch[0].clientY\n            };\n        }\n        return {\n            x: ev.clientX,\n            y: ev.clientY\n        };\n    }\n    function mouseButton(ev) {\n        if (typeof ev.button !== 'undefined') {\n            if (ev.button === 0) {\n                return 'left';\n            } else if (ev.button === 1) {\n                return 'middle';\n            }\n            return 'right';\n        }\n        if (ev.which === 2 || ev.which === 4) {\n            return 'middle';\n        } else if (ev.which === 1) {\n            return 'left';\n        }\n        return 'right';\n    }\n    const keyCombination = function () {\n        const modifiers = {\n            CTRL: ev => {\n                return ev.ctrlKey;\n            },\n            SHIFT: ev => {\n                return ev.shiftKey;\n            },\n            ALT: ev => {\n                return ev.altKey;\n            },\n            META: ev => {\n                return ev.metaKey;\n            }\n        };\n        function getKeyName(keyCode) {\n            let result = false;\n            Object.keys(Keycodes).forEach(k => {\n                if (!result && keyCode === Keycodes[k]) {\n                    result = k;\n                }\n            });\n            return result;\n        }\n        return function (ev, checkFor) {\n            const checks = checkFor.toUpperCase().split('+');\n            const checkMods = {\n                CTRL: false,\n                SHIFT: false,\n                ALT: false\n            };\n            const checkKeys = [];\n            checks.forEach(f => {\n                if (modifiers[f]) {\n                    checkMods[f] = true;\n                } else {\n                    checkKeys.push(f);\n                }\n            });\n            const hasmod = Object.keys(checkMods).every(f => {\n                const fk = !!modifiers[f](ev);\n                return checkMods[f] === fk;\n            });\n            const haskey = checkKeys.every(f => {\n                return getKeyName(ev.keyCode) === f;\n            });\n            return hasmod && haskey;\n        };\n    }();\n    const $bind = function () {\n        function makeFakeEvent(name, ev) {\n            const pos = mousePosition(ev);\n            const nev = Object.assign({\n                clientX: pos.x,\n                clientY: pos.y,\n                x: pos.x,\n                y: pos.y\n            }, ev);\n            return new MouseEvent(name, nev);\n        }\n        function addEventHandler(el, n, t, callback, handler, useCapture, realType) {\n            const args = [\n                t,\n                handler,\n                useCapture\n            ];\n            el.addEventListener.apply(el, args);\n            el._boundEvents[n].push({\n                realType: realType,\n                args: args,\n                callback: callback\n            });\n        }\n        function createWheelHandler(el, n, t, callback, useCapture) {\n            function _wheel(ev) {\n                const pos = mousePosition(ev);\n                const direction = ev.detail < 0 || ev.wheelDelta > 0 ? 1 : -1;\n                pos.z = direction;\n                return callback(ev, pos);\n            }\n            addEventHandler(el, n, 'mousewheel', callback, _wheel, useCapture, 'mousewheel');\n            addEventHandler(el, n, 'DOMMouseScroll', callback, _wheel, useCapture, 'DOMMouseScroll');\n        }\n        function createClick(el, n, t, callback, useCapture) {\n            let cancelled = false;\n            let timeout;\n            let firstTarget;\n            let firstEvent;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                clearTimeout(timeout);\n                firstTarget = null;\n                cancelled = true;\n                window.removeEventListener('touchmove', tempMove);\n            }\n            function tempEnd(ev) {\n                clearTimeout(timeout);\n                window.removeEventListener('touchmove', tempMove);\n                if (!cancelled && ev.target === firstTarget) {\n                    const newEvent = makeFakeEvent('click', firstEvent);\n                    Object.defineProperty(newEvent, 'target', {\n                        value: firstEvent.target,\n                        enumerable: false\n                    });\n                    el.dispatchEvent(newEvent);\n                }\n            }\n            function tempStart(ev) {\n                firstEvent = ev;\n                firstTarget = ev.target;\n                timeout = setTimeout(() => {\n                    cancelled = true;\n                }, 300);\n                window.addEventListener('touchmove', tempMove);\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'click');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'click');\n        }\n        function createDoubleClick(el, n, t, callback, useCapture) {\n            let count = 0;\n            let cancelled = false;\n            let firstTarget;\n            let firstEvent;\n            let debounce;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                firstTarget = null;\n                cancelled = true;\n                count = 0;\n                window.removeEventListener('toucmove', tempMove);\n            }\n            function tempEnd() {\n                window.removeEventListener('touchmove', tempMove);\n                debounce = setTimeout(cancel, 680);\n            }\n            function tempStart(ev) {\n                window.addEventListener('touchmove', tempMove);\n                clearTimeout(debounce);\n                if (count === 0) {\n                    firstEvent = ev;\n                    firstTarget = ev.target;\n                } else if (count > 0) {\n                    if (ev.target !== firstTarget) {\n                        cancel();\n                        return;\n                    }\n                    if (!cancelled) {\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                        ev.target.dispatchEvent(makeFakeEvent('dblclick', firstEvent));\n                    }\n                }\n                cancelled = false;\n                count++;\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'dblclick');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'dblclick');\n        }\n        function createContextMenu(el, n, t, callback, useCapture) {\n            let cancelled = false;\n            let timeout;\n            const tempMove = () => cancelled = true;\n            function cancel() {\n                clearTimeout(timeout);\n                cancelled = true;\n                window.removeEventListener('toucmove', tempMove);\n            }\n            function tempEnd(ev) {\n                cancelled = true;\n                clearTimeout(timeout);\n                window.removeEventListener('touchmove', tempMove);\n            }\n            function tempStart(ev) {\n                timeout = setTimeout(() => {\n                    if (!cancelled) {\n                        ev.preventDefault();\n                        ev.target.dispatchEvent(makeFakeEvent('contextmenu', ev));\n                    }\n                }, 300);\n                window.addEventListener('touchmove', tempMove);\n            }\n            addEventHandler(el, n, 'touchcancel', callback, cancel, useCapture, 'contextmenu');\n            addEventHandler(el, n, 'touchstart', callback, tempStart, useCapture, 'contextmenu');\n            addEventHandler(el, n, 'touchend', callback, tempEnd, useCapture, 'contextmenu');\n        }\n        const customEvents = {\n            mousewheel: createWheelHandler,\n            click: createClick,\n            dblclick: createDoubleClick,\n            contextmenu: createContextMenu\n        };\n        return function Utils_$bind(el, evName, callback, useCapture, noBind) {\n            useCapture = useCapture === true;\n            if (arguments.length < 3) {\n                throw new Error('$bind expects 3 or more arguments');\n            }\n            if (typeof evName !== 'string') {\n                throw new Error('Given event type was not a string');\n            }\n            if (typeof callback !== 'function') {\n                throw new Error('Given callback was not a function');\n            }\n            function addEvent(nsType, type) {\n                type = getRealEventName(type);\n                addEventHandler(el, nsType, type, callback, function mouseEventHandler(ev) {\n                    if (!window.OSjs) {\n                        return;\n                    }\n                    if (noBind) {\n                        callback(ev, mousePosition(ev));\n                    }\n                    callback.call(el, ev, mousePosition(ev));\n                }, useCapture);\n                if (type === 'click' && el.tagName === 'BUTTON') {\n                    return;\n                }\n                if (customEvents[type]) {\n                    customEvents[type](el, nsType, type, function fakeEventHandler(ev) {\n                        if (noBind) {\n                            callback(ev, mousePosition(ev));\n                        }\n                        callback.call(el, ev, mousePosition(ev));\n                    }, useCapture);\n                }\n            }\n            function initNamespace(ns) {\n                if (!el._boundEvents) {\n                    el._boundEvents = {};\n                }\n                if (!el._boundEvents[ns]) {\n                    el._boundEvents[ns] = [];\n                }\n                const found = el._boundEvents[ns].filter(iter => {\n                    return iter.callback === callback;\n                });\n                return found.length === 0;\n            }\n            getEventList(evName).forEach(ns => {\n                const type = ns.split(':')[0];\n                if (!initNamespace(ns)) {\n                    console.warn('Utils::$bind()', 'This event was already bound, skipping');\n                    return;\n                }\n                addEvent(ns, type);\n            });\n        };\n    }();\n    function $unbind(el, evName, callback, useCapture) {\n        function unbindNamed(type) {\n            if (el._boundEvents) {\n                const list = el._boundEvents || {};\n                if (list[type]) {\n                    for (let i = 0; i < list[type].length; i++) {\n                        let iter = list[type][i];\n                        if (callback && iter.callback !== callback) {\n                            continue;\n                        }\n                        el.removeEventListener.apply(el, iter.args);\n                        list[type].splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        function unbindAll() {\n            if (el._boundEvents) {\n                Object.keys(el._boundEvents).forEach(type => {\n                    unbindNamed(type);\n                });\n                delete el._boundEvents;\n            }\n        }\n        if (el) {\n            if (evName) {\n                getEventList(evName).forEach(type => {\n                    unbindNamed(type);\n                });\n            } else {\n                unbindAll();\n            }\n        }\n    }\n    return {\n        mousePosition: mousePosition,\n        mouseButton: mouseButton,\n        keyCombination: keyCombination,\n        $bind: $bind,\n        $unbind: $unbind\n    };\n});\ndefine('skylark-osjsv2-client/helpers/window-behaviour',[\n    '../utils/dom',\n    '../utils/events',\n    '../core/theme'\n], function (DOM, Events, Theme) {\n    'use strict';\n    class BehaviourState {\n        constructor(wm, win, action, mousePosition) {\n            this.win = win;\n            this.$element = win._$element;\n            this.$top = win._$top;\n            this.$handle = win._$resize;\n            this.rectWorkspace = wm.getWindowSpace(true);\n            this.rectWindow = {\n                x: win._position.x,\n                y: win._position.y,\n                w: win._dimension.w,\n                h: win._dimension.h,\n                r: win._dimension.w + win._position.x,\n                b: win._dimension.h + win._position.y\n            };\n            const theme = Object.assign({}, Theme.getStyleTheme(true, true));\n            if (!theme.style) {\n                theme.style = {\n                    'window': {\n                        margin: 0,\n                        border: 0\n                    }\n                };\n            }\n            this.theme = {\n                topMargin: theme.style.window.margin || 0,\n                borderSize: theme.style.window.border || 0\n            };\n            this.snapping = {\n                cornerSize: wm.getSetting('windowCornerSnap') || 0,\n                windowSize: wm.getSetting('windowSnap') || 0\n            };\n            this.action = action;\n            this.moved = false;\n            this.direction = null;\n            this.startX = mousePosition.x;\n            this.startY = mousePosition.y;\n            this.minWidth = win._properties.min_width;\n            this.minHeight = win._properties.min_height;\n            const windowRects = [];\n            wm.getWindows().forEach(w => {\n                if (w && w._wid !== win._wid) {\n                    const pos = w._position;\n                    const dim = w._dimension;\n                    const rect = {\n                        left: pos.x - this.theme.borderSize,\n                        top: pos.y - this.theme.borderSize,\n                        width: dim.w + this.theme.borderSize * 2,\n                        height: dim.h + this.theme.borderSize * 2 + this.theme.topMargin\n                    };\n                    rect.right = rect.left + rect.width;\n                    rect.bottom = pos.y + dim.h + this.theme.topMargin + this.theme.borderSize;\n                    windowRects.push(rect);\n                }\n            });\n            this.snapRects = windowRects;\n        }\n        getRect() {\n            const win = this.win;\n            return {\n                left: win._position.x,\n                top: win._position.y,\n                width: win._dimension.w,\n                height: win._dimension.h\n            };\n        }\n        calculateDirection() {\n            const dir = DOM.$position(this.$handle);\n            const dirX = this.startX - dir.left;\n            const dirY = this.startY - dir.top;\n            const dirD = 20;\n            const checks = {\n                nw: dirX <= dirD && dirY <= dirD,\n                n: dirX > dirD && dirY <= dirD,\n                w: dirX <= dirD && dirY >= dirD,\n                ne: dirX >= dir.width - dirD && dirY <= dirD,\n                e: dirX >= dir.width - dirD && dirY > dirD,\n                se: dirX >= dir.width - dirD && dirY >= dir.height - dirD,\n                sw: dirX <= dirD && dirY >= dir.height - dirD\n            };\n            let direction = 's';\n            Object.keys(checks).forEach(function (k) {\n                if (checks[k]) {\n                    direction = k;\n                }\n            });\n            this.direction = direction;\n        }\n    }\n    function createWindowBehaviour(win, wm) {\n        let current = null;\n        let newRect = {};\n        function onWindowResize(ev, mousePosition, dx, dy) {\n            if (!current || !current.direction) {\n                return false;\n            }\n            let nw, nh, nl, nt;\n            (function () {\n                if (current.direction.indexOf('s') !== -1) {\n                    nh = current.rectWindow.h + dy;\n                    newRect.height = Math.max(current.minHeight, nh);\n                } else if (current.direction.indexOf('n') !== -1) {\n                    nh = current.rectWindow.h - dy;\n                    nt = current.rectWindow.y + dy;\n                    if (nt < current.rectWorkspace.top) {\n                        nt = current.rectWorkspace.top;\n                        nh = newRect.height;\n                    } else {\n                        if (nh < current.minHeight) {\n                            nt = current.rectWindow.b - current.minHeight;\n                        }\n                    }\n                    newRect.height = Math.max(current.minHeight, nh);\n                    newRect.top = nt;\n                }\n            }());\n            (function () {\n                if (current.direction.indexOf('e') !== -1) {\n                    nw = current.rectWindow.w + dx;\n                    newRect.width = Math.max(current.minWidth, nw);\n                } else if (current.direction.indexOf('w') !== -1) {\n                    nw = current.rectWindow.w - dx;\n                    nl = current.rectWindow.x + dx;\n                    if (nw < current.minWidth) {\n                        nl = current.rectWindow.r - current.minWidth;\n                    }\n                    newRect.width = Math.max(current.minWidth, nw);\n                    newRect.left = nl;\n                }\n            }());\n            return newRect;\n        }\n        function onWindowMove(ev, mousePosition, dx, dy) {\n            let newWidth = null;\n            let newHeight = null;\n            let newLeft = current.rectWindow.x + dx;\n            let newTop = current.rectWindow.y + dy;\n            const borderSize = current.theme.borderSize;\n            const topMargin = current.theme.topMargin;\n            const cornerSnapSize = current.snapping.cornerSize;\n            const windowSnapSize = current.snapping.windowSize;\n            if (newTop < current.rectWorkspace.top) {\n                newTop = current.rectWorkspace.top;\n            }\n            let newRight = newLeft + current.rectWindow.w + borderSize * 2;\n            let newBottom = newTop + current.rectWindow.h + topMargin + borderSize;\n            if (cornerSnapSize > 0) {\n                if (newLeft - borderSize <= cornerSnapSize && newLeft - borderSize >= -cornerSnapSize) {\n                    newLeft = borderSize;\n                } else if (newRight >= current.rectWorkspace.width - cornerSnapSize && newRight <= current.rectWorkspace.width + cornerSnapSize) {\n                    newLeft = current.rectWorkspace.width - current.rectWindow.w - borderSize;\n                }\n                if (newTop <= current.rectWorkspace.top + cornerSnapSize && newTop >= current.rectWorkspace.top - cornerSnapSize) {\n                    newTop = current.rectWorkspace.top + borderSize;\n                } else if (newBottom >= current.rectWorkspace.height + current.rectWorkspace.top - cornerSnapSize && newBottom <= current.rectWorkspace.height + current.rectWorkspace.top + cornerSnapSize) {\n                    newTop = current.rectWorkspace.height + current.rectWorkspace.top - current.rectWindow.h - topMargin - borderSize;\n                }\n            }\n            if (windowSnapSize > 0) {\n                current.snapRects.every(function (rect) {\n                    if (newRight >= rect.left - windowSnapSize && newRight <= rect.left + windowSnapSize) {\n                        newLeft = rect.left - (current.rectWindow.w + borderSize * 2);\n                        return false;\n                    }\n                    if (newLeft - borderSize <= rect.right + windowSnapSize && newLeft - borderSize >= rect.right - windowSnapSize) {\n                        newLeft = rect.right + borderSize * 2;\n                        return false;\n                    }\n                    if (newBottom >= rect.top - windowSnapSize && newBottom <= rect.top + windowSnapSize) {\n                        newTop = rect.top - (current.rectWindow.h + borderSize * 2 + topMargin);\n                        return false;\n                    }\n                    if (newTop <= rect.bottom + windowSnapSize && newTop >= rect.bottom - windowSnapSize) {\n                        newTop = rect.bottom + borderSize * 2;\n                        return false;\n                    }\n                    return true;\n                });\n            }\n            return {\n                left: newLeft,\n                top: newTop,\n                width: newWidth,\n                height: newHeight\n            };\n        }\n        function onMouseUp(ev, action, win, mousePosition) {\n            if (!current) {\n                return;\n            }\n            if (current.moved) {\n                if (action === 'move') {\n                    win._onChange('move', true);\n                    win._emit('moved', [\n                        win._position.x,\n                        win._position.y\n                    ]);\n                } else if (action === 'resize') {\n                    win._onChange('resize', true);\n                    win._emit('resized', [\n                        win._dimension.w,\n                        win._dimension.h\n                    ]);\n                }\n            }\n            current.$element.setAttribute('data-hint', '');\n            document.body.setAttribute('data-window-hint', '');\n            win._emit('postop');\n            current = null;\n        }\n        function onMouseMove(ev, action, win, mousePosition) {\n            if (!wm.getMouseLocked() || !action || !current) {\n                return;\n            }\n            ev.preventDefault();\n            let result;\n            const dx = mousePosition.x - current.startX;\n            const dy = mousePosition.y - current.startY;\n            if (action === 'move') {\n                result = onWindowMove(ev, mousePosition, dx, dy);\n            } else {\n                result = onWindowResize(ev, mousePosition, dx, dy);\n            }\n            if (result) {\n                if (result.left !== null && result.top !== null) {\n                    win._move(result.left, result.top);\n                    win._emit('move', [\n                        result.left,\n                        result.top\n                    ]);\n                }\n                if (result.width !== null && result.height !== null) {\n                    win._resize(result.width, result.height, true);\n                    win._emit('resize', [\n                        result.width,\n                        result.height\n                    ]);\n                }\n            }\n            current.moved = true;\n        }\n        function onMouseDown(ev, action, win, mousePosition) {\n            ev.preventDefault();\n            if (win._state.maximized) {\n                return;\n            }\n            current = new BehaviourState(wm, win, action, mousePosition);\n            newRect = {};\n            win._focus();\n            if (action === 'move') {\n                current.$element.setAttribute('data-hint', 'moving');\n                document.body.setAttribute('data-window-hint', 'moving');\n            } else {\n                current.calculateDirection();\n                current.$element.setAttribute('data-hint', 'resizing');\n                document.body.setAttribute('data-window-hint', 'resizing');\n                newRect = current.getRect();\n            }\n            win._emit('preop');\n            function _onMouseMove(ev, pos) {\n                ev.preventDefault();\n                if (wm._mouselock) {\n                    onMouseMove(ev, action, win, pos);\n                }\n            }\n            function _onMouseUp(ev, pos) {\n                onMouseUp(ev, action, win, pos);\n                Events.$unbind(document, 'pointermove:movewindow,touchmove:movewindowTouch');\n                Events.$unbind(document, 'pointerup:movewindowstop,touchend:movewindowstopTouch');\n            }\n            Events.$bind(document, 'pointermove:movewindow,touchmove:movewindowTouch', _onMouseMove, false);\n            Events.$bind(document, 'pointerup:movewindowstop,touchend:movewindowstopTouch', _onMouseUp, false);\n        }\n        if (win._properties.allow_move) {\n            Events.$bind(win._$top, 'pointerdown,touchstart', (ev, pos) => {\n                ev.preventDefault();\n                if (!win._destroyed) {\n                    onMouseDown(ev, 'move', win, pos);\n                }\n            }, true);\n        }\n        if (win._properties.allow_resize) {\n            Events.$bind(win._$resize, 'pointerdown,touchstart', (ev, pos) => {\n                ev.preventDefault();\n                if (!win._destroyed) {\n                    onMouseDown(ev, 'resize', win, pos);\n                }\n            });\n        }\n    }\n    return { createWindowBehaviour: createWindowBehaviour };\n});\ndefine('skylark-osjsv2-client/core/window-manager',[\n    '../utils/dom',\n //   '../gui/menu',\n    '../utils/events',\n    '../utils/misc',\n    '../utils/keycodes',\n    './theme',\n    './process',\n//    './window',\n//    './dialog',\n    './connection',\n    './settings-manager',\n//    '../gui/notification',\n    './locales',\n    './config',\n    '../helpers/window-behaviour'\n], function (DOM, Events, Utils, Keycodes, Theme, Process,   Connection, SettingsManager,  a, b, c) {\n    'use strict';\n    function checkForbiddenKeyCombo(ev) {\n        return false;\n    }\n    function checkPrevent(ev, win) {\n        const d = ev.srcElement || ev.target;\n        const accept = [\n            122,\n            123\n        ];\n        let doPrevent = d.tagName === 'BODY' ? true : false;\n        if (ev.keyCode === Keycodes.BACKSPACE && !DOM.$isFormElement(ev)) {\n            doPrevent = true;\n        } else if (ev.keyCode === Keycodes.TAB && DOM.$isFormElement(ev)) {\n            doPrevent = true;\n        } else {\n            if (accept.indexOf(ev.keyCode) !== -1) {\n                doPrevent = false;\n            } else if (checkForbiddenKeyCombo(ev)) {\n                doPrevent = true;\n            }\n        }\n        if (doPrevent && (!win || !win._properties.key_capture)) {\n            return true;\n        }\n        return false;\n    }\n    function triggerFullscreen(el, state) {\n        function _request() {\n            if (el.requestFullscreen) {\n                el.requestFullscreen();\n            } else if (el.mozRequestFullScreen) {\n                el.mozRequestFullScreen();\n            } else if (el.webkitRequestFullScreen) {\n                el.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n            }\n        }\n        function _restore() {\n            if (el.webkitCancelFullScreen) {\n                el.webkitCancelFullScreen();\n            } else if (el.mozCancelFullScreen) {\n                el.mozCancelFullScreen();\n            } else if (el.exitFullscreen) {\n                el.exitFullscreen();\n            }\n        }\n        if (el) {\n            if (state) {\n                _request();\n            } else {\n                _restore();\n            }\n        }\n    }\n    let _instance;\n    return class WindowManager extends Process {\n        static get instance() {\n            return _instance;\n        }\n        constructor(name, args, metadata, settings) {\n            console.group('WindowManager::constructor()');\n            console.debug('Name', name);\n            console.debug('Arguments', args);\n            super(name, args, metadata);\n            _instance = this;\n            this._windows = [];\n            this._settings = SettingsManager.instance(name, settings);\n            this._currentWin = null;\n            this._lastWin = null;\n            this._mouselock = true;\n            this._stylesheet = null;\n            this._sessionLoaded = false;\n            this._fullyLoaded = false;\n            this._isResponsive = false;\n            this._responsiveRes = 800;\n            this._dcTimeout = null;\n            this._resizeTimeout = null;\n            this._$fullscreen = null;\n            this._$lastDomInput = null;\n            this.__name = name || 'WindowManager';\n            this.__path = metadata.path;\n            this.__iter = metadata.iter;\n\n            console.groupEnd();\n        }\n        destroy() {\n            console.debug('WindowManager::destroy()');\n            this.destroyStylesheet();\n            Events.$unbind(document, 'pointerout:windowmanager');\n            Events.$unbind(document, 'pointerenter:windowmanager');\n            Events.$unbind(window, 'orientationchange:windowmanager');\n            Events.$unbind(window, 'hashchange:windowmanager');\n            Events.$unbind(window, 'resize:windowmanager');\n            Events.$unbind(window, 'scroll:windowmanager');\n            Events.$unbind(window, 'fullscreenchange:windowmanager');\n            Events.$unbind(window, 'mozfullscreenchange:windowmanager');\n            Events.$unbind(window, 'webkitfullscreenchange:windowmanager');\n            Events.$unbind(window, 'msfullscreenchange:windowmanager');\n            Events.$unbind(document.body, 'contextmenu:windowmanager');\n            Events.$unbind(document.body, 'pointerdown:windowmanager,touchstart:windowmanager');\n            Events.$unbind(document.body, 'click:windowmanager');\n            Events.$unbind(document, 'keyup:windowmanager');\n            Events.$unbind(document, 'keydown:windowmanager');\n            Events.$unbind(document, 'keypress:windowmanager');\n            window.onerror = null;\n            window.onbeforeunload = null;\n            this._windows.forEach((win, i) => {\n                if (win) {\n                    win.destroy(true);\n                    this._windows[i] = null;\n                }\n            });\n            this._windows = [];\n            this._currentWin = null;\n            this._lastWin = null;\n            this._$fullscreen = null;\n            _instance = null;\n\n            this.Notification = OSjs.require(\"gui/notification\");// added by lwf\n            return super.destroy();\n        }\n        init(metadata, settings) {\n            var Notification = this.Notification;\n\n            Connection.instance.subscribe('online', () => {\n                Notification.create({\n                    title: a._('LBL_INFO'),\n                    message: a._('CONNECTION_RESTORED')\n                });\n            });\n            Connection.instance.subscribe('offline', reconnecting => {\n                Notification.create({\n                    title: a._('LBL_WARNING'),\n                    message: a._(reconnecting ? 'CONNECTION_RESTORE_FAILED' : 'CONNECTION_LOST')\n                });\n            });\n\n            console.debug('WindowManager::init()');\n            document.body.addEventListener('touchend', ev => {\n                if (ev.target === document.body) {\n                    ev.preventDefault();\n                }\n            });\n            Events.$bind(document, 'pointerout:windowmanager', ev => this._onMouseLeave(ev));\n            Events.$bind(document, 'pointerenter:windowmanager', ev => this._onMouseLeave(ev));\n            Events.$bind(window, 'orientationchange:windowmanager', ev => this._onOrientationChange(ev));\n            Events.$bind(window, 'hashchange:windowmanager', ev => this._onHashChange(ev));\n            Events.$bind(window, 'resize:windowmanager', ev => this._onResize(ev));\n            Events.$bind(window, 'scroll:windowmanager', ev => this._onScroll(ev));\n            Events.$bind(window, 'fullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'mozfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'webkitfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(window, 'msfullscreenchange:windowmanager', ev => this._onFullscreen(ev));\n            Events.$bind(document.body, 'contextmenu:windowmanager', ev => this._onContextMenu(ev));\n            Events.$bind(document.body, 'pointerdown:windowmanager,touchstart:windowmanager', ev => this._onMouseDown(ev));\n            Events.$bind(document.body, 'click:windowmanager', ev => this._onClick(ev));\n            Events.$bind(document, 'keyup:windowmanager', ev => this._onKeyUp(ev));\n            Events.$bind(document, 'keydown:windowmanager', ev => this._onKeyDown(ev));\n            Events.$bind(document, 'keypress:windowmanager', ev => this._onKeyPress(ev));\n            window.onerror = this._onError.bind(this);\n            window.onbeforeunload = this._onBeforeUnload(this);\n            const queries = this.getDefaultSetting('mediaQueries') || {};\n            let maxWidth = 0;\n            Object.keys(queries).forEach(q => {\n                maxWidth = Math.max(maxWidth, queries[q]);\n            });\n            this._responsiveRes = maxWidth || 800;\n            this._onOrientationChange();\n            this.resize();\n        }\n        setup(cb) {\n            cb();\n        }\n        getWindow(name) {\n            return this.getWindows().find(w => {\n                return w.__name === name;\n            });\n        }\n        addWindow(w, focus) {\n            //if (!(w instanceof Window)) { // modified by lwf\n            //    console.warn('WindowManager::addWindow()', 'Got', w);\n            //    throw new TypeError('given argument was not instance of Core.Window');\n            //}\n            console.debug('WindowManager::addWindow()');\n            try {\n                w.init(this, w._app);\n            } catch (e) {\n                console.error('WindowManager::addWindow()', '=>', 'Window::init()', e, e.stack);\n            }\n            c.createWindowBehaviour(w, this);\n            this._windows.push(w);\n            w._inited();\n            //if (focus === true || w instanceof DialogWindow) {\n            if (focus === true) { // modified by lwf\n                w._focus();\n            }\n            return w;\n        }\n        removeWindow(w) {\n            //if (!(w instanceof Window)) { // modified by lwf\n            //    console.warn('WindowManager::removeWindow()', 'Got', w);\n            //    throw new TypeError('given argument was not instance of Core.Window');\n            //}\n            const foundIndex = this._windows.findIndex(win => win && win._wid === w._wid);\n            console.debug('WindowManager::removeWindow()', w._wid, foundIndex);\n            if (foundIndex !== -1) {\n                this._windows[foundIndex] = null;\n                return true;\n            }\n            return false;\n        }\n        applySettings(settings, force, save, triggerWatch) {\n            settings = settings || {};\n            console.debug('WindowManager::applySettings()', 'forced?', force);\n            const result = force ? settings : Utils.mergeObject(this._settings.get(), settings);\n            this._settings.set(null, result, save, triggerWatch);\n            return true;\n        }\n        createStylesheet(styles, rawStyles) {\n            this.destroyStylesheet();\n            let innerHTML = [];\n            Object.keys(styles).forEach(key => {\n                let rules = [];\n                Object.keys(styles[key]).forEach(r => {\n                    rules.push(Utils.format('    {0}: {1};', r, styles[key][r]));\n                });\n                rules = rules.join('\\n');\n                innerHTML.push(Utils.format('{0} {\\n{1}\\n}', key, rules));\n            });\n            innerHTML = innerHTML.join('\\n');\n            if (rawStyles) {\n                innerHTML += '\\n' + rawStyles;\n            }\n            const style = document.createElement('style');\n            style.type = 'text/css';\n            style.id = 'WMGeneratedStyles';\n            style.innerHTML = innerHTML;\n            document.getElementsByTagName('head')[0].appendChild(style);\n            this._stylesheet = style;\n        }\n        destroyStylesheet() {\n            if (this._stylesheet) {\n                DOM.$remove(this._stylesheet);\n            }\n            this._stylesheet = null;\n        }\n        resize(ev, rect) {\n            this._isResponsive = window.innerWidth <= 1024;\n            this.onResize(ev);\n        }\n        eventWindow(ev, win) {\n            return false;\n        }\n        showSettings() {\n        }\n        toggleFullscreen(el, t) {\n            if (typeof t === 'boolean') {\n                triggerFullscreen(el, t);\n            } else {\n                const prev = this._$fullscreen;\n                if (prev && prev !== el) {\n                    triggerFullscreen(prev, false);\n                }\n                triggerFullscreen(el, prev !== el);\n            }\n            this._$fullscreen = el;\n        }\n        onKeyDown(ev, win) {\n        }\n        onOrientationChange(ev, orientation) {\n            console.info('ORIENTATION CHANGED', ev, orientation);\n            document.body.setAttribute('data-orientation', orientation);\n            this._onDisplayChange();\n        }\n        onResize(ev) {\n            this._onDisplayChange();\n            this._emit('resized');\n        }\n        onSessionLoaded() {\n            if (this._sessionLoaded) {\n                return false;\n            }\n            this._sessionLoaded = true;\n            return true;\n        }\n        _onMouseEnter(ev) {\n            this._mouselock = true;\n        }\n        _onMouseLeave(ev) {\n            const from = ev.relatedTarget || ev.toElement;\n            if (!from || from.nodeName === 'HTML') {\n                this._mouselock = false;\n            } else {\n                this._mouselock = true;\n            }\n        }\n        _onDisplayChange() {\n            this._dcTimeout = clearTimeout(this._dcTimeout);\n            this._dcTimeout = setTimeout(() => {\n                if (!this._windows) {\n                    return;\n                }\n                this.getWindows().forEach(w => {\n                    w._onResize();\n                    w._emit('resize');\n                });\n            }, 100);\n            document.body.setAttribute('data-responsive', String(this._isResponsive));\n        }\n        _onOrientationChange(ev) {\n            let orientation = 'landscape';\n            if (window.screen && window.screen.orientation) {\n                if (window.screen.orientation.type.indexOf('portrait') !== -1) {\n                    orientation = 'portrait';\n                }\n            }\n            this.onOrientationChange(ev, orientation);\n        }\n        _onHashChange(ev) {\n            const hash = window.location.hash.substr(1);\n            const spl = hash.split(/^([\\w\\.\\-_]+)\\:(.*)/);\n            function getArgs(q) {\n                const args = {};\n                q.split('&').forEach(function (a) {\n                    const b = a.split('=');\n                    const k = decodeURIComponent(b[0]);\n                    args[k] = decodeURIComponent(b[1] || '');\n                });\n                return args;\n            }\n            if (spl.length === 4) {\n                const root = spl[1];\n                const args = getArgs(spl[2]);\n                if (root) {\n                    Process.getProcess(root).forEach(function (p) {\n                        p._onMessage('hashchange', {\n                            hash: hash,\n                            args: args\n                        }, { source: null });\n                    });\n                }\n            }\n        }\n        _onResize(ev) {\n            clearTimeout(this._resizeTimeout);\n            this._resizeTimeout = setTimeout(() => {\n                const space = this.getWindowSpace();\n                this.resize(ev, space);\n            }, 100);\n        }\n        _onScroll(ev) {\n            if (ev.target === document || ev.target === document.body) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                return false;\n            }\n            document.body.scrollTop = 0;\n            document.body.scrollLeft = 0;\n            return true;\n        }\n        _onFullscreen(ev) {\n            try {\n                const notif = this.Notification.getIcon('_FullscreenNotification'); // modified by lwf\n                if (notif) {\n                    if (!document.fullScreen && !document.mozFullScreen && !document.webkitIsFullScreen && !document.msFullscreenElement) {\n                        notif.opts._isFullscreen = false;\n                        notif.setImage(Theme.getIcon('actions/view-fullscreen.png', '16x16'));\n                    } else {\n                        notif.opts._isFullscreen = true;\n                        notif.setImage(Theme.getIcon('actions/view-restore.png', '16x16'));\n                    }\n                }\n            } catch (e) {\n                console.warn(e.stack, e);\n            }\n        }\n        _onContextMenu(ev) {\n            this.onContextMenu(ev);\n            if (DOM.$isFormElement(ev)) {\n                OSjs.require(\"gui/menu\").blur();\n            } else {\n                ev.preventDefault();\n                return false;\n            }\n            return true;\n        }\n        _onMouseDown(ev) {\n            if (DOM.$isFormElement(ev)) {\n                this._$lastDomInput = ev.target;\n            } else {\n                if (this._$lastDomInput) {\n                    try {\n                        this._$lastDomInput.blur();\n                    } catch (e) {\n                    }\n                    this._$lastDomInput = null;\n                }\n            }\n        }\n        _onClick(ev) {\n            let hitWindow, hitMenu;\n            let el = ev.target;\n            while (el.parentNode) {\n                if (el.tagName.match(/^GUI\\-MENU/)) {\n                    hitMenu = el;\n                } else if (el.tagName.match(/^APPLICATION\\-WINDOW/)) {\n                    hitWindow = true;\n                }\n                if (hitWindow || hitMenu) {\n                    break;\n                }\n                el = el.parentNode;\n            }\n            if (hitMenu) {\n                if (hitMenu.tagName === 'GUI-MENU-ENTRY') {\n                    if (hitMenu.getAttribute('data-disabled') !== 'true') {\n                        if (!DOM.$hasClass(hitMenu, 'gui-menu-expand')) {\n                            hitMenu = null;\n                        }\n                    }\n                } else if (hitMenu.tagName === 'GUI-MENU-BAR') {\n                    hitMenu = null;\n                }\n            }\n            if (!hitMenu) {\n                OSjs.require(\"gui/menu\").blur();\n            }\n            if (ev.target.tagName === 'BODY') {\n                const win = this.getCurrentWindow();\n                if (win) {\n                    win._blur();\n                }\n            }\n            Theme.themeAction('event', [ev]);\n        }\n        _onKeyUp(ev) {\n            const win = this.getCurrentWindow();\n            this.onKeyUp(ev, win);\n            if (win) {\n                return win._onKeyEvent(ev, 'keyup');\n            }\n            return true;\n        }\n        _onKeyDown(ev) {\n            const win = this.getCurrentWindow();\n            const reacted = (() => {\n                const combination = this.onKeyDown(ev, win);\n                if (win && !combination) {\n                    win._onKeyEvent(ev, 'keydown');\n                }\n                return combination;\n            })();\n            if (checkPrevent(ev, win) || reacted) {\n                ev.preventDefault();\n            }\n            return true;\n        }\n        _onKeyPress(ev) {\n            if (checkForbiddenKeyCombo(ev)) {\n                ev.preventDefault();\n            }\n            const win = this.getCurrentWindow();\n            if (win) {\n                return win._onKeyEvent(ev, 'keypress');\n            }\n            return true;\n        }\n        _onBeforeUnload(ev) {\n            if (b.getConfig('ShowQuitWarning')) {\n                return a._('MSG_SESSION_WARNING');\n            }\n            return null;\n        }\n        _onError(message, url, linenumber, column, exception) {\n            if (typeof exception === 'string') {\n                exception = null;\n            }\n            exception = exception || {\n                name: 'window::onerror()',\n                fileName: url,\n                lineNumber: linenumber + ':' + column,\n                message: message\n            };\n            console.warn('window::onerror()', arguments);\n            OSjs.error(a._('ERR_JAVASCRIPT_EXCEPTION'), a._('ERR_JAVACSRIPT_EXCEPTION_DESC'), a._('BUGREPORT_MSG'), exception, true);\n            return false;\n        }\n        getDefaultSetting() {\n            return null;\n        }\n        getPanel() {\n            return null;\n        }\n        getPanels() {\n            return [];\n        }\n        setSetting(k, v) {\n            return this._settings.set(k, v);\n        }\n        getWindowSpace() {\n            return {\n                top: 0,\n                left: 0,\n                width: document.body.offsetWidth,\n                height: document.body.offsetHeight\n            };\n        }\n        getWindowPosition() {\n            const winCount = this._windows.reduce(function (count, win) {\n                return win === null ? count : count + 1;\n            }, 0);\n            return {\n                x: 10 * winCount,\n                y: 10 * winCount\n            };\n        }\n        getSetting(k) {\n            return this._settings.get(k);\n        }\n        getSettings() {\n            return this._settings.get();\n        }\n        getWindows() {\n            return this._windows.filter(w => !!w);\n        }\n        getCurrentWindow() {\n            return this._currentWin;\n        }\n        setCurrentWindow(w) {\n            this._currentWin = w || null;\n        }\n        getLastWindow() {\n            return this._lastWin;\n        }\n        setLastWindow(w) {\n            this._lastWin = w || null;\n        }\n        getMouseLocked() {\n            return this._mouselock;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/gui',[\n    './dom',\n    './events',\n    './compability',\n    '../core/package-manager',\n    '../core/theme'\n], function (DOM, Events, Compability, PackageManager, Theme) {\n    'use strict';\n    function getWindowId(el) {\n        while (el.parentNode) {\n            const attr = el.getAttribute('data-window-id');\n            if (attr !== null) {\n                return parseInt(attr, 10);\n            }\n            el = el.parentNode;\n        }\n        return null;\n    }\n    function getLabel(el) {\n        const label = el.getAttribute('data-label');\n        return label || '';\n    }\n    function getValueLabel(el, attr) {\n        let label = attr ? el.getAttribute('data-label') : null;\n        if (el.childNodes.length && el.childNodes[0].nodeType === 3 && el.childNodes[0].nodeValue) {\n            label = el.childNodes[0].nodeValue;\n            DOM.$empty(el);\n        }\n        return label || '';\n    }\n    function getViewNodeValue(el) {\n        let value = el.getAttribute('data-value');\n        if (typeof value === 'string' && value.match(/^\\[|\\{/)) {\n            try {\n                value = JSON.parse(value);\n            } catch (e) {\n                value = null;\n            }\n        }\n        return value;\n    }\n    function getIcon(el, win) {\n        let image = el.getAttribute('data-icon');\n        if (image) {\n            return win ? PackageManager.getPackageResource(win._app, image) : image;\n        }\n        image = el.getAttribute('data-stock-icon');\n        if (image && image !== 'undefined') {\n            let size = '16x16';\n            try {\n                let spl = image.split('/');\n                let tmp = spl.shift();\n                let siz = tmp.match(/^\\d+x\\d+/);\n                if (siz) {\n                    size = siz[0];\n                    image = spl.join('/');\n                }\n                image = Theme.getIcon(image, size);\n            } catch (e) {\n            }\n            return image;\n        }\n        return null;\n    }\n    function getProperty(el, param, tagName) {\n        tagName = tagName || el.tagName.toLowerCase();\n        const isDataView = tagName.match(/^gui\\-(tree|icon|list|file)\\-view$/);\n        if (param === 'value' && !isDataView) {\n            if ([\n                    'gui-text',\n                    'gui-password',\n                    'gui-textarea',\n                    'gui-slider',\n                    'gui-select',\n                    'gui-select-list'\n                ].indexOf(tagName) >= 0) {\n                return el.querySelector('input, textarea, select').value;\n            }\n            if ([\n                    'gui-checkbox',\n                    'gui-radio',\n                    'gui-switch'\n                ].indexOf(tagName) >= 0) {\n                return !!el.querySelector('input').checked;\n            }\n            return null;\n        }\n        //if ((param === 'value' || param === 'selected') && isDataView) {\n        //    return GUIElement.createFromNode(el).values();\n        //}\n        return el.getAttribute('data-' + param);\n    }\n    function createInputLabel(el, type, input, label) {\n        label = label || getLabel(el);\n        if (label) {\n            const lbl = document.createElement('label');\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(label));\n            if (type === 'checkbox' || type === 'radio') {\n                lbl.appendChild(input);\n                lbl.appendChild(span);\n            } else {\n                lbl.appendChild(span);\n                lbl.appendChild(input);\n            }\n            el.appendChild(lbl);\n        } else {\n            el.appendChild(input);\n        }\n    }\n    function setProperty(el, param, value, tagName) {\n        tagName = tagName || el.tagName.toLowerCase();\n        function _setKnownAttribute(i, k, v, a) {\n            if (v) {\n                i.setAttribute(k, k);\n            } else {\n                i.removeAttribute(k);\n            }\n            if (a) {\n                el.setAttribute('aria-' + k, String(value === true));\n            }\n        }\n        function _setValueAttribute(i, k, v) {\n            if (typeof v === 'object') {\n                try {\n                    v = JSON.stringify(value);\n                } catch (e) {\n                }\n            }\n            i.setAttribute(k, String(v));\n        }\n        const inner = el.children[0];\n        let accept = [\n            'gui-slider',\n            'gui-text',\n            'gui-password',\n            'gui-textarea',\n            'gui-checkbox',\n            'gui-radio',\n            'gui-select',\n            'gui-select-list',\n            'gui-button'\n        ];\n        (function () {\n            let firstChild;\n            const params = {\n                readonly: function () {\n                    _setKnownAttribute(firstChild, 'readonly', value, true);\n                },\n                disabled: function () {\n                    _setKnownAttribute(firstChild, 'disabled', value, true);\n                },\n                value: function () {\n                    if (tagName === 'gui-radio' || tagName === 'gui-checkbox') {\n                        _setKnownAttribute(firstChild, 'checked', value);\n                        firstChild.checked = !!value;\n                    }\n                    firstChild.value = value;\n                },\n                label: function () {\n                    el.appendChild(firstChild);\n                    DOM.$remove(el.querySelector('label'));\n                    createInputLabel(el, tagName.replace(/^gui\\-/, ''), firstChild, value);\n                }\n            };\n            if (accept.indexOf(tagName) >= 0) {\n                firstChild = el.querySelector('textarea, input, select, button');\n                if (firstChild) {\n                    if (params[param]) {\n                        params[param]();\n                    } else {\n                        _setValueAttribute(firstChild, param, value || '');\n                    }\n                }\n            }\n        }());\n        accept = [\n            'gui-image',\n            'gui-audio',\n            'gui-video'\n        ];\n        if ([\n                'src',\n                'controls',\n                'autoplay',\n                'alt'\n            ].indexOf(param) >= 0 && accept.indexOf(tagName) >= 0) {\n            inner[param] = value;\n        }\n        if ([\n                '_id',\n                '_class',\n                '_style'\n            ].indexOf(param) >= 0) {\n            inner.setAttribute(param.replace(/^_/, ''), value);\n            return;\n        }\n        if (param !== 'value') {\n            _setValueAttribute(el, 'data-' + param, value);\n        }\n    }\n    function createElement(tagName, params, ignoreParams) {\n        ignoreParams = ignoreParams || [];\n        const el = document.createElement(tagName);\n        const classMap = {\n            textalign: function (v) {\n                DOM.$addClass(el, 'gui-align-' + v);\n            },\n            className: function (v) {\n                DOM.$addClass(el, v);\n            }\n        };\n        function getValue(k, value) {\n            if (typeof value === 'boolean') {\n                value = value ? 'true' : 'false';\n            } else if (typeof value === 'object') {\n                try {\n                    value = JSON.stringify(value);\n                } catch (e) {\n                }\n            }\n            return value;\n        }\n        if (typeof params === 'object') {\n            Object.keys(params).forEach(function (k) {\n                if (ignoreParams.indexOf(k) >= 0) {\n                    return;\n                }\n                const value = params[k];\n                if (typeof value !== 'undefined' && typeof value !== 'function') {\n                    if (classMap[k]) {\n                        classMap[k](value);\n                        return;\n                    }\n                    const fvalue = getValue(k, value);\n                    el.setAttribute('data-' + k, fvalue);\n                }\n            });\n        }\n        return el;\n    }\n    function setFlexbox(el, grow, shrink, basis, checkel) {\n        checkel = checkel || el;\n        (function () {\n            if (typeof basis === 'undefined' || basis === null) {\n                basis = checkel.getAttribute('data-basis') || 'auto';\n            }\n        }());\n        (function () {\n            if (typeof grow === 'undefined' || grow === null) {\n                grow = checkel.getAttribute('data-grow') || 0;\n            }\n        }());\n        (function () {\n            if (typeof shrink === 'undefined' || shrink === null) {\n                shrink = checkel.getAttribute('data-shrink') || 0;\n            }\n        }());\n        const flex = [\n            grow,\n            shrink\n        ];\n        if (basis.length) {\n            flex.push(basis);\n        }\n        const style = flex.join(' ');\n        el.style.webkitBoxFlex = style;\n        el.style.mozBoxFlex = style;\n        el.style.webkitFlex = style;\n        el.style.mozFlex = style;\n        el.style.msFlex = style;\n        el.style.oFlex = style;\n        el.style.flex = style;\n        const align = el.getAttribute('data-align');\n        DOM.$removeClass(el, 'gui-flex-align-start');\n        DOM.$removeClass(el, 'gui-flex-align-end');\n        if (align) {\n            DOM.$addClass(el, 'gui-flex-align-' + align);\n        }\n    }\n    function createDrag(el, onDown, onMove, onUp) {\n        onDown = onDown || function () {\n        };\n        onMove = onMove || function () {\n        };\n        onUp = onUp || function () {\n        };\n        let startX, startY, currentX, currentY;\n        let dragging = false;\n        function _onMouseMove(ev, pos, touchDevice) {\n            ev.preventDefault();\n            if (dragging) {\n                currentX = pos.x;\n                currentY = pos.y;\n                const diffX = currentX - startX;\n                const diffY = currentY - startY;\n                onMove(ev, {\n                    x: diffX,\n                    y: diffY\n                }, {\n                    x: currentX,\n                    y: currentY\n                });\n            }\n        }\n        function _onMouseUp(ev, pos, touchDevice) {\n            onUp(ev, {\n                x: currentX,\n                y: currentY\n            });\n            dragging = false;\n            Events.$unbind(window, 'pointerup:guidrag');\n            Events.$unbind(window, 'pointermove:guidrag');\n        }\n        function _onMouseDown(ev, pos, touchDevice) {\n            ev.preventDefault();\n            startX = pos.x;\n            startY = pos.y;\n            onDown(ev, {\n                x: startX,\n                y: startY\n            });\n            dragging = true;\n            Events.$bind(window, 'pointerup:guidrag', _onMouseUp, false);\n            Events.$bind(window, 'pointermove:guidrag', _onMouseMove, false);\n        }\n        Events.$bind(el, 'pointerdown', _onMouseDown, false);\n    }\n    function getNextElement(prev, current, root) {\n        function getElements() {\n            const ignore_roles = [\n                'menu',\n                'menuitem',\n                'grid',\n                'gridcell',\n                'listitem'\n            ];\n            const list = [];\n            root.querySelectorAll('.gui-element').forEach(function (e) {\n                if (DOM.$hasClass(e, 'gui-focus-element') || ignore_roles.indexOf(e.getAttribute('role')) >= 0 || e.getAttribute('data-disabled') === 'true') {\n                    return;\n                }\n                if (e.offsetParent) {\n                    list.push(e);\n                }\n            });\n            return list;\n        }\n        function getCurrentIndex(els, m) {\n            let found = -1;\n            if (m) {\n                els.every(function (e, idx) {\n                    if (e === m) {\n                        found = idx;\n                    }\n                    return found === -1;\n                });\n            }\n            return found;\n        }\n        function getCurrentParent(els, m) {\n            if (m) {\n                let cur = m;\n                while (cur.parentNode) {\n                    if (DOM.$hasClass(cur, 'gui-element')) {\n                        return cur;\n                    }\n                    cur = cur.parentNode;\n                }\n                return null;\n            }\n            return els[0];\n        }\n        function getNextIndex(els, p, i) {\n            if (prev) {\n                i = i <= 0 ? els.length - 1 : i - 1;\n            } else {\n                i = i >= els.length - 1 ? 0 : i + 1;\n            }\n            return i;\n        }\n        function getNext(els, i) {\n            let next = els[i];\n            if (next.tagName.match(/^GUI\\-(BUTTON|TEXT|PASSWORD|SWITCH|CHECKBOX|RADIO|SELECT)/)) {\n                next = next.querySelectorAll('input, textarea, button, select')[0];\n            }\n            if (next.tagName === 'GUI-FILE-VIEW') {\n                next = next.children[0];\n            }\n            return next;\n        }\n        if (root) {\n            const elements = getElements();\n            if (elements.length) {\n                const currentParent = getCurrentParent(elements, current);\n                const currentIndex = getCurrentIndex(elements, currentParent);\n                if (currentIndex >= 0) {\n                    const nextIndex = getNextIndex(elements, currentParent, currentIndex);\n                    return getNext(elements, nextIndex);\n                }\n            }\n        }\n        return null;\n    }\n    function createDraggable(el, args) {\n        args = Object.assign({}, {\n            type: null,\n            effect: 'move',\n            data: null,\n            mime: 'application/json',\n            dragImage: null,\n            onStart: function () {\n                return true;\n            },\n            onEnd: function () {\n                return true;\n            }\n        }, args);\n        if (Compability.isIE()) {\n            args.mime = 'text';\n        }\n        function _toString(mime) {\n            return JSON.stringify({\n                type: args.type,\n                effect: args.effect,\n                data: args.data,\n                mime: args.mime\n            });\n        }\n        function _dragStart(ev) {\n            try {\n                ev.dataTransfer.effectAllowed = args.effect;\n                if (args.dragImage && typeof args.dragImage === 'function') {\n                    if (ev.dataTransfer.setDragImage) {\n                        const dragImage = args.dragImage(ev, el);\n                        if (dragImage) {\n                            const dragEl = dragImage.element;\n                            const dragPos = dragImage.offset;\n                            document.body.appendChild(dragEl);\n                            ev.dataTransfer.setDragImage(dragEl, dragPos.x, dragPos.y);\n                        }\n                    }\n                }\n                ev.dataTransfer.setData(args.mime, _toString(args.mime));\n            } catch (e) {\n                console.warn('Failed to dragstart: ' + e);\n                console.warn(e.stack);\n            }\n        }\n        el.setAttribute('draggable', 'true');\n        el.setAttribute('aria-grabbed', 'false');\n        Events.$bind(el, 'dragstart', function (ev) {\n            this.setAttribute('aria-grabbed', 'true');\n            this.style.opacity = '0.4';\n            if (ev.dataTransfer) {\n                _dragStart(ev);\n            }\n            return args.onStart(ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragend', function (ev) {\n            this.setAttribute('aria-grabbed', 'false');\n            this.style.opacity = '1.0';\n            return args.onEnd(ev, this, args);\n        }, false);\n    }\n    function createDroppable(el, args) {\n        args = Object.assign({}, {\n            accept: null,\n            effect: 'move',\n            mime: 'application/json',\n            files: true,\n            onFilesDropped: function () {\n                return true;\n            },\n            onItemDropped: function () {\n                return true;\n            },\n            onEnter: function () {\n                return true;\n            },\n            onOver: function () {\n                return true;\n            },\n            onLeave: function () {\n                return true;\n            },\n            onDrop: function () {\n                return true;\n            }\n        }, args);\n        if (Compability.isIE()) {\n            args.mime = 'text';\n        }\n        function getParent(start, matcher) {\n            if (start === matcher) {\n                return true;\n            }\n            let i = 10;\n            while (start && i > 0) {\n                if (start === matcher) {\n                    return true;\n                }\n                start = start.parentNode;\n                i--;\n            }\n            return false;\n        }\n        function _doDrop(ev, el) {\n            if (!ev.dataTransfer) {\n                return true;\n            }\n            if (args.files) {\n                const files = ev.dataTransfer.files;\n                if (files && files.length) {\n                    return args.onFilesDropped(ev, el, files, args);\n                }\n            }\n            try {\n                const data = ev.dataTransfer.getData(args.mime);\n                const item = JSON.parse(data);\n                if (args.accept === null || args.accept === item.type) {\n                    return args.onItemDropped(ev, el, item, args);\n                }\n            } catch (e) {\n                console.warn('Failed to drop: ' + e);\n            }\n            return false;\n        }\n        function _onDrop(ev, el) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            const result = _doDrop(ev, el);\n            args.onDrop(ev, el);\n            return result;\n        }\n        el.setAttribute('aria-dropeffect', args.effect);\n        Events.$bind(el, 'drop', function (ev) {\n            return _onDrop(ev, this);\n        }, false);\n        Events.$bind(el, 'dragenter', function (ev) {\n            return args.onEnter.call(this, ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragover', function (ev) {\n            ev.preventDefault();\n            if (!getParent(ev.target, el)) {\n                return false;\n            }\n            ev.stopPropagation();\n            ev.dataTransfer.dropEffect = args.effect;\n            return args.onOver.call(this, ev, this, args);\n        }, false);\n        Events.$bind(el, 'dragleave', function (ev) {\n            return args.onLeave.call(this, ev, this, args);\n        }, false);\n    }\n    return {\n        getWindowId: getWindowId,\n        getLabel: getLabel,\n        getValueLabel: getValueLabel,\n        getViewNodeValue: getViewNodeValue,\n        getIcon: getIcon,\n        getProperty: getProperty,\n        createInputLabel: createInputLabel,\n        setProperty: setProperty,\n        createElement: createElement,\n        setFlexbox: setFlexbox,\n        createDrag: createDrag,\n        getNextElement: getNextElement,\n        createDraggable: createDraggable,\n        createDroppable: createDroppable\n    };\n});\ndefine('skylark-osjsv2-client/gui/element',[\n    '../utils/dom',\n    '../utils/gui',\n    '../core/locales',\n    '../core/package-manager'\n], function (DOM, GUI, a, PackageManager) {\n    'use strict';\n    let REGISTRY = {};\n    function getFocusElement(inst) {\n        const tagMap = {\n            'gui-switch': 'button',\n            'gui-list-view': 'textarea',\n            'gui-tree-view': 'textarea',\n            'gui-icon-view': 'textarea',\n            'gui-input-modal': 'button'\n        };\n        if (tagMap[inst.tagName]) {\n            return inst.$element.querySelector(tagMap[inst.tagName]);\n        }\n        return inst.$element.firstChild || inst.$element;\n    }\n    function parseDynamic(node, win, args) {\n        args = args || {};\n        const translator = args.undefined || a._;\n        node.querySelectorAll('*[data-label]').forEach(function (el) {\n            const label = translator(el.getAttribute('data-label'));\n            el.setAttribute('data-label', label);\n        });\n        node.querySelectorAll('gui-label, gui-button, gui-list-view-column, gui-select-option, gui-select-list-option').forEach(function (el) {\n            if (!el.children.length && !el.getAttribute('data-no-translate')) {\n                const lbl = GUI.getValueLabel(el);\n                el.appendChild(document.createTextNode(translator(lbl)));\n            }\n        });\n        node.querySelectorAll('gui-button').forEach(function (el) {\n            const label = GUI.getValueLabel(el);\n            if (label) {\n                el.appendChild(document.createTextNode(a._(label)));\n            }\n        });\n        node.querySelectorAll('*[data-icon], *[data-stock-icon]').forEach(function (el) {\n            const image = GUI.getIcon(el, win);\n            el.setAttribute('data-icon', image);\n        });\n        node.querySelectorAll('*[data-src],*[src]').forEach(function (el) {\n            const isNative = el.hasAttribute('src');\n            const src = isNative ? el.getAttribute('src') : el.getAttribute('data-src') || '';\n            if (win && win._app && !src.match(/^(https?:)?\\//)) {\n                const source = PackageManager.getPackageResource(win._app, src);\n                el.setAttribute(isNative ? 'src' : 'data-src', source);\n            }\n        });\n    }\n    function createElementInstance(tagName, el, q, buildArgs) {\n        tagName = tagName || el.tagName.toLowerCase();\n        let instance;\n        if (REGISTRY[tagName]) {\n            instance = new REGISTRY[tagName].component(el, q);\n            if (buildArgs) {\n                instance.build.apply(instance, buildArgs);\n            }\n        }\n        return instance;\n    }\n    return class GUIElement {\n        constructor(el, q) {\n            this.$element = el || null;\n            this.tagName = el ? el.tagName.toLowerCase() : null;\n            this.oldDisplay = null;\n            if (!el) {\n                console.warn('GUIElement() was constructed without a DOM element', q);\n            }\n        }\n        build() {\n            return this;\n        }\n        remove() {\n            this.$element = DOM.$remove(this.$element);\n            return this;\n        }\n        empty() {\n            DOM.$empty(this.$element);\n            return this;\n        }\n        blur() {\n            if (this.$element) {\n                const firstChild = getFocusElement(this);\n                if (firstChild) {\n                    firstChild.blur();\n                }\n            }\n            return this;\n        }\n        focus() {\n            if (this.$element) {\n                const firstChild = getFocusElement(this);\n                if (firstChild) {\n                    firstChild.focus();\n                }\n            }\n            return this;\n        }\n        show() {\n            if (this.$element && !this.$element.offsetParent) {\n                if (this.$element) {\n                    this.$element.style.display = this.oldDisplay || '';\n                }\n            }\n            return this;\n        }\n        hide() {\n            if (this.$element && this.$element.offsetParent) {\n                if (!this.oldDisplay) {\n                    this.oldDisplay = this.$element.style.display;\n                }\n                this.$element.style.display = 'none';\n            }\n            return this;\n        }\n        on(evName, callback, args) {\n            return this;\n        }\n        son(evName, thisArg, callback, args) {\n            return this.on(evName, function () {\n                const args = Array.prototype.slice.call(arguments);\n                args.unshift(this);\n                callback.apply(thisArg, args);\n            }, args);\n        }\n        set(param, value, arg, arg2) {\n            if (this.$element) {\n                GUI.setProperty(this.$element, param, value, arg, arg2);\n            }\n            return this;\n        }\n        get(param) {\n            if (this.$element) {\n                return GUIElement.getProperty(this.$element, param); // modified by lwf\n            }\n            return null;\n        }\n        append(el) {\n            if (el instanceof GUIElement) {\n                el = el.$element;\n            } else if (typeof el === 'string' || typeof el === 'number') {\n                el = document.createTextNode(String(el));\n            }\n            let outer = document.createElement('div');\n            outer.appendChild(el);\n            this._append(outer);\n            outer = null;\n            return this;\n        }\n        appendHTML(html, win, args) {\n            const el = document.createElement('div');\n            el.innerHTML = html;\n            return this._append(el, win, args);\n        }\n        _append(el, win, args) {\n            if (el instanceof Element) {\n                GUIElement.parseNode(win, el, null, args);\n            }\n            while (el.childNodes.length) {\n                this.$element.appendChild(el.childNodes[0]);\n            }\n            el = null;\n            return this;\n        }\n        querySelector(q, rui) {\n            const el = this.$element.querySelector(q);\n            if (rui) {\n                return GUIElement.createFromNode(el, q);\n            }\n            return el;\n        }\n        querySelectorAll(q, rui) {\n            let el = this.$element.querySelectorAll(q);\n            if (rui) {\n                el = el.map(i => {\n                    return GUIElement.createFromNode(i, q);\n                });\n            }\n            return el;\n        }\n        css(k, v) {\n            DOM.$css(this.$element, k, v);\n            return this;\n        }\n        position() {\n            return DOM.$position(this.$element);\n        }\n        _call(method, args, thisArg) {\n            if (arguments.length < 3) {\n                console.warn('Element::_call(\"methodName\") is DEPRECATED, use \"instance.methodName()\" instead');\n            }\n            try {\n                if (typeof this._call === 'function') {\n                    return this._call(method, args);\n                }\n                return this[method](args);\n            } catch (e) {\n                console.warn(e.stack, e);\n            }\n            return null;\n        }\n        fn(name, args, thisArg) {\n            console.warn('Element::fn(\"methodName\") is DEPRECATED, use \"instance.methodName()\" instead');\n            args = args || [];\n            thisArg = thisArg || this;\n            return this.fn(name, args, thisArg);\n        }\n        static createInto(tagName, params, parentNode, applyArgs, win) {\n            if (parentNode instanceof GUIElement) {\n                parentNode = parentNode.$element;\n            }\n            const gel = GUIElement.create(tagName, params, applyArgs, win);\n            parentNode.appendChild(gel.$element);\n            return gel;\n        }\n        static createFromNode(el, q, tagName) {\n            if (el) {\n                const instance = createElementInstance(null, el, q);\n                if (instance) {\n                    return instance;\n                }\n            }\n            return new GUIElement(el, q);\n        }\n\n        static getProperty(el, param, tagName) { // added by lwf\n            tagName = tagName || el.tagName.toLowerCase();\n            const isDataView = tagName.match(/^gui\\-(tree|icon|list|file)\\-view$/);\n            if ((param === 'value' || param === 'selected') && isDataView) {\n                return GUIElement.createFromNode(el).values();\n            }\n\n            return GUI.getProperty(el,param,tagName);\n        }\n\n        static create(tagName, params, applyArgs, win) {\n            tagName = tagName || '';\n            applyArgs = applyArgs || {};\n            params = params || {};\n            const el = GUI.createElement(tagName, params);\n            return createElementInstance(null, el, null, [\n                applyArgs,\n                win\n            ]);\n        }\n        static createInstance(el, q, tagName) {\n            console.warn('Element::createInstance() is DEPRECATED, use Element::createFromNode() instead');\n            return this.createFromNode(el, q, tagName);\n        }\n        static parseNode(win, node, type, args, onparse, id) {\n            onparse = onparse || function () {\n            };\n            args = args || {};\n            type = type || 'snipplet';\n            node.querySelectorAll('*').forEach(el => {\n                const lcase = el.tagName.toLowerCase();\n                if (lcase.match(/^gui\\-/) && !lcase.match(/(\\-container|\\-(h|v)box|\\-columns?|\\-rows?|(status|tool)bar|(button|menu)\\-bar|bar\\-entry)$/)) {\n                    DOM.$addClass(el, 'gui-element');\n                }\n            });\n            parseDynamic(node, win, args);\n            onparse(node);\n            Object.keys(REGISTRY).forEach(key => {\n                node.querySelectorAll(key).forEach(pel => {\n                    if (pel._wasParsed || DOM.$hasClass(pel, 'gui-data-view')) {\n                        return;\n                    }\n                    try {\n                        createElementInstance(key, pel, null, []);\n                    } catch (e) {\n                        console.warn('parseNode()', id, type, win, 'exception');\n                        console.warn(e, e.stack);\n                    }\n                    pel._wasParsed = true;\n                });\n            });\n        }\n        static register(data, classRef) {\n            const name = data.tagName;\n            if (REGISTRY[name]) {\n                throw new Error('GUI Element \"' + name + '\" already exists');\n            }\n            REGISTRY[name] = (() => {\n                const metadata = Object.assign({}, {\n                    type: 'element',\n                    allowedChildren: [],\n                    allowedParents: []\n                }, data);\n                if (metadata.parent) {\n                    delete metadata.parent;\n                }\n                if (metadata.type === 'input') {\n                    metadata.allowedChildren = true;\n                } else if (metadata.type !== 'container') {\n                    metadata.allowedChildren = false;\n                }\n                return {\n                    metadata: metadata,\n                    component: classRef\n                };\n            })();\n        }\n        static getRegisteredElement(tagName) {\n            return REGISTRY[tagName];\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/scheme',[\n    'skylark-axios',\n    '../utils/dom',\n    './element',\n    '../core/config'\n], function (axios, DOM, GUIElement, a) {\n    'use strict';\n    function addChildren(frag, root, before) {\n        if (frag) {\n            const children = frag.children;\n            let i = 0;\n            while (children.length && i < 10000) {\n                if (before) {\n                    root.parentNode.insertBefore(children[0], root);\n                } else {\n                    root.appendChild(children[0]);\n                }\n                i++;\n            }\n        }\n    }\n    function resolveFragments(scheme, node) {\n        function _resolve() {\n            const nodes = node.querySelectorAll('gui-fragment');\n            if (nodes.length) {\n                nodes.forEach(function (el) {\n                    const id = el.getAttribute('data-fragment-id');\n                    if (id) {\n                        const frag = scheme.getFragment(id, 'application-fragment');\n                        if (frag) {\n                            addChildren(frag.cloneNode(true), el.parentNode);\n                        } else {\n                            console.warn('Fragment', id, 'not found');\n                        }\n                    }\n                    DOM.$remove(el);\n                });\n                return true;\n            }\n            return false;\n        }\n        if (scheme) {\n            let resolving = true;\n            while (resolving) {\n                resolving = _resolve();\n            }\n        }\n    }\n    function removeSelfClosingTags(str) {\n        const split = (str || '').split('/>');\n        let newhtml = '';\n        for (let i = 0; i < split.length - 1; i++) {\n            const edsplit = split[i].split('<');\n            newhtml += split[i] + '></' + edsplit[edsplit.length - 1].split(' ')[0] + '>';\n        }\n        return newhtml + split[split.length - 1];\n    }\n    function cleanScheme(html) {\n        return DOM.$clean(removeSelfClosingTags(html));\n    }\n    return class GUIScheme {\n        constructor(url) {\n            console.debug('GUIScheme::construct()', url);\n            this.url = url;\n            this.scheme = null;\n            this.triggers = { render: [] };\n        }\n        destroy() {\n            DOM.$empty(this.scheme);\n            this.scheme = null;\n            this.triggers = {};\n        }\n        on(f, fn) {\n            this.triggers[f].push(fn);\n        }\n        _trigger(f, args) {\n            args = args || [];\n            if (this.triggers[f]) {\n                this.triggers[f].forEach(fn => {\n                    fn.apply(this, args);\n                });\n            }\n        }\n        _load(html, src) {\n            let doc = document.createDocumentFragment();\n            let wrapper = document.createElement('div');\n            wrapper.innerHTML = html;\n            doc.appendChild(wrapper);\n            this.scheme = doc.cloneNode(true);\n            if (a.getConfig('DebugScheme')) {\n                console.group('Scheme::_load() validation', src);\n                this.scheme.querySelectorAll('*').forEach(node => {\n                    const tagName = node.tagName.toLowerCase();\n                    const gelData = GUIElement.getRegisteredElement(tagName);\n                    if (gelData) {\n                        const ac = gelData.metadata.allowedChildren;\n                        if (ac instanceof Array && ac.length) {\n                            const childrenTagNames = node.children.map(sNode => {\n                                return sNode.tagName.toLowerCase();\n                            });\n                            childrenTagNames.forEach((chk, idx) => {\n                                const found = ac.indexOf(chk);\n                                if (found === -1) {\n                                    console.warn(chk, node.children[idx], 'is not a valid child of type', tagName);\n                                }\n                            });\n                        }\n                        const ap = gelData.metadata.allowedParents;\n                        if (ap instanceof Array && ap.length) {\n                            const parentTagName = node.parentNode.tagName.toLowerCase();\n                            if (ap.indexOf(parentTagName) === -1) {\n                                console.warn(parentTagName, node.parentNode, 'is in an invalid parent of type', tagName);\n                            }\n                        }\n                    }\n                });\n                console.groupEnd();\n            }\n            wrapper = null;\n            doc = null;\n        }\n        load(cb, cbxhr) {\n            cbxhr = cbxhr || function () {\n            };\n            console.debug('GUIScheme::load()', this.url);\n            let src = this.url;\n            if (src.substr(0, 1) !== '/' && !src.match(/^(https?|ftp)/)) {\n                src = a.getBrowserPath(src);\n            }\n            axios({\n                url: src,\n                method: 'GET'\n            }).then(response => {\n                const html = cleanScheme(response.data);\n                cbxhr(false, html);\n                this._load(html, src);\n                cb(false, this.scheme);\n            }).catch(err => {\n                cb('Failed to fetch scheme: ' + err.message);\n                cbxhr(true);\n            });\n        }\n        getFragment(id, type) {\n            let content = null;\n            if (id) {\n                if (type) {\n                    content = this.scheme.querySelector(type + '[data-id=\"' + id + '\"]');\n                } else {\n                    content = this.scheme.querySelector('application-window[data-id=\"' + id + '\"]') || this.scheme.querySelector('application-dialog[data-id=\"' + id + '\"]') || this.scheme.querySelector('application-fragment[data-id=\"' + id + '\"]');\n                }\n            }\n            return content;\n        }\n        parse(id, type, win, onparse, args) {\n            const content = this.getFragment(id, type);\n            console.debug('GUIScheme::parse()', id);\n            if (!content) {\n                console.error('GUIScheme::parse()', 'No fragment found', id + '@' + type);\n                return null;\n            }\n            type = type || content.tagName.toLowerCase();\n            args = args || {};\n            if (content) {\n                const node = content.cloneNode(true);\n                if (args.resolve !== false) {\n                    resolveFragments(this, node);\n                }\n                GUIElement.parseNode(win, node, type, args, onparse, id);\n                return node;\n            }\n            return null;\n        }\n        render(win, id, root, type, onparse, args) {\n            root = root || win._getRoot();\n            if (root instanceof GUIElement) {\n                root = root.$element;\n            }\n            function setWindowProperties(frag) {\n                if (frag) {\n                    const width = parseInt(frag.getAttribute('data-width'), 10) || 0;\n                    const height = parseInt(frag.getAttribute('data-height'), 10) || 0;\n                    const allow_maximize = frag.getAttribute('data-allow_maximize');\n                    const allow_minimize = frag.getAttribute('data-allow_minimize');\n                    const allow_close = frag.getAttribute('data-allow_close');\n                    const allow_resize = frag.getAttribute('data-allow_resize');\n                    if (!isNaN(width) && width > 0 || !isNaN(height) && height > 0) {\n                        win._resize(width, height);\n                    }\n                    win._setProperty('allow_maximize', allow_maximize);\n                    win._setProperty('allow_minimize', allow_minimize);\n                    win._setProperty('allow_close', allow_close);\n                    win._setProperty('allow_resize', allow_resize);\n                }\n            }\n            console.debug('GUIScheme::render()', id);\n            const content = this.parse(id, type, win, onparse, args);\n            addChildren(content, root);\n            root.querySelectorAll('application-fragment').forEach(e => {\n                DOM.$remove(e);\n            });\n            if (!win._restored) {\n                setWindowProperties(this.getFragment(id));\n            }\n            this._trigger('render', [root]);\n        }\n        getHTML() {\n            return this.scheme.firstChild.innerHTML;\n        }\n        static fromString(str) {\n            const inst = new GUIScheme(null);\n            const cleaned = cleanScheme(str);\n            inst._load(cleaned, '<html>');\n            return inst;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/menu',[\n    '../utils/gui',\n    '../utils/dom',\n    '../utils/events',\n    './element',\n    '../core/window-manager',\n    '../helpers/hooks'\n], function (GUI, DOM, Events, GUIElement, WindowManager, a) {\n    'use strict';\n    let lastMenu;\n    function clickWrapper(ev, pos, onclick, original) {\n        ev.stopPropagation();\n        let t = ev.target;\n        if (t && t.tagName === 'LABEL') {\n            t = t.parentNode;\n        }\n        let isExpander = false;\n        if (t && t.tagName === 'GUI-MENU-ENTRY') {\n            let subMenu = t.querySelector('gui-menu');\n            isExpander = !!subMenu;\n            try {\n                if (isExpander && !ev.isTrusted) {\n                    t.parentNode.querySelectorAll('gui-menu-entry').forEach(pn => {\n                        DOM.$removeClass(pn, 'active');\n                    });\n                    DOM.$addClass(t, 'active');\n                }\n            } catch (e) {\n                console.warn(e);\n            }\n            onclick(ev, pos, t, original, isExpander);\n        }\n    }\n    function clamp(r) {\n        function _clamp(rm) {\n            rm.querySelectorAll('gui-menu-entry').forEach(function (srm) {\n                const sm = srm.querySelector('gui-menu');\n                if (sm) {\n                    sm.style.left = String(-parseInt(sm.offsetWidth, 10)) + 'px';\n                    _clamp(sm);\n                }\n            });\n        }\n        const pos = DOM.$position(r);\n        if (pos && window.innerWidth - pos.right < r.offsetWidth) {\n            DOM.$addClass(r, 'gui-overflowing');\n            _clamp(r);\n        }\n        DOM.$addClass(r, 'gui-showing');\n    }\n    function clampSubMenu(sm) {\n        if (sm) {\n            const pos = DOM.$position(sm);\n            const wm = WindowManager.instance;\n            const space = wm.getWindowSpace(true);\n            if (pos) {\n                const diff = space.height - pos.bottom;\n                if (diff < 0) {\n                    sm.style.marginTop = String(diff) + 'px';\n                }\n            }\n        }\n    }\n    function blur(ev) {\n        if (lastMenu) {\n            lastMenu(ev);\n        }\n        lastMenu = null;\n        a.triggerHook('menuBlur');\n    }\n    function create(items, ev, customInstance) {\n        items = items || [];\n        blur(ev);\n        let root = customInstance;\n        let callbackMap = [];\n        function resolveItems(arr, par) {\n            arr.forEach(function (iter) {\n                const props = {\n                    label: iter.title,\n                    icon: iter.icon,\n                    disabled: iter.disabled,\n                    labelHTML: iter.titleHTML,\n                    type: iter.type,\n                    checked: iter.checked\n                };\n                const entry = GUI.createElement('gui-menu-entry', props);\n                if (iter.menu) {\n                    const nroot = GUI.createElement('gui-menu', {});\n                    resolveItems(iter.menu, nroot);\n                    entry.appendChild(nroot);\n                }\n                if (iter.onClick) {\n                    const index = callbackMap.push(iter.onClick);\n                    entry.setAttribute('data-callback-id', String(index - 1));\n                }\n                par.appendChild(entry);\n            });\n        }\n        if (!root) {\n            root = GUI.createElement('gui-menu', {});\n            resolveItems(items || [], root);\n            GUIElement.createFromNode(root, null, 'gui-menu').build(true);\n            Events.$bind(root, 'mouseover', function (ev, pos) {\n                if (ev.target && ev.target.tagName === 'GUI-MENU-ENTRY') {\n                    setTimeout(() => {\n                        clampSubMenu(ev.target.querySelector('gui-menu'));\n                    }, 1);\n                }\n            }, true);\n            Events.$bind(root, 'click', function (ev, pos) {\n                clickWrapper(ev, pos, function (ev, pos, t, orig, isExpander) {\n                    const index = parseInt(t.getAttribute('data-callback-id'), 10);\n                    if (callbackMap[index]) {\n                        callbackMap[index](ev, pos);\n                    }\n                    if (!isExpander) {\n                        blur(ev);\n                    }\n                });\n            }, true);\n        }\n        if (root.$element) {\n            root = root.$element;\n        }\n        const wm = WindowManager.instance;\n        const space = wm.getWindowSpace(true);\n        const pos = Events.mousePosition(ev);\n        DOM.$addClass(root, 'gui-root-menu');\n        root.style.left = pos.x + 'px';\n        root.style.top = pos.y + 'px';\n        document.body.appendChild(root);\n        setTimeout(function () {\n            const pos = DOM.$position(root);\n            if (pos) {\n                if (pos.right > space.width) {\n                    const newLeft = Math.round(space.width - pos.width);\n                    root.style.left = Math.max(0, newLeft) + 'px';\n                }\n                if (pos.bottom > space.height) {\n                    const newTop = Math.round(space.height - pos.height);\n                    root.style.top = Math.max(0, newTop) + 'px';\n                }\n            }\n            clamp(root);\n            lastMenu = function () {\n                callbackMap = [];\n                if (root) {\n                    root.querySelectorAll('gui-menu-entry').forEach(function (el) {\n                        Events.$unbind(el);\n                    });\n                    Events.$unbind(root);\n                }\n                root = DOM.$remove(root);\n            };\n        }, 1);\n    }\n    function setActive(menu) {\n        blur();\n        lastMenu = menu;\n    }\n    return {\n        clickWrapper: clickWrapper,\n        clamp: clamp,\n        blur: blur,\n        create: create,\n        setActive: setActive\n    };\n});\ndefine('skylark-osjsv2-client/core/window',[\n    '../vfs/file',\n//    './application',\n    './window-manager',\n    '../gui/element',\n    '../gui/scheme',\n    '../helpers/event-handler',\n    './theme',\n    '../utils/dom',\n    '../utils/gui',\n    '../utils/events',\n    '../utils/compability',\n    '../utils/keycodes',\n    '../gui/menu',\n    './locales',\n//    './init'\n], function (FileMetadata, WindowManager, Element, GUIScheme, EventHandler, Theme, DOM, GUI, Events, Compability, Keycodes, Menu, locales) {\n    'use strict';\n    function camelCased(str) {\n        return str.replace(/_([a-z])/g, function (g) {\n            return g[1].toUpperCase();\n        });\n    }\n    const getNextZindex = function () {\n        let _lzindex = 1;\n        let _ltzindex = 100000;\n        return function (ontop) {\n            if (typeof ontop !== 'undefined' && ontop === true) {\n                return _ltzindex += 2;\n            }\n            return _lzindex += 2;\n        };\n    }();\n    function getWindowSpace() {\n        const wm = WindowManager.instance;\n        if (wm) {\n            return wm.getWindowSpace();\n        }\n        return {\n            top: 0,\n            left: 0,\n            width: document.body.offsetWidth,\n            height: document.body.offsetHeight\n        };\n    }\n    function waitForAnimation(win, cb) {\n        const wm = WindowManager.instance;\n        const anim = wm ? wm.getSetting('animations') : false;\n        if (anim) {\n            win._animationCallback = cb;\n        } else {\n            cb();\n        }\n    }\n    const createMediaQueries = function () {\n        let queries;\n        function _createQueries() {\n            let result = {};\n            const wm = WindowManager.instance;\n            if (wm) {\n                const qs = wm.getDefaultSetting('mediaQueries') || {};\n                Object.keys(qs).forEach(function (k) {\n                    if (qs[k]) {\n                        result[k] = function (w, h, ref) {\n                            return w <= qs[k];\n                        };\n                    }\n                });\n            }\n            return result;\n        }\n        return function () {\n            if (!queries) {\n                queries = _createQueries();\n            }\n            return queries;\n        };\n    }();\n    function checkMediaQueries(win) {\n        const wm = WindowManager.instance;\n        if (!win._$element || !wm) {\n            return;\n        }\n        let n = '';\n        let k;\n        const qs = win._properties.media_queries || {};\n        const w = win._$element.offsetWidth;\n        const h = win._$element.offsetHeight;\n        for (k in qs) {\n            if (qs.hasOwnProperty(k)) {\n                if (qs[k](w, h, win)) {\n                    n = k;\n                    break;\n                }\n            }\n        }\n        win._$element.setAttribute('data-media', n);\n    }\n    let _WID = 0;\n    let _DEFAULT_WIDTH = 200;\n    let _DEFAULT_HEIGHT = 200;\n    let _DEFAULT_MIN_HEIGHT = 150;\n    let _DEFAULT_MIN_WIDTH = 150;\n    let _DEFAULT_SND_VOLUME = 1;\n    let _NAMES = [];\n    return class Window {\n        constructor(name, opts, appRef) {\n            if (_NAMES.indexOf(name) >= 0) {\n                throw new Error(locales._('ERR_WIN_DUPLICATE_FMT', name));\n            }\n            //if (appRef && !(appRef instanceof Application)) { // modifed by lwf\n            //    throw new TypeError('appRef given was not instance of Application');\n            //}\n            opts = Object.assign({}, {\n                icon: Theme.getIcon('apps/preferences-system-windows.png'),\n                width: _DEFAULT_WIDTH,\n                height: _DEFAULT_HEIGHT,\n                title: name,\n                tag: name,\n                auto_size: false\n            }, opts);\n            console.group('Window::constructor()', _WID, arguments);\n            this._$element = null;\n            this._$root = null;\n            this._$top = null;\n            this._$winicon = null;\n            this._$loading = null;\n            this._$disabled = null;\n            this._$resize = null;\n            this._$warning = null;\n            this._opts = opts;\n            this._app = appRef || null;\n            this._destroyed = false;\n            this._restored = false;\n            this._loaded = false;\n            this._initialized = false;\n            this._disabled = true;\n            this._loading = false;\n            this._wid = _WID;\n            this._icon = opts.icon;\n            this._name = name;\n            this._title = opts.title;\n            this._tag = opts.tag;\n            this._position = {\n                x: opts.x,\n                y: opts.y\n            };\n            this._dimension = {\n                w: opts.width,\n                h: opts.height\n            };\n            this._children = [];\n            this._parent = null;\n            this._origtitle = this._title;\n            this._lastDimension = this._dimension;\n            this._lastPosition = this._position;\n            this._sound = null;\n            this._soundVolume = _DEFAULT_SND_VOLUME;\n            this._scheme = null;\n            this._properties = {\n                gravity: null,\n                allow_move: true,\n                allow_resize: true,\n                allow_minimize: true,\n                allow_maximize: true,\n                allow_close: true,\n                allow_windowlist: true,\n                allow_drop: false,\n                allow_iconmenu: true,\n                allow_ontop: true,\n                allow_hotkeys: true,\n                allow_session: true,\n                key_capture: false,\n                start_focused: true,\n                min_width: _DEFAULT_MIN_HEIGHT,\n                min_height: _DEFAULT_MIN_WIDTH,\n                max_width: null,\n                max_height: null,\n                media_queries: createMediaQueries()\n            };\n            this._state = {\n                focused: false,\n                modal: false,\n                minimized: false,\n                maximized: false,\n                ontop: false,\n                onbottom: false\n            };\n            this._animationCallback = null;\n            this._queryTimer = null;\n            this._evHandler = new EventHandler(name, [\n                'focus',\n                'blur',\n                'destroy',\n                'maximize',\n                'minimize',\n                'restore',\n                'move',\n                'moved',\n                'resize',\n                'resized',\n                'keydown',\n                'keyup',\n                'keypress',\n                'drop',\n                'drop:upload',\n                'drop:file'\n            ]);\n            Object.keys(opts).forEach(k => {\n                if (typeof this._properties[k] !== 'undefined') {\n                    this._properties[k] = opts[k];\n                } else if (typeof this._state[k] !== 'undefined' && k !== 'focused') {\n                    this._state[k] = opts[k];\n                } else if (('sound', 'sound_volume').indexOf(k) !== -1) {\n                    this['_' + camelCased(k)] = opts[k];\n                }\n            });\n            ((properties, position) => {\n                if (!properties.gravity && typeof position.x === 'undefined' || typeof position.y === 'undefined') {\n                    const wm = WindowManager.instance;\n                    const np = wm ? wm.getWindowPosition() : {\n                        x: 0,\n                        y: 0\n                    };\n                    position.x = np.x;\n                    position.y = np.y;\n                }\n            })(this._properties, this._position);\n            ((properties, dimension) => {\n                if (properties.min_height && dimension.h < properties.min_height) {\n                    dimension.h = properties.min_height;\n                }\n                if (properties.max_width && dimension.w < properties.max_width) {\n                    dimension.w = properties.max_width;\n                }\n                if (properties.max_height && dimension.h > properties.max_height) {\n                    dimension.h = properties.max_height;\n                }\n                if (properties.max_width && dimension.w > properties.max_width) {\n                    dimension.w = properties.max_width;\n                }\n            })(this._properties, this._dimension);\n            ((position, dimension) => {\n                if (appRef && appRef.__args && appRef.__args.__windows__) {\n                    appRef.__args.__windows__.forEach(restore => {\n                        if (!this._restored && restore.name && restore.name === this._name) {\n                            position.x = restore.position.x;\n                            position.y = restore.position.y;\n                            if (this._properties.allow_resize) {\n                                dimension.w = restore.dimension.w;\n                                dimension.h = restore.dimension.h;\n                            }\n                            console.info('RESTORED FROM SESSION', restore);\n                            this._restored = true;\n                        }\n                    });\n                }\n            })(this._position, this._dimension);\n            ((properties, position, dimension, restored) => {\n                const grav = properties.gravity;\n                if (grav && !restored) {\n                    if (grav === 'center') {\n                        position.y = window.innerHeight / 2 - this._dimension.h / 2;\n                        position.x = window.innerWidth / 2 - this._dimension.w / 2;\n                    } else {\n                        const space = getWindowSpace();\n                        if (grav.match(/^south/)) {\n                            position.y = space.height - dimension.h;\n                        } else {\n                            position.y = space.top;\n                        }\n                        if (grav.match(/west$/)) {\n                            position.x = space.left;\n                        } else {\n                            position.x = space.width - dimension.w;\n                        }\n                    }\n                }\n            })(this._properties, this._position, this._dimension, this._restored);\n            console.debug('State', this._state);\n            console.debug('Properties', this._properties);\n            console.debug('Position', this._position);\n            console.debug('Dimension', this._dimension);\n            console.groupEnd();\n            _WID++;\n        }\n        init(_wm, _app) {\n            if (this._initialized || this._loaded) {\n                return this._$root;\n            }\n            this._$element = DOM.$create('application-window', {\n                className: ((n, t) => {\n                    const classNames = [\n                        'Window',\n                        DOM.$safeName(n)\n                    ];\n                    if (t && n !== t) {\n                        classNames.push(DOM.$safeName(t));\n                    }\n                    return classNames;\n                })(this._name, this._tag).join(' '),\n                style: {\n                    width: this._dimension.w + 'px',\n                    height: this._dimension.h + 'px',\n                    top: this._position.y + 'px',\n                    left: this._position.x + 'px',\n                    zIndex: getNextZindex(this._state.ontop)\n                },\n                data: {\n                    window_id: this._wid,\n                    allow_resize: this._properties.allow_resize,\n                    allow_minimize: this._properties.allow_minimize,\n                    allow_maximize: this._properties.allow_maximize,\n                    allow_close: this._properties.allow_close\n                },\n                aria: {\n                    role: 'application',\n                    live: 'polite',\n                    hidden: 'false'\n                }\n            });\n            this._$root = document.createElement('application-window-content');\n            this._$resize = document.createElement('application-window-resize');\n            [\n                'nw',\n                'n',\n                'ne',\n                'e',\n                'se',\n                's',\n                'sw',\n                'w'\n            ].forEach(i => {\n                let h = document.createElement('application-window-resize-handle');\n                h.setAttribute('data-direction', i);\n                this._$resize.appendChild(h);\n                h = null;\n            });\n            this._$loading = document.createElement('application-window-loading');\n            this._$disabled = document.createElement('application-window-disabled');\n            this._$top = document.createElement('application-window-top');\n            this._$winicon = document.createElement('application-window-icon');\n            this._$winicon.setAttribute('role', 'button');\n            this._$winicon.setAttribute('aria-haspopup', 'true');\n            this._$winicon.setAttribute('aria-label', 'Window Menu');\n            const windowTitle = document.createElement('application-window-title');\n            windowTitle.setAttribute('role', 'heading');\n            let preventTimeout;\n            const _onanimationend = ev => {\n                if (typeof this._animationCallback === 'function') {\n                    clearTimeout(preventTimeout);\n                    preventTimeout = setTimeout(() => {\n                        this._animationCallback(ev);\n                        this._animationCallback = false;\n                        preventTimeout = clearTimeout(preventTimeout);\n                    }, 10);\n                }\n            };\n            Events.$bind(this._$element, 'transitionend', _onanimationend);\n            Events.$bind(this._$element, 'animationend', _onanimationend);\n            Events.$bind(this._$element, 'click', ev => {\n                this._focus();\n            }, true);\n            Events.$bind(this._$top, 'mouseup', ev => {\n                const t = ev.target;\n                if (t) {\n                    if (t.tagName.match(/^APPLICATION\\-WINDOW\\-BUTTON/)) {\n                        this._onWindowButtonClick(ev, t, t.getAttribute('data-action'));\n                    } else if (t.tagName === 'APPLICATION-WINDOW-ICON') {\n                        this._onWindowIconClick(ev);\n                    }\n                }\n            });\n            Events.$bind(this._$top, 'dblclick', () => {\n                this._maximize();\n            });\n            ((properties, main, compability) => {\n                if (properties.allow_drop && compability.dnd) {\n                    const border = document.createElement('div');\n                    border.className = 'WindowDropRect';\n                    GUI.createDroppable(main, {\n                        onOver: (ev, el, args) => {\n                            main.setAttribute('data-dnd-state', 'true');\n                        },\n                        onLeave: () => {\n                            main.setAttribute('data-dnd-state', 'false');\n                        },\n                        onDrop: () => {\n                            main.setAttribute('data-dnd-state', 'false');\n                        },\n                        onItemDropped: (ev, el, item, args) => {\n                            main.setAttribute('data-dnd-state', 'false');\n                            return this._onDndEvent(ev, 'itemDrop', item, args, el);\n                        },\n                        onFilesDropped: (ev, el, files, args) => {\n                            main.setAttribute('data-dnd-state', 'false');\n                            return this._onDndEvent(ev, 'filesDrop', files, args, el);\n                        }\n                    });\n                }\n            })(this._properties, this._$element, Compability.getCompability());\n            windowTitle.appendChild(document.createTextNode(this._title));\n            this._$top.appendChild(this._$winicon);\n            this._$top.appendChild(windowTitle);\n            this._$top.appendChild(DOM.$create('application-window-button-minimize', {\n                className: 'application-window-button-entry',\n                data: { action: 'minimize' },\n                aria: {\n                    role: 'button',\n                    label: 'Minimize Window'\n                }\n            }));\n            this._$top.appendChild(DOM.$create('application-window-button-maximize', {\n                className: 'application-window-button-entry',\n                data: { action: 'maximize' },\n                aria: {\n                    role: 'button',\n                    label: 'Maximize Window'\n                }\n            }));\n            this._$top.appendChild(DOM.$create('application-window-button-close', {\n                className: 'application-window-button-entry',\n                data: { action: 'close' },\n                aria: {\n                    role: 'button',\n                    label: 'Close Window'\n                }\n            }));\n            this._$loading.appendChild(document.createElement('application-window-loading-indicator'));\n            this._$element.appendChild(this._$top);\n            this._$element.appendChild(this._$root);\n            this._$element.appendChild(this._$resize);\n            this._$element.appendChild(this._$disabled);\n            this._$element.appendChild(this._$loading);\n            document.body.appendChild(this._$element);\n            this._onChange('create');\n            this._toggleLoading(false);\n            this._toggleDisabled(false);\n            this._setIcon(Theme.getIcon(this._icon));\n            this._updateMarkup();\n            if (this._sound) {\n                Theme.playSound(this._sound, this._soundVolume);\n            }\n            this._initialized = true;\n            this._emit('init', [this._$root]);\n            return this._$root;\n        }\n        _inited() {\n            if (this._loaded) {\n                return;\n            }\n            this._loaded = true;\n            this._onResize();\n            if (!this._restored) {\n                if (this._state.maximized) {\n                    this._maximize(true);\n                } else if (this._state.minimized) {\n                    this._minimize(true);\n                } else {\n                    if (this._opts.auto_size) {\n                        let maxWidth = 0;\n                        let maxHeight = 0;\n                        const traverseTree = el => {\n                            el.children.forEach(sel => {\n                                maxWidth = Math.max(maxWidth, sel.offsetWidth);\n                                maxHeight = Math.max(maxHeight, sel.offsetHeight);\n                                if (sel.children.length) {\n                                    traverseTree(sel);\n                                }\n                            });\n                        };\n                        traverseTree(this._$root);\n                        this._resize(maxWidth, maxHeight, true);\n                    }\n                }\n            }\n            let inittimeout = setTimeout(() => {\n                this._emit('inited', []);\n                inittimeout = clearTimeout(inittimeout);\n            }, 10);\n            if (this._app) {\n                this._app._emit('initedWindow', [this]);\n            }\n            console.debug('Window::_inited()', this._name);\n        }\n        destroy(shutdown) {\n            if (this._destroyed) {\n                return false;\n            }\n            this._emit('destroy');\n            this._destroyed = true;\n            const wm = WindowManager.instance;\n            console.group('Window::destroy()');\n            const _removeDOM = () => {\n                this._setWarning(null);\n                this._$root = null;\n                this._$top = null;\n                this._$winicon = null;\n                this._$loading = null;\n                this._$disabled = null;\n                this._$resize = null;\n                this._$warning = null;\n                this._$element = DOM.$remove(this._$element);\n            };\n            const _destroyDOM = () => {\n                if (this._$element) {\n                    this._$element.querySelectorAll('*').forEach(iter => {\n                        if (iter) {\n                            Events.$unbind(iter);\n                        }\n                    });\n                }\n                if (this._parent) {\n                    this._parent._removeChild(this);\n                }\n                this._parent = null;\n                this._removeChildren();\n            };\n            const _destroyWin = () => {\n                if (wm) {\n                    wm.removeWindow(this);\n                }\n                const curWin = wm ? wm.getCurrentWindow() : null;\n                if (curWin && curWin._wid === this._wid) {\n                    wm.setCurrentWindow(null);\n                }\n                const lastWin = wm ? wm.getLastWindow() : null;\n                if (lastWin && lastWin._wid === this._wid) {\n                    wm.setLastWindow(null);\n                }\n            };\n            const _animateClose = fn => {\n                //if (!init.running()) { // modified by lwf\n                //    fn();\n                //} else {\n                    if (this._$element) {\n                        const anim = wm ? wm.getSetting('animations') : false;\n                        if (anim) {\n                            this._$element.setAttribute('data-closing', 'true');\n                            this._animationCallback = fn;\n                            let animatetimeout = setTimeout(() => {\n                                if (this._animationCallback) {\n                                    this._animationCallback();\n                                }\n                                animatetimeout = clearTimeout(animatetimeout);\n                            }, 1000);\n                        } else {\n                            this._$element.style.display = 'none';\n                            fn();\n                        }\n                    }\n                //}\n            };\n            this._onChange('close');\n            _animateClose(() => {\n                _removeDOM();\n            });\n            _destroyDOM();\n            _destroyWin();\n            if (this._app) {\n                this._app._onMessage('destroyWindow', this, {});\n            }\n            if (this._evHandler) {\n                this._evHandler.destroy();\n            }\n            this._app = null;\n            this._evHandler = null;\n            this._args = {};\n            this._queryTimer = clearTimeout(this._queryTimer);\n            this._scheme = this._scheme ? this._scheme.destroy() : null;\n            console.groupEnd();\n            return true;\n        }\n        _find(id, root) {\n            const q = '[data-id=\"' + id + '\"]';\n            return this._findByQuery(q, root);\n        }\n        _render(id, scheme, root, args) {\n            if (scheme) {\n                root = root || this._getRoot();\n                args = args || {};\n                if (typeof this._opts.translator === 'function') {\n                    args.undefined = this._opts.translator;\n                }\n                this._scheme = typeof scheme === 'string' ? GUIScheme.fromString(scheme) : scheme;\n            }\n            if (this._scheme instanceof GUIScheme) {\n                this._scheme.render(this, id, root, null, null, args);\n            } else {\n                console.warn('Got an invalid scheme in window render()', this._scheme);\n            }\n            return this._scheme;\n        }\n        _findDOM(id, root) {\n            root = root || this._getRoot();\n            const q = '[data-id=\"' + id + '\"]';\n            return root.querySelector(q);\n        }\n        _create(tagName, params, parentNode, applyArgs) {\n            parentNode = parentNode || this._getRoot();\n            return Element.createInto(tagName, params, parentNode, applyArgs, this);\n        }\n        _findByQuery(query, root, all) {\n            root = root || this._getRoot();\n            if (!(root instanceof window.Node)) {\n                return all ? [] : null;\n            }\n            if (all) {\n                return root.querySelectorAll(query).map(el => {\n                    return Element.createFromNode(el, query);\n                });\n            }\n            const el = root.querySelector(query);\n            return Element.createFromNode(el, query);\n        }\n        _emit(k, args) {\n            if (!this._destroyed) {\n                if (this._evHandler) {\n                    return this._evHandler.emit(k, args);\n                }\n            }\n            return false;\n        }\n        _on(k, func) {\n            if (this._evHandler) {\n                return this._evHandler.on(k, func, this);\n            }\n            return false;\n        }\n        _off(k, idx) {\n            if (this._evHandler) {\n                return this._evHandler.off(k, idx);\n            }\n            return false;\n        }\n        _addChild(w, wmAdd, wmFocus) {\n            console.debug('Window::_addChild()');\n            w._parent = this;\n            const wm = WindowManager.instance;\n            if (wmAdd && wm) {\n                wm.addWindow(w, wmFocus);\n            }\n            this._children.push(w);\n            return w;\n        }\n        _removeChild(w) {\n            let found = false;\n            this._children.forEach((child, i) => {\n                if (child && child._wid === w._wid) {\n                    console.debug('Window::_removeChild()');\n                    child.destroy();\n                    this._children[i] = null;\n                    found = true;\n                }\n            });\n            return found;\n        }\n        _getChild(value, key) {\n            key = key || 'wid';\n            const found = this._getChildren().filter(c => {\n                return c['_' + key] === value;\n            });\n            return key === 'tag' ? found : found[0];\n        }\n        _getChildById(id) {\n            return this._getChild(id, 'wid');\n        }\n        _getChildByName(name) {\n            return this._getChild(name, 'name');\n        }\n        _getChildrenByTag(tag) {\n            return this._getChild(tag, 'tag');\n        }\n        _getChildren() {\n            return this._children.filter(w => !!w);\n        }\n        _removeChildren() {\n            this._children.forEach((child, i) => {\n                if (child) {\n                    child.destroy();\n                }\n            });\n            this._children = [];\n        }\n        _close() {\n            if (this._disabled || this._destroyed) {\n                return false;\n            }\n            console.debug('Window::_close()');\n            this._blur();\n            this.destroy();\n            return true;\n        }\n        _minimize(force) {\n            if (!this._properties.allow_minimize || this._destroyed) {\n                return false;\n            }\n            if (!force && this._state.minimized) {\n                this._restore(false, true);\n                return true;\n            }\n            console.debug(this._name, '>', 'Window::_minimize()');\n            this._blur();\n            this._state.minimized = true;\n            this._$element.setAttribute('data-minimized', 'true');\n            waitForAnimation(this, () => {\n                this._$element.style.display = 'none';\n                this._emit('minimize');\n            });\n            this._onChange('minimize');\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid === this._wid) {\n                wm.setCurrentWindow(null);\n            }\n            this._updateMarkup();\n            return true;\n        }\n        _maximize(force) {\n            if (!this._properties.allow_maximize || this._destroyed || !this._$element) {\n                return false;\n            }\n            if (!force && this._state.maximized) {\n                this._restore(true, false);\n                return true;\n            }\n            console.debug(this._name, '>', 'Window::_maximize()');\n            this._lastPosition = {\n                x: this._position.x,\n                y: this._position.y\n            };\n            this._lastDimension = {\n                w: this._dimension.w,\n                h: this._dimension.h\n            };\n            this._state.maximized = true;\n            const s = this._getMaximizedSize();\n            this._$element.style.zIndex = getNextZindex(this._state.ontop);\n            this._$element.style.top = s.top + 'px';\n            this._$element.style.left = s.left + 'px';\n            this._$element.style.width = s.width + 'px';\n            this._$element.style.height = s.height + 'px';\n            this._$element.setAttribute('data-maximized', 'true');\n            this._dimension.w = s.width;\n            this._dimension.h = s.height;\n            this._position.x = s.left;\n            this._position.y = s.top;\n            this._focus();\n            waitForAnimation(this, () => {\n                this._emit('maximize');\n            });\n            this._onChange('maximize');\n            this._onResize();\n            this._updateMarkup();\n            return true;\n        }\n        _restore(max, min) {\n            if (!this._$element || this._destroyed) {\n                return;\n            }\n            const restoreMaximized = () => {\n                if (max && this._state.maximized) {\n                    this._move(this._lastPosition.x, this._lastPosition.y);\n                    this._resize(this._lastDimension.w, this._lastDimension.h);\n                    this._state.maximized = false;\n                    this._$element.setAttribute('data-maximized', 'false');\n                }\n            };\n            const restoreMinimized = () => {\n                if (min && this._state.minimized) {\n                    this._$element.style.display = 'block';\n                    this._$element.setAttribute('data-minimized', 'false');\n                    this._state.minimized = false;\n                }\n            };\n            console.debug(this._name, '>', 'Window::_restore()');\n            max = typeof max === 'undefined' ? true : max === true;\n            min = typeof min === 'undefined' ? true : min === true;\n            restoreMaximized();\n            restoreMinimized();\n            waitForAnimation(this, () => {\n                this._emit('restore');\n            });\n            this._onChange('restore');\n            this._onResize();\n            this._focus();\n            this._updateMarkup();\n        }\n        _focus(force) {\n            if (!this._$element || this._destroyed) {\n                return false;\n            }\n            this._toggleAttentionBlink(false);\n            this._$element.style.zIndex = getNextZindex(this._state.ontop);\n            this._$element.setAttribute('data-focused', 'true');\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid !== this._wid) {\n                win._blur();\n            }\n            if (wm) {\n                wm.setCurrentWindow(this);\n                wm.setLastWindow(this);\n            }\n            if (!this._state.focused || force) {\n                this._onChange('focus');\n                this._emit('focus');\n            }\n            this._state.focused = true;\n            this._updateMarkup();\n            return true;\n        }\n        _blur(force) {\n            if (!this._$element || this._destroyed || !force && !this._state.focused) {\n                return false;\n            }\n            this._$element.setAttribute('data-focused', 'false');\n            this._state.focused = false;\n            this._onChange('blur');\n            this._emit('blur');\n            this._blurGUI();\n            const wm = WindowManager.instance;\n            const win = wm ? wm.getCurrentWindow() : null;\n            if (win && win._wid === this._wid) {\n                wm.setCurrentWindow(null);\n            }\n            this._updateMarkup();\n            return true;\n        }\n        _blurGUI() {\n            this._$root.querySelectorAll('input, textarea, select, iframe, button').forEach(el => {\n                el.blur();\n            });\n        }\n        _resizeTo(dw, dh, limit, move, container, force) {\n            if (!this._$element || (dw <= 0 || dh <= 0)) {\n                return;\n            }\n            limit = typeof limit === 'undefined' || limit === true;\n            let dx = 0;\n            let dy = 0;\n            if (container) {\n                const cpos = DOM.$position(container, this._$root);\n                dx = parseInt(cpos.left, 10);\n                dy = parseInt(cpos.top, 10);\n            }\n            const space = this._getMaximizedSize();\n            const cx = this._position.x + dx;\n            const cy = this._position.y + dy;\n            let newW = dw;\n            let newH = dh;\n            let newX = null;\n            let newY = null;\n            const _limitTo = () => {\n                if (cx + newW > space.width) {\n                    if (move) {\n                        newW = space.width;\n                        newX = space.left;\n                    } else {\n                        newW = space.width - cx + dx;\n                    }\n                } else {\n                    newW += dx;\n                }\n                if (cy + newH > space.height) {\n                    if (move) {\n                        newH = space.height;\n                        newY = space.top;\n                    } else {\n                        newH = space.height - cy + this._$top.offsetHeight + dy;\n                    }\n                } else {\n                    newH += dy;\n                }\n            };\n            const _moveTo = () => {\n                if (newX !== null) {\n                    this._move(newX, this._position.y);\n                }\n                if (newY !== null) {\n                    this._move(this._position.x, newY);\n                }\n            };\n            const _resizeFinished = () => {\n                const wm = WindowManager.instance;\n                const anim = wm ? wm.getSetting('animations') : false;\n                if (anim) {\n                    this._animationCallback = () => {\n                        this._emit('resized');\n                    };\n                } else {\n                    this._emit('resized');\n                }\n            };\n            if (limit) {\n                _limitTo();\n            }\n            this._resize(newW, newH, force);\n            _moveTo();\n            _resizeFinished();\n        }\n        _resize(w, h, force) {\n            const p = this._properties;\n            if (!this._$element || this._destroyed || !force && !p.allow_resize) {\n                return false;\n            }\n            const getNewSize = (n, min, max) => {\n                if (!isNaN(n) && n) {\n                    n = Math.max(n, min);\n                    if (max !== null) {\n                        n = Math.min(n, max);\n                    }\n                }\n                return n;\n            };\n            w = force ? w : getNewSize(w, p.min_width, p.max_width);\n            if (!isNaN(w) && w) {\n                this._$element.style.width = w + 'px';\n                this._dimension.w = w;\n            }\n            h = force ? h : getNewSize(h, p.min_height, p.max_height);\n            if (!isNaN(h) && h) {\n                this._$element.style.height = h + 'px';\n                this._dimension.h = h;\n            }\n            this._onResize();\n            return true;\n        }\n        _moveTo(pos) {\n            const wm = WindowManager.instance;\n            if (!wm) {\n                return;\n            }\n            const s = wm.getWindowSpace();\n            const cx = this._position.x;\n            const cy = this._position.y;\n            if (pos === 'left') {\n                this._move(s.left, cy);\n            } else if (pos === 'right') {\n                this._move(s.width - this._dimension.w, cy);\n            } else if (pos === 'top') {\n                this._move(cx, s.top);\n            } else if (pos === 'bottom') {\n                this._move(cx, s.height - this._dimension.h);\n            }\n        }\n        _move(x, y) {\n            if (!this._$element || this._destroyed || !this._properties.allow_move) {\n                return false;\n            }\n            if (typeof x === 'undefined' || typeof y === 'undefined') {\n                return false;\n            }\n            this._$element.style.top = y + 'px';\n            this._$element.style.left = x + 'px';\n            this._position.x = x;\n            this._position.y = y;\n            return true;\n        }\n        _toggleDisabled(t) {\n            if (this._$disabled) {\n                this._$disabled.style.display = t ? 'block' : 'none';\n            }\n            this._disabled = t ? true : false;\n            this._updateMarkup();\n        }\n        _toggleLoading(t) {\n            if (this._$loading) {\n                this._$loading.style.display = t ? 'block' : 'none';\n            }\n            this._loading = t ? true : false;\n            this._updateMarkup();\n        }\n        _updateMarkup(ui) {\n            if (!this._$element) {\n                return;\n            }\n            const t = this._loading || this._disabled;\n            const d = this._disabled;\n            const h = this._state.minimized;\n            const f = !this._state.focused;\n            this._$element.setAttribute('aria-busy', String(t));\n            this._$element.setAttribute('aria-hidden', String(h));\n            this._$element.setAttribute('aria-disabled', String(d));\n            this._$root.setAttribute('aria-hidden', String(f));\n            if (!ui) {\n                return;\n            }\n            const dmax = this._properties.allow_maximize === true ? 'inline-block' : 'none';\n            const dmin = this._properties.allow_minimize === true ? 'inline-block' : 'none';\n            const dclose = this._properties.allow_close === true ? 'inline-block' : 'none';\n            this._$top.querySelector('application-window-button-maximize').style.display = dmax;\n            this._$top.querySelector('application-window-button-minimize').style.display = dmin;\n            this._$top.querySelector('application-window-button-close').style.display = dclose;\n            const dres = this._properties.allow_resize === true;\n            this._$element.setAttribute('data-allow-resize', String(dres));\n        }\n        _toggleAttentionBlink(t) {\n            if (!this._$element || this._destroyed || this._state.focused) {\n                return false;\n            }\n            const el = this._$element;\n            const _blink = stat => {\n                if (el) {\n                    if (stat) {\n                        DOM.$addClass(el, 'WindowAttentionBlink');\n                    } else {\n                        DOM.$removeClass(el, 'WindowAttentionBlink');\n                    }\n                }\n                this._onChange(stat ? 'attention_on' : 'attention_off');\n            };\n            _blink(t);\n            return true;\n        }\n        _nextTabIndex(ev) {\n            const nextElement = GUI.getNextElement(ev.shiftKey, document.activeElement, this._$root);\n            if (nextElement) {\n                if (DOM.$hasClass(nextElement, 'gui-data-view')) {\n                    Element.createFromNode(nextElement).focus();\n                } else {\n                    try {\n                        nextElement.focus();\n                    } catch (e) {\n                    }\n                }\n            }\n        }\n        _onDndEvent(ev, type, item, args, el) {\n            if (this._disabled || this._destroyed) {\n                return false;\n            }\n            console.debug('Window::_onDndEvent()', type, item, args);\n            this._emit('drop', [\n                ev,\n                type,\n                item,\n                args,\n                el\n            ]);\n            if (item) {\n                if (type === 'filesDrop') {\n                    this._emit('drop:upload', [\n                        ev,\n                        item,\n                        args,\n                        el\n                    ]);\n                } else if (type === 'itemDrop' && item.type === 'file' && item.data) {\n                    this._emit('drop:file', [\n                        ev,\n                        new FileMetadata(item.data || {}),\n                        args,\n                        el\n                    ]);\n                }\n            }\n            return true;\n        }\n        _onKeyEvent(ev, type) {\n            if (this._destroyed || !this._state.focused) {\n                return false;\n            }\n            if (type === 'keydown' && ev.keyCode === Keycodes.TAB) {\n                this._nextTabIndex(ev);\n            }\n            this._emit(type, [\n                ev,\n                ev.keyCode,\n                ev.shiftKey,\n                ev.ctrlKey,\n                ev.altKey\n            ]);\n            return true;\n        }\n        _onResize() {\n            clearTimeout(this._queryTimer);\n            this._queryTimer = setTimeout(() => {\n                checkMediaQueries(this);\n                this._queryTimer = clearTimeout(this._queryTimer);\n            }, 20);\n        }\n        _onWindowIconClick(ev) {\n            if (!this._properties.allow_iconmenu || this._destroyed) {\n                return;\n            }\n            console.debug(this._name, '>', 'Window::_onWindowIconClick()');\n            const control = [\n                [\n                    this._properties.allow_minimize,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_MINIMIZE'),\n                            icon: Theme.getIcon('actions/go-up.png'),\n                            onClick: (name, iter) => {\n                                this._minimize();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_maximize,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_MAXIMIZE'),\n                            icon: Theme.getIcon('actions/view-fullscreen.png'),\n                            onClick: (name, iter) => {\n                                this._maximize();\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._state.maximized,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_RESTORE'),\n                            icon: Theme.getIcon('actions/view-restore.png'),\n                            onClick: (name, iter) => {\n                                this._restore();\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_ontop,\n                    () => {\n                        if (this._state.ontop) {\n                            return {\n                                title: locales._('WINDOW_ONTOP_OFF'),\n                                icon: Theme.getIcon('actions/window-new.png'),\n                                onClick: (name, iter) => {\n                                    this._state.ontop = false;\n                                    if (this._$element) {\n                                        this._$element.style.zIndex = getNextZindex(false);\n                                    }\n                                    this._focus();\n                                }\n                            };\n                        }\n                        return {\n                            title: locales._('WINDOW_ONTOP_ON'),\n                            icon: Theme.getIcon('actions/window-new.png'),\n                            onClick: (name, iter) => {\n                                this._state.ontop = true;\n                                if (this._$element) {\n                                    this._$element.style.zIndex = getNextZindex(true);\n                                }\n                                this._focus();\n                            }\n                        };\n                    }\n                ],\n                [\n                    this._properties.allow_close,\n                    () => {\n                        return {\n                            title: locales._('WINDOW_CLOSE'),\n                            icon: Theme.getIcon('actions/window-close.png'),\n                            onClick: (name, iter) => {\n                                this._close();\n                            }\n                        };\n                    }\n                ]\n            ];\n            const list = [];\n            control.forEach(iter => {\n                if (iter[0]) {\n                    list.push(iter[1]());\n                }\n            });\n            this._focus();\n            Menu.create(list, ev);\n        }\n        _onWindowButtonClick(ev, el, btn) {\n            const map = {\n                close: this._close,\n                minimize: this._minimize,\n                maximize: this._maximize\n            };\n            if (map[btn]) {\n                try {\n                    this._blurGUI();\n                } catch (e) {\n                }\n                map[btn].call(this);\n            }\n        }\n        _onChange(ev, byUser) {\n            ev = ev || '';\n            if (ev) {\n                const wm = WindowManager.instance;\n                if (wm) {\n                    wm.eventWindow(ev, this);\n                }\n            }\n        }\n        _getMaximizedSize() {\n            const s = getWindowSpace();\n            if (!this._$element || this._destroyed) {\n                return s;\n            }\n            let topMargin = 23;\n            let borderSize = 0;\n            const theme = Theme.getStyleTheme(true, true);\n            if (theme && theme.style && theme.style.window) {\n                topMargin = theme.style.window.margin;\n                borderSize = theme.style.window.border;\n            }\n            s.left += borderSize;\n            s.top += borderSize;\n            s.width -= borderSize * 2;\n            s.height -= topMargin + borderSize * 2;\n            return Object.freeze(s);\n        }\n        _getViewRect() {\n            return this._$element ? Object.freeze(DOM.$position(this._$element)) : null;\n        }\n        _getRoot() {\n            return this._$root;\n        }\n        _getZindex() {\n            if (this._$element) {\n                return parseInt(this._$element.style.zIndex, 10);\n            }\n            return -1;\n        }\n        _getTitle() {\n            return this._title;\n        }\n        _setTitle(t, append, delimiter) {\n            if (!this._$element || this._destroyed) {\n                return;\n            }\n            delimiter = delimiter || '-';\n            const tel = this._$element.getElementsByTagName('application-window-title')[0];\n            let text = [];\n            if (append) {\n                text = [\n                    this._origtitle,\n                    delimiter,\n                    t\n                ];\n            } else {\n                text = [t || this._origtitle];\n            }\n            this._title = text.join(' ') || this._origtitle;\n            if (tel) {\n                DOM.$empty(tel);\n                tel.appendChild(document.createTextNode(this._title));\n            }\n            this._onChange('title');\n            this._updateMarkup();\n        }\n        _setIcon(i) {\n            if (this._$winicon) {\n                this._$winicon.title = this._title;\n                this._$winicon.style.backgroundImage = 'url(' + i + ')';\n            }\n            this._icon = i;\n            this._onChange('icon');\n        }\n        _setWarning(message) {\n            this._$warning = DOM.$remove(this._$warning);\n            if (this._destroyed || message === null) {\n                return;\n            }\n            message = message || '';\n            let container = document.createElement('application-window-warning');\n            let close = document.createElement('div');\n            close.innerHTML = 'X';\n            Events.$bind(close, 'click', () => {\n                this._setWarning(null);\n            });\n            let msg = document.createElement('div');\n            msg.appendChild(document.createTextNode(message));\n            container.appendChild(close);\n            container.appendChild(msg);\n            this._$warning = container;\n            this._$root.appendChild(this._$warning);\n        }\n        _setProperty(p, v) {\n            if (v === '' || v === null || !this._$element || typeof this._properties[p] === 'undefined') {\n                return;\n            }\n            this._properties[p] = String(v) === 'true';\n            this._updateMarkup(true);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/application',[\n    './process',\n    './settings-manager',\n    './window-manager',\n    './window'\n], function (Process, SettingsManager, WindowManager, Window) {\n    'use strict';\n    return class Application extends Process {\n        constructor(name, args, metadata, settings, options) {\n            console.group('Application::constructor()', arguments);\n            options = Object.assign({\n                closeWithMain: true,\n                closeOnEmpty: true\n            }, options || {});\n            super(...arguments);\n            this.__inited = false;\n            this.__mainwindow = null;\n            this.__windows = [];\n            this.__settings = null;\n            this.__destroying = false;\n            this.__options = options;\n            try {\n                this.__settings = SettingsManager.instance(name, settings || {});\n            } catch (e) {\n                console.warn('Application::construct()', 'An error occured while loading application settings', e);\n                console.warn(e.stack);\n                this.__settings = SettingsManager.instance(name, {});\n            }\n            console.groupEnd();\n        }\n        init(settings, metadata) {\n            const wm = WindowManager.instance;\n            const focusLastWindow = () => {\n                let last;\n                if (wm) {\n                    this.__windows.forEach((win, i) => {\n                        if (win) {\n                            wm.addWindow(win);\n                            last = win;\n                        }\n                    });\n                }\n                if (last) {\n                    last._focus();\n                }\n            };\n            if (!this.__inited) {\n                console.debug('Application::init()', this.__pname);\n                if (this.__settings) {\n                    this.__settings.set(null, settings);\n                }\n                this.__inited = true;\n                this.__evHandler.emit('init', [\n                    settings,\n                    metadata\n                ]);\n                focusLastWindow();\n            }\n        }\n        destroy() {\n            if (this.__destroying || this.__destroyed) {\n                return true;\n            }\n            this.__destroying = true;\n            console.group('Application::destroy()', this.__pname);\n            this.__windows.forEach(w => w && w.destroy());\n            if (this.__scheme && typeof this.__scheme.destroy === 'function') {\n                this.__scheme.destroy();\n            }\n            this.__mainwindow = null;\n            this.__settings = {};\n            this.__windows = [];\n            this.__scheme = null;\n            const result = super.destroy(...arguments);\n            console.groupEnd();\n            return result;\n        }\n        _onMessage(msg, obj, args) {\n            if (this.__destroying || this.__destroyed) {\n                return false;\n            }\n            if (msg === 'destroyWindow') {\n                if (!this.__destroying) {\n                    this._removeWindow(obj);\n                    if (this.__options.closeOnEmpty && !this.__windows.length) {\n                        console.info('All windows removed, destroying application');\n                        this.destroy();\n                    } else if (obj._name === this.__mainwindow) {\n                        if (this.__options.closeWithMain) {\n                            console.info('Main window was closed, destroying application');\n                            this.destroy();\n                        }\n                    }\n                }\n            } else if (msg === 'attention') {\n                if (this.__windows.length && this.__windows[0]) {\n                    this.__windows[0]._focus();\n                }\n            }\n            return super._onMessage(...arguments);\n        }\n        _addWindow(w, cb, setmain) {\n            if (!(w instanceof Window)) {\n                throw new TypeError('Application::_addWindow() expects Core.Window');\n            }\n            console.debug('Application::_addWindow()');\n            this.__windows.push(w);\n            if (setmain || this.__windows.length === 1) {\n                this.__mainwindow = w._name;\n            }\n            const wm = WindowManager.instance;\n            if (this.__inited) {\n                if (wm) {\n                    wm.addWindow(w);\n                }\n                if (w._properties.start_focused) {\n                    setTimeout(() => {\n                        w._focus();\n                    }, 5);\n                }\n            }\n            (cb || function () {\n            })(w, wm);\n            return w;\n        }\n        _removeWindow(w) {\n            if (!(w instanceof Window)) {\n                throw new TypeError('Application::_removeWindow() expects Core.Window');\n            }\n            const found = this.__windows.findIndex(win => win && win._wid === w._wid);\n            if (found !== -1) {\n                const win = this.__windows[found];\n                console.debug('Application::_removeWindow()', win._wid);\n                try {\n                    win.destroy();\n                } catch (e) {\n                    console.warn(e);\n                }\n                this.__windows.splice(found, 1);\n            }\n            return found !== -1;\n        }\n        _getWindow(value, key) {\n            key = key || 'name';\n            if (value === null) {\n                value = this.__mainwindow;\n            }\n            let result = key === 'tag' ? [] : null;\n            this.__windows.every((win, i) => {\n                if (win) {\n                    if (win['_' + key] === value) {\n                        if (key === 'tag') {\n                            result.push(win);\n                        } else {\n                            result = win;\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            });\n            return result;\n        }\n        _getWindowByName(name) {\n            return this._getWindow(name);\n        }\n        _getWindowsByTag(tag) {\n            return this._getWindow(tag, 'tag');\n        }\n        _getWindows() {\n            return this.__windows;\n        }\n        _getMainWindow() {\n            return this._getWindow(this.__mainwindow, 'name');\n        }\n        _getSetting(k) {\n            return this.__settings ? this.__settings.get(k) : null;\n        }\n        _getSessionData() {\n            const args = this.__args;\n            const wins = this.__windows;\n            const data = {\n                name: this.__pname,\n                args: args,\n                windows: []\n            };\n            wins.forEach((win, i) => {\n                if (win && win._properties.allow_session) {\n                    data.windows.push({\n                        name: win._name,\n                        dimension: win._dimension,\n                        position: win._position,\n                        state: win._state\n                    });\n                }\n            });\n            return data;\n        }\n        _setSetting(k, v, save) {\n            if (typeof save === 'undefined') {\n                save = true;\n            }\n            if (arguments.length === 4 && typeof arguments[3] === 'function') {\n                save = arguments[3];\n            }\n            if (this.__settings) {\n                this.__settings.set(k, v, save);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs.html',[], function() { return \"<!--\\r\\n\\r\\n  Dialog: Error\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Error\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_ERROR_MESSAGE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"SummaryLabel\\\">DIALOG_ERROR_SUMMARY</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-fill=\\\"true\\\" data-basis=\\\"90px\\\">\\r\\n      <gui-textarea data-id=\\\"Summary\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"TraceLabel\\\">DIALOG_ERROR_TRACE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"Trace\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_CLOSE</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonBugReport\\\">LBL_BUGREPORT</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Application Chooser\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"ApplicationChooser\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_APPCHOOSER_MSG</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"FileName\\\">filename (mime)</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-list-view data-id=\\\"ApplicationList\\\" data-multiple=\\\"false\\\">\\r\\n      </gui-list-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-checkbox data-id=\\\"SetDefault\\\" data-label=\\\"DIALOG_APPCHOOSER_SET_DEFAULT\\\"></gui-checkbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Save/Open\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"File\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-button data-id=\\\"HomeButton\\\" data-icon=\\\"stock://16x16/places/user-home.png\\\" data-tooltip=\\\"LBL_HOME\\\"></gui-button>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-button data-id=\\\"ButtonMkdir\\\" data-icon=\\\"stock://16x16/actions/folder-new.png\\\" data-tooltip=\\\"LBL_MKDIR\\\"></gui-button>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-select data-id=\\\"ModuleSelect\\\"></gui-select>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-file-view data-id=\\\"FileView\\\">\\r\\n      </gui-file-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-id=\\\"FileInput\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n          <gui-text data-id=\\\"Filename\\\"></gui-text>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-shrink=\\\"0\\\" data-basis=\\\"150px\\\" data-expand=\\\"true\\\">\\r\\n          <gui-select data-id=\\\"Filetype\\\"></gui-select>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Progress\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileProgress\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">LBL_LOADING</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n      <gui-progress-bar data-id=\\\"Progress\\\"></gui-progress-bar>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\" data-disabled=\\\"true\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Upload\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileUpload\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_UPLOAD_DESC</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-file-upload data-id=\\\"File\\\"></gui-file-upload>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: File Information\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"FileInfo\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"Info\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Input\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Input\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_INPUT_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n      <gui-text data-id=\\\"Input\\\"></gui-text>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Alert\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Alert\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_ALERT_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Confirm\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Confirm\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-label data-id=\\\"Message\\\">DIALOG_CONFIRM_TITLE</gui-label>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonYes\\\">LBL_YES</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonNo\\\">LBL_NO</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Color\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Color\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-shrink=\\\"1\\\">\\r\\n          <gui-vbox>\\r\\n            <gui-vbox-container shrink=\\\"1\\\">\\r\\n              <gui-color-swatch data-id=\\\"ColorSelect\\\"></gui-color-swatch>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-color-box data-id=\\\"ColorPreview\\\" data-disabled=\\\"true\\\"></gui-color-box>\\r\\n            </gui-vbox-container>\\r\\n          </gui-vbox>\\r\\n        </gui-hbox-container>\\r\\n\\r\\n        <gui-hbox-container data-grow=\\\"1\\\">\\r\\n          <gui-vbox>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelRed\\\">Red</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Red\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelGreen\\\">Green</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Green\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-label data-id=\\\"LabelBlue\\\">Blue</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"255\\\" data-id=\\\"Blue\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\" data-id=\\\"AlphaLabelContainer\\\">\\r\\n              <gui-label data-id=\\\"LabelAlpha\\\">Alpha</gui-label>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container shrink=\\\"1\\\" data-expand=\\\"true\\\" data-id=\\\"AlphaContainer\\\">\\r\\n              <gui-slider data-min=\\\"0\\\" data-max=\\\"100\\\" data-id=\\\"Alpha\\\"></gui-slider>\\r\\n            </gui-vbox-container>\\r\\n          </gui-vbox>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\\r\\n<!--\\r\\n\\r\\n  Dialog: Font\\r\\n\\r\\n-->\\r\\n<application-dialog data-id=\\\"Font\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\" data-basis=\\\"50%\\\" data-fill=\\\"true\\\">\\r\\n          <gui-select-list data-id=\\\"FontName\\\"></gui-select-list>\\r\\n        </gui-hbox-container>\\r\\n        <gui-hbox-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\" data-basis=\\\"50%\\\" data-fill=\\\"true\\\" data-id=\\\"FontSizeContainer\\\">\\r\\n          <gui-select-list data-id=\\\"FontSize\\\"></gui-select-list>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-basis=\\\"50px\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"FontPreview\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-dialog>\\r\\n\"; });\ndefine('skylark-osjsv2-client/core/dialog',[\n    '../utils/dom',\n    '../utils/keycodes',\n    './window',\n    './application',\n    './window-manager',\n    '../gui/scheme',\n    './locales',\n    \"../dialogs.html\"\n], function (a, Keycodes, Window, Application, WindowManager, GUIScheme, b,dialogsHtml) {\n    'use strict';\n    return class DialogWindow extends Window {\n        constructor(className, opts, args, callback) {\n            opts = opts || {};\n            args = args || {};\n            callback = callback || function () {\n            };\n            if (typeof callback !== 'function') {\n                throw new TypeError('DialogWindow expects a callback Function, gave: ' + typeof callback);\n            }\n            console.info('DialogWindow::construct()', className, opts, args);\n            super(className, opts);\n            this._properties.gravity = 'center';\n            this._properties.allow_resize = false;\n            this._properties.allow_minimize = false;\n            this._properties.allow_maximize = false;\n            this._properties.allow_windowlist = false;\n            this._properties.allow_session = false;\n            this._state.ontop = true;\n            this._tag = 'DialogWindow';\n            if (args.scheme && args.scheme instanceof GUIScheme) {\n                this.scheme = args.scheme;\n                delete args.scheme;\n            }\n            this.args = args;\n            this.className = className;\n            this.buttonClicked = false;\n            this.closeCallback = (ev, button, result) => {\n                if (this._destroyed) {\n                    return;\n                }\n                this.buttonClicked = true;\n                callback.call(this, ev, button, result);\n                this._close();\n            };\n        }\n        destroy() {\n            if (this.scheme) {\n                this.scheme = this.scheme.destroy();\n            }\n            return super.destroy(...arguments);\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'dialog');\n            const windowName = this.className.replace(/Dialog$/, '');\n            const focusButtons = [\n                'ButtonCancel',\n                'ButtonNo'\n            ];\n            const buttonMap = {\n                ButtonOK: 'ok',\n                ButtonCancel: 'cancel',\n                ButtonYes: 'yes',\n                ButtonNo: 'no'\n            };\n            if (this.scheme) {\n                this.scheme.render(this, windowName, root, 'application-dialog', node => {\n                    node.querySelectorAll('gui-label').forEach(el => {\n                        if (el.childNodes.length && el.childNodes[0].nodeType === 3 && el.childNodes[0].nodeValue) {\n                            const label = el.childNodes[0].nodeValue;\n                            a.$empty(el);\n                            el.appendChild(document.createTextNode(b._(label)));\n                        }\n                    });\n                });\n            } else {\n                //this._render(windowName, require('osjs-scheme-loader!dialogs.html'));\n                this._render(windowName, dialogsHtml);\n            }\n            Object.keys(buttonMap).filter(id => this._findDOM(id)).forEach(id => {\n                const btn = this._find(id);\n                btn.on('click', ev => {\n                    this.onClose(ev, buttonMap[id]);\n                });\n                if (focusButtons.indexOf(id) >= 0) {\n                    btn.focus();\n                }\n            });\n            a.$addClass(root, 'DialogWindow');\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, null);\n        }\n        _close() {\n            if (!this.buttonClicked) {\n                this.onClose(null, 'cancel', null);\n            }\n            return super._close(...arguments);\n        }\n        _onKeyEvent(ev) {\n            super._onKeyEvent(...arguments);\n            if (ev.keyCode === Keycodes.ESC) {\n                this.onClose(ev, 'cancel');\n            }\n        }\n        static parseMessage(msg) {\n            msg = a.$escape(msg || '').replace(/\\*\\*(.*)\\*\\*/g, '<span>$1</span>');\n            let tmp = document.createElement('div');\n            tmp.innerHTML = msg;\n            const frag = document.createDocumentFragment();\n            for (let i = 0; i < tmp.childNodes.length; i++) {\n                frag.appendChild(tmp.childNodes[i].cloneNode(true));\n            }\n            tmp = null;\n            return frag;\n        }\n        static create(className, args, callback, options) {\n            callback = callback || function () {\n            };\n            options = options || {};\n            let parentObj = options;\n            let parentIsWindow = parentObj instanceof Window;\n            let parentIsProcess = parentObj instanceof Application;\n            if (parentObj && !(parentIsWindow && parentIsProcess)) {\n                parentObj = options.parent;\n                parentIsWindow = parentObj instanceof Window;\n                parentIsProcess = parentObj instanceof Application;\n            }\n            function cb() {\n                if (parentObj) {\n                    if (parentIsWindow && parentObj._destroyed) {\n                        console.warn('DialogWindow::create()', 'INGORED EVENT: Window was destroyed');\n                        return;\n                    }\n                    if (parentIsProcess && parentObj.__destroyed) {\n                        console.warn('DialogWindow::create()', 'INGORED EVENT: Process was destroyed');\n                        return;\n                    }\n                }\n                if (options.modal && parentIsWindow) {\n                    parentObj._toggleDisabled(false);\n                }\n                callback.apply(null, arguments);\n            }\n            const win = typeof className === 'string' ? new OSjs.Dialogs[className](args, cb) : className(args, cb);\n            if (!parentObj) {\n                const wm = WindowManager.instance;\n                wm.addWindow(win, true);\n            } else if (parentObj instanceof Window) {\n                win._on('destroy', () => {\n                    if (parentObj) {\n                        parentObj._focus();\n                    }\n                });\n                parentObj._addChild(win, true);\n            } else if (parentObj instanceof Application) {\n                parentObj._addWindow(win);\n            }\n            if (options.modal && parentIsWindow) {\n                parentObj._toggleDisabled(true);\n            }\n            win._focus();\n            return win;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/gui/splash',[],function () {\n    'use strict';\n    class SplashScreen {\n        constructor() {\n            this.$el = document.getElementById('LoadingScreen');\n            this.$progress = this.$el ? this.$el.querySelector('.progress') : null;\n        }\n        watermark(config) {\n            if (config.Watermark.enabled) {\n                var ver = config.Version || 'unknown version';\n                var html = config.Watermark.lines || [];\n                var el = document.createElement('osjs-watermark');\n                el.setAttribute('aria-hidden', 'true');\n                el.innerHTML = html.join('<br />').replace(/%VERSION%/, ver);\n                document.body.appendChild(el);\n            }\n        }\n        show() {\n            if (this.$el) {\n                this.$el.style.display = 'block';\n            }\n        }\n        hide() {\n            if (this.$el) {\n                this.$el.style.display = 'none';\n            }\n        }\n        update(p, c) {\n            if (this.$progress) {\n                let per = c ? 0 : 100;\n                if (c) {\n                    per = p / c * 100;\n                }\n                this.$progress.style.width = String(per) + '%';\n            }\n        }\n    }\n    return new SplashScreen();\n});\ndefine('skylark-osjsv2-client/gui/notification',[\n    '../utils/events',\n    '../core/window-manager'\n], function (Events, WindowManager) {\n    'use strict';\n    class Notification {\n        constructor() {\n            this.$notifications = null;\n            this.visibles = 0;\n        }\n        create(opts) {\n            opts = opts || {};\n            opts.icon = opts.icon || null;\n            opts.title = opts.title || null;\n            opts.message = opts.message || '';\n            opts.onClick = opts.onClick || function () {\n            };\n            if (!this.$notifications) {\n                this.$notifications = document.createElement('corewm-notifications');\n                this.$notifications.setAttribute('role', 'log');\n                document.body.appendChild(this.$notifications);\n            }\n            if (typeof opts.timeout === 'undefined') {\n                opts.timeout = 5000;\n            }\n            console.debug('CoreWM::notification()', opts);\n            const container = document.createElement('corewm-notification');\n            let classNames = [''];\n            let timeout = null;\n            let animationCallback = null;\n            const _remove = () => {\n                if (timeout) {\n                    clearTimeout(timeout);\n                    timeout = null;\n                }\n                container.onclick = null;\n                const _removeDOM = () => {\n                    Events.$unbind(container);\n                    if (container.parentNode) {\n                        container.parentNode.removeChild(container);\n                    }\n                    this.visibles--;\n                    if (this.visibles <= 0) {\n                        this.$notifications.style.display = 'none';\n                    }\n                };\n                const anim = WindowManager.instance.getSetting('animations');\n                if (anim) {\n                    container.setAttribute('data-hint', 'closing');\n                    animationCallback = () => _removeDOM();\n                } else {\n                    container.style.display = 'none';\n                    _removeDOM();\n                }\n            };\n            if (opts.icon) {\n                const icon = document.createElement('img');\n                icon.alt = '';\n                icon.src = opts.icon;\n                classNames.push('HasIcon');\n                container.appendChild(icon);\n            }\n            if (opts.title) {\n                const title = document.createElement('div');\n                title.className = 'Title';\n                title.appendChild(document.createTextNode(opts.title));\n                classNames.push('HasTitle');\n                container.appendChild(title);\n            }\n            if (opts.message) {\n                const message = document.createElement('div');\n                message.className = 'Message';\n                const lines = opts.message.split('\\n');\n                lines.forEach(function (line, idx) {\n                    message.appendChild(document.createTextNode(line));\n                    if (idx < lines.length - 1) {\n                        message.appendChild(document.createElement('br'));\n                    }\n                });\n                classNames.push('HasMessage');\n                container.appendChild(message);\n            }\n            this.visibles++;\n            if (this.visibles > 0) {\n                this.$notifications.style.display = 'block';\n            }\n            container.setAttribute('aria-label', String(opts.title));\n            container.setAttribute('role', 'alert');\n            container.className = classNames.join(' ');\n            container.onclick = function (ev) {\n                _remove();\n                opts.onClick(ev);\n            };\n            let preventTimeout;\n            function _onanimationend(ev) {\n                if (typeof animationCallback === 'function') {\n                    clearTimeout(preventTimeout);\n                    preventTimeout = setTimeout(function () {\n                        animationCallback(ev);\n                        animationCallback = false;\n                    }, 10);\n                }\n            }\n            Events.$bind(container, 'transitionend', _onanimationend);\n            Events.$bind(container, 'animationend', _onanimationend);\n            const space = WindowManager.instance.getWindowSpace(true);\n            this.$notifications.style.marginTop = String(space.top) + 'px';\n            this.$notifications.appendChild(container);\n            if (opts.timeout) {\n                timeout = setTimeout(function () {\n                    _remove();\n                }, opts.timeout);\n            }\n        }\n        createIcon(name, opts) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    return pitem.createNotification(name, opts);\n                }\n            }\n            return null;\n        }\n        destroyIcon(name) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    pitem.removeNotification(name);\n                    return true;\n                }\n            }\n            return false;\n        }\n        getIcon(name) {\n            const wm = WindowManager.instance;\n            if (wm && typeof wm.getNotificationArea === 'function') {\n                const pitem = wm.getNotificationArea();\n                if (pitem) {\n                    return pitem.getNotification(name);\n                }\n            }\n            return null;\n        }\n    }\n    return new Notification();\n});\ndefine('skylark-osjsv2-client/dialogs/alert',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, a) {\n    'use strict';\n    return class AlertDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('AlertDialog', {\n                title: args.title || a._('DIALOG_ALERT_TITLE'),\n                icon: 'status/dialog-warning.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'alertdialog');\n            this._find('Message').set('value', this.args.message, true);\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/applicationchooser',[\n    '../core/dialog',\n    '../core/package-manager',\n    '../core/theme',\n    '../utils/misc',\n    '../core/locales'\n], function (DialogWindow, PackageManager, Theme, Utils, a) {\n    'use strict';\n    return class ApplicationChooserDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('ApplicationChooserDialog', {\n                title: args.title || a._('DIALOG_APPCHOOSER_TITLE'),\n                width: 400,\n                height: 400\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const cols = [{ label: a._('LBL_NAME') }];\n            const rows = [];\n            const metadata = PackageManager.getPackages();\n            (this.args.list || []).forEach(name => {\n                const iter = metadata[name];\n                if (iter && iter.type === 'application') {\n                    const label = [iter.name];\n                    if (iter.description) {\n                        label.push(iter.description);\n                    }\n                    rows.push({\n                        value: iter,\n                        columns: [{\n                                label: label.join(' - '),\n                                icon: Theme.getIcon(iter.icon, null, name),\n                                value: JSON.stringify(iter)\n                            }]\n                    });\n                }\n            });\n            this._find('ApplicationList').set('columns', cols).add(rows).on('activate', ev => {\n                this.onClose(ev, 'ok');\n            });\n            let file = '<unknown file>';\n            let label = '<unknown mime>';\n            if (this.args.file) {\n                file = Utils.format('{0} ({1})', this.args.file.filename, this.args.file.mime);\n                label = a._('DIALOG_APPCHOOSER_SET_DEFAULT', this.args.file.mime);\n            }\n            this._find('FileName').set('value', file);\n            this._find('SetDefault').set('label', label);\n            return root;\n        }\n        onClose(ev, button) {\n            let result = null;\n            if (button === 'ok') {\n                const useDefault = this._find('SetDefault').get('value');\n                const selected = this._find('ApplicationList').get('value');\n                if (selected && selected.length) {\n                    result = selected[0].data.className;\n                }\n                if (!result) {\n                    DialogWindow.create('Alert', { message: a._('DIALOG_APPCHOOSER_NO_SELECTION') }, null, this);\n                    return;\n                }\n                result = {\n                    name: result,\n                    useDefault: useDefault\n                };\n            }\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/utils/colors',[],function () {\n    'use strict';\n    function convertToRGB(hex) {\n        const rgb = parseInt(hex.replace('#', ''), 16);\n        const val = {};\n        val.r = (rgb & 255 << 16) >> 16;\n        val.g = (rgb & 255 << 8) >> 8;\n        val.b = rgb & 255;\n        return val;\n    }\n    function convertToHEX(r, g, b) {\n        if (typeof r === 'object') {\n            g = r.g;\n            b = r.b;\n            r = r.r;\n        }\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            throw new Error('Invalid RGB supplied to convertToHEX()');\n        }\n        const hex = [\n            parseInt(r, 10).toString(16),\n            parseInt(g, 10).toString(16),\n            parseInt(b, 10).toString(16)\n        ];\n        Object.keys(hex).forEach(i => {\n            if (hex[i].length === 1) {\n                hex[i] = '0' + hex[i];\n            }\n        });\n        return '#' + hex.join('').toUpperCase();\n    }\n    function invertHEX(hex) {\n        let color = parseInt(hex.replace('#', ''), 16);\n        color = 16777215 ^ color;\n        color = color.toString(16);\n        color = ('000000' + color).slice(-6);\n        return '#' + color;\n    }\n    return {\n        convertToRGB: convertToRGB,\n        convertToHEX: convertToHEX,\n        invertHEX: invertHEX\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/color',[\n    '../core/dialog',\n    '../utils/misc',\n    '../utils/colors',\n    '../core/locales'\n], function (DialogWindow, Utils, Colors, a) {\n    'use strict';\n    function getColor(rgb) {\n        let hex = rgb;\n        if (typeof rgb === 'string') {\n            hex = rgb;\n            rgb = Colors.convertToRGB(rgb);\n            rgb.a = null;\n        } else {\n            if (typeof rgb.a === 'undefined') {\n                rgb.a = null;\n            } else {\n                if (rgb.a > 1) {\n                    rgb.a /= 100;\n                }\n            }\n            rgb = rgb || {\n                r: 0,\n                g: 0,\n                b: 0,\n                a: 100\n            };\n            hex = Colors.convertToHEX(rgb.r, rgb.g, rgb.b);\n        }\n        return [\n            rgb,\n            hex\n        ];\n    }\n    return class ColorDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            const [rgb, hex] = getColor(args.color);\n            super('ColorDialog', {\n                title: args.title || a._('DIALOG_COLOR_TITLE'),\n                icon: 'apps/preferences-desktop-theme.png',\n                width: 400,\n                height: rgb.a !== null ? 300 : 220\n            }, args, callback);\n            this.color = {\n                r: rgb.r,\n                g: rgb.g,\n                b: rgb.b,\n                a: rgb.a,\n                hex: hex\n            };\n        }\n        init() {\n            const root = super.init(...arguments);\n            const updateHex = update => {\n                this._find('LabelRed').set('value', a._('DIALOG_COLOR_R', this.color.r));\n                this._find('LabelGreen').set('value', a._('DIALOG_COLOR_G', this.color.g));\n                this._find('LabelBlue').set('value', a._('DIALOG_COLOR_B', this.color.b));\n                this._find('LabelAlpha').set('value', a._('DIALOG_COLOR_A', this.color.a));\n                if (update) {\n                    this.color.hex = Colors.convertToHEX(this.color.r, this.color.g, this.color.b);\n                }\n                let value = this.color.hex;\n                if (this.color.a !== null && !isNaN(this.color.a)) {\n                    value = Utils.format('rgba({0}, {1}, {2}, {3})', this.color.r, this.color.g, this.color.b, this.color.a);\n                }\n                this._find('ColorPreview').set('value', value);\n            };\n            this._find('ColorSelect').on('change', ev => {\n                this.color = ev.detail;\n                this._find('Red').set('value', this.color.r);\n                this._find('Green').set('value', this.color.g);\n                this._find('Blue').set('value', this.color.b);\n                updateHex(true);\n            });\n            this._find('Red').on('change', ev => {\n                this.color.r = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.r);\n            this._find('Green').on('change', ev => {\n                this.color.g = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.g);\n            this._find('Blue').on('change', ev => {\n                this.color.b = parseInt(ev.detail, 10);\n                updateHex(true);\n            }).set('value', this.color.b);\n            this._find('Alpha').on('change', ev => {\n                this.color.a = parseInt(ev.detail, 10) / 100;\n                updateHex(true);\n            }).set('value', this.color.a * 100);\n            if (this.color.a === null) {\n                this._find('AlphaContainer').hide();\n                this._find('AlphaLabelContainer').hide();\n            }\n            updateHex(false, this.color.a !== null);\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, button === 'ok' ? this.color : null);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/confirm',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, a) {\n    'use strict';\n    return class ConfirmDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                buttons: [\n                    'yes',\n                    'no',\n                    'cancel'\n                ]\n            }, args);\n            super('ConfirmDialog', {\n                title: args.title || a._('DIALOG_CONFIRM_TITLE'),\n                icon: 'status/dialog-question.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const msg = DialogWindow.parseMessage(this.args.message);\n            this._find('Message').empty().append(msg);\n            const buttonMap = {\n                yes: 'ButtonYes',\n                no: 'ButtonNo',\n                cancel: 'ButtonCancel'\n            };\n            const hide = [];\n            [\n                'yes',\n                'no',\n                'cancel'\n            ].forEach(b => {\n                if (this.args.buttons.indexOf(b) < 0) {\n                    hide.push(b);\n                }\n            });\n            hide.forEach(b => {\n                this._find(buttonMap[b]).hide();\n            });\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/error',[\n    '../core/dialog',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, a, b) {\n    'use strict';\n    return class ErrorDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            const exception = args.exception || {};\n            let error = '';\n            if (exception.stack) {\n                error = exception.stack;\n            } else {\n                if (Object.keys(exception).length) {\n                    error = exception.name;\n                    error += '\\nFilename: ' + exception.fileName || '<unknown>';\n                    error += '\\nLine: ' + exception.lineNumber;\n                    error += '\\nMessage: ' + exception.message;\n                    if (exception.extMessage) {\n                        error += '\\n' + exception.extMessage;\n                    }\n                }\n            }\n            super('ErrorDialog', {\n                title: args.title || a._('DIALOG_ERROR_TITLE'),\n                icon: 'status/dialog-error.png',\n                width: 400,\n                height: error ? 400 : 200\n            }, args, callback);\n            this._sound = 'ERROR';\n            this._soundVolume = 1;\n            this.traceMessage = error;\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'alertdialog');\n            const msg = DialogWindow.parseMessage(this.args.message);\n            this._find('Message').empty().append(msg);\n            this._find('Summary').set('value', this.args.error);\n            this._find('Trace').set('value', this.traceMessage);\n            if (!this.traceMessage) {\n                this._find('Trace').hide();\n                this._find('TraceLabel').hide();\n            }\n            if (this.args.bugreport) {\n                this._find('ButtonBugReport').on('click', () => {\n                    let title = '';\n                    let body = [];\n                    if (b.getConfig('BugReporting.options.issue')) {\n                        const obj = {};\n                        const keys = [\n                            'userAgent',\n                            'platform',\n                            'language',\n                            'appVersion'\n                        ];\n                        keys.forEach(k => {\n                            obj[k] = navigator[k];\n                        });\n                        title = b.getConfig('BugReporting.options.title');\n                        body = [\n                            '**' + b.getConfig('BugReporting.options.message').replace('%VERSION%', b.getConfig('Version')) + ':**',\n                            '\\n',\n                            '> ' + this.args.message,\n                            '\\n',\n                            '> ' + (this.args.error || 'Unknown error'),\n                            '\\n',\n                            '## Expected behaviour',\n                            '\\n',\n                            '## Actual behaviour',\n                            '\\n',\n                            '## Steps to reproduce the error',\n                            '\\n',\n                            '## (Optinal) Browser and OS information',\n                            '\\n',\n                            '```\\n' + JSON.stringify(obj) + '\\n```'\n                        ];\n                        if (this.traceMessage) {\n                            body.push('\\n## Stack Trace \\n```\\n' + this.traceMessage + '\\n```\\n');\n                        }\n                    }\n                    const url = b.getConfig('BugReporting.url').replace('%TITLE%', encodeURIComponent(title)).replace('%BODY%', encodeURIComponent(body.join('\\n')));\n                    window.open(url);\n                });\n            } else {\n                this._find('ButtonBugReport').hide();\n            }\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileinfo',[\n    '../core/dialog',\n    '../vfs/fs',\n    '../core/locales'\n], function (DialogWindow, VFS, a) {\n    'use strict';\n    return class FileInfoDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('FileInfoDialog', {\n                title: args.title || a._('DIALOG_FILEINFO_TITLE'),\n                width: 400,\n                height: 400\n            }, args, callback);\n            if (!this.args.file) {\n                throw new Error('You have to select a file for FileInfo');\n            }\n        }\n        init() {\n            const root = super.init(...arguments);\n            const txt = this._find('Info').set('value', a._('LBL_LOADING'));\n            const file = this.args.file;\n            VFS.fileinfo(file).then(data => {\n                const info = [];\n                Object.keys(data).forEach(i => {\n                    if (i === 'exif') {\n                        info.push(i + ':\\n\\n' + data[i]);\n                    } else {\n                        info.push(i + ':\\n\\t' + data[i]);\n                    }\n                });\n                txt.set('value', info.join('\\n\\n'));\n                return true;\n            }).catch(error => {\n                txt.set('value', a._('DIALOG_FILEINFO_ERROR_LOOKUP_FMT', file.path));\n            });\n            return root;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/file',[\n    '../core/dialog',\n    '../gui/element',\n    '../vfs/file',\n    '../core/settings-manager',\n    '../core/mount-manager',\n    '../utils/fs',\n    '../utils/misc',\n    '../vfs/fs',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, GUIElement, FileMetadata, SettingsManager, MountManager, FS, Utils, VFS, a, b) {\n    'use strict';\n    return class FileDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                file: null,\n                type: 'open',\n                path: b.getDefaultPath(),\n                filename: '',\n                filetypes: [],\n                extension: '',\n                mime: 'application/octet-stream',\n                filter: [],\n                mfilter: [],\n                select: null,\n                multiple: false\n            }, args);\n            args.multiple = args.type === 'save' ? false : args.multiple === true;\n            if (args.path && args.path instanceof FileMetadata) {\n                args.path = FS.dirname(args.path.path);\n            }\n            if (args.file && args.file.path) {\n                args.path = FS.dirname(args.file.path);\n                args.filename = args.file.filename;\n                args.mime = args.file.mime;\n                if (args.filetypes.length) {\n                    const setTo = args.filetypes[0];\n                    args.filename = FS.replaceFileExtension(args.filename, setTo.extension);\n                    args.mime = setTo.mime;\n                }\n            }\n            const title = args.title || a._(args.type === 'save' ? 'DIALOG_FILE_SAVE' : 'DIALOG_FILE_OPEN');\n            const icon = args.type === 'open' ? 'actions/document-open.png' : 'actions/documentsave-as.png';\n            super('FileDialog', {\n                title: title,\n                icon: icon,\n                width: 600,\n                height: 400\n            }, args, callback);\n            this.selected = null;\n            this.path = args.path;\n            this.settingsWatch = SettingsManager.watch('VFS', () => {\n                this.changePath();\n            });\n        }\n        destroy() {\n            try {\n                SettingsManager.unwatch(this.settingsWatch);\n            } catch (e) {\n            }\n            return super.destroy(...arguments);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const view = this._find('FileView');\n            view.set('filter', this.args.filter);\n            view.set('filetype', this.args.select || '');\n            view.set('defaultcolumns', 'true');\n            const filename = this._find('Filename');\n            const home = this._find('HomeButton');\n            const mlist = this._find('ModuleSelect');\n            const checkEmptyInput = () => {\n                let disable = false;\n                if (this.args.select !== 'dir') {\n                    disable = !filename.get('value').length;\n                }\n                this._find('ButtonOK').set('disabled', disable);\n            };\n            this._toggleLoading(true);\n            view.set('multiple', this.args.multiple);\n            filename.set('value', this.args.filename || '');\n            this._find('ButtonMkdir').on('click', () => {\n                DialogWindow.create('Input', {\n                    message: a._('DIALOG_FILE_MKDIR_MSG', this.path),\n                    value: 'New folder'\n                }, (ev, btn, value) => {\n                    if (btn === 'ok' && value) {\n                        const path = FS.pathJoin(this.path, value);\n                        VFS.mkdir(new FileMetadata(path, 'dir')).then(() => {\n                            return this.changePath(path);\n                        }).catch(err => {\n                            OSjs.error(a._('DIALOG_FILE_ERROR'), a._('ERR_VFSMODULE_MKDIR'), err);\n                        });\n                    }\n                }, this);\n            });\n            home.on('click', () => {\n                const dpath = b.getDefaultPath();\n                this.changePath(dpath);\n            });\n            view.on('activate', ev => {\n                this.selected = null;\n                if (this.args.type !== 'save') {\n                    filename.set('value', '');\n                }\n                if (ev && ev.detail && ev.detail.entries) {\n                    const activated = ev.detail.entries[0];\n                    if (activated) {\n                        this.selected = new FileMetadata(activated.data);\n                        if (this.selected.type !== 'dir') {\n                            filename.set('value', this.selected.filename);\n                        }\n                        this.checkSelection(ev, true);\n                    }\n                }\n            });\n            view.on('select', ev => {\n                this.selected = null;\n                if (ev && ev.detail && ev.detail.entries) {\n                    const activated = ev.detail.entries[0];\n                    if (activated) {\n                        this.selected = new FileMetadata(activated.data);\n                        if (this.selected.type !== 'dir') {\n                            filename.set('value', this.selected.filename);\n                        }\n                    }\n                }\n                checkEmptyInput();\n            });\n            if (this.args.type === 'save') {\n                const filetypes = [];\n                this.args.filetypes.forEach(f => {\n                    filetypes.push({\n                        label: Utils.format('{0} (.{1} {2})', f.label, f.extension, f.mime),\n                        value: f.extension\n                    });\n                });\n                const ft = this._find('Filetype').add(filetypes).on('change', ev => {\n                    const newinput = FS.replaceFileExtension(filename.get('value'), ev.detail);\n                    filename.set('value', newinput);\n                });\n                if (filetypes.length <= 1) {\n                    new GUIElement(ft.$element.parentNode).hide();\n                }\n                filename.on('enter', ev => {\n                    this.selected = null;\n                    this.checkSelection(ev);\n                });\n                filename.on('change', ev => {\n                    checkEmptyInput();\n                });\n                filename.on('keyup', ev => {\n                    checkEmptyInput();\n                });\n            } else {\n                if (this.args.select !== 'dir') {\n                    this._find('ButtonMkdir').hide();\n                }\n                this._find('FileInput').hide();\n            }\n            const rootPath = MountManager.getModuleFromPath(this.path).option('root');\n            const modules = MountManager.getModules().filter(m => {\n                if (!this.args.mfilter.length) {\n                    return true;\n                }\n                return this.args.mfilter.every(fn => fn(m));\n            }).map(m => {\n                return {\n                    label: m.option('title') + (m.isReadOnly() ? Utils.format(' ({0})', a._('LBL_READONLY')) : ''),\n                    value: m.option('root')\n                };\n            });\n            mlist.clear().add(modules).set('value', rootPath);\n            mlist.on('change', ev => {\n                this.changePath(ev.detail, true);\n            });\n            this.changePath();\n            checkEmptyInput();\n            return root;\n        }\n        changePath(dir, fromDropdown) {\n            const view = this._find('FileView');\n            const lastDir = this.path;\n            const resetLastSelected = () => {\n                try {\n                    const rootPath = MountManager.getModuleFromPath(lastDir).option('root');\n                    this._find('ModuleSelect').set('value', rootPath);\n                } catch (e) {\n                    console.warn('FileDialog::changePath()', 'resetLastSelection()', e);\n                }\n            };\n            this._toggleLoading(true);\n            view.chdir({\n                path: dir || this.path,\n                done: error => {\n                    if (error) {\n                        if (fromDropdown) {\n                            resetLastSelected();\n                        }\n                    } else {\n                        if (dir) {\n                            this.path = dir;\n                        }\n                    }\n                    this.selected = null;\n                    this._toggleLoading(false);\n                }\n            });\n        }\n        checkFileExtension() {\n            const filename = this._find('Filename');\n            let mime = this.args.mime;\n            let input = filename.get('value');\n            if (this.args.filetypes.length) {\n                if (!input && this.args.filename) {\n                    input = this.args.filename;\n                }\n                if (input.length) {\n                    const extension = input.split('.').pop();\n                    let found = false;\n                    this.args.filetypes.forEach(f => {\n                        if (f.extension === extension) {\n                            found = f;\n                        }\n                        return !!found;\n                    });\n                    found = found || this.args.filetypes[0];\n                    input = FS.replaceFileExtension(input, found.extension);\n                    mime = found.mime;\n                }\n            }\n            return {\n                filename: input,\n                mime: mime\n            };\n        }\n        checkSelection(ev, wasActivated) {\n            if (this.selected && this.selected.type === 'dir') {\n                if (wasActivated) {\n                    this.changePath(this.selected.path);\n                    return false;\n                }\n            }\n            if (this.args.type === 'save') {\n                let check = this.checkFileExtension();\n                if (!this.path || !check.filename) {\n                    OSjs.error(a._('DIALOG_FILE_ERROR'), a._('DIALOG_FILE_MISSING_FILENAME'));\n                    return false;\n                }\n                this.selected = new FileMetadata(this.path.replace(/^\\//, '') + '/' + check.filename, check.mime);\n                this._toggleDisabled(true);\n                VFS.exists(this.selected).then(result => {\n                    this._toggleDisabled(false);\n                    if (this._destroyed) {\n                        return false;\n                    }\n                    if (result) {\n                        this._toggleDisabled(true);\n                        if (this.selected) {\n                            DialogWindow.create('Confirm', {\n                                buttons: [\n                                    'yes',\n                                    'no'\n                                ],\n                                message: a._('DIALOG_FILE_OVERWRITE', this.selected.filename)\n                            }, (ev, button) => {\n                                this._toggleDisabled(false);\n                                if (button === 'yes' || button === 'ok') {\n                                    this.closeCallback(ev, 'ok', this.selected);\n                                }\n                            }, this);\n                        }\n                    } else {\n                        this.closeCallback(ev, 'ok', this.selected);\n                    }\n                    return true;\n                }).catch(error => {\n                    this._toggleDisabled(false);\n                    if (this._destroyed) {\n                        return;\n                    }\n                    OSjs.error(a._('DIALOG_FILE_ERROR'), a._('DIALOG_FILE_MISSING_FILENAME'));\n                });\n                return false;\n            } else {\n                if (!this.selected && this.args.select !== 'dir') {\n                    OSjs.error(a._('DIALOG_FILE_ERROR'), a._('DIALOG_FILE_MISSING_SELECTION'));\n                    return false;\n                }\n                let res = this.selected;\n                if (!res && this.args.select === 'dir') {\n                    res = new FileMetadata({\n                        filename: FS.filename(this.path),\n                        path: this.path,\n                        type: 'dir'\n                    });\n                }\n                this.closeCallback(ev, 'ok', res);\n            }\n            return true;\n        }\n        onClose(ev, button) {\n            if (button === 'ok' && !this.checkSelection(ev)) {\n                return;\n            }\n            this.closeCallback(ev, button, this.selected);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileprogress',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, a) {\n    'use strict';\n    return class FileProgressDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('FileProgressDialog', {\n                title: args.title || a._('DIALOG_FILEPROGRESS_TITLE'),\n                icon: 'actions/document-send.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n            this.busy = !!args.filename;\n        }\n        init() {\n            const root = super.init(...arguments);\n            if (this.args.message) {\n                this._find('Message').set('value', this.args.message, true);\n            }\n            return root;\n        }\n        onClose(ev, button) {\n            this.closeCallback(ev, button, null);\n        }\n        setProgress(p, close = true) {\n            const pb = this._find('Progress');\n            if (pb) {\n                pb.set('progress', p);\n            }\n            if (close && p >= 100) {\n                this._close(true);\n            }\n        }\n        _close(force) {\n            if (!force && this.busy) {\n                return false;\n            }\n            return super._close();\n        }\n        _onKeyEvent(ev) {\n            if (!this.busy) {\n                super._onKeyEvent(...arguments);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/fileupload',[\n    '../core/dialog',\n    '../vfs/fs',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, VFS, a, b) {\n    'use strict';\n    return class FileUploadDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                dest: b.getDefaultPath(),\n                progress: {},\n                file: null\n            }, args);\n            if (args.destination) {\n                args.dest = args.destination;\n            }\n            if (!args.dest) {\n                args.dest = b.getDefaultPath();\n            }\n            super('FileUploadDialog', {\n                title: args.title || a._('DIALOG_UPLOAD_TITLE'),\n                icon: 'actions/document-new.png',\n                width: 400,\n                height: 100\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            const message = this._find('Message');\n            const maxSize = b.getConfig('VFS.MaxUploadSize');\n            message.set('value', a._('DIALOG_UPLOAD_DESC', this.args.dest, maxSize), true);\n            const input = this._find('File');\n            if (this.args.file) {\n                this.setFile(this.args.file, input);\n            } else {\n                input.on('change', ev => {\n                    this.setFile(ev.detail, input);\n                });\n            }\n            return root;\n        }\n        setFile(file, input) {\n            let progressDialog;\n            const error = (msg, ev) => {\n                OSjs.error(a._('DIALOG_UPLOAD_FAILED'), a._('DIALOG_UPLOAD_FAILED_MSG'), msg || a._('DIALOG_UPLOAD_FAILED_UNKNOWN'));\n                progressDialog._close(true);\n                this.onClose(ev, 'cancel');\n            };\n            if (file) {\n                let fileSize = 0;\n                if (file.size > 1024 * 1024) {\n                    fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';\n                } else {\n                    fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';\n                }\n                if (input) {\n                    input.set('disabled', true);\n                }\n                this._find('ButtonCancel').set('disabled', true);\n                const desc = a._('DIALOG_UPLOAD_MSG_FMT', file.name, file.type, fileSize, this.args.dest);\n                progressDialog = DialogWindow.create('FileProgress', {\n                    message: desc,\n                    dest: this.args.dest,\n                    filename: file.name,\n                    mime: file.type,\n                    size: fileSize\n                }, (ev, button) => {\n                }, this);\n                VFS.upload({\n                    files: [file],\n                    destination: this.args.dest\n                }, {\n                    onprogress: ev => {\n                        if (ev.lengthComputable) {\n                            const p = Math.round(ev.loaded * 100 / ev.total);\n                            progressDialog.setProgress(p);\n                        }\n                    }\n                }).then(() => {\n                    progressDialog._close(true);\n                    return this.onClose(null, 'ok', file);\n                }).catch(error);\n                setTimeout(() => {\n                    if (progressDialog) {\n                        progressDialog._focus();\n                    }\n                }, 100);\n            }\n        }\n        onClose(ev, button, result) {\n            result = result || null;\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/font',[\n    '../core/dialog',\n    '../core/locales',\n    '../core/config'\n], function (DialogWindow, a, b) {\n    'use strict';\n    return class FontDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {\n                fontName: b.getConfig('Fonts.default'),\n                fontSize: 12,\n                fontColor: '#000000',\n                backgroundColor: '#ffffff',\n                fonts: b.getConfig('Fonts.list'),\n                minSize: 6,\n                maxSize: 30,\n                text: 'The quick brown fox jumps over the lazy dog',\n                unit: 'px'\n            }, args);\n            if (args.unit === 'null' || args.unit === 'unit') {\n                args.unit = '';\n            }\n            super('FontDialog', {\n                title: args.title || a._('DIALOG_FONT_TITLE'),\n                width: 400,\n                height: 300\n            }, args, callback);\n            this.selection = {\n                fontName: args.fontName,\n                fontSize: args.fontSize + args.unit\n            };\n        }\n        init() {\n            const root = super.init(...arguments);\n            const preview = this._find('FontPreview');\n            const sizes = [];\n            const fonts = [];\n            for (let i = this.args.minSize; i < this.args.maxSize; i++) {\n                sizes.push({\n                    value: i,\n                    label: i\n                });\n            }\n            for (let j = 0; j < this.args.fonts.length; j++) {\n                fonts.push({\n                    value: this.args.fonts[j],\n                    label: this.args.fonts[j]\n                });\n            }\n            const updatePreview = () => {\n                preview.querySelector('textarea').style.fontFamily = this.selection.fontName;\n                preview.querySelector('textarea').style.fontSize = this.selection.fontSize;\n            };\n            const listFonts = this._find('FontName');\n            listFonts.add(fonts).set('value', this.args.fontName);\n            listFonts.on('change', ev => {\n                this.selection.fontName = ev.detail;\n                updatePreview();\n            });\n            const listSizes = this._find('FontSize');\n            listSizes.add(sizes).set('value', this.args.fontSize);\n            listSizes.on('change', ev => {\n                this.selection.fontSize = ev.detail + this.args.unit;\n                updatePreview();\n            });\n            preview.$element.style.color = this.args.fontColor;\n            preview.$element.style.backgroundColor = this.args.backgroundColor;\n            preview.set('value', this.args.text);\n            if (this.args.fontSize < 0) {\n                this._find('FontSizeContainer').hide();\n            }\n            updatePreview();\n            return root;\n        }\n        onClose(ev, button) {\n            const result = button === 'ok' ? this.selection : null;\n            this.closeCallback(ev, button, result);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/dialogs/input',[\n    '../core/dialog',\n    '../core/locales'\n], function (DialogWindow, a) {\n    'use strict';\n    return class InputDialog extends DialogWindow {\n        constructor(args, callback) {\n            args = Object.assign({}, {}, args);\n            super('InputDialog', {\n                title: args.title || a._('DIALOG_INPUT_TITLE'),\n                icon: 'status/dialog-information.png',\n                width: 400,\n                height: 120\n            }, args, callback);\n        }\n        init() {\n            const root = super.init(...arguments);\n            if (this.args.message) {\n                const msg = DialogWindow.parseMessage(this.args.message);\n                this._find('Message').empty().append(msg);\n            }\n            const input = this._find('Input');\n            input.set('placeholder', this.args.placeholder || '');\n            input.set('value', this.args.value || '');\n            input.on('enter', ev => {\n                this.onClose(ev, 'ok');\n            });\n            return root;\n        }\n        _focus() {\n            if (super._focus(...arguments)) {\n                this._find('Input').focus();\n                return true;\n            }\n            return false;\n        }\n        onClose(ev, button) {\n            const result = this._find('Input').get('value');\n            this.closeCallback(ev, button, button === 'ok' ? result : null);\n        }\n        setRange(range) {\n            const input = this._find('Input');\n            if (input.$element) {\n                input.$element.querySelector('input').select(range);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transport',[\n    'skylark-axios',\n    '../core/locales'\n], function (axios, a) {\n    'use strict';\n    return class Transport {\n        request(method, args, options, mount) {\n            const readOnly = [\n                'upload',\n                'unlink',\n                'write',\n                'mkdir',\n                'move',\n                'trash',\n                'untrash',\n                'emptyTrash'\n            ];\n            if (mount.isReadOnly()) {\n                if (readOnly.indexOf(method) !== -1) {\n                    return Promise.reject(new Error(a._('ERR_VFSMODULE_READONLY')));\n                }\n            }\n            const newArgs = args.concat([\n                options,\n                mount\n            ]);\n            return this[method](...newArgs);\n        }\n        scandir(item, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        read(item, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        write(file, data, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        unlink(src, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        copy(src, dest, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        move(src, dest, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        exists(item, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        fileinfo(item, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        mkdir(dir, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        upload(file, dest, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        download(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item).then(url => {\n                    return axios({\n                        responseType: 'arraybuffer',\n                        url: url,\n                        method: 'GET'\n                    }).then(result => {\n                        return resolve(result.data);\n                    }).catch(error => {\n                        reject(error.message);\n                    });\n                }).catch(reject);\n            });\n        }\n        url(item, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        find(file, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        trash(file, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        untrash(file, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        emptyTrash(options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n        freeSpace(root, options, mount) {\n            return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/web',[\n    'skylark-axios',\n    '../transport',\n    '../../core/connection',\n    '../../utils/fs'\n], function (axios, Transport, Connection, FS) {\n    'use strict';\n    return class WebTransport extends Transport {\n        _request(url, responseType, method, options) {\n            return new Promise((resolve, reject) => {\n                if (!options.cors) {\n                    const binary = options.type === 'text' ? false : responseType === 'arraybuffer';\n                    Connection.request('curl', {\n                        url: url,\n                        method: method,\n                        binary: binary\n                    }).then(result => {\n                        if (binary) {\n                            return FS.dataSourceToAb(result.body, 'application/octet-stream', (err, ab) => {\n                                return err ? reject(err) : resolve(ab);\n                            });\n                        }\n                        return resolve(result.body);\n                    }).catch(reject);\n                } else {\n                    axios({\n                        responseType: responseType,\n                        url: url,\n                        method: method\n                    }).then(response => {\n                        return resolve(responseType === null ? response.statusText : response.data);\n                    }).catch(e => reject(new Error(e.message || e)));\n                }\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                const root = mount.option('root');\n                const url = item.path.replace(/\\/?$/, '/_scandir.json');\n                this._request(url, 'json', 'GET', options).then(response => {\n                    return resolve(response.map(iter => {\n                        iter.path = root + iter.path.replace(/^\\//, '');\n                        return iter;\n                    }));\n                }).catch(reject);\n            });\n        }\n        read(item, options) {\n            const mime = item.mime || 'application/octet-stream';\n            return new Promise((resolve, reject) => {\n                this._request(item.path, 'arraybuffer', 'GET', options).then(response => {\n                    if (options.cors) {\n                        if (options.type === 'text') {\n                            resolve(response);\n                        } else {\n                            FS.dataSourceToAb(response, 'application/octet-stream', (err, ab) => {\n                                return err ? reject(err) : resolve(ab);\n                            });\n                        }\n                        return true;\n                    }\n                    if (options.type === 'text') {\n                        FS.abToText(response, mime, (err, txt) => {\n                            if (err) {\n                                reject(new Error(err));\n                            } else {\n                                resolve(txt);\n                            }\n                        });\n                        return true;\n                    }\n                    return resolve(response);\n                }).catch(reject);\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this._request(item.path, null, 'HEAD').then(response => {\n                    return resolve(response.toUpperCase() === 'OK');\n                }).catch(reject);\n            });\n        }\n        url(item) {\n            return Promise.resolve(item.path);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/osjs',[\n    '../file',\n    '../../utils/fs',\n    '../../core/connection',\n    '../transport',\n    '../../core/config',\n    '../../core/locales'\n], function (FileMetadata, FS, Connection, Transport, a, b) {\n    'use strict';\n    return class OSjsTransport extends Transport {\n        _request(method, args, options) {\n            return Connection.request('FS:' + method, args, options);\n        }\n        _requestUpload(dest, file, options) {\n            options = options || {};\n            dest = dest instanceof FileMetadata ? dest.path : dest;\n            if (typeof file.size !== 'undefined') {\n                const maxSize = a.getConfig('VFS.MaxUploadSize');\n                if (maxSize > 0) {\n                    const bytes = file.size;\n                    if (bytes > maxSize) {\n                        const msg = b._('DIALOG_UPLOAD_TOO_BIG_FMT', FS.humanFileSize(maxSize));\n                        return Promise.reject(new Error(msg));\n                    }\n                }\n            }\n            const fd = new FormData();\n            fd.append('path', dest);\n            if (file) {\n                fd.append('filename', file.filename);\n            }\n            if (options) {\n                Object.keys(options).forEach(key => {\n                    if (key !== 'meta' && typeof options[key] !== 'function') {\n                        fd.append(key, String(options[key]));\n                    }\n                });\n            }\n            if (file instanceof window.ArrayBuffer) {\n                fd.append('size', String(file.byteLength));\n            }\n            FS.addFormFile(fd, 'upload', file, options.meta);\n            return this._request('upload', fd, options);\n        }\n        scandir(item, options) {\n            options = options || {};\n            const args = {\n                path: item.path,\n                options: { shortcuts: options.shortcuts }\n            };\n            return new Promise((resolve, reject) => {\n                this._request('scandir', args, options).then(result => {\n                    return resolve(result.map(i => new FileMetadata(i)));\n                }).catch(reject);\n            });\n        }\n        read(item, options) {\n            return this._request('get', { path: item.path }, options);\n        }\n        write(file, data, options) {\n            options = options || {};\n            options.meta = file;\n            options.overwrite = true;\n            options.onprogress = options.onprogress || function () {\n            };\n            const parentfile = new FileMetadata(FS.dirname(file.path), file.mime);\n            return this._requestUpload(parentfile, data, options);\n        }\n        unlink(src) {\n            return this._request('unlink', { path: src.path });\n        }\n        copy(src, dest, options) {\n            return this._request('copy', {\n                src: src.path,\n                dest: dest.path\n            }, options);\n        }\n        move(src, dest, options) {\n            return this._request('move', {\n                src: src.path,\n                dest: dest.path\n            }, options);\n        }\n        exists(item) {\n            return this._request('exists', { path: item.path });\n        }\n        fileinfo(item) {\n            return this._request('fileinfo', { path: item.path });\n        }\n        mkdir(dir) {\n            return this._request('mkdir', { path: dir.path });\n        }\n        upload(dest, data, options) {\n            return this._requestUpload(dest, data, options);\n        }\n        url(item, options) {\n            if (typeof item === 'string') {\n                item = new FileMetadata(item);\n            }\n            return Promise.resolve(Connection.instance.getVFSPath(item, options));\n        }\n        find(file, options) {\n            return this._request('find', {\n                path: file.path,\n                args: options\n            });\n        }\n        trash(file) {\n            return Promise.reject(new Error(b._('ERR_VFS_UNAVAILABLE')));\n        }\n        untrash(file) {\n            return Promise.reject(new Error(b._('ERR_VFS_UNAVAILABLE')));\n        }\n        emptyTrash() {\n            return Promise.reject(new Error(b._('ERR_VFS_UNAVAILABLE')));\n        }\n        freeSpace(root) {\n            return this._request('freeSpace', { root: root });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/dist',[\n    './osjs',\n    '../../core/mount-manager',\n    '../../core/config',\n    '../../core/locales'\n], function ( OSjsTransport, MountManager, a, b) {\n    'use strict';\n    return class DistTransport extends OSjsTransport {\n        request(method, args, options) {\n            if ([\n                    'url',\n                    'scandir',\n                    'read'\n                ].indexOf(method) === -1) {\n                return Promise.reject(new Error(b._('ERR_VFS_UNAVAILABLE')));\n            }\n            return super.request(...arguments);\n        }\n        url(item) {\n            const root = a.getBrowserPath();\n            const module = MountManager.getModuleFromPath(item.path);\n            const url = item.path.replace(module.option('match'), root).replace(/^\\/+/, '/');\n            return Promise.resolve(url);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/applications',[\n    '../../core/package-manager',\n    '../transport',\n    '../file',\n    '../../core/locales'\n], function ( PackageManager, Transport, FileMetadata, a) {\n    'use strict';\n    return class ApplicationTransport extends Transport {\n        request(method, args, options) {\n            if (['scandir'].indexOf(method) === -1) {\n                return Promise.reject(new Error(a._('ERR_VFS_UNAVAILABLE')));\n            }\n            return super.request(...arguments);\n        }\n        scandir() {\n            const metadata = PackageManager.getPackages(); \n            const files = [];\n            Object.keys(metadata).forEach(m => {\n                const iter = metadata[m];\n                if (iter.type !== 'extension') {\n                    files.push(new FileMetadata({\n                        filename: iter.name,\n                        type: 'application',\n                        path: 'applications:///' + m,\n                        mime: 'osjs/application'\n                    }, 'osjs/application'));\n                }\n            });\n            return Promise.resolve(files);\n        }\n        url(item) {\n            return Promise.resolve(item.path);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/webdav',[\n    'skylark-axios',\n    '../../core/connection',\n    '../../utils/fs',\n    '../../utils/misc',\n    '../transport',\n    '../file',\n    '../../core/config',\n    '../../core/locales'\n], function (axios, Connection, FS, Utils, Transport, FileMetadata, a, b) {\n    'use strict';\n    function getTargetPath(item, mount) {\n        return item.path.replace(mount.option('match'), '');\n    }\n    function getTargetUrl(mount, file, moduleOptions) {\n        let baseUrl = moduleOptions.host;\n        if (!moduleOptions.cors) {\n            baseUrl = Utils.parseurl(moduleOptions.host, {\n                username: moduleOptions.username,\n                password: moduleOptions.password\n            }).url;\n        }\n        const basename = getTargetPath(file, mount);\n        return baseUrl.replace(/\\/?$/, basename.replace(/^\\/?/, '/'));\n    }\n    function getFilePath(c, ns, mount) {\n        const moduleOptions = mount.option('options') || {};\n        const uri = Utils.parseurl(moduleOptions.host).path;\n        try {\n            let path = c.getElementsByTagNameNS(ns, 'href')[0].textContent;\n            return path.substr(uri.length - 1, path.length);\n        } catch (e) {\n            console.warn(e);\n        }\n        return '/';\n    }\n    function getFileMime(type, c, ns) {\n        if (type === 'file') {\n            try {\n                return c.getElementsByTagNameNS(ns, 'getcontenttype')[0].textContent || 'application/octet-stream';\n            } catch (e) {\n                return 'application/octet-stream';\n            }\n        }\n        return null;\n    }\n    function getFileId(type, c, ns) {\n        try {\n            return c.getElementsByTagNameNS(ns, 'getetag')[0].textContent;\n        } catch (e) {\n        }\n        return null;\n    }\n    function getFileSize(type, c, ns) {\n        if (type === 'file') {\n            try {\n                return parseInt(c.getElementsByTagNameNS(ns, 'getcontentlength')[0].textContent, 10) || 0;\n            } catch (e) {\n            }\n        }\n        return 0;\n    }\n    function parseListing(doc, item, mount) {\n        const root = mount.option('root');\n        const moduleOptions = mount.option('options') || {};\n        const reqpath = getTargetPath(item, mount);\n        let ns = moduleOptions.ns || 'DAV';\n        if (ns.substr(-1) !== ':') {\n            ns += ':';\n        }\n        return (doc.children || []).map(c => {\n            let path = getFilePath(c, ns, mount);\n            let type = 'file';\n            if (path.match(/\\/$/)) {\n                type = 'dir';\n                path = path.replace(/\\/$/, '') || '/';\n            }\n            if (path === reqpath) {\n                return false;\n            }\n            return new FileMetadata({\n                id: getFileId(type, c, ns),\n                path: root + path.replace(/^\\//, ''),\n                filename: FS.filename(path),\n                size: getFileSize(type, c, ns),\n                mime: getFileMime(type, c, ns),\n                type: type\n            });\n        }).filter(iter => iter !== false);\n    }\n    function parseResponse(body) {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(body, 'application/xml');\n        return doc.firstChild;\n    }\n    return class WebDAVTransport extends Transport {\n        _request(method, args, options, mount, raw) {\n            const mime = args.mime || 'application/octet-stream';\n            const file = new FileMetadata(args, mime);\n            const moduleOptions = mount.option('options') || {};\n            const headers = {};\n            const url = getTargetUrl(mount, file, moduleOptions);\n            if (args.dest) {\n                const dest = new FileMetadata(args.dest, mime);\n                headers.Destination = getTargetUrl(mount, dest, moduleOptions);\n            }\n            if (mime) {\n                headers['Content-Type'] = mime;\n            }\n            return new Promise((resolve, reject) => {\n                if (moduleOptions.cors) {\n                    const aopts = {\n                        url: url,\n                        responseType: raw === true ? 'arraybuffer' : 'text',\n                        method: method,\n                        headers: headers,\n                        data: args.data,\n                        auth: {\n                            username: moduleOptions.username,\n                            password: moduleOptions.password\n                        }\n                    };\n                    axios(aopts).then(response => {\n                        return resolve(response.data);\n                    }).catch(e => reject(new Error(e.message || e)));\n                } else {\n                    const copts = {\n                        url: url,\n                        method: method,\n                        binary: raw === true,\n                        mime: mime,\n                        headers: headers\n                    };\n                    Connection.request('curl', copts).then(response => {\n                        const code = response.httpCode;\n                        if (!response) {\n                            return reject(new Error(b._('ERR_VFS_REMOTEREAD_EMPTY')));\n                        } else if ([\n                                200,\n                                201,\n                                203,\n                                204,\n                                205,\n                                207\n                            ].indexOf(code) < 0) {\n                            const error = new Error(b._('ERR_VFSMODULE_XHR_ERROR') + ': ' + code);\n                            error.httpCode = code;\n                            return reject(error);\n                        }\n                        if (raw === true) {\n                            return FS.dataSourceToAb(response.body, mime, (err, ab) => {\n                                return err ? reject(new Error(err)) : resolve(ab);\n                            });\n                        }\n                        return resolve(parseResponse(response.body));\n                    }).catch(reject);\n                }\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this._request('PROPFIND', { path: item.path }, options, mount).then(doc => {\n                    resolve(doc ? parseListing(doc, item, mount).map(iter => new FileMetadata(iter)) : []);\n                }).catch(reject);\n            });\n        }\n        read(item, options, mount) {\n            return this._request('GET', {\n                path: item.path,\n                mime: item.mime\n            }, options, mount, true);\n        }\n        write(item, data, options, mount) {\n            return this._request('PUT', {\n                path: item.path,\n                data: data,\n                mime: item.mime\n            }, options, mount);\n        }\n        unlink(item, options, mount) {\n            return this._request('DELETE', { path: item.path }, options, mount);\n        }\n        copy(src, dest, options, mount) {\n            return this._request('COPY', {\n                path: src.path,\n                dest: dest.path\n            }, options, mount);\n        }\n        move(src, dest, options, mount) {\n            return this._request('MOVE', {\n                path: src.path,\n                dest: dest.path\n            }, options, mount);\n        }\n        exists(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this._request('PROPFIND', { path: item.path }, options, mount).then(() => {\n                    resolve(false);\n                }).catch(err => {\n                    if (err.httpCode === 404) {\n                        resolve(false);\n                    } else {\n                        console.warn(err);\n                        resolve(true);\n                    }\n                });\n            });\n        }\n        mkdir(item, options, mount) {\n            return this._request('MKCOL', { path: item.path }, options, mount);\n        }\n        url(item, options, mount) {\n            const moduleOptions = mount.option('options') || {};\n            let requestUrl = getTargetUrl(mount, item, moduleOptions);\n            if (!moduleOptions.cors) {\n                requestUrl = a.getConfig('Connection.FSURI') + '/read?path=' + encodeURIComponent(requestUrl);\n            }\n            return Promise.resolve(requestUrl);\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/service-notification-icon',[\n    '../gui/notification',\n    '../core/theme',\n    '../gui/menu',\n    '../core/locales'\n], function (Notification, Theme, Menu, a) {\n    'use strict';\n    class ServiceNotificationIcon {\n        constructor() {\n            this.entries = {};\n            this.size = 0;\n            this.notif = null;\n        }\n        init() {\n            const show = ev => {\n                this.displayMenu(ev);\n                return false;\n            };\n            this.notif = Notification.createIcon('ServiceNotificationIcon', {\n                image: Theme.getIcon('status/dialog-password.png'),\n                onContextMenu: show,\n                onClick: show,\n                onInited: (el, img) => {\n                    this._updateIcon();\n                }\n            });\n            this._updateIcon();\n        }\n        destroy() {\n            Notification.destroyIcon('ServiceNotificationIcon');\n            this.size = 0;\n            this.entries = {};\n            this.notif = null;\n        }\n        _updateIcon() {\n            if (this.notif) {\n                if (this.notif.$container) {\n                    this.notif.$container.style.display = this.size ? 'inline-block' : 'none';\n                }\n                this.notif.setTitle(a._('SERVICENOTIFICATION_TOOLTIP', this.size.toString()));\n            }\n        }\n        displayMenu(ev) {\n            const menu = [];\n            const entries = this.entries;\n            Object.keys(entries).forEach(name => {\n                menu.push({\n                    title: name,\n                    menu: entries[name]\n                });\n            });\n            Menu.create(menu, ev);\n        }\n        add(name, menu) {\n            if (!this.entries[name]) {\n                this.entries[name] = menu;\n                this.size++;\n                this._updateIcon();\n            }\n        }\n        remove(name) {\n            if (this.entries[name]) {\n                delete this.entries[name];\n                this.size--;\n                this._updateIcon();\n            }\n        }\n    }\n    return new ServiceNotificationIcon();\n});\ndefine('skylark-osjsv2-client/helpers/qs',[],function(){\r\n  'use strict';\r\n\r\n\r\n\r\n  /**\r\n   * A response from a web request\r\n   *\r\n   * @param {Number} statusCode\r\n   * @param {Object} headers\r\n   * @param {Buffer} body\r\n   * @param {String} url\r\n   */\r\n  function Response(statusCode, headers, body, url) {\r\n    if (typeof statusCode !== 'number') {\r\n      throw new TypeError('statusCode must be a number but was ' + (typeof statusCode));\r\n    }\r\n    if (headers === null) {\r\n      throw new TypeError('headers cannot be null');\r\n    }\r\n    if (typeof headers !== 'object') {\r\n      throw new TypeError('headers must be an object but was ' + (typeof headers));\r\n    }\r\n    this.statusCode = statusCode;\r\n    this.headers = {};\r\n    for (var key in headers) {\r\n      this.headers[key.toLowerCase()] = headers[key];\r\n    }\r\n    this.body = body;\r\n    this.url = url;\r\n  }\r\n\r\n  Response.prototype.getBody = function (encoding) {\r\n    if (this.statusCode >= 300) {\r\n      var err = new Error('Server responded with status code '\r\n                      + this.statusCode + ':\\n' + this.body.toString());\r\n      err.statusCode = this.statusCode;\r\n      err.headers = this.headers;\r\n      err.body = this.body;\r\n      err.url = this.url;\r\n      throw err;\r\n    }\r\n    return encoding ? this.body.toString(encoding) : this.body;\r\n  };\r\n\r\n  return Response;\r\n});\ndefine('skylark-osjsv2-client/helpers/handle-qs',['./qs'],function(qs){\r\n  var parse = qs.parse;\r\n  var stringify = qs.stringify;\r\n\r\n  return function handleQs(url, query) {\r\n    url = url.split('?');\r\n    var start = url[0];\r\n    var qs = (url[1] || '').split('#')[0];\r\n    var end = url[1] && url[1].split('#').length > 1 ? '#' + url[1].split('#')[1] : '';\r\n\r\n    var baseQs = parse(qs);\r\n    for (var i in query) {\r\n      baseQs[i] = query[i];\r\n    }\r\n    qs = stringify(baseQs);\r\n    if (qs !== '') {\r\n      qs = '?' + qs;\r\n    }\r\n    return start + qs + end;\r\n  }\r\n});\ndefine('skylark-osjsv2-client/helpers/then-jsonp',['./handle-qs'],function(handleQs){\r\n  'use strict';\r\n\r\n  var jsonpID = 0;\r\n\r\n  var queues = {};\r\n\r\n  function pquest(method, url, options, callback) {\r\n    var result = new Promise(function (resolve, reject) {\r\n\r\n      // check types of arguments\r\n\r\n      if (typeof method !== 'string') {\r\n        throw new TypeError('The method must be a string.');\r\n      }\r\n      if (typeof url !== 'string') {\r\n        throw new TypeError('The URL/path must be a string.');\r\n      }\r\n      if (typeof options === 'function') {\r\n        callback = options;\r\n        options = {};\r\n      }\r\n      if (options === null || options === undefined) {\r\n        options = {};\r\n      }\r\n      if (typeof options !== 'object') {\r\n        throw new TypeError('Options must be an object (or null).');\r\n      }\r\n      if (typeof callback !== 'function') {\r\n        callback = undefined;\r\n      }\r\n\r\n      if (options.body) {\r\n        throw new TypeError('JSONP does not support requests that have bodies');\r\n      }\r\n      if (options.headers) {\r\n        throw new TypeError('JSONP does not support requests that specify headers');\r\n      }\r\n      if (options.followRedirects === false) {\r\n        throw new TypeError('JSONP does not support requests that do not follow redirects');\r\n      }\r\n\r\n      options.qs = options.qs || {};\r\n      if (options.json) {\r\n        Object.keys(options.json).forEach(function (key) {\r\n          options.qs[key] = options.json[key];\r\n        });\r\n        delete options.json;\r\n      }\r\n\r\n      var callbackName = options.callbackName || 'then_jsonp_' + (++jsonpID);\r\n\r\n      if (options.callbackParameter !== false) {\r\n        options.qs[options.callbackParameter || 'callback'] = callbackName;\r\n      }\r\n      if (method.toLowerCase() !== 'get') {\r\n        options.qs[options.methodParameter || 'method'] = method;\r\n      }\r\n\r\n      if (queues[callbackName]) {\r\n        queues[callbackName].push(run);\r\n      } else {\r\n        queues[callbackName] = [];\r\n        run();\r\n      }\r\n\r\n      function run() {\r\n        // handle query string\r\n        if (options.qs) {\r\n          url = handleQs(url, options.qs);\r\n        }\r\n\r\n        var script = document.createElement('script');\r\n        var head = document.getElementsByTagName('head')[0] || document.documentElement;\r\n        var abortTimeout;\r\n        var done = false;\r\n        function onComplete(success) {\r\n          if (!done) {\r\n            done = true;\r\n            script.onload = script.onreadystatechange = script.onerror = null;\r\n            clearTimeout(abortTimeout);\r\n            if (callbackName in window) {\r\n              if (success) delete window[callbackName];\r\n              else window[callbackName] = function () {};\r\n            }\r\n            if (script && script.parentNode) {\r\n              script.parentNode.removeChild(script);\r\n            }\r\n            if (queues[callbackName].length) queues[callbackName].shift()();\r\n            else delete queues[callbackName];\r\n          }\r\n        }\r\n        script.onload = script.onreadystatechange = function () {\r\n          if (!this.readyState || this.readyState === \"loaded\" || this.readyState === \"complete\") {\r\n            onComplete();\r\n            setTimeout(function () {\r\n              reject(new Error('JSONP callback should already have been called'));\r\n            }, 100);\r\n          }\r\n        };\r\n        script.onerror = function () {\r\n          onComplete();\r\n          reject(new Error('JSONP request failed'));\r\n        };\r\n        window[callbackName] = function (result) {\r\n          onComplete(true);\r\n          resolve(result);\r\n        };\r\n        abortTimeout = setTimeout(function(){\r\n          onComplete();\r\n          reject(new Error('JSONP timed out'));\r\n        }, options.timeout || 10000);\r\n\r\n        script.src = url;\r\n        script.async = true;\r\n\r\n        head.appendChild(script);\r\n      }\r\n    });\r\n    result.getBody = function () {\r\n      return result.then(function (res) { return res.getBody(); });\r\n    };\r\n    return result.nodeify(callback);\r\n  }\r\n\r\n  return pquest;\r\n});\ndefine('skylark-osjsv2-client/helpers/google-api',[\n    '../core/mount-manager',\n    './service-notification-icon',\n    '../utils/preloader',\n    '../core/locales',\n    '../core/config',\n    './then-jsonp'\n], function (MountManager, ServiceNotificationIcon, Preloader, a, b, jsonp) {\n    'use strict';\n    const gapi = window.gapi = window.gapi || {};\n    let SingletonInstance = null;\n    class GoogleAPI {\n        constructor(clientId) {\n            this.clientId = clientId;\n            this.accessToken = null;\n            this.userId = null;\n            this.preloaded = false;\n            this.authenticated = false;\n            this.loaded = [];\n            this.preloads = [{\n                    type: 'javascript',\n                    src: 'https://apis.google.com/js/api.js'\n                }];\n        }\n        destroy() {\n        }\n        init(callback) {\n            callback = callback || function () {\n            };\n            if (this.preloaded) {\n                callback(false, true);\n            } else {\n                Preloader.preload(this.preloads).then(result => {\n                    if (result.failed.length) {\n                        this.preloaded = true;\n                    }\n                    callback(result.failed.join('\\n'));\n                }).catch(callback);\n            }\n        }\n        load(load, scope, client, callback) {\n            const auth = cb => {\n                this.authenticate(scope, (error, result) => {\n                    if (error) {\n                        cb(error);\n                    } else {\n                        if (!this.authenticated) {\n                            cb(a._('GAPI_AUTH_FAILURE'));\n                            return;\n                        }\n                        cb(false, result);\n                    }\n                });\n            };\n            const loadAll = finished => {\n                const lload = [];\n                load.forEach(i => {\n                    if (this.loaded.indexOf(i) === -1) {\n                        lload.push(i);\n                    }\n                });\n                let current = 0;\n                let total = lload.length;\n                console.debug('GoogleAPI::load()', load, '=>', lload, scope);\n                const _load = (iter, cb) => {\n                    let args = [];\n                    let name = null;\n                    if (iter instanceof Array) {\n                        if (iter.length > 0 && iter.length < 3) {\n                            args = args.concat(iter);\n                            name = iter[0];\n                        }\n                    } else {\n                        args.push(iter);\n                        name = iter;\n                    }\n                    args.push((a, b, c, d) => {\n                        this.loaded.push(name);\n                        cb.call(this, a, b, c, d);\n                    });\n                    if (client) {\n                        gapi.client.load.apply(gapi, args);\n                    } else {\n                        gapi.load.apply(gapi, args);\n                    }\n                };\n                function _next() {\n                    if (current >= total) {\n                        finished();\n                    } else {\n                        _load(lload[current], () => {\n                            _next();\n                        });\n                        current++;\n                    }\n                }\n                _next();\n            };\n            this.init(error => {\n                if (error) {\n                    callback(error);\n                    return;\n                }\n                if (!window.gapi || !gapi.load) {\n                    callback(a._('GAPI_LOAD_FAILURE'));\n                    return;\n                }\n                auth(error => {\n                    if (error) {\n                        callback(error);\n                        return;\n                    }\n                    loadAll((error, result) => {\n                        callback(error, result, SingletonInstance);\n                    });\n                });\n            });\n        }\n        signOut(cb) {\n            cb = cb || function () {\n            };\n            console.info('GoogleAPI::signOut()');\n            if (this.authenticated) {\n                try {\n                    gapi.auth.signOut();\n                } catch (e) {\n                    console.warn('GoogleAPI::signOut()', 'failed', e);\n                    console.warn(e.stack);\n                }\n                this.authenticated = false;\n                ServiceNotificationIcon.remove('Google API');\n            }\n            MountManager.remove('GoogleDrive');\n            cb(false, true);\n        }\n        revoke(callback) {\n            console.info('GoogleAPI::revoke()');\n            if (!this.accessToken) {\n                callback(false);\n                return;\n            }\n            const url = 'https://accounts.google.com/o/oauth2/revoke?token=' + this.accessToken;\n            jsonp('GET', url).then(() => callback(true)).catch(() => callback(false));\n        }\n        authenticate(scope, callback) {\n            console.info('GoogleAPI::authenticate()');\n            callback = callback || function () {\n            };\n            const getUserId = cb => {\n                cb = cb || function () {\n                };\n                gapi.client.load('oauth2', 'v2', () => {\n                    gapi.client.oauth2.userinfo.get().execute(resp => {\n                        console.info('GoogleAPI::authenticate() => getUserId()', resp);\n                        cb(resp.id);\n                    });\n                });\n            };\n            const login = (immediate, cb) => {\n                console.info('GoogleAPI::authenticate() => login()', immediate);\n                cb = cb || function () {\n                };\n                gapi.auth.authorize({\n                    client_id: this.clientId,\n                    scope: scope,\n                    user_id: this.userId,\n                    immediate: immediate\n                }, cb);\n            };\n            const createRingNotification = () => {\n                ServiceNotificationIcon.remove('Google API');\n                ServiceNotificationIcon.add('Google API', [\n                    {\n                        title: a._('GAPI_SIGN_OUT'),\n                        onClick: () => {\n                            this.signOut();\n                        }\n                    },\n                    {\n                        title: a._('GAPI_REVOKE'),\n                        onClick: () => {\n                            this.revoke(() => {\n                                this.signOut();\n                            });\n                        }\n                    }\n                ]);\n            };\n            const handleAuthResult = (authResult, immediate) => {\n                console.info('GoogleAPI::authenticate() => handleAuthResult()', authResult);\n                if (authResult.error) {\n                    if (authResult.error_subtype === 'origin_mismatch' || authResult.error_subtype === 'access_denied' && !immediate) {\n                        const msg = a._('GAPI_AUTH_FAILURE_FMT', authResult.error, authResult.error_subtype);\n                        callback(msg);\n                        return;\n                    }\n                }\n                if (authResult && !authResult.error) {\n                    getUserId(id => {\n                        this.userId = id;\n                        if (id) {\n                            createRingNotification();\n                            this.authenticated = true;\n                            this.accessToken = authResult.access_token || null;\n                            callback(false, true);\n                        } else {\n                            callback(false, false);\n                        }\n                    });\n                } else {\n                    login(false, res => {\n                        handleAuthResult(res, false);\n                    });\n                }\n            };\n            gapi.load('auth:client', result => {\n                if (result && result.error) {\n                    const msg = a._('GAPI_AUTH_FAILURE_FMT', result.error, result.error_subtype);\n                    callback(msg);\n                    return;\n                }\n                login(true, res => {\n                    handleAuthResult(res, true);\n                });\n            });\n        }\n    }\n    function instance() {\n        return SingletonInstance;\n    }\n    function create(args, callback) {\n        const load = args.load || [];\n        const scope = args.scope || [];\n        const client = args.client === true;\n        function _run() {\n            SingletonInstance.load(load, scope, client, callback);\n        }\n        if (SingletonInstance) {\n            _run();\n            return;\n        }\n        let clientId = null;\n        try {\n            clientId = b.getConfig('GoogleAPI.ClientId');\n        } catch (e) {\n            console.warn('getGoogleAPI()', e, e.stack);\n        }\n        if (!clientId) {\n            callback(a._('GAPI_DISABLED'));\n            return;\n        }\n        SingletonInstance = new GoogleAPI(clientId);\n        _run();\n    }\n    return {\n        instance: instance,\n        create: create\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/google-drive',[\n    'skylark-axios',\n    '../transport',\n    '../file',\n    '../filedataurl',\n    '../../core/mount-manager',\n    '../../core/locales',\n    '../../helpers/google-api',\n    '../../utils/fs'\n], function (axios, Transport, FileMetadata, FileDataURL, MountManager, a, GoogleAPI, FS) {\n    'use strict';\n    const CACHE_CLEAR_TIMEOUT = 7000;\n    let gapi = window.gapi = window.gapi || {};\n    let _authenticated;\n    let _clearCacheTimeout;\n    let _rootFolderId;\n    let _treeCache;\n    function createDirectoryList(dir, list, item, options, match) {\n        const result = [];\n        const rdir = dir.replace(match, '/').replace(/\\/+/g, '/');\n        const isOnRoot = rdir === '/';\n        function createItem(iter, i) {\n            let path = dir;\n            if (iter.title === '..') {\n                path = FS.dirname(dir);\n            } else {\n                if (!isOnRoot) {\n                    path += '/';\n                }\n                path += iter.title;\n            }\n            let fileType = iter.mimeType === 'application/vnd.google-apps.folder' ? 'dir' : iter.kind === 'drive#file' ? 'file' : 'dir';\n            if (iter.mimeType === 'application/vnd.google-apps.trash') {\n                fileType = 'trash';\n            }\n            return new FileMetadata({\n                filename: iter.title,\n                path: path,\n                id: iter.id,\n                size: iter.quotaBytesUsed || 0,\n                mime: iter.mimeType === 'application/vnd.google-apps.folder' ? null : iter.mimeType,\n                type: fileType\n            });\n        }\n        if (list) {\n            list.forEach((iter, i) => {\n                if (!iter) {\n                    return;\n                }\n                result.push(createItem(iter, i));\n            });\n        }\n        return result ? result : [];\n    }\n    function getAllDirectoryFiles(item, callback) {\n        console.debug('GoogleDrive::*getAllDirectoryFiles()', item);\n        function retrieveAllFiles(cb) {\n            if (_clearCacheTimeout) {\n                clearTimeout(_clearCacheTimeout);\n                _clearCacheTimeout = null;\n            }\n            if (_treeCache) {\n                console.info('USING CACHE FROM PREVIOUS FETCH!');\n                cb(false, _treeCache);\n                return;\n            }\n            console.info('UPDATING CACHE');\n            let list = [];\n            function retrievePageOfFiles(request, result) {\n                request.execute(resp => {\n                    if (resp.error) {\n                        console.warn('GoogleDrive::getAllDirectoryFiles()', 'error', resp);\n                    }\n                    result = result.concat(resp.items);\n                    const nextPageToken = resp.nextPageToken;\n                    if (nextPageToken) {\n                        request = gapi.client.drive.files.list({ pageToken: nextPageToken });\n                        retrievePageOfFiles(request, result);\n                    } else {\n                        _treeCache = result;\n                        cb(false, result);\n                    }\n                });\n            }\n            try {\n                const initialRequest = gapi.client.drive.files.list({});\n                retrievePageOfFiles(initialRequest, list);\n            } catch (e) {\n                console.warn('GoogleDrive::getAllDirectoryFiles() exception', e, e.stack);\n                console.warn('THIS ERROR OCCURS WHEN MULTIPLE REQUESTS FIRE AT ONCE ?!');\n                cb(false, list);\n            }\n        }\n        function getFilesBelongingTo(list, root, cb) {\n            const idList = {};\n            const parentList = {};\n            list.forEach(iter => {\n                if (iter) {\n                    idList[iter.id] = iter;\n                    const parents = [];\n                    if (iter.parents) {\n                        iter.parents.forEach(piter => {\n                            if (piter) {\n                                parents.push(piter.id);\n                            }\n                        });\n                    }\n                    parentList[iter.id] = parents;\n                }\n            });\n            let resolves = FS.getPathFromVirtual(root).replace(/^\\/+/, '').split('/');\n            resolves = resolves.filter(el => {\n                return el !== '';\n            });\n            let currentParentId = _rootFolderId;\n            let isOnRoot = !resolves.length;\n            function _getFileList(foundId) {\n                const result = [];\n                if (!isOnRoot) {\n                    result.push({\n                        title: '..',\n                        path: FS.dirname(root),\n                        id: item.id,\n                        quotaBytesUsed: 0,\n                        mimeType: 'application/vnd.google-apps.folder'\n                    });\n                }\n                list.forEach(iter => {\n                    if (iter && parentList[iter.id] && parentList[iter.id].indexOf(foundId) !== -1) {\n                        result.push(iter);\n                    }\n                });\n                return result;\n            }\n            function _nextDir(completed) {\n                let current = resolves.shift();\n                let done = resolves.length <= 0;\n                let found;\n                if (isOnRoot) {\n                    found = currentParentId;\n                } else {\n                    if (current) {\n                        list.forEach(iter => {\n                            if (iter) {\n                                if (iter.title === current && parentList[iter.id] && parentList[iter.id].indexOf(currentParentId) !== -1) {\n                                    currentParentId = iter.id;\n                                    found = iter.id;\n                                }\n                            }\n                        });\n                    }\n                }\n                if (done) {\n                    completed(found);\n                } else {\n                    _nextDir(completed);\n                }\n            }\n            _nextDir(foundId => {\n                if (foundId && idList[foundId]) {\n                    cb(false, _getFileList(foundId));\n                    return;\n                } else {\n                    if (isOnRoot) {\n                        cb(false, _getFileList(currentParentId));\n                        return;\n                    }\n                }\n                cb('Could not list directory');\n            });\n        }\n        function doRetrieve() {\n            retrieveAllFiles((error, list) => {\n                const root = item.path;\n                if (error) {\n                    callback(error, false, root);\n                    return;\n                }\n                getFilesBelongingTo(list, root, (error, response) => {\n                    console.groupEnd();\n                    _clearCacheTimeout = setTimeout(() => {\n                        console.info('Clearing GoogleDrive filetree cache!');\n                        _treeCache = null;\n                    }, CACHE_CLEAR_TIMEOUT);\n                    console.debug('GoogleDrive::*getAllDirectoryFiles()', '=>', response);\n                    callback(error, response, root);\n                });\n            });\n        }\n        console.group('GoogleDrive::*getAllDirectoryFiles()');\n        if (!_rootFolderId) {\n            const request = gapi.client.drive.about.get();\n            request.execute(resp => {\n                if (!resp || !resp.rootFolderId) {\n                    callback(a._('ERR_VFSMODULE_ROOT_ID'));\n                    return;\n                }\n                _rootFolderId = resp.rootFolderId;\n                doRetrieve();\n            });\n        } else {\n            doRetrieve();\n        }\n    }\n    function getFileFromPath(dir, type, callback) {\n        if (dir instanceof FileMetadata) {\n            dir = dir.path;\n        }\n        const tmpItem = new FileMetadata({\n            filename: FS.filename(dir),\n            type: 'dir',\n            path: FS.dirname(dir)\n        });\n        console.debug('GoogleDrive::*getFileIdFromPath()', dir, type, tmpItem);\n        getAllDirectoryFiles(tmpItem, (error, list, ldir) => {\n            if (error) {\n                callback(error);\n                return;\n            }\n            let found = null;\n            list.forEach(iter => {\n                if (iter.title === FS.filename(dir)) {\n                    if (type) {\n                        if (iter.mimeType === type) {\n                            found = iter;\n                            return false;\n                        }\n                    } else {\n                        found = iter;\n                    }\n                }\n                return true;\n            });\n            callback(false, found);\n        });\n    }\n    function getParentPathId(item, callback) {\n        const dir = FS.dirname(item.path);\n        const type = 'application/vnd.google-apps.folder';\n        console.debug('GoogleDrive::*getParentPathId()', item);\n        getFileFromPath(dir, type, (error, item) => {\n            if (error) {\n                callback(error);\n            } else {\n                callback(false, item ? item.id : null);\n            }\n        });\n    }\n    function createBoundary(file, data, callback) {\n        const boundary = '-------314159265358979323846';\n        const delimiter = '\\r\\n--' + boundary + '\\r\\n';\n        const close_delim = '\\r\\n--' + boundary + '--';\n        const contentType = file.mime || 'text/plain';\n        function createBody(result) {\n            const metadata = {\n                title: file.filename,\n                mimeType: contentType\n            };\n            const base64Data = result;\n            const multipartRequestBody = delimiter + 'Content-Type: application/json\\r\\n\\r\\n' + JSON.stringify(metadata) + delimiter + 'Content-Type: ' + contentType + '\\r\\n' + 'Content-Transfer-Encoding: base64\\r\\n' + '\\r\\n' + base64Data + close_delim;\n            return multipartRequestBody;\n        }\n        const reqContentType = \"multipart/mixed; boundary='\" + boundary + \"'\";\n        if (data instanceof FileDataURL) {\n            callback(false, {\n                contentType: reqContentType,\n                body: createBody(data.toBase64())\n            });\n        } else {\n            FS.abToBinaryString(data, contentType, (error, response) => {\n                callback(error, error ? false : {\n                    contentType: reqContentType,\n                    body: createBody(btoa(response))\n                });\n            });\n        }\n    }\n    function setFolder(item, pid, callback) {\n        console.info('GoogleDrive::setFolder()', item, pid);\n        pid = pid || 'root';\n        function _clearFolders(cb) {\n            item.parents.forEach((p, i) => {\n                const request = gapi.client.drive.children.delete({\n                    folderId: p.id,\n                    childId: item.id\n                });\n                request.execute(resp => {\n                    if (i >= item.parents.length - 1) {\n                        cb();\n                    }\n                });\n            });\n        }\n        function _setFolder(rootId, cb) {\n            const request = gapi.client.drive.children.insert({\n                folderId: pid,\n                resource: { id: item.id }\n            });\n            request.execute(resp => {\n                console.info('GoogleDrive::setFolder()', '=>', resp);\n                callback(false, true);\n            });\n        }\n        _clearFolders(() => {\n            _setFolder(pid, callback);\n        });\n    }\n    return class GoogleDriveTransport extends Transport {\n        _init() {\n            if (_authenticated) {\n                return Promise.resolve();\n            }\n            return new Promise((resolve, reject) => {\n                GoogleAPI.create({\n                    scope: [\n                        'https://www.googleapis.com/auth/drive.install',\n                        'https://www.googleapis.com/auth/drive.file',\n                        'openid'\n                    ],\n                    load: [\n                        'drive-realtime',\n                        'drive-share'\n                    ]\n                }, (err, res) => {\n                    gapi.client.load('drive', 'v2', err => {\n                        if (!err) {\n                            _authenticated = true;\n                        }\n                        return err ? reject(new Error(err)) : resolve(true);\n                    });\n                });\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                getAllDirectoryFiles(item, (error, list, dir) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        const result = createDirectoryList(dir, list, item, options, mount.option('match'));\n                        resolve(result);\n                    }\n                });\n            });\n        }\n        read(item, options, mount) {\n            const read = ritem => new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.get({ fileId: ritem.id });\n                request.execute(file => {\n                    if (file && file.id) {\n                        let accessToken = gapi.auth.getToken().access_token;\n                        axios({\n                            url: file.downloadUrl,\n                            method: 'GET',\n                            responseType: 'arraybuffer',\n                            headers: { 'Authorization': 'Bearer ' + accessToken }\n                        }).then(response => {\n                            return resolve(response.data);\n                        }).catch(error => {\n                            reject(new Error(a._('ERR_VFSMODULE_XHR_ERROR') + ' - ' + error.message));\n                        });\n                    } else {\n                        reject(new Error(a._('ERR_VFSMODULE_NOSUCH')));\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                if (item.downloadUrl) {\n                    read(item).then(resolve).catch(reject);\n                } else {\n                    getFileFromPath(item.path, item.mime, function (error, response) {\n                        if (error) {\n                            reject(new Error(error));\n                        } else if (!response) {\n                            reject(new Error(a._('ERR_VFSMODULE_NOSUCH')));\n                        } else {\n                            read(response).then(resolve).catch(reject);\n                        }\n                    });\n                }\n            });\n        }\n        write(file, data) {\n            const write = (parentId, fileId) => new Promise((resolve, reject) => {\n                let uri = '/upload/drive/v2/files';\n                let method = 'POST';\n                if (fileId) {\n                    uri = '/upload/drive/v2/files/' + fileId;\n                    method = 'PUT';\n                }\n                createBoundary(file, data, (error, fileData) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        const request = gapi.client.request({\n                            path: uri,\n                            method: method,\n                            params: { uploadType: 'multipart' },\n                            headers: { 'Content-Type': fileData.contentType },\n                            body: fileData.body\n                        });\n                        request.execute(resp => {\n                            _treeCache = null;\n                            if (resp && resp.id) {\n                                if (parentId) {\n                                    setFolder(resp, parentId, (err, res) => {\n                                        return err ? reject(new Error(err)) : resolve(res);\n                                    });\n                                } else {\n                                    resolve(true);\n                                }\n                            } else {\n                                reject(a._('ERR_VFSMODULE_NOSUCH'));\n                            }\n                        });\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                getParentPathId(file, (error, id) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else if (file.id) {\n                        write(id, file.id).then(resolve).catch(reject);\n                    } else {\n                        this.exists(file).then(exists => {\n                            return write(id, exists ? exists.id : null).then(resolve).catch(reject);\n                        }).catch(() => {\n                            write(id, null).then(resolve).catch(reject);\n                        });\n                    }\n                });\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.copy({\n                    fileId: src.id,\n                    resource: { title: FS.filename(dest.path) }\n                });\n                request.execute(resp => {\n                    if (resp.id) {\n                        getParentPathId(dest, (error, parentId) => {\n                            if (error) {\n                                console.warn(error);\n                                resolve(true);\n                            } else {\n                                _treeCache = null;\n                                setFolder(resp, parentId, (err, res) => {\n                                    return err ? reject(new Error(err)) : resolve(res);\n                                });\n                            }\n                        });\n                    } else {\n                        const msg = resp && resp.message ? resp.message : a._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.patch({\n                    fileId: src.id,\n                    resource: { title: FS.filename(dest.path) }\n                });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        _treeCache = null;\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : a._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                const req = new FileMetadata(FS.dirname(item.path));\n                this.scandir(req).then(result => {\n                    const found = result.find(iter => iter.path === item.path);\n                    if (found) {\n                        const file = new FileMetadata(item.path, found.mimeType);\n                        file.id = found.id;\n                        file.title = found.title;\n                        return resolve(file);\n                    }\n                    return resolve(false);\n                }).catch(reject);\n            });\n        }\n        fileinfo(item) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.get({ fileId: item.id });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        const useKeys = [\n                            'createdDate',\n                            'id',\n                            'lastModifyingUser',\n                            'lastViewedByMeDate',\n                            'markedViewedByMeDate',\n                            'mimeType',\n                            'modifiedByMeDate',\n                            'modifiedDate',\n                            'title',\n                            'alternateLink'\n                        ];\n                        const info = {};\n                        useKeys.forEach(k => {\n                            info[k] = resp[k];\n                        });\n                        resolve(info);\n                    } else {\n                        reject(a._('ERR_VFSMODULE_NOSUCH'));\n                    }\n                });\n            });\n        }\n        url(item) {\n            return new Promise((resolve, reject) => {\n                if (!item || !item.id) {\n                    reject(new Error('url() expects a File ref with Id'));\n                } else {\n                    const request = gapi.client.drive.files.get({ fileId: item.id });\n                    request.execute(resp => {\n                        if (resp && resp.webContentLink) {\n                            resolve(resp.webContentLink);\n                        } else {\n                            const msg = resp && resp.message ? resp.message : a._('ERR_APP_UNKNOWN_ERROR');\n                            reject(new Error(msg));\n                        }\n                    });\n                }\n            });\n        }\n        mkdir(dir) {\n            const mkdir = parents => new Promise((resolve, reject) => {\n                const request = gapi.client.request({\n                    'path': '/drive/v2/files',\n                    'method': 'POST',\n                    'body': JSON.stringify({\n                        title: dir.filename,\n                        parents: parents,\n                        mimeType: 'application/vnd.google-apps.folder'\n                    })\n                });\n                request.execute(resp => {\n                    if (resp && resp.id) {\n                        _treeCache = null;\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : a._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n            return new Promise((resolve, reject) => {\n                const module = MountManager.getModuleFromPath(dir.path);\n                const dirDest = FS.getPathFromVirtual(FS.dirname(dir.path));\n                const rootDest = FS.getPathFromVirtual(module.option('root'));\n                if (dirDest !== rootDest) {\n                    getParentPathId(dir, (error, id) => {\n                        if (error || !id) {\n                            reject(new Error(a._('ERR_VFSMODULE_PARENT_FMT', error || a._('ERR_VFSMODULE_PARENT'))));\n                        } else {\n                            mkdir([{ id: id }]).then(resolve).catch(reject);\n                        }\n                    });\n                } else {\n                    mkdir(null).then(resolve).catch(reject);\n                }\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        trash(file) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.trash({ fileId: file.id });\n                request.execute(resp => {\n                    if (resp.id) {\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : a._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        untrash(file) {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.untrash({ fileId: file.id });\n                request.execute(resp => {\n                    if (resp.id) {\n                        resolve(true);\n                    } else {\n                        const msg = resp && resp.message ? resp.message : a._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    }\n                });\n            });\n        }\n        emptyTrash() {\n            return new Promise((resolve, reject) => {\n                const request = gapi.client.drive.files.emptyTrash({});\n                request.execute(resp => {\n                    if (resp && resp.message) {\n                        const msg = resp && resp.message ? resp.message : a._('ERR_APP_UNKNOWN_ERROR');\n                        reject(new Error(msg));\n                    } else {\n                        resolve(true);\n                    }\n                });\n            });\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n        unlink(src) {\n            const unlink = s => {\n                _treeCache = null;\n                return new Promise((resolve, reject) => {\n                    const request = gapi.client.drive.files.delete({ fileId: s.id });\n                    request.execute(resp => {\n                        if (resp && typeof resp.result === 'object') {\n                            resolve(true);\n                        } else {\n                            const msg = resp && resp.message ? resp.message : a._('ERR_APP_UNKNOWN_ERROR');\n                            reject(new Error(msg));\n                        }\n                    });\n                });\n            };\n            if (!src.id) {\n                return new Promise((resolve, reject) => {\n                    getFileFromPath(src.path, src.mime, (error, response) => {\n                        if (error) {\n                            reject(new Error(error));\n                        } else if (!response) {\n                            reject(new Error(a._('ERR_VFSMODULE_NOSUCH')));\n                        } else {\n                            unlink(response).then(resolve).catch(reject);\n                        }\n                    });\n                });\n            }\n            return unlink(src);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/windows-live-api',[\n    '../core/mount-manager',\n    './service-notification-icon',\n    '../utils/preloader',\n    '../core/locales',\n    '../core/config'\n], function (MountManager, ServiceNotificationIcon, Preloader, a, b) {\n    'use strict';\n    const redirectURI = window.location.href.replace(/\\/$/, '') + '/windows-live-oauth.html';\n    let SingletonInstance = null;\n    class WindowsLiveAPI {\n        constructor(clientId) {\n            this.hasSession = false;\n            this.clientId = clientId;\n            this.loaded = false;\n            this.inited = false;\n            this.accessToken = null;\n            this.lastScope = null;\n            this.preloads = [{\n                    type: 'javascript',\n                    src: '//js.live.net/v5.0/wl.js'\n                }];\n        }\n        destroy() {\n        }\n        init(callback) {\n            callback = callback || function () {\n            };\n            if (this.loaded) {\n                callback(false, true);\n            } else {\n                Preloader.preload(this.preloads).then(result => {\n                    if (!result.failed.length) {\n                        this.loaded = true;\n                    }\n                    callback(result.failed.join('\\n'));\n                }).catch(() => callback());\n            }\n        }\n        load(scope, callback) {\n            console.debug('WindowsLiveAPI::load()', scope);\n            let WL = window.WL || {};\n            const _login = () => {\n                const lastScope = (this.lastScope || []).sort();\n                const currScope = (scope || []).sort();\n                if (this.hasSession && lastScope.toString() === currScope.toString()) {\n                    callback(false, true);\n                    return;\n                }\n                this.login(scope, (error, response) => {\n                    if (error) {\n                        callback(error);\n                        return;\n                    }\n                    setTimeout(() => {\n                        callback(false, true);\n                    }, 10);\n                });\n            };\n            this.init(error => {\n                if (error) {\n                    callback(error);\n                    return;\n                }\n                if (!window.WL) {\n                    callback(a._('WLAPI_LOAD_FAILURE'));\n                    return;\n                }\n                WL = window.WL || {};\n                if (this.inited) {\n                    _login();\n                } else {\n                    this.inited = true;\n                    WL.Event.subscribe('auth.login', (a, b, c, d) => {\n                        this.onLogin(a, b, c, d);\n                    });\n                    WL.Event.subscribe('auth.logout', (a, b, c, d) => {\n                        this.onLogout(a, b, c, d);\n                    });\n                    WL.Event.subscribe('wl.log', (a, b, c, d) => {\n                        this.onLog(a, b, c, d);\n                    });\n                    WL.Event.subscribe('auth.sessionChange', (a, b, c, d) => {\n                        this.onSessionChange(a, b, c, d);\n                    });\n                    WL.init({\n                        client_id: this.clientId,\n                        display: 'popup',\n                        redirect_uri: redirectURI\n                    }).then(result => {\n                        console.debug('WindowsLiveAPI::load()', '=>', result);\n                        if (result.session) {\n                            this.accessToken = result.session.access_token || null;\n                        }\n                        if (result.status === 'connected') {\n                            callback(false, true);\n                        } else if (result.status === 'success') {\n                            _login();\n                        } else {\n                            callback(a._('WLAPI_INIT_FAILED_FMT', result.status.toString()));\n                        }\n                    }, result => {\n                        console.error('WindowsLiveAPI::load()', 'init() error', result);\n                        callback(result.error_description);\n                    });\n                }\n            });\n        }\n        _removeRing() {\n            ServiceNotificationIcon.remove('Windows Live API');\n        }\n        logout(callback) {\n            callback = callback || function () {\n            };\n            const WL = window.WL || {};\n            if (this.hasSession) {\n                callback(false, false);\n            }\n            WL.Event.unsubscribe('auth.logout');\n            WL.Event.subscribe('auth.logout', () => {\n                this._removeRing();\n                WL.Event.unsubscribe('auth.logout');\n                callback(false, true);\n            });\n            WL.logout();\n            MountManager.remove('OneDrive');\n        }\n        login(scope, callback) {\n            const WL = window.WL || {};\n            if (this.hasSession) {\n                callback(false, true);\n                return;\n            }\n            WL.login({\n                scope: scope,\n                redirect_uri: redirectURI\n            }).then(result => {\n                if (result.status === 'connected') {\n                    callback(false, true);\n                } else {\n                    callback(a._('WLAPI_LOGIN_FAILED'));\n                }\n            }, result => {\n                callback(a._('WLAPI_LOGIN_FAILED_FMT', result.error_description));\n            });\n        }\n        onSessionChange() {\n            console.warn('WindowsLiveAPI::onSessionChange()', arguments);\n            const WL = window.WL || {};\n            const session = WL.getSession();\n            if (session) {\n                this.hasSession = true;\n            } else {\n                this.hasSession = false;\n            }\n        }\n        onLogin() {\n            console.warn('WindowsLiveAPI::onLogin()', arguments);\n            this.hasSession = true;\n            ServiceNotificationIcon.add('Windows Live API', [{\n                    title: a._('WLAPI_SIGN_OUT'),\n                    onClick: () => {\n                        this.logout();\n                    }\n                }]);\n        }\n        onLogout() {\n            console.warn('WindowsLiveAPI::onLogout()', arguments);\n            this.hasSession = false;\n            this._removeRing();\n        }\n        onLog() {\n            console.debug('WindowsLiveAPI::onLog()', arguments);\n        }\n    }\n    function instance() {\n        return SingletonInstance;\n    }\n    function create(args, callback) {\n        args = args || {};\n        function _run() {\n            const scope = args.scope;\n            SingletonInstance.load(scope, error => {\n                callback(error ? error : false, SingletonInstance);\n            });\n        }\n        if (SingletonInstance) {\n            _run();\n            return;\n        }\n        let clientId = null;\n        try {\n            clientId = b.getConfig('WindowsLiveAPI.ClientId');\n        } catch (e) {\n            console.warn('getWindowsLiveAPI()', e, e.stack);\n        }\n        if (!clientId) {\n            callback(a._('WLAPI_DISABLED'));\n            return;\n        }\n        SingletonInstance = new WindowsLiveAPI(clientId);\n        _run();\n    }\n    return {\n        instance: instance,\n        create: create\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/onedrive',[\n    'skylark-axios',\n    '../transport',\n    '../file',\n    '../../core/config',\n    '../../core/locales',\n    '../../helpers/windows-live-api',\n    '../../utils/fs',\n    '../fs'\n], function ( Promise, Transport, FileMetadata, a, b, WindowsLiveAPI, FS, VFS) {\n    'use strict';\n    let _isMounted = false;\n    let _mimeCache;\n    function onedriveCall(args, callback) {\n        console.debug('OneDrive::*onedriveCall()', args);\n        const WL = window.WL || {};\n        WL.api(args).then(response => {\n            callback(false, response);\n        }, responseFailed => {\n            console.error('OneDrive::*onedriveCall()', 'error', responseFailed, args);\n            callback(responseFailed.error.message);\n        });\n    }\n    function getItemType(iter) {\n        let type = 'file';\n        if (iter.type === 'folder' || iter.type === 'album') {\n            type = 'dir';\n        }\n        return type;\n    }\n    function getItemMime(iter) {\n        if (!_mimeCache) {\n            _mimeCache = a.getConfig('MIME.mapping', {});\n        }\n        let mime = null;\n        if (getItemType(iter) !== 'dir') {\n            mime = 'application/octet-stream';\n            let ext = FS.filext(iter.name);\n            if (ext.length) {\n                ext = '.' + ext;\n                if (_mimeCache[ext]) {\n                    mime = _mimeCache[ext];\n                }\n            }\n        }\n        return mime;\n    }\n    function getMetadataFromItem(dir, item, root) {\n        const par = dir.replace(/^\\/+/, '').replace(/\\/+$/, '');\n        const path = root + (par ? par + '/' : par) + item.name;\n        const itemFile = new FileMetadata({\n            id: item.id,\n            filename: item.name,\n            size: item.size || 0,\n            path: path,\n            mime: getItemMime(item),\n            type: getItemType(item)\n        });\n        return itemFile;\n    }\n    function createDirectoryList(dir, list, item, options, root) {\n        const result = [];\n        if (dir !== '/') {\n            result.push(new FileMetadata({\n                id: item.id,\n                filename: '..',\n                path: FS.dirname(item.path),\n                size: 0,\n                type: 'dir'\n            }));\n        }\n        list.forEach(iter => {\n            result.push(getMetadataFromItem(dir, iter, root));\n        });\n        return result;\n    }\n    function getFilesInFolder(folderId, callback) {\n        onedriveCall({\n            path: folderId + '/files',\n            method: 'GET'\n        }, (error, response) => {\n            if (error) {\n                callback(error);\n                return;\n            }\n            console.debug('OneDrive::*getFilesInFolder()', '=>', response);\n            callback(false, response.data || []);\n        });\n    }\n    function resolvePath(item, callback, useParent) {\n        if (!useParent) {\n            if (item.id) {\n                callback(false, item.id);\n                return;\n            }\n        }\n        let path = FS.getPathFromVirtual(item.path).replace(/\\/+/, '/');\n        if (useParent) {\n            path = FS.dirname(path);\n        }\n        if (path === '/') {\n            callback(false, 'me/skydrive');\n            return;\n        }\n        const resolves = path.replace(/^\\/+/, '').split('/');\n        const isOnRoot = !resolves.length;\n        let currentParentId = 'me/skydrive';\n        function _nextDir(completed) {\n            const current = resolves.shift();\n            const done = resolves.length <= 0;\n            let found;\n            if (isOnRoot) {\n                found = currentParentId;\n            } else {\n                if (current) {\n                    getFilesInFolder(currentParentId, (error, list) => {\n                        list = list || [];\n                        let lfound;\n                        if (!error) {\n                            list.forEach(iter => {\n                                if (iter) {\n                                    if (iter.name === current) {\n                                        lfound = iter.id;\n                                    }\n                                }\n                            });\n                            if (lfound) {\n                                currentParentId = lfound;\n                            }\n                        } else {\n                            console.warn('OneDrive', 'resolvePath()', 'getFilesInFolder() error', error);\n                        }\n                        if (done) {\n                            completed(lfound);\n                        } else {\n                            _nextDir(completed);\n                        }\n                    });\n                    return;\n                }\n            }\n            if (done) {\n                completed(found);\n            } else {\n                _nextDir(completed);\n            }\n        }\n        _nextDir(foundId => {\n            if (foundId) {\n                callback(false, foundId);\n            } else {\n                callback(b._('ONEDRIVE_ERR_RESOLVE'));\n            }\n        });\n    }\n    return class OneDriveTransport extends Transport {\n        _init() {\n            return new Promise((resolve, reject) => {\n                const iargs = {\n                    scope: [\n                        'wl.signin',\n                        'wl.skydrive',\n                        'wl.skydrive_update'\n                    ]\n                };\n                if (_isMounted) {\n                    resolve(true);\n                } else {\n                    WindowsLiveAPI.create(iargs, error => {\n                        if (error) {\n                            reject(new Error(error));\n                        } else {\n                            _isMounted = true;\n                            resolve(true);\n                        }\n                    });\n                }\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                const relativePath = FS.getPathFromVirtual(item.path);\n                resolvePath(item, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                getFilesInFolder(response.id, (error, list) => {\n                                    if (error) {\n                                        reject(new Error(error));\n                                    } else {\n                                        const fileList = createDirectoryList(relativePath, list, item, options, mount.option('root'));\n                                        resolve(fileList);\n                                    }\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        read(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item).then(url => {\n                    const file = new FileMetadata(url, item.mime);\n                    VFS.read(file, options).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        write(file, data) {\n            return new Promise((resolve, reject) => {\n                const inst = WindowsLiveAPI.instance();\n                const url = 'https://apis.live.net/v5.0/me/skydrive/files?access_token=' + inst.accessToken;\n                const fd = new FormData();\n                FS.addFormFile(fd, 'file', data, file);\n                axios({\n                    url: url,\n                    method: 'POST',\n                    responseType: 'json',\n                    data: fd\n                }).then(response => {\n                    const result = response.data;\n                    if (result && result.id) {\n                        return resolve(result.id);\n                    }\n                    return reject(new Error(b._('ERR_APP_UNKNOWN_ERROR')));\n                }).catch(reject);\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                dest = new FileMetadata(FS.dirname(dest.path));\n                resolvePath(src, (error, srcDrivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        resolvePath(dest, (error, dstDrivePath) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                onedriveCall({\n                                    path: srcDrivePath,\n                                    method: 'COPY',\n                                    body: { destination: dstDrivePath }\n                                }, (error, response) => {\n                                    return error ? reject(new Error(error)) : resolve(true);\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                dest = new FileMetadata(FS.dirname(dest.path));\n                resolvePath(src, (error, srcDrivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        resolvePath(dest, (error, dstDrivePath) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                onedriveCall({\n                                    path: srcDrivePath,\n                                    method: 'MOVE',\n                                    body: { destination: dstDrivePath }\n                                }, (error, response) => {\n                                    return error ? reject(new Error(error)) : resolve(true);\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this.fileinfo(item).then(() => resolve(true)).catch(() => resolve(false));\n            });\n        }\n        fileinfo(item) {\n            return new Promise((resolve, reject) => {\n                resolvePath(item, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                const useKeys = [\n                                    'created_time',\n                                    'id',\n                                    'link',\n                                    'name',\n                                    'type',\n                                    'updated_time',\n                                    'upload_location',\n                                    'description',\n                                    'client_updated_time'\n                                ];\n                                const info = {};\n                                useKeys.forEach(k => {\n                                    info[k] = response[k];\n                                });\n                                resolve(info);\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        url(item) {\n            return new Promise((resolve, reject) => {\n                resolvePath(item, function (error, drivePath) {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath + '/content',\n                            method: 'GET'\n                        }, (error, response) => {\n                            if (error) {\n                                reject(new Error(error));\n                            } else {\n                                resolve(response.location);\n                            }\n                        });\n                    }\n                });\n            });\n        }\n        mkdir(dir) {\n            return new Promise((resolve, reject) => {\n                resolvePath(dir, (error, drivePath) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'POST',\n                            body: { name: dir.filename }\n                        }, (error, response) => {\n                            return error ? reject(new Error(error)) : resolve(true);\n                        });\n                    }\n                }, true);\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        freeSpace(root) {\n            return Promise.resolve(-1);\n        }\n        unlink(src) {\n            return new Promise((resolve, reject) => {\n                resolvePath(src, (error, drivePath) => {\n                    if (error) {\n                        reject(new Error(error));\n                    } else {\n                        onedriveCall({\n                            path: drivePath,\n                            method: 'DELETE'\n                        }, (error, response) => {\n                            return error ? reject(new Error(error)) : resolve(true);\n                        });\n                    }\n                });\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/vfs/transports/dropbox',[\n    '../transport',\n    '../../utils/preloader',\n    '../../core/config',\n    '../file',\n    '../../utils/misc',\n    '../../core/locales',\n    '../../utils/fs'\n], function (Transport, Preloader, a, FileMetadata, b, c, FS) {\n    'use strict';\n    const AUTH_TIMEOUT = 1000 * 30;\n    const MAX_RESULTS = 100;\n    return class DropboxTransport extends Transport {\n        constructor() {\n            super(...arguments);\n            this.loaded = false;\n            this.authed = false;\n            this.dbx = null;\n        }\n        _loadDependencies() {\n            if (this.loaded) {\n                return Promise.resolve(true);\n            }\n            return new Promise((resolve, reject) => {\n                Preloader.preload(['https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js']).then(() => {\n                    if (window.Dropbox) {\n                        this.loaded = true;\n                        return resolve(true);\n                    }\n                    return reject(new Error(c._('ERR_DROPBOX_API')));\n                }).catch(err => {\n                    this.loaded = true;\n                    return reject(err);\n                });\n            });\n        }\n        _createClient(clientId) {\n            if (this.authed) {\n                return Promise.resolve(true);\n            }\n            return new Promise((resolve, reject) => {\n                let timedOut;\n                let loginTimeout;\n                this.dbx = new window.Dropbox({ clientId: clientId });\n                const redirectUrl = window.location.href.replace(/\\/?$/, '/') + 'dropbox-oauth.html';\n                const callbackName = '__osjs__dropbox_callback__';\n                window[callbackName] = url => {\n                    clearTimeout(loginTimeout);\n                    if (timedOut) {\n                        return;\n                    }\n                    const params = b.urlparams(url, true);\n                    if (params.access_token) {\n                        this.authed = true;\n                        this.dbx = new window.Dropbox({ accessToken: params.access_token });\n                        resolve(true);\n                    } else {\n                        reject(new Error(c._('ERR_DROPBOX_AUTH')));\n                    }\n                };\n                const authUrl = this.dbx.getAuthenticationUrl(redirectUrl);\n                loginTimeout = setTimeout(() => {\n                    timedOut = true;\n                    reject(new Error(c._('ERR_DROPBOX_AUTH')));\n                }, AUTH_TIMEOUT);\n                window.open(authUrl);\n            });\n        }\n        _init() {\n            const clientId = a.getConfig('DropboxAPI.ClientKey');\n            if (!clientId) {\n                return Promise.reject(new Error(c._('ERR_DROPBOX_KEY')));\n            }\n            return new Promise((resolve, reject) => {\n                this._loadDependencies().then(() => {\n                    return this._createClient(clientId).then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        request(method, args, options, mount) {\n            const fargs = arguments;\n            return new Promise((resolve, reject) => {\n                this._init().then(() => {\n                    return super.request(...fargs).then(resolve).catch(err => {\n                        if (typeof err !== 'string' && !(err instanceof Error)) {\n                            if (err.status && err.response && err.error) {\n                                return reject(new Error(err.error.error_summary));\n                            }\n                        }\n                        return reject(err);\n                    });\n                }).catch(reject);\n            });\n        }\n        _createMetadata(root, iter) {\n            return {\n                id: iter.id,\n                filename: iter.name,\n                path: FS.pathJoin(root, iter.path_display),\n                type: iter['.tag'] === 'folder' ? 'dir' : 'file',\n                size: iter.size || 0\n            };\n        }\n        find(file, options, a, mount) {\n            const root = FS.getPathFromVirtual(file.path);\n            return new Promise((resolve, reject) => {\n                this.dbx.filesSearch({\n                    path: root === '/' ? '' : root,\n                    query: options.query,\n                    max_results: MAX_RESULTS,\n                    mode: { '.tag': 'filename' }\n                }).then(response => {\n                    return resolve(response.matches.map(iter => {\n                        return this._createMetadata(mount.option('root'), iter.metadata);\n                    }));\n                }).catch(reject);\n            });\n        }\n        scandir(item, options, mount) {\n            const root = FS.getPathFromVirtual(item.path);\n            let result = [];\n            const scandir = cursor => new Promise((resolve, reject) => {\n                const m = cursor ? 'filesListFolderContinue' : 'filesListFolder';\n                const a = cursor ? { cursor } : { path: root === '/' ? '' : root };\n                this.dbx[m](a).then(response => {\n                    const found = (response.entries || []).map(iter => {\n                        return this._createMetadata(mount.option('root'), iter);\n                    });\n                    result = result.concat(found);\n                    if (response.has_more && response.cursor) {\n                        return scandir(response.cursor).then(resolve).catch(reject);\n                    }\n                    return resolve(result);\n                }).catch(reject);\n            });\n            return scandir(null);\n        }\n        read(item, options, mount) {\n            return new Promise((resolve, reject) => {\n                this.url(item, { dl: 0 }).then(url => {\n                    this.dbx.sharingGetSharedLinkFile({ url }).then(data => {\n                        return resolve(data.fileBlob);\n                    }).catch(reject);\n                }).catch(reject);\n            });\n        }\n        write(file, data) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesUpload({\n                    path: FS.getPathFromVirtual(file.path),\n                    mode: { '.tag': 'overwrite' },\n                    contents: data\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        copy(src, dest) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesCopy({\n                    from_path: FS.getPathFromVirtual(src.path),\n                    to_path: FS.getPathFromVirtual(dest.path)\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        move(src, dest) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesMove({\n                    from_path: FS.getPathFromVirtual(src.path),\n                    to_path: FS.getPathFromVirtual(dest.path)\n                }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        exists(item) {\n            return new Promise((resolve, reject) => {\n                this.fileinfo(item).then(() => resolve(true)).catch(() => resolve(false));\n            });\n        }\n        fileinfo(item) {\n            return this.dbx.filesGetMetadata({ path: FS.getPathFromVirtual(item.path) });\n        }\n        url(item, options) {\n            const visibility = 'public';\n            const hasLink = () => new Promise((resolve, reject) => {\n                this.dbx.sharingGetSharedLinks({ path: FS.getPathFromVirtual(item.path) }).then(response => {\n                    if (response.links.length) {\n                        const found = response.links.find(iter => iter.visibility['.tag'] === visibility);\n                        const dl = typeof options.dl === 'undefined' ? 1 : options.dl;\n                        if (found) {\n                            return resolve(found.url.replace('dl=0', 'dl=' + String(dl)));\n                        }\n                    }\n                    return resolve(false);\n                }).catch(reject);\n            });\n            const newLink = () => new Promise((resolve, reject) => {\n                this.dbx.sharingCreateSharedLinkWithSettings({\n                    path: FS.getPathFromVirtual(item.path),\n                    settings: { requested_visibility: visibility }\n                }).then(response => {\n                    return resolve(response.url);\n                }).catch(reject);\n            });\n            return new Promise((resolve, reject) => {\n                hasLink().then(url => {\n                    if (url) {\n                        console.warn('ALREADY HAS URL', url);\n                        return resolve(url);\n                    }\n                    console.warn('CREATING NEW URL');\n                    return newLink().then(resolve).catch(reject);\n                }).catch(reject);\n            });\n        }\n        mkdir(dir) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesCreateFolder({ path: FS.getPathFromVirtual(dir.path) }).then(() => resolve(true)).catch(reject);\n            });\n        }\n        upload(dest, file) {\n            const item = new FileMetadata({\n                filename: file.name,\n                path: FS.pathJoin(dest.path, file.name),\n                mime: file.type,\n                size: file.size\n            });\n            return this.write(item, file);\n        }\n        freeSpace(root) {\n            return new Promise((resolve, reject) => {\n                this.dbx.usersGetSpaceUsage().then(response => {\n                    try {\n                        if (response.allocation && typeof response.allocation.individual !== 'undefined') {\n                            return resolve(response.allocation.individual.allocated);\n                        }\n                    } catch (e) {\n                        console.warn(e);\n                    }\n                    return resolve(-1);\n                }).catch(reject);\n            });\n        }\n        unlink(src) {\n            return new Promise((resolve, reject) => {\n                this.dbx.filesDelete({ path: FS.getPathFromVirtual(src.path) }).then(() => resolve(true)).catch(reject);\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/init',[\n    './locales',\n    './mount-manager',\n    './settings-manager',\n    './package-manager',\n    './search-engine',\n    './authenticator',\n    './window-manager',\n    './dialog',\n    './storage',\n    './process',\n    './theme',\n    './connection',\n    '../helpers/hooks',\n    './config',\n    '../gui/splash',\n    '../utils/misc',\n    '../gui/menu',\n    '../gui/notification',\n    '../utils/preloader',\n    '../dialogs/alert',\n    '../dialogs/applicationchooser',\n    '../dialogs/color',\n    '../dialogs/confirm',\n    '../dialogs/error',\n    '../dialogs/fileinfo',\n    '../dialogs/file',\n    '../dialogs/fileprogress',\n    '../dialogs/fileupload',\n    '../dialogs/font',\n    '../dialogs/input',\n    \"../vfs/fs\",\n    \"../vfs/transports/web\",\n    \"../vfs/transports/osjs\",\n    \"../vfs/transports/dist\",\n    \"../vfs/transports/applications\",\n    \"../vfs/transports/webdav\",\n    \"../vfs/transports/google-drive\",\n    \"../vfs/transports/onedrive\",\n    \"../vfs/transports/dropbox\"\n\n\n], function (Locales, MountManager, SettingsManager, PackageManager, SearchEngine, Authenticator, WindowManager, DialogWindow, Storage, Process, Theme, Connection, a, b, SplashScreen, Utils, Menu, Notification,Preloader, AlertDialog, ApplicationChooserDialog, ColorDialog, ConfirmDialog, ErrorDialog, FileInfoDialog, FileDialog, FileProgressDialog, FileUploadDialog, FontDialog, InputDialog,\n    VFS,\n    WebTransport,\n    OsjsTransport,\n    DistTransport,\n    ApplicationTransport,\n    WebdavTransport,\n    GdriveTransport,\n    OnedriveTransport,\n    DropboxTransport) {\n    'use strict';\n\n   const  OSJS_DEBUG = false;\n\n    Promise.each = function(arr, fn) { // take an array and a function // added by lwf\n      // invalid input\n      if(!Array.isArray(arr)) return Promise.reject(new Error(\"Non array passed to each\"));\n      // empty case\n      if(arr.length === 0) return Promise.resolve(); \n      return arr.reduce(function(prev, cur,idx) { \n        return prev.then(() => fn(cur,idx))\n      }, Promise.resolve());\n    }\n\n    function loadTransports() {\n        const result = {\n            'web' : WebdavTransport.default,\n            'osjs' : OnedriveTransport.default,\n            'dist' : DistTransport.default,\n            'applications' : ApplicationTransport.default,\n            'webdav' : WebdavTransport.default,\n            'google-drive' : GdriveTransport.default,\n            'onedrive' : OnedriveTransport.default,\n            'dropbox' : DropboxTransport.default\n        };\n\n        return result;\n    }\n\n    let hasBooted = false;\n    let hasShutDown = false;\n    function onError(title, message, error, exception, bugreport) {\n        bugreport = (() => {\n            if (b.getConfig('BugReporting.enabled')) {\n                return typeof bugreport === 'undefined' ? false : bugreport ? true : false;\n            }\n            return false;\n        })();\n        function _dialog() {\n            const wm = WindowManager.instance;\n            if (wm && wm._fullyLoaded) {\n                try {\n                    DialogWindow.create('Error', {\n                        title: title,\n                        message: message,\n                        error: error,\n                        exception: exception,\n                        bugreport: bugreport\n                    });\n                    return true;\n                } catch (e) {\n                    console.warn('An error occured while creating Error Dialog', e);\n                    console.warn('stack', e.stack);\n                }\n            }\n            return false;\n        }\n        Menu.blur();\n        if (exception instanceof Error && (exception.message.match(/^Script Error/i) && String(exception.lineNumber).match(/^0/))) {\n            console.error('VENDOR ERROR', {\n                title: title,\n                message: message,\n                error: error,\n                exception: exception\n            });\n            return;\n        } else {\n            console.error(title, message, error, exception);\n        }\n        const testMode = OSJS_DEBUG && window.location.hash.match(/mocha=true/);\n        if (!testMode) {\n            if (!_dialog()) {\n                window.alert(title + '\\n\\n' + message + '\\n\\n' + error);\n            }\n        }\n    }\n    const initPreloading = config => new Promise((resolve, reject) => {\n        const flatten = list => list.reduce((a, b) => a.concat(Array.isArray(b) ? flatten(b) : b), []);\n        Preloader.preload(flatten(config.Preloads)).then(result => {\n            return resolve();\n        }).catch(reject);\n    });\n    const initHandlers = config => new Promise((resolve, reject) => {\n        const options = config.Connection;\n        console.log({\n            authenticator: options.Authenticator,\n            connection: options.Connection,\n            storage: options.Storage\n        });\n        let Authenticator, Connection, Storage;\n        let connectionName = options.Connection.split('+').indexOf('ws') !== -1 ? 'ws' : 'http';\n        try {\n            Authenticator = OSjs.require('core/auth/' + options.Authenticator); // modified by lwf\n            Connection = OSjs.require('core/connections/' + connectionName); // modified by lwf\n            Storage = OSjs.require('core/storage/' + options.Storage ); // modified by lwf\n        } catch (e) {\n            reject(e);\n            return;\n        }\n        const connection = new Connection();\n        const authenticator = new Authenticator();\n        const storage = new Storage();\n        Promise.each([\n            connection,\n            storage,\n            authenticator\n        ], iter => {\n            return iter.init();\n        }).then(resolve).catch(reject);\n    });\n    const initVFS = config => new Promise((resolve, reject) => {\n        const mountPoints = SettingsManager.instance('VFS').get('mounts', []);\n        MountManager.init(loadTransports).then(res => {  // modified by lwf\n            return MountManager.addList(mountPoints).then(res => {\n                return resolve(res);\n            }).catch(e => {\n                console.warn('A module failed to load!', e);\n                resolve();\n            });\n        }).catch(reject);\n    });\n    const initSettingsManager = config => new Promise((resolve, reject) => {\n        const pools = config.SettingsManager || {};\n        Object.keys(pools).forEach(function (poolName) {\n            console.debug('initSettingsManager()', 'initializes pool', poolName, pools[poolName]);\n            SettingsManager.instance(poolName, pools[poolName] || {});\n        });\n        resolve();\n    });\n    const initPackageManager = config => new Promise((resolve, reject) => {\n        const list = config.PreloadOnBoot || [];\n        let metadata = {};\n        try {\n            metadata = OSjs.getManifest();\n        } catch (e) {\n        }\n        const auth = Authenticator.instance;\n        PackageManager.init(Authenticator,VFS,metadata, auth.isStandalone).then(() => { //modified by lwf\n            return Promise.each(list, iter => {\n                return new Promise(next => {\n                    var pkg = PackageManager.getPackage(iter);\n                    if (pkg && pkg.preload) {\n                        Preloader.preload(pkg.preload).then(next).catch(() => next());\n                    } else {\n                        next();\n                    }\n                });\n            }).then(resolve).catch(reject);\n        }).catch(reject);\n    });\n    const initExtensions = config => new Promise((resolve, reject) => {\n        const packages = PackageManager.getPackages(); \n        const preloadExtensions = () => new Promise((resolve, reject) => {\n            let preloads = [];\n            Object.keys(packages).forEach(k => {\n                const iter = packages[k];\n                if (iter.type === 'extension' && iter.preload) {\n                    preloads = preloads.concat(iter.preload);\n                }\n            });\n            if (preloads.length) {\n                Preloader.preload(preloads).then(resolve).catch(() => resolve());\n            } else {\n                resolve();\n            }\n        });\n        const launchExtensions = () => new Promise((resolve, reject) => {\n            const exts = Object.keys(OSjs.Extensions);\n            Promise.each(exts, entry => {\n                return new Promise((yes, no) => {\n                    try {\n                        const m = packages[entry];\n                        let promise = OSjs.Extensions[entry].init(m);\n                        if (!(promise instanceof Promise)) {\n                            promise = Promise.resolve(true);\n                        }\n                        promise.then(yes).catch(err => {\n                            console.error(err);\n                            return yes(false);\n                        });\n                    } catch (e) {\n                        console.warn('Extension init failed', e.stack, e);\n                        yes(false);\n                    }\n                });\n            }).then(resolve).catch(err => {\n                console.warn(err);\n                reject(new Error(err));\n            });\n        });\n        preloadExtensions().then(() => {\n            return launchExtensions().then(resolve).catch(reject);\n        }).catch(() => resolve());\n    });\n    const initSearchEngine = config => new Promise((resolve, reject) => {\n        SearchEngine.init().then(resolve).catch(reject);\n    });\n    const initGUI = config => new Promise((resolve, reject) => {\n        const guiElements = [\n            'containers',\n            'visual',\n            'tabs',\n            'richtext',\n            'misc',\n            'inputs',\n            'treeview',\n            'listview',\n            'iconview',\n            'fileview',\n            'menus'\n        ];\n        guiElements.forEach(f => {\n            const gel = OSjs.require('gui/elements/' + f); // modified by lwf\n            Object.keys(gel).forEach(name => {\n                gel[name].register();\n            });\n        });\n        OSjs.error = onError;\n        OSjs.Dialogs.Alert = AlertDialog;\n        OSjs.Dialogs.ApplicationChooser = ApplicationChooserDialog;\n        OSjs.Dialogs.Color = ColorDialog;\n        OSjs.Dialogs.Confirm = ConfirmDialog;\n        OSjs.Dialogs.Error = ErrorDialog;\n        OSjs.Dialogs.File = FileDialog;\n        OSjs.Dialogs.FileInfo = FileInfoDialog;\n        OSjs.Dialogs.FileProgress = FileProgressDialog;\n        OSjs.Dialogs.FileUpload = FileUploadDialog;\n        OSjs.Dialogs.Font = FontDialog;\n        OSjs.Dialogs.Input = InputDialog;\n        Theme.init(VFS); // modified by lwf\n        resolve();\n    });\n    const initWindowManager = config => new Promise((resolve, reject) => {\n        const wmConfig = config.WindowManager;\n        if (!wmConfig || !wmConfig.exec) {\n            reject(new Error(Locales._('ERR_CORE_INIT_NO_WM')));\n        } else {\n            Process.create(wmConfig.exec, wmConfig.args || {}).then(app => {\n                return app.setup().then(resolve).catch(reject);\n            }).catch(error => {\n                reject(new Error(Locales._('ERR_CORE_INIT_WM_FAILED_FMT', error)));\n            });\n        }\n    });\n    const initMocha = config => new Promise((resolve, reject) => {\n        const div = document.createElement('div');\n        div.id = 'mocha';\n        document.body.appendChild(div);\n        document.body.style.overflow = 'auto';\n        document.body.style.backgroundColor = '#ffffff';\n        Preloader.preload([\n            '/test.css',\n            '/test.js'\n        ]).then(() => {\n            OSjs.runTests();\n        });\n        resolve(true);\n    });\n    function initSession(config) {\n        console.debug('initSession()');\n        var list = [];\n        try {\n            list = config.AutoStart;\n        } catch (e) {\n            console.warn('initSession()->autostart()', 'exception', e, e.stack);\n        }\n        var checkMap = {};\n        var skipMap = [];\n        list.forEach(function (iter, idx) {\n            if (typeof iter === 'string') {\n                iter = list[idx] = { name: iter };\n            }\n            if (skipMap.indexOf(iter.name) === -1) {\n                if (!checkMap[iter.name]) {\n                    checkMap[iter.name] = idx;\n                    skipMap.push(iter.name);\n                }\n            }\n        });\n        return new Promise(resolve => {\n            Storage.instance.getLastSession(getLastSession).then(adds => { // modified by lwf\n                adds.forEach(function (iter) {\n                    if (typeof checkMap[iter.name] === 'undefined') {\n                        list.push(iter);\n                    } else {\n                        if (iter.args) {\n                            var refid = checkMap[iter.name];\n                            var ref = list[refid];\n                            if (!ref.args) {\n                                ref.args = {};\n                            }\n                            ref.args = Utils.mergeObject(ref.args, iter.args);\n                        }\n                    }\n                });\n                console.info('initSession()->autostart()', list);\n                return Process.createFromArray(list).then(resolve).catch(resolve);\n            }).catch(err => {\n                console.warn(err);\n                resolve();\n            });\n        });\n    }\n    function onMessage(ev) {\n        if (ev && ev.data && typeof ev.data.message !== 'undefined' && typeof ev.data.pid === 'number') {\n            console.debug('window::message()', ev.data);\n            var proc = Process.getProcess(ev.data.pid);\n            if (proc) {\n                if (typeof proc.onPostMessage === 'function') {\n                    proc.onPostMessage(ev.data.message, ev);\n                }\n                if (typeof proc._getWindow === 'function') {\n                    var win = proc._getWindow(ev.data.wid, 'wid');\n                    if (win) {\n                        win.onPostMessage(ev.data.message, ev);\n                    }\n                }\n            }\n        }\n    }\n    function start() {\n        if (hasBooted || hasShutDown) {\n            return;\n        }\n        hasBooted = true;\n        console.info('Starting OS.js');\n        const config = OSjs.getConfig();\n        const testMode = OSJS_DEBUG && window.location.hash.match(/mocha=true/);\n        const total = 9;\n        Locales.init(config.Locale, config.LocaleOptions, config.Languages);\n        SplashScreen.watermark(config);\n        SplashScreen.show();\n        a.triggerHook('initialize');\n        Promise.each([\n            initPreloading,\n            initHandlers,\n            initVFS,\n            initSettingsManager,\n            initPackageManager,\n            initExtensions,\n            initSearchEngine,\n            initGUI,\n            testMode ? initMocha : initWindowManager\n        ], (fn, index) => {\n            return new Promise((resolve, reject) => {\n                console.group('Initializing', index + 1, 'of', total);\n                SplashScreen.update(index, total);\n                return fn(config).then(res => {\n                    console.groupEnd();\n                    return resolve(res);\n                }).catch(err => {\n                    console.warn(err);\n                    console.groupEnd();\n                    return reject(new Error(err));\n                });\n            });\n        }).then(() => {\n            console.info('Done!');\n            window.addEventListener('message', onMessage, false);\n            a.triggerHook('initialized');\n            SplashScreen.hide();\n            if (!testMode) {\n                Theme.playSound('LOGIN');\n                var wm = WindowManager.instance;\n                if (wm) {\n                    wm._fullyLoaded = true;\n                }\n                initSession(config).then(() => {\n                    return a.triggerHook('sessionLoaded');\n                });\n            }\n            return true;\n        }).catch(err => {\n            const title = Locales._('ERR_CORE_INIT_FAILED');\n            const message = Locales._('ERR_CORE_INIT_FAILED_DESC');\n            alert(title + '\\n\\n' + message);\n            console.error(title, message, err);\n        });\n    }\n    function stop(restart = false) {\n        if (hasShutDown || !hasBooted) {\n            return;\n        }\n        hasShutDown = true;\n        hasBooted = false;\n        window.removeEventListener('message', onMessage, false);\n        const wm = WindowManager.instance;\n        if (wm) {\n            wm.toggleFullscreen();\n        }\n        Preloader.clear();\n        Menu.blur();\n        Process.killAll();\n        SearchEngine.destroy();\n        PackageManager.destroy();\n        Authenticator.instance.destroy();\n        Storage.instance.destroy();\n        Connection.instance.destroy();\n        a.triggerHook('shutdown');\n        console.warn('OS.js was shut down!');\n        if (!restart && b.getConfig('ReloadOnShutdown') === true) {\n            window.location.reload();\n        }\n    }\n    function restart(save = false) {\n        const lout = cb => Authenticator.instance.logout().then(cb).catch(cb);\n        const saveFunction = save && Storage.instance ? function (cb) {\n            Storage.instance.saveSession().then(() => lout(cb)).catch(() => lout(cb));\n        } : lout;\n        saveFunction(function () {\n            console.clear();\n            stop(true);\n            start();\n        });\n    }\n    function logout() {\n        const storage = Storage.instance;\n        const wm = WindowManager.instance;\n        function signOut(save) {\n            Theme.playSound('LOGOUT');\n            const lout = cb => Authenticator.instance.logout().then(cb).catch(cb);\n            if (save) {\n                storage.saveSession(Process,SettingsManager).then(() => lout(stop)).catch(() => lout(stop)); // modified by lwf\n            } else {\n                lout(stop);\n            }\n        }\n        if (wm) {\n            const user = Authenticator.instance.getUser() || { name: Locales._('LBL_UNKNOWN') };\n            DialogWindow.create('Confirm', {\n                title: Locales._('DIALOG_LOGOUT_TITLE'),\n                message: Locales._('DIALOG_LOGOUT_MSG_FMT', user.name)\n            }, function (ev, btn) {\n                if ([\n                        'no',\n                        'yes'\n                    ].indexOf(btn) !== -1) {\n                    signOut(btn === 'yes');\n                }\n            });\n        } else {\n            signOut(true);\n        }\n    }\n    function running() {\n        return !hasShutDown;\n    }\n    return {\n        start: start,\n        stop: stop,\n        restart: restart,\n        logout: logout,\n        running: running\n    };\n});\ndefine('skylark-osjsv2-client/utils/pepjs',[], function () { \r\n  'use strict';\r\n\r\n  /**\r\n   * This is the constructor for new PointerEvents.\r\n   *\r\n   * New Pointer Events must be given a type, and an optional dictionary of\r\n   * initialization properties.\r\n   *\r\n   * Due to certain platform requirements, events returned from the constructor\r\n   * identify as MouseEvents.\r\n   *\r\n   * @constructor\r\n   * @param {String} inType The type of the event to create.\r\n   * @param {Object} [inDict] An optional dictionary of initial event properties.\r\n   * @return {Event} A new PointerEvent of type `inType`, initialized with properties from `inDict`.\r\n   */\r\n  var MOUSE_PROPS = [\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n    'pageX',\r\n    'pageY'\r\n  ];\r\n\r\n  var MOUSE_DEFAULTS = [\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  function PointerEvent(inType, inDict) {\r\n    inDict = inDict || Object.create(null);\r\n\r\n    var e = document.createEvent('Event');\r\n    e.initEvent(inType, inDict.bubbles || false, inDict.cancelable || false);\r\n\r\n    // define inherited MouseEvent properties\r\n    // skip bubbles and cancelable since they're set above in initEvent()\r\n    for (var i = 2, p; i < MOUSE_PROPS.length; i++) {\r\n      p = MOUSE_PROPS[i];\r\n      e[p] = inDict[p] || MOUSE_DEFAULTS[i];\r\n    }\r\n    e.buttons = inDict.buttons || 0;\r\n\r\n    // Spec requires that pointers without pressure specified use 0.5 for down\r\n    // state and 0 for up state.\r\n    var pressure = 0;\r\n\r\n    if (inDict.pressure && e.buttons) {\r\n      pressure = inDict.pressure;\r\n    } else {\r\n      pressure = e.buttons ? 0.5 : 0;\r\n    }\r\n\r\n    // add x/y properties aliased to clientX/Y\r\n    e.x = e.clientX;\r\n    e.y = e.clientY;\r\n\r\n    // define the properties of the PointerEvent interface\r\n    e.pointerId = inDict.pointerId || 0;\r\n    e.width = inDict.width || 0;\r\n    e.height = inDict.height || 0;\r\n    e.pressure = pressure;\r\n    e.tiltX = inDict.tiltX || 0;\r\n    e.tiltY = inDict.tiltY || 0;\r\n    e.twist = inDict.twist || 0;\r\n    e.tangentialPressure = inDict.tangentialPressure || 0;\r\n    e.pointerType = inDict.pointerType || '';\r\n    e.hwTimestamp = inDict.hwTimestamp || 0;\r\n    e.isPrimary = inDict.isPrimary || false;\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * This module implements a map of pointer states\r\n   */\r\n  var USE_MAP = window.Map && window.Map.prototype.forEach;\r\n  var PointerMap = USE_MAP ? Map : SparseArrayMap;\r\n\r\n  function SparseArrayMap() {\r\n    this.array = [];\r\n    this.size = 0;\r\n  }\r\n\r\n  SparseArrayMap.prototype = {\r\n    set: function(k, v) {\r\n      if (v === undefined) {\r\n        return this.delete(k);\r\n      }\r\n      if (!this.has(k)) {\r\n        this.size++;\r\n      }\r\n      this.array[k] = v;\r\n    },\r\n    has: function(k) {\r\n      return this.array[k] !== undefined;\r\n    },\r\n    delete: function(k) {\r\n      if (this.has(k)) {\r\n        delete this.array[k];\r\n        this.size--;\r\n      }\r\n    },\r\n    get: function(k) {\r\n      return this.array[k];\r\n    },\r\n    clear: function() {\r\n      this.array.length = 0;\r\n      this.size = 0;\r\n    },\r\n\r\n    // return value, key, map\r\n    forEach: function(callback, thisArg) {\r\n      return this.array.forEach(function(v, k) {\r\n        callback.call(thisArg, v, k, this);\r\n      }, this);\r\n    }\r\n  };\r\n\r\n  var CLONE_PROPS = [\r\n\r\n    // MouseEvent\r\n    'bubbles',\r\n    'cancelable',\r\n    'view',\r\n    'detail',\r\n    'screenX',\r\n    'screenY',\r\n    'clientX',\r\n    'clientY',\r\n    'ctrlKey',\r\n    'altKey',\r\n    'shiftKey',\r\n    'metaKey',\r\n    'button',\r\n    'relatedTarget',\r\n\r\n    // DOM Level 3\r\n    'buttons',\r\n\r\n    // PointerEvent\r\n    'pointerId',\r\n    'width',\r\n    'height',\r\n    'pressure',\r\n    'tiltX',\r\n    'tiltY',\r\n    'pointerType',\r\n    'hwTimestamp',\r\n    'isPrimary',\r\n\r\n    // event instance\r\n    'type',\r\n    'target',\r\n    'currentTarget',\r\n    'which',\r\n    'pageX',\r\n    'pageY',\r\n    'timeStamp'\r\n  ];\r\n\r\n  var CLONE_DEFAULTS = [\r\n\r\n    // MouseEvent\r\n    false,\r\n    false,\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    false,\r\n    false,\r\n    false,\r\n    false,\r\n    0,\r\n    null,\r\n\r\n    // DOM Level 3\r\n    0,\r\n\r\n    // PointerEvent\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    0,\r\n    '',\r\n    0,\r\n    false,\r\n\r\n    // event instance\r\n    '',\r\n    null,\r\n    null,\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n  ];\r\n\r\n  var BOUNDARY_EVENTS = {\r\n    'pointerover': 1,\r\n    'pointerout': 1,\r\n    'pointerenter': 1,\r\n    'pointerleave': 1\r\n  };\r\n\r\n  var HAS_SVG_INSTANCE = (typeof SVGElementInstance !== 'undefined');\r\n\r\n  /**\r\n   * This module is for normalizing events. Mouse and Touch events will be\r\n   * collected here, and fire PointerEvents that have the same semantics, no\r\n   * matter the source.\r\n   * Events fired:\r\n   *   - pointerdown: a pointing is added\r\n   *   - pointerup: a pointer is removed\r\n   *   - pointermove: a pointer is moved\r\n   *   - pointerover: a pointer crosses into an element\r\n   *   - pointerout: a pointer leaves an element\r\n   *   - pointercancel: a pointer will no longer generate events\r\n   */\r\n  var dispatcher = {\r\n    pointermap: new PointerMap(),\r\n    eventMap: Object.create(null),\r\n    captureInfo: Object.create(null),\r\n\r\n    // Scope objects for native events.\r\n    // This exists for ease of testing.\r\n    eventSources: Object.create(null),\r\n    eventSourceList: [],\r\n    /**\r\n     * Add a new event source that will generate pointer events.\r\n     *\r\n     * `inSource` must contain an array of event names named `events`, and\r\n     * functions with the names specified in the `events` array.\r\n     * @param {string} name A name for the event source\r\n     * @param {Object} source A new source of platform events.\r\n     */\r\n    registerSource: function(name, source) {\r\n      var s = source;\r\n      var newEvents = s.events;\r\n      if (newEvents) {\r\n        newEvents.forEach(function(e) {\r\n          if (s[e]) {\r\n            this.eventMap[e] = s[e].bind(s);\r\n          }\r\n        }, this);\r\n        this.eventSources[name] = s;\r\n        this.eventSourceList.push(s);\r\n      }\r\n    },\r\n    register: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.register.call(es, element);\r\n      }\r\n    },\r\n    unregister: function(element) {\r\n      var l = this.eventSourceList.length;\r\n      for (var i = 0, es; (i < l) && (es = this.eventSourceList[i]); i++) {\r\n\r\n        // call eventsource register\r\n        es.unregister.call(es, element);\r\n      }\r\n    },\r\n    contains: /*scope.external.contains || */function(container, contained) {\r\n      try {\r\n        return container.contains(contained);\r\n      } catch (ex) {\r\n\r\n        // most likely: https://bugzilla.mozilla.org/show_bug.cgi?id=208427\r\n        return false;\r\n      }\r\n    },\r\n\r\n    // EVENTS\r\n    down: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerdown', inEvent);\r\n    },\r\n    move: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointermove', inEvent);\r\n    },\r\n    up: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerup', inEvent);\r\n    },\r\n    enter: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerenter', inEvent);\r\n    },\r\n    leave: function(inEvent) {\r\n      inEvent.bubbles = false;\r\n      this.fireEvent('pointerleave', inEvent);\r\n    },\r\n    over: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerover', inEvent);\r\n    },\r\n    out: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointerout', inEvent);\r\n    },\r\n    cancel: function(inEvent) {\r\n      inEvent.bubbles = true;\r\n      this.fireEvent('pointercancel', inEvent);\r\n    },\r\n    leaveOut: function(event) {\r\n      this.out(event);\r\n      this.propagate(event, this.leave, false);\r\n    },\r\n    enterOver: function(event) {\r\n      this.over(event);\r\n      this.propagate(event, this.enter, true);\r\n    },\r\n\r\n    // LISTENER LOGIC\r\n    eventHandler: function(inEvent) {\r\n\r\n      // This is used to prevent multiple dispatch of pointerevents from\r\n      // platform events. This can happen when two elements in different scopes\r\n      // are set up to create pointer events, which is relevant to Shadow DOM.\r\n      if (inEvent._handledByPE) {\r\n        return;\r\n      }\r\n      var type = inEvent.type;\r\n      var fn = this.eventMap && this.eventMap[type];\r\n      if (fn) {\r\n        fn(inEvent);\r\n      }\r\n      inEvent._handledByPE = true;\r\n    },\r\n\r\n    // set up event listeners\r\n    listen: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.addEvent(target, e);\r\n      }, this);\r\n    },\r\n\r\n    // remove event listeners\r\n    unlisten: function(target, events) {\r\n      events.forEach(function(e) {\r\n        this.removeEvent(target, e);\r\n      }, this);\r\n    },\r\n    addEvent: /*scope.external.addEvent || */function(target, eventName) {\r\n      target.addEventListener(eventName, this.boundHandler);\r\n    },\r\n    removeEvent: /*scope.external.removeEvent || */function(target, eventName) {\r\n      target.removeEventListener(eventName, this.boundHandler);\r\n    },\r\n\r\n    // EVENT CREATION AND TRACKING\r\n    /**\r\n     * Creates a new Event of type `inType`, based on the information in\r\n     * `inEvent`.\r\n     *\r\n     * @param {string} inType A string representing the type of event to create\r\n     * @param {Event} inEvent A platform event with a target\r\n     * @return {Event} A PointerEvent of type `inType`\r\n     */\r\n    makeEvent: function(inType, inEvent) {\r\n\r\n      // relatedTarget must be null if pointer is captured\r\n      if (this.captureInfo[inEvent.pointerId]) {\r\n        inEvent.relatedTarget = null;\r\n      }\r\n      var e = new PointerEvent(inType, inEvent);\r\n      if (inEvent.preventDefault) {\r\n        e.preventDefault = inEvent.preventDefault;\r\n      }\r\n      e._target = e._target || inEvent.target;\r\n      return e;\r\n    },\r\n\r\n    // make and dispatch an event in one call\r\n    fireEvent: function(inType, inEvent) {\r\n      var e = this.makeEvent(inType, inEvent);\r\n      return this.dispatchEvent(e);\r\n    },\r\n    /**\r\n     * Returns a snapshot of inEvent, with writable properties.\r\n     *\r\n     * @param {Event} inEvent An event that contains properties to copy.\r\n     * @return {Object} An object containing shallow copies of `inEvent`'s\r\n     *    properties.\r\n     */\r\n    cloneEvent: function(inEvent) {\r\n      var eventCopy = Object.create(null);\r\n      var p;\r\n      for (var i = 0; i < CLONE_PROPS.length; i++) {\r\n        p = CLONE_PROPS[i];\r\n        eventCopy[p] = inEvent[p] || CLONE_DEFAULTS[i];\r\n\r\n        // Work around SVGInstanceElement shadow tree\r\n        // Return the <use> element that is represented by the instance for Safari, Chrome, IE.\r\n        // This is the behavior implemented by Firefox.\r\n        if (HAS_SVG_INSTANCE && (p === 'target' || p === 'relatedTarget')) {\r\n          if (eventCopy[p] instanceof SVGElementInstance) {\r\n            eventCopy[p] = eventCopy[p].correspondingUseElement;\r\n          }\r\n        }\r\n      }\r\n\r\n      // keep the semantics of preventDefault\r\n      if (inEvent.preventDefault) {\r\n        eventCopy.preventDefault = function() {\r\n          inEvent.preventDefault();\r\n        };\r\n      }\r\n      return eventCopy;\r\n    },\r\n    getTarget: function(inEvent) {\r\n      var capture = this.captureInfo[inEvent.pointerId];\r\n      if (!capture) {\r\n        return inEvent._target;\r\n      }\r\n      if (inEvent._target === capture || !(inEvent.type in BOUNDARY_EVENTS)) {\r\n        return capture;\r\n      }\r\n    },\r\n    propagate: function(event, fn, propagateDown) {\r\n      var target = event.target;\r\n      var targets = [];\r\n\r\n      // Order of conditions due to document.contains() missing in IE.\r\n      while (target !== document && !target.contains(event.relatedTarget)) {\r\n        targets.push(target);\r\n        target = target.parentNode;\r\n\r\n        // Touch: Do not propagate if node is detached.\r\n        if (!target) {\r\n          return;\r\n        }\r\n      }\r\n      if (propagateDown) {\r\n        targets.reverse();\r\n      }\r\n      targets.forEach(function(target) {\r\n        event.target = target;\r\n        fn.call(this, event);\r\n      }, this);\r\n    },\r\n    setCapture: function(inPointerId, inTarget, skipDispatch) {\r\n      if (this.captureInfo[inPointerId]) {\r\n        this.releaseCapture(inPointerId, skipDispatch);\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = inTarget;\r\n      this.implicitRelease = this.releaseCapture.bind(this, inPointerId, skipDispatch);\r\n      document.addEventListener('pointerup', this.implicitRelease);\r\n      document.addEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('gotpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = inTarget;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    releaseCapture: function(inPointerId, skipDispatch) {\r\n      var t = this.captureInfo[inPointerId];\r\n      if (!t) {\r\n        return;\r\n      }\r\n\r\n      this.captureInfo[inPointerId] = undefined;\r\n      document.removeEventListener('pointerup', this.implicitRelease);\r\n      document.removeEventListener('pointercancel', this.implicitRelease);\r\n\r\n      var e = new PointerEvent('lostpointercapture');\r\n      e.pointerId = inPointerId;\r\n      e._target = t;\r\n\r\n      if (!skipDispatch) {\r\n        this.asyncDispatchEvent(e);\r\n      }\r\n    },\r\n    /**\r\n     * Dispatches the event to its target.\r\n     *\r\n     * @param {Event} inEvent The event to be dispatched.\r\n     * @return {Boolean} True if an event handler returns true, false otherwise.\r\n     */\r\n    dispatchEvent: /*scope.external.dispatchEvent || */function(inEvent) {\r\n      var t = this.getTarget(inEvent);\r\n      if (t) {\r\n        return t.dispatchEvent(inEvent);\r\n      }\r\n    },\r\n    asyncDispatchEvent: function(inEvent) {\r\n      requestAnimationFrame(this.dispatchEvent.bind(this, inEvent));\r\n    }\r\n  };\r\n  dispatcher.boundHandler = dispatcher.eventHandler.bind(dispatcher);\r\n\r\n  var targeting = {\r\n    shadow: function(inEl) {\r\n      if (inEl) {\r\n        return inEl.shadowRoot || inEl.webkitShadowRoot;\r\n      }\r\n    },\r\n    canTarget: function(shadow) {\r\n      return shadow && Boolean(shadow.elementFromPoint);\r\n    },\r\n    targetingShadow: function(inEl) {\r\n      var s = this.shadow(inEl);\r\n      if (this.canTarget(s)) {\r\n        return s;\r\n      }\r\n    },\r\n    olderShadow: function(shadow) {\r\n      var os = shadow.olderShadowRoot;\r\n      if (!os) {\r\n        var se = shadow.querySelector('shadow');\r\n        if (se) {\r\n          os = se.olderShadowRoot;\r\n        }\r\n      }\r\n      return os;\r\n    },\r\n    allShadows: function(element) {\r\n      var shadows = [];\r\n      var s = this.shadow(element);\r\n      while (s) {\r\n        shadows.push(s);\r\n        s = this.olderShadow(s);\r\n      }\r\n      return shadows;\r\n    },\r\n    searchRoot: function(inRoot, x, y) {\r\n      if (inRoot) {\r\n        var t = inRoot.elementFromPoint(x, y);\r\n        var st, sr;\r\n\r\n        // is element a shadow host?\r\n        sr = this.targetingShadow(t);\r\n        while (sr) {\r\n\r\n          // find the the element inside the shadow root\r\n          st = sr.elementFromPoint(x, y);\r\n          if (!st) {\r\n\r\n            // check for older shadows\r\n            sr = this.olderShadow(sr);\r\n          } else {\r\n\r\n            // shadowed element may contain a shadow root\r\n            var ssr = this.targetingShadow(st);\r\n            return this.searchRoot(ssr, x, y) || st;\r\n          }\r\n        }\r\n\r\n        // light dom element is the target\r\n        return t;\r\n      }\r\n    },\r\n    owner: function(element) {\r\n      var s = element;\r\n\r\n      // walk up until you hit the shadow root or document\r\n      while (s.parentNode) {\r\n        s = s.parentNode;\r\n      }\r\n\r\n      // the owner element is expected to be a Document or ShadowRoot\r\n      if (s.nodeType !== Node.DOCUMENT_NODE && s.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\r\n        s = document;\r\n      }\r\n      return s;\r\n    },\r\n    findTarget: function(inEvent) {\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n\r\n      // if the listener is in the shadow root, it is much faster to start there\r\n      var s = this.owner(inEvent.target);\r\n\r\n      // if x, y is not in this root, fall back to document search\r\n      if (!s.elementFromPoint(x, y)) {\r\n        s = document;\r\n      }\r\n      return this.searchRoot(s, x, y);\r\n    }\r\n  };\r\n\r\n  var forEach = Array.prototype.forEach.call.bind(Array.prototype.forEach);\r\n  var map = Array.prototype.map.call.bind(Array.prototype.map);\r\n  var toArray = Array.prototype.slice.call.bind(Array.prototype.slice);\r\n  var filter = Array.prototype.filter.call.bind(Array.prototype.filter);\r\n  var MO = window.MutationObserver || window.WebKitMutationObserver;\r\n  var SELECTOR = '[touch-action]';\r\n  var OBSERVER_INIT = {\r\n    subtree: true,\r\n    childList: true,\r\n    attributes: true,\r\n    attributeOldValue: true,\r\n    attributeFilter: ['touch-action']\r\n  };\r\n\r\n  function Installer(add, remove, changed, binder) {\r\n    this.addCallback = add.bind(binder);\r\n    this.removeCallback = remove.bind(binder);\r\n    this.changedCallback = changed.bind(binder);\r\n    if (MO) {\r\n      this.observer = new MO(this.mutationWatcher.bind(this));\r\n    }\r\n  }\r\n\r\n  Installer.prototype = {\r\n    watchSubtree: function(target) {\r\n\r\n      // Only watch scopes that can target find, as these are top-level.\r\n      // Otherwise we can see duplicate additions and removals that add noise.\r\n      //\r\n      // TODO(dfreedman): For some instances with ShadowDOMPolyfill, we can see\r\n      // a removal without an insertion when a node is redistributed among\r\n      // shadows. Since it all ends up correct in the document, watching only\r\n      // the document will yield the correct mutations to watch.\r\n      if (this.observer && targeting.canTarget(target)) {\r\n        this.observer.observe(target, OBSERVER_INIT);\r\n      }\r\n    },\r\n    enableOnSubtree: function(target) {\r\n      this.watchSubtree(target);\r\n      if (target === document && document.readyState !== 'complete') {\r\n        this.installOnLoad();\r\n      } else {\r\n        this.installNewSubtree(target);\r\n      }\r\n    },\r\n    installNewSubtree: function(target) {\r\n      forEach(this.findElements(target), this.addElement, this);\r\n    },\r\n    findElements: function(target) {\r\n      if (target.querySelectorAll) {\r\n        return target.querySelectorAll(SELECTOR);\r\n      }\r\n      return [];\r\n    },\r\n    removeElement: function(el) {\r\n      this.removeCallback(el);\r\n    },\r\n    addElement: function(el) {\r\n      this.addCallback(el);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      this.changedCallback(el, oldValue);\r\n    },\r\n    concatLists: function(accum, list) {\r\n      return accum.concat(toArray(list));\r\n    },\r\n\r\n    // register all touch-action = none nodes on document load\r\n    installOnLoad: function() {\r\n      document.addEventListener('readystatechange', function() {\r\n        if (document.readyState === 'complete') {\r\n          this.installNewSubtree(document);\r\n        }\r\n      }.bind(this));\r\n    },\r\n    isElement: function(n) {\r\n      return n.nodeType === Node.ELEMENT_NODE;\r\n    },\r\n    flattenMutationTree: function(inNodes) {\r\n\r\n      // find children with touch-action\r\n      var tree = map(inNodes, this.findElements, this);\r\n\r\n      // make sure the added nodes are accounted for\r\n      tree.push(filter(inNodes, this.isElement));\r\n\r\n      // flatten the list\r\n      return tree.reduce(this.concatLists, []);\r\n    },\r\n    mutationWatcher: function(mutations) {\r\n      mutations.forEach(this.mutationHandler, this);\r\n    },\r\n    mutationHandler: function(m) {\r\n      if (m.type === 'childList') {\r\n        var added = this.flattenMutationTree(m.addedNodes);\r\n        added.forEach(this.addElement, this);\r\n        var removed = this.flattenMutationTree(m.removedNodes);\r\n        removed.forEach(this.removeElement, this);\r\n      } else if (m.type === 'attributes') {\r\n        this.elementChanged(m.target, m.oldValue);\r\n      }\r\n    }\r\n  };\r\n\r\n  function shadowSelector(v) {\r\n    return 'body /shadow-deep/ ' + selector(v);\r\n  }\r\n  function selector(v) {\r\n    return '[touch-action=\"' + v + '\"]';\r\n  }\r\n  function rule(v) {\r\n    return '{ -ms-touch-action: ' + v + '; touch-action: ' + v + '; }';\r\n  }\r\n  var attrib2css = [\r\n    'none',\r\n    'auto',\r\n    'pan-x',\r\n    'pan-y',\r\n    {\r\n      rule: 'pan-x pan-y',\r\n      selectors: [\r\n        'pan-x pan-y',\r\n        'pan-y pan-x'\r\n      ]\r\n    }\r\n  ];\r\n  var styles = '';\r\n\r\n  // only install stylesheet if the browser has touch action support\r\n  var hasNativePE = window.PointerEvent || window.MSPointerEvent;\r\n\r\n  // only add shadow selectors if shadowdom is supported\r\n  var hasShadowRoot = !window.ShadowDOMPolyfill && document.head.createShadowRoot;\r\n\r\n  function applyAttributeStyles() {\r\n    if (hasNativePE) {\r\n      attrib2css.forEach(function(r) {\r\n        if (String(r) === r) {\r\n          styles += selector(r) + rule(r) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += shadowSelector(r) + rule(r) + '\\n';\r\n          }\r\n        } else {\r\n          styles += r.selectors.map(selector) + rule(r.rule) + '\\n';\r\n          if (hasShadowRoot) {\r\n            styles += r.selectors.map(shadowSelector) + rule(r.rule) + '\\n';\r\n          }\r\n        }\r\n      });\r\n\r\n      var el = document.createElement('style');\r\n      el.textContent = styles;\r\n      document.head.appendChild(el);\r\n    }\r\n  }\r\n\r\n  var pointermap = dispatcher.pointermap;\r\n\r\n  // radius around touchend that swallows mouse events\r\n  var DEDUP_DIST = 25;\r\n\r\n  // left, middle, right, back, forward\r\n  var BUTTON_TO_BUTTONS = [1, 4, 2, 8, 16];\r\n\r\n  var HAS_BUTTONS = false;\r\n  try {\r\n    HAS_BUTTONS = new MouseEvent('test', { buttons: 1 }).buttons === 1;\r\n  } catch (e) {}\r\n\r\n  // handler block for native mouse events\r\n  var mouseEvents = {\r\n    POINTER_ID: 1,\r\n    POINTER_TYPE: 'mouse',\r\n    events: [\r\n      'mousedown',\r\n      'mousemove',\r\n      'mouseup',\r\n      'mouseover',\r\n      'mouseout'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    lastTouches: [],\r\n\r\n    // collide with the global mouse listener\r\n    isEventSimulatedFromTouch: function(inEvent) {\r\n      var lts = this.lastTouches;\r\n      var x = inEvent.clientX;\r\n      var y = inEvent.clientY;\r\n      for (var i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\r\n\r\n        // simulated mouse events will be swallowed near a primary touchend\r\n        var dx = Math.abs(x - t.x);\r\n        var dy = Math.abs(y - t.y);\r\n        if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n    prepareEvent: function(inEvent) {\r\n      var e = dispatcher.cloneEvent(inEvent);\r\n\r\n      // forward mouse preventDefault\r\n      var pd = e.preventDefault;\r\n      e.preventDefault = function() {\r\n        inEvent.preventDefault();\r\n        pd();\r\n      };\r\n      e.pointerId = this.POINTER_ID;\r\n      e.isPrimary = true;\r\n      e.pointerType = this.POINTER_TYPE;\r\n      return e;\r\n    },\r\n    prepareButtonsForMove: function(e, inEvent) {\r\n      var p = pointermap.get(this.POINTER_ID);\r\n\r\n      // Update buttons state after possible out-of-document mouseup.\r\n      if (inEvent.which === 0 || !p) {\r\n        e.buttons = 0;\r\n      } else {\r\n        e.buttons = p.buttons;\r\n      }\r\n      inEvent.buttons = e.buttons;\r\n    },\r\n    mousedown: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          e.buttons = BUTTON_TO_BUTTONS[e.button];\r\n          if (p) { e.buttons |= p.buttons; }\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        if (!p || p.buttons === 0) {\r\n          dispatcher.down(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mousemove: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.move(e);\r\n      }\r\n    },\r\n    mouseup: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var p = pointermap.get(this.POINTER_ID);\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) {\r\n          var up = BUTTON_TO_BUTTONS[e.button];\r\n\r\n          // Produces wrong state of buttons in Browsers without `buttons` support\r\n          // when a mouse button that was pressed outside the document is released\r\n          // inside and other buttons are still pressed down.\r\n          e.buttons = p ? p.buttons & ~up : 0;\r\n          inEvent.buttons = e.buttons;\r\n        }\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n\r\n        // Support: Firefox <=44 only\r\n        // FF Ubuntu includes the lifted button in the `buttons` property on\r\n        // mouseup.\r\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1223366\r\n        e.buttons &= ~BUTTON_TO_BUTTONS[e.button];\r\n        if (e.buttons === 0) {\r\n          dispatcher.up(e);\r\n        } else {\r\n          dispatcher.move(e);\r\n        }\r\n      }\r\n    },\r\n    mouseover: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        pointermap.set(this.POINTER_ID, inEvent);\r\n        dispatcher.enterOver(e);\r\n      }\r\n    },\r\n    mouseout: function(inEvent) {\r\n      if (!this.isEventSimulatedFromTouch(inEvent)) {\r\n        var e = this.prepareEvent(inEvent);\r\n        if (!HAS_BUTTONS) { this.prepareButtonsForMove(e, inEvent); }\r\n        e.button = -1;\r\n        dispatcher.leaveOut(e);\r\n      }\r\n    },\r\n    cancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.deactivateMouse();\r\n    },\r\n    deactivateMouse: function() {\r\n      pointermap.delete(this.POINTER_ID);\r\n    }\r\n  };\r\n\r\n  var captureInfo = dispatcher.captureInfo;\r\n  var findTarget = targeting.findTarget.bind(targeting);\r\n  var allShadows = targeting.allShadows.bind(targeting);\r\n  var pointermap$1 = dispatcher.pointermap;\r\n\r\n  // This should be long enough to ignore compat mouse events made by touch\r\n  var DEDUP_TIMEOUT = 2500;\r\n  var CLICK_COUNT_TIMEOUT = 200;\r\n  var ATTRIB = 'touch-action';\r\n  var INSTALLER;\r\n\r\n  // handler block for native touch events\r\n  var touchEvents = {\r\n    events: [\r\n      'touchstart',\r\n      'touchmove',\r\n      'touchend',\r\n      'touchcancel'\r\n    ],\r\n    register: function(target) {\r\n      INSTALLER.enableOnSubtree(target);\r\n    },\r\n    unregister: function() {\r\n\r\n      // TODO(dfreedman): is it worth it to disconnect the MO?\r\n    },\r\n    elementAdded: function(el) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      if (st) {\r\n        el._scrollType = st;\r\n        dispatcher.listen(el, this.events);\r\n\r\n        // set touch-action on shadows as well\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n          dispatcher.listen(s, this.events);\r\n        }, this);\r\n      }\r\n    },\r\n    elementRemoved: function(el) {\r\n      el._scrollType = undefined;\r\n      dispatcher.unlisten(el, this.events);\r\n\r\n      // remove touch-action from shadow\r\n      allShadows(el).forEach(function(s) {\r\n        s._scrollType = undefined;\r\n        dispatcher.unlisten(s, this.events);\r\n      }, this);\r\n    },\r\n    elementChanged: function(el, oldValue) {\r\n      var a = el.getAttribute(ATTRIB);\r\n      var st = this.touchActionToScrollType(a);\r\n      var oldSt = this.touchActionToScrollType(oldValue);\r\n\r\n      // simply update scrollType if listeners are already established\r\n      if (st && oldSt) {\r\n        el._scrollType = st;\r\n        allShadows(el).forEach(function(s) {\r\n          s._scrollType = st;\r\n        }, this);\r\n      } else if (oldSt) {\r\n        this.elementRemoved(el);\r\n      } else if (st) {\r\n        this.elementAdded(el);\r\n      }\r\n    },\r\n    scrollTypes: {\r\n      EMITTER: 'none',\r\n      XSCROLLER: 'pan-x',\r\n      YSCROLLER: 'pan-y',\r\n      SCROLLER: /^(?:pan-x pan-y)|(?:pan-y pan-x)|auto$/\r\n    },\r\n    touchActionToScrollType: function(touchAction) {\r\n      var t = touchAction;\r\n      var st = this.scrollTypes;\r\n      if (t === 'none') {\r\n        return 'none';\r\n      } else if (t === st.XSCROLLER) {\r\n        return 'X';\r\n      } else if (t === st.YSCROLLER) {\r\n        return 'Y';\r\n      } else if (st.SCROLLER.exec(t)) {\r\n        return 'XY';\r\n      }\r\n    },\r\n    POINTER_TYPE: 'touch',\r\n    firstTouch: null,\r\n    isPrimaryTouch: function(inTouch) {\r\n      return this.firstTouch === inTouch.identifier;\r\n    },\r\n    setPrimaryTouch: function(inTouch) {\r\n\r\n      // set primary touch if there no pointers, or the only pointer is the mouse\r\n      if (pointermap$1.size === 0 || (pointermap$1.size === 1 && pointermap$1.has(1))) {\r\n        this.firstTouch = inTouch.identifier;\r\n        this.firstXY = { X: inTouch.clientX, Y: inTouch.clientY };\r\n        this.scrolling = false;\r\n        this.cancelResetClickCount();\r\n      }\r\n    },\r\n    removePrimaryPointer: function(inPointer) {\r\n      if (inPointer.isPrimary) {\r\n        this.firstTouch = null;\r\n        this.firstXY = null;\r\n        this.resetClickCount();\r\n      }\r\n    },\r\n    clickCount: 0,\r\n    resetId: null,\r\n    resetClickCount: function() {\r\n      var fn = function() {\r\n        this.clickCount = 0;\r\n        this.resetId = null;\r\n      }.bind(this);\r\n      this.resetId = setTimeout(fn, CLICK_COUNT_TIMEOUT);\r\n    },\r\n    cancelResetClickCount: function() {\r\n      if (this.resetId) {\r\n        clearTimeout(this.resetId);\r\n      }\r\n    },\r\n    typeToButtons: function(type) {\r\n      var ret = 0;\r\n      if (type === 'touchstart' || type === 'touchmove') {\r\n        ret = 1;\r\n      }\r\n      return ret;\r\n    },\r\n    touchToPointer: function(inTouch) {\r\n      var cte = this.currentTouchEvent;\r\n      var e = dispatcher.cloneEvent(inTouch);\r\n\r\n      // We reserve pointerId 1 for Mouse.\r\n      // Touch identifiers can start at 0.\r\n      // Add 2 to the touch identifier for compatibility.\r\n      var id = e.pointerId = inTouch.identifier + 2;\r\n      e.target = captureInfo[id] || findTarget(e);\r\n      e.bubbles = true;\r\n      e.cancelable = true;\r\n      e.detail = this.clickCount;\r\n      e.button = 0;\r\n      e.buttons = this.typeToButtons(cte.type);\r\n      e.width = (inTouch.radiusX || inTouch.webkitRadiusX || 0) * 2;\r\n      e.height = (inTouch.radiusY || inTouch.webkitRadiusY || 0) * 2;\r\n      e.pressure = inTouch.force || inTouch.webkitForce || 0.5;\r\n      e.isPrimary = this.isPrimaryTouch(inTouch);\r\n      e.pointerType = this.POINTER_TYPE;\r\n\r\n      // forward modifier keys\r\n      e.altKey = cte.altKey;\r\n      e.ctrlKey = cte.ctrlKey;\r\n      e.metaKey = cte.metaKey;\r\n      e.shiftKey = cte.shiftKey;\r\n\r\n      // forward touch preventDefaults\r\n      var self = this;\r\n      e.preventDefault = function() {\r\n        self.scrolling = false;\r\n        self.firstXY = null;\r\n        cte.preventDefault();\r\n      };\r\n      return e;\r\n    },\r\n    processTouches: function(inEvent, inFunction) {\r\n      var tl = inEvent.changedTouches;\r\n      this.currentTouchEvent = inEvent;\r\n      for (var i = 0, t; i < tl.length; i++) {\r\n        t = tl[i];\r\n        inFunction.call(this, this.touchToPointer(t));\r\n      }\r\n    },\r\n\r\n    // For single axis scrollers, determines whether the element should emit\r\n    // pointer events or behave as a scroller\r\n    shouldScroll: function(inEvent) {\r\n      if (this.firstXY) {\r\n        var ret;\r\n        var scrollAxis = inEvent.currentTarget._scrollType;\r\n        if (scrollAxis === 'none') {\r\n\r\n          // this element is a touch-action: none, should never scroll\r\n          ret = false;\r\n        } else if (scrollAxis === 'XY') {\r\n\r\n          // this element should always scroll\r\n          ret = true;\r\n        } else {\r\n          var t = inEvent.changedTouches[0];\r\n\r\n          // check the intended scroll axis, and other axis\r\n          var a = scrollAxis;\r\n          var oa = scrollAxis === 'Y' ? 'X' : 'Y';\r\n          var da = Math.abs(t['client' + a] - this.firstXY[a]);\r\n          var doa = Math.abs(t['client' + oa] - this.firstXY[oa]);\r\n\r\n          // if delta in the scroll axis > delta other axis, scroll instead of\r\n          // making events\r\n          ret = da >= doa;\r\n        }\r\n        this.firstXY = null;\r\n        return ret;\r\n      }\r\n    },\r\n    findTouch: function(inTL, inId) {\r\n      for (var i = 0, l = inTL.length, t; i < l && (t = inTL[i]); i++) {\r\n        if (t.identifier === inId) {\r\n          return true;\r\n        }\r\n      }\r\n    },\r\n\r\n    // In some instances, a touchstart can happen without a touchend. This\r\n    // leaves the pointermap in a broken state.\r\n    // Therefore, on every touchstart, we remove the touches that did not fire a\r\n    // touchend event.\r\n    // To keep state globally consistent, we fire a\r\n    // pointercancel for this \"abandoned\" touch\r\n    vacuumTouches: function(inEvent) {\r\n      var tl = inEvent.touches;\r\n\r\n      // pointermap.size should be < tl.length here, as the touchstart has not\r\n      // been processed yet.\r\n      if (pointermap$1.size >= tl.length) {\r\n        var d = [];\r\n        pointermap$1.forEach(function(value, key) {\r\n\r\n          // Never remove pointerId == 1, which is mouse.\r\n          // Touch identifiers are 2 smaller than their pointerId, which is the\r\n          // index in pointermap.\r\n          if (key !== 1 && !this.findTouch(tl, key - 2)) {\r\n            var p = value.out;\r\n            d.push(p);\r\n          }\r\n        }, this);\r\n        d.forEach(this.cancelOut, this);\r\n      }\r\n    },\r\n    touchstart: function(inEvent) {\r\n      this.vacuumTouches(inEvent);\r\n      this.setPrimaryTouch(inEvent.changedTouches[0]);\r\n      this.dedupSynthMouse(inEvent);\r\n      if (!this.scrolling) {\r\n        this.clickCount++;\r\n        this.processTouches(inEvent, this.overDown);\r\n      }\r\n    },\r\n    overDown: function(inPointer) {\r\n      pointermap$1.set(inPointer.pointerId, {\r\n        target: inPointer.target,\r\n        out: inPointer,\r\n        outTarget: inPointer.target\r\n      });\r\n      dispatcher.enterOver(inPointer);\r\n      dispatcher.down(inPointer);\r\n    },\r\n    touchmove: function(inEvent) {\r\n      if (!this.scrolling) {\r\n        if (this.shouldScroll(inEvent)) {\r\n          this.scrolling = true;\r\n          this.touchcancel(inEvent);\r\n        } else {\r\n          inEvent.preventDefault();\r\n          this.processTouches(inEvent, this.moveOverOut);\r\n        }\r\n      }\r\n    },\r\n    moveOverOut: function(inPointer) {\r\n      var event = inPointer;\r\n      var pointer = pointermap$1.get(event.pointerId);\r\n\r\n      // a finger drifted off the screen, ignore it\r\n      if (!pointer) {\r\n        return;\r\n      }\r\n      var outEvent = pointer.out;\r\n      var outTarget = pointer.outTarget;\r\n      dispatcher.move(event);\r\n      if (outEvent && outTarget !== event.target) {\r\n        outEvent.relatedTarget = event.target;\r\n        event.relatedTarget = outTarget;\r\n\r\n        // recover from retargeting by shadow\r\n        outEvent.target = outTarget;\r\n        if (event.target) {\r\n          dispatcher.leaveOut(outEvent);\r\n          dispatcher.enterOver(event);\r\n        } else {\r\n\r\n          // clean up case when finger leaves the screen\r\n          event.target = outTarget;\r\n          event.relatedTarget = null;\r\n          this.cancelOut(event);\r\n        }\r\n      }\r\n      pointer.out = event;\r\n      pointer.outTarget = event.target;\r\n    },\r\n    touchend: function(inEvent) {\r\n      this.dedupSynthMouse(inEvent);\r\n      this.processTouches(inEvent, this.upOut);\r\n    },\r\n    upOut: function(inPointer) {\r\n      if (!this.scrolling) {\r\n        dispatcher.up(inPointer);\r\n        dispatcher.leaveOut(inPointer);\r\n      }\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    touchcancel: function(inEvent) {\r\n      this.processTouches(inEvent, this.cancelOut);\r\n    },\r\n    cancelOut: function(inPointer) {\r\n      dispatcher.cancel(inPointer);\r\n      dispatcher.leaveOut(inPointer);\r\n      this.cleanUpPointer(inPointer);\r\n    },\r\n    cleanUpPointer: function(inPointer) {\r\n      pointermap$1.delete(inPointer.pointerId);\r\n      this.removePrimaryPointer(inPointer);\r\n    },\r\n\r\n    // prevent synth mouse events from creating pointer events\r\n    dedupSynthMouse: function(inEvent) {\r\n      var lts = mouseEvents.lastTouches;\r\n      var t = inEvent.changedTouches[0];\r\n\r\n      // only the primary finger will synth mouse events\r\n      if (this.isPrimaryTouch(t)) {\r\n\r\n        // remember x/y of last touch\r\n        var lt = { x: t.clientX, y: t.clientY };\r\n        lts.push(lt);\r\n        var fn = (function(lts, lt) {\r\n          var i = lts.indexOf(lt);\r\n          if (i > -1) {\r\n            lts.splice(i, 1);\r\n          }\r\n        }).bind(null, lts, lt);\r\n        setTimeout(fn, DEDUP_TIMEOUT);\r\n      }\r\n    }\r\n  };\r\n\r\n  INSTALLER = new Installer(touchEvents.elementAdded, touchEvents.elementRemoved,\r\n    touchEvents.elementChanged, touchEvents);\r\n\r\n  var pointermap$2 = dispatcher.pointermap;\r\n  var HAS_BITMAP_TYPE = window.MSPointerEvent &&\r\n    typeof window.MSPointerEvent.MSPOINTER_TYPE_MOUSE === 'number';\r\n  var msEvents = {\r\n    events: [\r\n      'MSPointerDown',\r\n      'MSPointerMove',\r\n      'MSPointerUp',\r\n      'MSPointerOut',\r\n      'MSPointerOver',\r\n      'MSPointerCancel',\r\n      'MSGotPointerCapture',\r\n      'MSLostPointerCapture'\r\n    ],\r\n    register: function(target) {\r\n      dispatcher.listen(target, this.events);\r\n    },\r\n    unregister: function(target) {\r\n      dispatcher.unlisten(target, this.events);\r\n    },\r\n    POINTER_TYPES: [\r\n      '',\r\n      'unavailable',\r\n      'touch',\r\n      'pen',\r\n      'mouse'\r\n    ],\r\n    prepareEvent: function(inEvent) {\r\n      var e = inEvent;\r\n      if (HAS_BITMAP_TYPE) {\r\n        e = dispatcher.cloneEvent(inEvent);\r\n        e.pointerType = this.POINTER_TYPES[inEvent.pointerType];\r\n      }\r\n      return e;\r\n    },\r\n    cleanup: function(id) {\r\n      pointermap$2.delete(id);\r\n    },\r\n    MSPointerDown: function(inEvent) {\r\n      pointermap$2.set(inEvent.pointerId, inEvent);\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.down(e);\r\n    },\r\n    MSPointerMove: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.move(e);\r\n    },\r\n    MSPointerUp: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.up(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSPointerOut: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.leaveOut(e);\r\n    },\r\n    MSPointerOver: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.enterOver(e);\r\n    },\r\n    MSPointerCancel: function(inEvent) {\r\n      var e = this.prepareEvent(inEvent);\r\n      dispatcher.cancel(e);\r\n      this.cleanup(inEvent.pointerId);\r\n    },\r\n    MSLostPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('lostpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    },\r\n    MSGotPointerCapture: function(inEvent) {\r\n      var e = dispatcher.makeEvent('gotpointercapture', inEvent);\r\n      dispatcher.dispatchEvent(e);\r\n    }\r\n  };\r\n\r\n  function applyPolyfill() {\r\n\r\n    // only activate if this platform does not have pointer events\r\n    if (!window.PointerEvent) {\r\n      window.PointerEvent = PointerEvent;\r\n\r\n      if (window.navigator.msPointerEnabled) {\r\n        var tp = window.navigator.msMaxTouchPoints;\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: tp,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('ms', msEvents);\r\n      } else {\r\n        Object.defineProperty(window.navigator, 'maxTouchPoints', {\r\n          value: 0,\r\n          enumerable: true\r\n        });\r\n        dispatcher.registerSource('mouse', mouseEvents);\r\n        if (window.ontouchstart !== undefined) {\r\n          dispatcher.registerSource('touch', touchEvents);\r\n        }\r\n      }\r\n\r\n      dispatcher.register(document);\r\n    }\r\n  }\r\n\r\n  var n = window.navigator;\r\n  var s;\r\n  var r;\r\n  var h;\r\n  function assertActive(id) {\r\n    if (!dispatcher.pointermap.has(id)) {\r\n      var error = new Error('InvalidPointerId');\r\n      error.name = 'InvalidPointerId';\r\n      throw error;\r\n    }\r\n  }\r\n  function assertConnected(elem) {\r\n    var parent = elem.parentNode;\r\n    while (parent && parent !== elem.ownerDocument) {\r\n      parent = parent.parentNode;\r\n    }\r\n    if (!parent) {\r\n      var error = new Error('InvalidStateError');\r\n      error.name = 'InvalidStateError';\r\n      throw error;\r\n    }\r\n  }\r\n  function inActiveButtonState(id) {\r\n    var p = dispatcher.pointermap.get(id);\r\n    return p.buttons !== 0;\r\n  }\r\n  if (n.msPointerEnabled) {\r\n    s = function(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this, true);\r\n        this.msSetPointerCapture(pointerId);\r\n      }\r\n    };\r\n    r = function(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId, true);\r\n      this.msReleasePointerCapture(pointerId);\r\n    };\r\n  } else {\r\n    s = function setPointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      assertConnected(this);\r\n      if (inActiveButtonState(pointerId)) {\r\n        dispatcher.setCapture(pointerId, this);\r\n      }\r\n    };\r\n    r = function releasePointerCapture(pointerId) {\r\n      assertActive(pointerId);\r\n      dispatcher.releaseCapture(pointerId);\r\n    };\r\n  }\r\n  h = function hasPointerCapture(pointerId) {\r\n    return !!dispatcher.captureInfo[pointerId];\r\n  };\r\n\r\n  function applyPolyfill$1() {\r\n    if (window.Element && !Element.prototype.setPointerCapture) {\r\n      Object.defineProperties(Element.prototype, {\r\n        'setPointerCapture': {\r\n          value: s\r\n        },\r\n        'releasePointerCapture': {\r\n          value: r\r\n        },\r\n        'hasPointerCapture': {\r\n          value: h\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  applyAttributeStyles();\r\n  applyPolyfill();\r\n  applyPolyfill$1();\r\n\r\n  var pointerevents = {\r\n    dispatcher: dispatcher,\r\n    Installer: Installer,\r\n    PointerEvent: PointerEvent,\r\n    PointerMap: PointerMap,\r\n    targetFinding: targeting\r\n  };\r\n\r\n  return pointerevents;\r\n\r\n});\ndefine('skylark-osjsv2-client/boot',[\n    './core/init',\n    \"./utils/pepjs\"\n], function (a) {\n    'use strict';\n    window.OSjs = Object.assign({\n        error: (title, message, error, exception, bugreport) => {\n            console.error(title, message, error, exception);\n        },\n        runTests: () => {\n        },\n        getConfig: () => {\n            return {};\n        },\n        getManifest: () => {\n            return {};\n        },\n        Themes: {},\n        Dialogs: {},\n        Locales: {},\n        Extensions: {},\n        Applications: {}\n    }, window.OSjs || {});\n    window.OSjs.require = n => {\n        const mod = require('skylark-osjsv2-client/' + n);\n        return mod;\n        //return mod && mod.default ? mod.default : mod;\n    };\n    if (document.readyState !== 'loading') {\n        a.start();\n    } else {\n        document.addEventListener('DOMContentLoaded', () => a.start());\n    }\n});\ndefine('skylark-osjsv2-client/locales/en_EN',[],function() {\nreturn {\n    'ERR_FILE_OPEN': 'Error opening file',\n    'ERR_WM_NOT_RUNNING': 'Window manager is not running',\n    'ERR_FILE_OPEN_FMT': \"The file '**{0}**' could not be opened\",\n    'ERR_APP_MIME_NOT_FOUND_FMT': \"Could not find any Applications with support for '{0}' files\",\n    'ERR_APP_LAUNCH_FAILED': 'Failed to launch Application',\n    'ERR_APP_LAUNCH_FAILED_FMT': 'An error occured while trying to launch: {0}',\n    'ERR_APP_CONSTRUCT_FAILED_FMT': \"Application '{0}' construct failed: {1}\",\n    'ERR_APP_INIT_FAILED_FMT': \"Application '{0}' init() failed: {1}\",\n    'ERR_APP_RESOURCES_MISSING_FMT': \"Application resources missing for '{0}' or it failed to load!\",\n    'ERR_APP_PRELOAD_FAILED_FMT': \"Application '{0}' preloading failed: \\n{1}\",\n    'ERR_APP_LAUNCH_ALREADY_RUNNING_FMT': \"The application '{0}' is already launched and allows only one instance!\",\n    'ERR_APP_LAUNCH_MANIFEST_FAILED_FMT': \"Failed to launch '{0}'. Application manifest data not found!\",\n    'ERR_APP_LAUNCH_COMPABILITY_FAILED_FMT': \"Failed to launch '{0}'. Your browser does not support: {1}\",\n    'ERR_NO_WM_RUNNING': 'No window manager is running',\n    'ERR_CORE_INIT_FAILED': 'Failed to initialize OS.js',\n    'ERR_CORE_INIT_FAILED_DESC': 'An error occured while initializing OS.js',\n    'ERR_CORE_INIT_NO_WM': 'Cannot launch OS.js: No window manager defined!',\n    'ERR_CORE_INIT_WM_FAILED_FMT': 'Cannot launch OS.js: Failed to launch Window Manager: {0}',\n    'ERR_CORE_INIT_PRELOAD_FAILED': 'Cannot launch OS.js: Failed to preload resources...',\n    'ERR_JAVASCRIPT_EXCEPTION': 'JavaScript Error Report',\n    'ERR_JAVACSRIPT_EXCEPTION_DESC': 'An unexpected error occured, maybe a bug.',\n    'ERR_APP_API_ERROR': 'Application API error',\n    'ERR_APP_API_ERROR_DESC_FMT': \"Application {0} failed to perform operation '{1}'\",\n    'ERR_APP_MISSING_ARGUMENT_FMT': 'Missing argument: {0}',\n    'ERR_APP_UNKNOWN_ERROR': 'Unknown error',\n    'ERR_OPERATION_TIMEOUT': 'Operation Timeout',\n    'ERR_OPERATION_TIMEOUT_FMT': 'Operation Timeout ({0})',\n    'ERR_ARGUMENT_FMT': \"'{0}' expects '{1}' to be a '{2}', '{3}' given\",\n    'ERR_INVALID_LOCATION': 'Invalid location',\n    'ERR_WIN_DUPLICATE_FMT': \"You already have a Window named '{0}'\",\n    'WINDOW_MINIMIZE': 'Minimize',\n    'WINDOW_MAXIMIZE': 'Maximize',\n    'WINDOW_RESTORE': 'Restore',\n    'WINDOW_CLOSE': 'Close',\n    'WINDOW_ONTOP_ON': 'Ontop (Enable)',\n    'WINDOW_ONTOP_OFF': 'Ontop (Disable)',\n    'TITLE_SIGN_OUT': 'Sign out',\n    'TITLE_SIGNED_IN_AS_FMT': 'Signed in as: {0}',\n    'ERR_LOGIN_FMT': 'Login error: {0}',\n    'ERR_LOGIN_INVALID': 'Invalid login',\n    'ERR_NO_SESSION': 'No session was created by the server. Do you want to retry login?',\n    'MSG_SESSION_WARNING': 'Are you sure you want to quit OS.js? All unsaved settings and application data will be lost!',\n    'BUGREPORT_MSG': 'Please report this if you think this is a bug.\\nInclude a brief description on how the error occured, and if you can; how to replicate it',\n    'SERVICENOTIFICATION_TOOLTIP': 'Logged into external services: {0}',\n    'CONNECTION_LOST': 'Connection to the server was lost. Reconnecting...',\n    'CONNECTION_RESTORED': 'Connection to the server was restored',\n    'CONNECTION_RESTORE_FAILED': 'Failed to re-establish connection. Trying again.',\n    'CONNECTION_ERROR': 'Connection error',\n    'ERR_UTILS_XHR_FATAL': 'Fatal Error',\n    'ERR_UTILS_XHR_FMT': 'AJAX/XHR Error: {0}',\n    'DIALOG_LOGOUT_TITLE': 'Log out (Exit)',\n    'DIALOG_LOGOUT_MSG_FMT': \"Logging out user '{0}'.\\nDo you want to save current session?\",\n    'DIALOG_CLOSE': 'Close',\n    'DIALOG_CANCEL': 'Cancel',\n    'DIALOG_APPLY': 'Apply',\n    'DIALOG_OK': 'OK',\n    'DIALOG_ALERT_TITLE': 'Alert Dialog',\n    'DIALOG_COLOR_TITLE': 'Color Dialog',\n    'DIALOG_COLOR_R': 'Red: {0}',\n    'DIALOG_COLOR_G': 'Green: {0}',\n    'DIALOG_COLOR_B': 'Blue: {0}',\n    'DIALOG_COLOR_A': 'Alpha: {0}',\n    'DIALOG_CONFIRM_TITLE': 'Confirm Dialog',\n    'DIALOG_ERROR_TITLE': 'Error',\n    'DIALOG_ERROR_MESSAGE': 'Message',\n    'DIALOG_ERROR_SUMMARY': 'Summary',\n    'DIALOG_ERROR_TRACE': 'Trace',\n    'DIALOG_ERROR_BUGREPORT': 'Report Bug',\n    'DIALOG_FILE_SAVE': 'Save',\n    'DIALOG_FILE_OPEN': 'Open',\n    'DIALOG_FILE_MKDIR': 'New Folder',\n    'DIALOG_FILE_MKDIR_MSG': 'Create a new directory in **{0}**',\n    'DIALOG_FILE_OVERWRITE': \"Are you sure you want to overwrite the file '{0}'?\",\n    'DIALOG_FILE_MNU_VIEWTYPE': 'View type',\n    'DIALOG_FILE_MNU_LISTVIEW': 'List View',\n    'DIALOG_FILE_MNU_TREEVIEW': 'Tree View',\n    'DIALOG_FILE_MNU_ICONVIEW': 'Icon View',\n    'DIALOG_FILE_ERROR': 'FileDialog Error',\n    'DIALOG_FILE_ERROR_SCANDIR': \"Failed listing directory '{0}' because an error occured\",\n    'DIALOG_FILE_ERROR_FIND': \"Failed searching directory '{0}' because an error occured\",\n    'DIALOG_FILE_MISSING_FILENAME': 'You need to select a file or enter new filename!',\n    'DIALOG_FILE_MISSING_SELECTION': 'You need to select a file!',\n    'DIALOG_FILEINFO_TITLE': 'File Information',\n    'DIALOG_FILEINFO_LOADING': 'Loading file information for: {0}',\n    'DIALOG_FILEINFO_ERROR': 'FileInformationDialog Error',\n    'DIALOG_FILEINFO_ERROR_LOOKUP': 'Failed to get file information for **{0}**',\n    'DIALOG_FILEINFO_ERROR_LOOKUP_FMT': 'Failed to get file information for: {0}',\n    'DIALOG_INPUT_TITLE': 'Input Dialog',\n    'DIALOG_FILEPROGRESS_TITLE': 'File Operation Progress',\n    'DIALOG_FILEPROGRESS_LOADING': 'Loading...',\n    'DIALOG_UPLOAD_TITLE': 'Upload Dialog',\n    'DIALOG_UPLOAD_DESC': 'Upload file to **{0}**.<br />Maximum size: {1} bytes',\n    'DIALOG_UPLOAD_MSG_FMT': \"Uploading '{0}' ({1} {2}) to {3}\",\n    'DIALOG_UPLOAD_MSG': 'Uploading file...',\n    'DIALOG_UPLOAD_FAILED': 'Upload failed',\n    'DIALOG_UPLOAD_FAILED_MSG': 'The upload has failed',\n    'DIALOG_UPLOAD_FAILED_UNKNOWN': 'Reason unknown...',\n    'DIALOG_UPLOAD_FAILED_CANCELLED': 'Cancelled by user...',\n    'DIALOG_UPLOAD_TOO_BIG': 'File is too big',\n    'DIALOG_UPLOAD_TOO_BIG_FMT': 'File is too big, exceeds {0}',\n    'DIALOG_FONT_TITLE': 'Font Dialog',\n    'DIALOG_APPCHOOSER_TITLE': 'Choose Application',\n    'DIALOG_APPCHOOSER_MSG': 'Choose an application to open',\n    'DIALOG_APPCHOOSER_NO_SELECTION': 'You need to select an application',\n    'DIALOG_APPCHOOSER_SET_DEFAULT': 'Use as default application for {0}',\n    'GAPI_DISABLED': 'GoogleAPI Module not configured or disabled',\n    'GAPI_SIGN_OUT': 'Sign out from Google API Services',\n    'GAPI_REVOKE': 'Revoke permissions and Sign Out',\n    'GAPI_AUTH_FAILURE': 'Google API Authentication failed or did not take place',\n    'GAPI_AUTH_FAILURE_FMT': 'Failed to authenticate: {0}:{1}',\n    'GAPI_LOAD_FAILURE': 'Failed to load Google API',\n    'WLAPI_DISABLED': 'Windows Live API module not configured or disabled',\n    'WLAPI_SIGN_OUT': 'Sign out from Window Live API',\n    'WLAPI_LOAD_FAILURE': 'Failed to load Windows Live API',\n    'WLAPI_LOGIN_FAILED': 'Failed to log into Windows Live API',\n    'WLAPI_LOGIN_FAILED_FMT': 'Failed to log into Windows Live API: {0}',\n    'WLAPI_INIT_FAILED_FMT': 'Windows Live API returned {0} status',\n    'IDB_MISSING_DBNAME': 'Cannot create IndexedDB without Database Name',\n    'IDB_NO_SUCH_ITEM': 'No such item',\n    'ERR_VFS_FATAL': 'Fatal Error',\n    'ERR_VFS_UNAVAILABLE': 'Not available',\n    'ERR_VFS_FILE_ARGS': 'File expects at least one argument',\n    'ERR_VFS_NUM_ARGS': 'Not enough arguments',\n    'ERR_VFS_EXPECT_FILE': 'Expects a file-object',\n    'ERR_VFS_EXPECT_SRC_FILE': 'Expects a source file-object',\n    'ERR_VFS_EXPECT_DST_FILE': 'Expects a destination file-object',\n    'ERR_VFS_FILE_EXISTS': 'Destination already exists',\n    'ERR_VFS_TARGET_NOT_EXISTS': 'Target does not exist',\n    'ERR_VFS_TRANSFER_FMT': 'An error occured while transfering between storage: {0}',\n    'ERR_VFS_UPLOAD_NO_DEST': 'Cannot upload a file without a destination',\n    'ERR_VFS_UPLOAD_NO_FILES': 'Cannot upload without any files defined',\n    'ERR_VFS_UPLOAD_FAIL_FMT': 'File upload failed: {0}',\n    'ERR_VFS_UPLOAD_CANCELLED': 'File upload was cancelled',\n    'ERR_VFS_DOWNLOAD_NO_FILE': 'Cannot download a path without a path',\n    'ERR_VFS_DOWNLOAD_FAILED': 'An error occured while downloading: {0}',\n    'ERR_VFS_REMOTEREAD_EMPTY': 'Response was empty',\n    'ERR_VFS_NO_MIME_DETECT': 'No mime type detected',\n    'ERR_VFSMODULE_INVALID': 'Invalid VFS Module',\n    'ERR_VFSMODULE_INVALID_FMT': 'Invalid VFS Module: {0}',\n    'ERR_VFSMODULE_INVALID_METHOD': 'Invalid VFS Method',\n    'ERR_VFSMODULE_INVALID_METHOD_FMT': 'Invalid VFS Method: {0}',\n    'ERR_VFSMODULE_INVALID_TYPE': 'Invalid VFS Module type',\n    'ERR_VFSMODULE_INVALID_TYPE_FMT': 'Invalid VFS Module type: {0}',\n    'ERR_VFSMODULE_INVALID_CONFIG': 'Invalid VFS Module configuration',\n    'ERR_VFSMODULE_INVALID_CONFIG_FMT': 'Invalid VFS Module configuration: {0}',\n    'ERR_VFSMODULE_ALREADY_MOUNTED': 'VFS Module already mounted',\n    'ERR_VFSMODULE_ALREADY_MOUNTED_FMT': \"VFS Module '{0}' already mounted\",\n    'ERR_VFSMODULE_NOT_MOUNTED': 'VFS Module not mounted',\n    'ERR_VFSMODULE_NOT_MOUNTED_FMT': \"VFS Module '{0}' not mounted\",\n    'ERR_VFSMODULE_EXCEPTION': 'VFS Module Exception',\n    'ERR_VFSMODULE_EXCEPTION_FMT': 'VFS Module Exception: {0}',\n    'ERR_VFSMODULE_NOT_FOUND_FMT': 'No VFS Module matches {0}. Wrong path or format ?',\n    'ERR_VFSMODULE_READONLY': 'This VFS Module is read-only',\n    'ERR_VFSMODULE_READONLY_FMT': 'This VFS Module is read-only: {0}',\n    'TOOLTIP_VFS_DOWNLOAD_NOTIFICATION': 'Downloading file',\n    'ERR_VFSMODULE_XHR_ERROR': 'XHR Error',\n    'ERR_VFSMODULE_ROOT_ID': 'Failed to find root folder id',\n    'ERR_VFSMODULE_NOSUCH': 'File does not exist',\n    'ERR_VFSMODULE_PARENT': 'No such parent',\n    'ERR_VFSMODULE_PARENT_FMT': 'Failed to look up parent: {0}',\n    'ERR_VFSMODULE_SCANDIR': 'Failed to scan directory',\n    'ERR_VFSMODULE_SCANDIR_FMT': 'Failed to scan directory: {0}',\n    'ERR_VFSMODULE_READ': 'Failed to read file',\n    'ERR_VFSMODULE_READ_FMT': 'Failed to read file: {0}',\n    'ERR_VFSMODULE_WRITE': 'Failed to write file',\n    'ERR_VFSMODULE_WRITE_FMT': 'Failed to write file: {0}',\n    'ERR_VFSMODULE_COPY': 'Failed to copy',\n    'ERR_VFSMODULE_COPY_FMT': 'Failed to copy: {0}',\n    'ERR_VFSMODULE_UNLINK': 'Failed to unlink file',\n    'ERR_VFSMODULE_UNLINK_FMT': 'Failed to unlink file: {0}',\n    'ERR_VFSMODULE_MOVE': 'Failed to move file',\n    'ERR_VFSMODULE_MOVE_FMT': 'Failed to move file: {0}',\n    'ERR_VFSMODULE_EXIST': 'Failed to check file existence',\n    'ERR_VFSMODULE_EXIST_FMT': 'Failed to check file existence: {0}',\n    'ERR_VFSMODULE_FILEINFO': 'Failed to get file information',\n    'ERR_VFSMODULE_FILEINFO_FMT': 'Failed to get file information: {0}',\n    'ERR_VFSMODULE_MKDIR': 'Failed to create directory',\n    'ERR_VFSMODULE_MKDIR_FMT': 'Failed to create directory: {0}',\n    'ERR_VFSMODULE_MKFILE': 'Failed to create file',\n    'ERR_VFSMODULE_MKFILE_FMT': 'Failed to create file: {0}',\n    'ERR_VFSMODULE_URL': 'Failed to get URL for file',\n    'ERR_VFSMODULE_URL_FMT': 'Failed to get URL for file: {0}',\n    'ERR_VFSMODULE_TRASH': 'Failed to move file to trash',\n    'ERR_VFSMODULE_TRASH_FMT': 'Failed to move file to trash: {0}',\n    'ERR_VFSMODULE_UNTRASH': 'Failed to move file out of trash',\n    'ERR_VFSMODULE_UNTRASH_FMT': 'Failed to move file out of trash: {0}',\n    'ERR_VFSMODULE_EMPTYTRASH': 'Failed to empty trash',\n    'ERR_VFSMODULE_EMPTYTRASH_FMT': 'Failed to empty trash: {0}',\n    'ERR_VFSMODULE_FIND': 'Failed to search',\n    'ERR_VFSMODULE_FIND_FMT': 'Failed to search: {0}',\n    'ERR_VFSMODULE_FREESPACE': 'Failed to get free space',\n    'ERR_VFSMODULE_FREESPACE_FMT': 'Failed to get free space: {0}',\n    'ERR_VFSMODULE_EXISTS': 'Failed to check if exists',\n    'ERR_VFSMODULE_EXISTS_FMT': 'Failed to check if exists: {0}',\n    'ERR_DROPBOX_API': 'Failed to load Dropbox API',\n    'ERR_DROPBOX_AUTH': 'Failed to authenticate via Dropbox',\n    'ERR_DROPBOX_KEY': 'No Dropbox client key configured',\n    'DROPBOX_NOTIFICATION_TITLE': 'You are signed in to Dropbox API',\n    'DROPBOX_SIGN_OUT': 'Sign out from Google API Services',\n    'ONEDRIVE_ERR_RESOLVE': 'Failed to resolve path: item not found',\n    'ZIP_PRELOAD_FAIL': 'Failed to load zip.js',\n    'ZIP_VENDOR_FAIL': 'zip.js library was not found. Did it load properly?',\n    'ZIP_NO_RESOURCE': 'No zip resource was given',\n    'ZIP_NO_PATH': 'No path given',\n    'SEARCH_LOADING': 'Searching...',\n    'SEARCH_NO_RESULTS': 'No results found',\n    'ERR_PACKAGE_EXISTS': 'Package installation directory already exists. Cannot continue!',\n    'ERR_PACKAGE_MANIFEST': 'Failed to load package manifest',\n    'ERR_PACKAGE_ENUM_FAILED': 'Failed to get package list. Make sure you\\'re not using \"Private Mode\" as this might case problems.',\n    'ERR_FILE_APP_OPEN': 'Cannot open file',\n    'ERR_FILE_APP_OPEN_FMT': 'The file {0} could not be opened because the mime {1} is not supported',\n    'ERR_FILE_APP_OPEN_ALT_FMT': 'The file {0} could not be opened: {1}',\n    'ERR_FILE_APP_SAVE_ALT_FMT': 'The file {0} could not be saved: {1}',\n    'ERR_GENERIC_APP_FMT': '{0} Application Error',\n    'ERR_GENERIC_APP_ACTION_FMT': \"Failed to perform action '{0}'\",\n    'ERR_GENERIC_APP_UNKNOWN': 'Unknown Error',\n    'ERR_GENERIC_APP_REQUEST': 'An error occured while handling your request',\n    'ERR_GENERIC_APP_FATAL_FMT': 'Fatal Error: {0}',\n    'MSG_GENERIC_APP_DISCARD': 'Discard changes?',\n    'MSG_FILE_CHANGED': 'The file has changed. Reload?',\n    'MSG_APPLICATION_WARNING': 'Application Warning',\n    'MSG_MIME_OVERRIDE': 'The filetype \"{0}\" is not supported, using \"{1}\" instead.',\n    'ERR_OPEN_LOCATION': 'Failed to open location',\n    'ERR_OPEN_LOCATION_FMT': 'Failed to open location: {0}',\n    'LBL_UNKNOWN': 'Unknown',\n    'LBL_APPEARANCE': 'Appearance',\n    'LBL_USER': 'User',\n    'LBL_NAME': 'Name',\n    'LBL_APPLY': 'Apply',\n    'LBL_FILENAME': 'Filename',\n    'LBL_PATH': 'Path',\n    'LBL_SIZE': 'Size',\n    'LBL_TYPE': 'Type',\n    'LBL_MIME': 'MIME',\n    'LBL_LOADING': 'Loading',\n    'LBL_SETTINGS': 'Settings',\n    'LBL_ADD_FILE': 'Add file',\n    'LBL_COMMENT': 'Comment',\n    'LBL_ACCOUNT': 'Account',\n    'LBL_CONNECT': 'Connect',\n    'LBL_ONLINE': 'Online',\n    'LBL_OFFLINE': 'Offline',\n    'LBL_AWAY': 'Away',\n    'LBL_BUSY': 'Busy',\n    'LBL_CHAT': 'Chat',\n    'LBL_HELP': 'Help',\n    'LBL_ABOUT': 'About',\n    'LBL_PANELS': 'Panels',\n    'LBL_LOCALES': 'Locales',\n    'LBL_THEME': 'Theme',\n    'LBL_COLOR': 'Color',\n    'LBL_PID': 'PID',\n    'LBL_KILL': 'Kill',\n    'LBL_ALIVE': 'Alive',\n    'LBL_INDEX': 'Index',\n    'LBL_ADD': 'Add',\n    'LBL_FONT': 'Font',\n    'LBL_YES': 'Yes',\n    'LBL_NO': 'No',\n    'LBL_CANCEL': 'Cancel',\n    'LBL_TOP': 'Top',\n    'LBL_LEFT': 'Left',\n    'LBL_RIGHT': 'Right',\n    'LBL_BOTTOM': 'Bottom',\n    'LBL_CENTER': 'Center',\n    'LBL_FILE': 'File',\n    'LBL_NEW': 'New',\n    'LBL_OPEN': 'Open',\n    'LBL_SAVE': 'Save',\n    'LBL_SAVEAS': 'Save as...',\n    'LBL_CLOSE': 'Close',\n    'LBL_MKDIR': 'Create directory',\n    'LBL_UPLOAD': 'Upload',\n    'LBL_VIEW': 'View',\n    'LBL_EDIT': 'Edit',\n    'LBL_RENAME': 'Rename',\n    'LBL_DELETE': 'Delete',\n    'LBL_OPENWITH': 'Open With ...',\n    'LBL_ICONVIEW': 'Icon View',\n    'LBL_TREEVIEW': 'Tree View',\n    'LBL_LISTVIEW': 'List View',\n    'LBL_REFRESH': 'Refresh',\n    'LBL_VIEWTYPE': 'View type',\n    'LBL_BOLD': 'Bold',\n    'LBL_ITALIC': 'Italic',\n    'LBL_UNDERLINE': 'Underline',\n    'LBL_REGULAR': 'Regular',\n    'LBL_STRIKE': 'Strike',\n    'LBL_INDENT': 'Indent',\n    'LBL_OUTDENT': 'Outdate',\n    'LBL_UNDO': 'Undo',\n    'LBL_REDO': 'Redo',\n    'LBL_CUT': 'Cut',\n    'LBL_UNLINK': 'Unlink',\n    'LBL_COPY': 'Copy',\n    'LBL_PASTE': 'Paste',\n    'LBL_INSERT': 'Insert',\n    'LBL_IMAGE': 'Image',\n    'LBL_LINK': 'Link',\n    'LBL_DISCONNECT': 'Disconnect',\n    'LBL_APPLICATIONS': 'Applications',\n    'LBL_ADD_FOLDER': 'Add folder',\n    'LBL_INFORMATION': 'Information',\n    'LBL_TEXT_COLOR': 'Text Color',\n    'LBL_BACK_COLOR': 'Back Color',\n    'LBL_RESET_DEFAULT': 'Reset to defaults',\n    'LBL_DOWNLOAD_COMP': 'Download to computer',\n    'LBL_ORDERED_LIST': 'Ordered List',\n    'LBL_BACKGROUND_IMAGE': 'Background Image',\n    'LBL_BACKGROUND_COLOR': 'Background Color',\n    'LBL_UNORDERED_LIST': 'Unordered List',\n    'LBL_STATUS': 'Status',\n    'LBL_READONLY': 'Read-Only',\n    'LBL_CREATED': 'Created',\n    'LBL_MODIFIED': 'Modified',\n    'LBL_SHOW_COLUMNS': 'Show Columns',\n    'LBL_MOVE': 'Move',\n    'LBL_OPTIONS': 'Options',\n    'LBL_OK': 'OK',\n    'LBL_DIRECTORY': 'Directory',\n    'LBL_CREATE': 'Create',\n    'LBL_BUGREPORT': 'Bugreport',\n    'LBL_INSTALL': 'Install',\n    'LBL_UPDATE': 'Update',\n    'LBL_REMOVE': 'Remove',\n    'LBL_SHOW_SIDEBAR': 'Show sidebar',\n    'LBL_SHOW_NAVIGATION': 'Show navigation',\n    'LBL_SHOW_HIDDENFILES': 'Show hidden files',\n    'LBL_SHOW_FILEEXTENSIONS': 'Show file extensions',\n    'LBL_MOUNT': 'Mount',\n    'LBL_DESCRIPTION': 'Description',\n    'LBL_USERNAME': 'Username',\n    'LBL_PASSWORD': 'Password',\n    'LBL_HOST': 'Host',\n    'LBL_NAMESPACE': 'Namespace',\n    'LBL_SEARCH': 'Search',\n    'LBL_BACK': 'Back',\n    'LBL_ICONS': 'Icons',\n    'LBL_ICON': 'Icon',\n    'LBL_UNINSTALL': 'Uninstall',\n    'LBL_REGENERATE': 'Regenerate',\n    'LBL_DESKTOP': 'Desktop',\n    'LBL_WINDOWMANAGER': 'Window Manager',\n    'LBL_HOTKEY': 'Hotkey',\n    'LBL_HOTKEYS': 'Hotkeys',\n    'LBL_MOUNTS': 'Mounts',\n    'LBL_ID': 'ID',\n    'LBL_APPLICATION': 'Application',\n    'LBL_SCOPE': 'Scope',\n    'LBL_HIDE': 'Hide',\n    'LBL_REPOSITORY': 'Repository',\n    'LBL_VERSION': 'Version',\n    'LBL_AUTHOR': 'Author',\n    'LBL_GROUPS': 'Groups',\n    'LBL_AUTOHIDE': 'Autohide',\n    'LBL_PERSONAL': 'Personal',\n    'LBL_SYSTEM': 'System',\n    'LBL_STARTING': 'Starting',\n    'LBL_SOUNDS': 'Sounds',\n    'LBL_STORE': 'Store',\n    'LBL_LOCALE': 'Locale',\n    'LBL_PACKAGE': 'Package',\n    'LBL_PACKAGES': 'Packages',\n    'LBL_INPUT': 'Input',\n    'LBL_MISC': 'Misc',\n    'LBL_OTHER': 'Other',\n    'LBL_USERS': 'Users',\n    'LBL_FONTS': 'Fonts',\n    'LBL_OPEN_LOCATION': 'Open Location',\n    'LBL_HOME': 'Home',\n    'LBL_WIDGET': 'Widget',\n    'LBL_WIDGETS': 'Widgets',\n    'LBL_LOCK': 'Lock',\n    'LBL_UNLOCK': 'Unlock',\n    'LBL_WARNING': 'Warning',\n    'LBL_INFO': 'Info',\n    'LBL_POSITION': 'Position',\n    'LBL_OPACITY': 'Opactiy',\n    'LBL_ITEMS': 'Items',\n    'LBL_ONTOP': 'On top',\n    'LBL_BACKGROUND': 'Background',\n    'LBL_QUIT': 'Quit',\n    'LBL_EXIT': 'Exit',\n    'LBL_WINDOWS': 'Windows'\n};\n});\ndefine('skylark-osjsv2-client/core/auth/database',[\n\t'../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class DatabaseAuthenticator extends Authenticator {\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/demo',[\n    '../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class DemoAuthenticator extends Authenticator {\n        _getSettings() {\n            let settings = {};\n            let key;\n            for (let i = 0; i < localStorage.length; i++) {\n                key = localStorage.key(i);\n                if (key.match(/^OSjs\\//)) {\n                    try {\n                        settings[key.replace(/^OSjs\\//, '')] = JSON.parse(localStorage.getItem(key));\n                    } catch (e) {\n                        console.warn('DemoAuthenticator::login()', e, e.stack);\n                    }\n                }\n            }\n            return settings;\n        }\n        login(login) {\n            return new Promise((resolve, reject) => {\n                super.login(login).then(result => {\n                    result.userSettings = this._getSettings();\n                    return resolve(result);\n                }).catch(reject);\n            });\n        }\n        createUI() {\n            return this.requestLogin({\n                username: 'demo',\n                password: 'demo'\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/pam',[\n\t'../authenticator'\n], function (Authenticator) {\n    'use strict';\n    return class PAMAuthenticator extends Authenticator {\n    };\n});\ndefine('skylark-osjsv2-client/core/auth/standalone',[\n    './demo'\n], function (DemoAuthenticator) {\n    'use strict';\n    return class StandaloneAuthenticator extends DemoAuthenticator {\n        constructor() {\n            super();\n            this.isStandalone = true;\n        }\n        login(login) {\n            return Promise.resolve({\n                userData: {\n                    id: 1,\n                    username: 'root',\n                    name: 'Administrator User',\n                    groups: ['admin']\n                },\n                userSettings: this._getSettings(),\n                blacklistedPackages: []\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/http',[\n    '../../vfs/fs',\n    '../../vfs/file',\n    '../connection'\n], function (VFS, FileMetadata, Connection) {\n    'use strict';\n    return class HttpConnection extends Connection {\n        onVFSRequestCompleted(module, method, args, result, appRef) {\n            if ([\n                    'upload',\n                    'write',\n                    'mkdir',\n                    'copy',\n                    'move',\n                    'unlink'\n                ].indexOf(method) !== -1) {\n                const arg = method === 'move' ? {\n                    source: args[0] instanceof FileMetadata ? args[0] : null,\n                    destination: args[1] instanceof FileMetadata ? args[1] : null\n                } : args[method === 'copy' ? 1 : 0];\n                VFS.triggerWatch(method, arg, appRef);\n            }\n            return super.onVFSRequestCompleted(...arguments);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/standalone',[\n    './http'\n], function (HttpConnection) {\n    'use strict';\n    return class StandaloneConnection extends HttpConnection {\n        createRequest(method, args, options) {\n            if (method === 'packages') {\n                return Promise.resolve({ result: OSjs.getManifest() });\n            }\n            return Promise.reject(new Error('You are currently running locally and cannot perform this operation!'));\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/connections/ws',[\n    '../config',\n    '../locales',\n    '../../vfs/fs',\n    '../../vfs/file',\n    '../connection'\n], function (a, b, VFS, FileMetadata, Connection) {\n    'use strict';\n    return class WSConnection extends Connection {\n        constructor() {\n            super(...arguments);\n            const port = a.getConfig('Connection.WSPort');\n            const path = a.getConfig('Connection.WSPath') || '';\n            let url = window.location.protocol.replace('http', 'ws') + '//' + window.location.host;\n            if (port !== 'upgrade') {\n                if (url.match(/:\\d+$/)) {\n                    url = url.replace(/:\\d+$/, '');\n                }\n                url += ':' + port;\n            }\n            url += path;\n            this.ws = null;\n            this.wsurl = url;\n            this.wsqueue = {};\n            this.destroying = false;\n        }\n        destroy() {\n            if (!this.destroying) {\n                if (this.ws) {\n                    this.ws.close();\n                }\n                this.ws = null;\n                this.wsqueue = {};\n            }\n            this.destroying = true;\n            return super.destroy.apply(this, arguments);\n        }\n        init() {\n            this.destroying = false;\n            return new Promise((resolve, reject) => {\n                this._connect(false, (err, res) => {\n                    if (err) {\n                        reject(err instanceof Error ? err : new Error(err));\n                    } else {\n                        resolve(res);\n                    }\n                });\n            });\n        }\n        _connect(reconnect, callback) {\n            if (this.destroying || this.ws && !reconnect) {\n                return;\n            }\n            console.info('Trying WebSocket Connection', this.wsurl);\n            let connected = false;\n            this.ws = new WebSocket(this.wsurl);\n            this.ws.onopen = function (ev) {\n                connected = true;\n                setTimeout(() => callback(false), 0);\n            };\n            this.ws.onmessage = ev => {\n                console.debug('websocket open', ev);\n                const data = JSON.parse(ev.data);\n                const idx = data._index;\n                this._onmessage(idx, data);\n            };\n            this.ws.onerror = ev => {\n                console.error('websocket error', ev);\n            };\n            this.ws.onclose = ev => {\n                console.debug('websocket close', ev);\n                if (!connected && ev.code !== 3001) {\n                    callback(b._('CONNECTION_ERROR'));\n                    return;\n                }\n                this._onclose();\n            };\n        }\n        _onmessage(idx, data) {\n            if (typeof idx === 'undefined') {\n                this.message(data);\n            } else {\n                if (this.wsqueue[idx]) {\n                    delete data._index;\n                    this.wsqueue[idx](false, data);\n                    delete this.wsqueue[idx];\n                }\n            }\n        }\n        _onclose(reconnecting) {\n            if (this.destroying) {\n                return;\n            }\n            this.onOffline(reconnecting);\n            this.ws = null;\n            setTimeout(() => {\n                this._connect(true, err => {\n                    if (err) {\n                        this._onclose((reconnecting || 0) + 1);\n                    } else {\n                        this.onOnline();\n                    }\n                });\n            }, reconnecting ? 10000 : 1000);\n        }\n        message(data) {\n            if (data.action === 'vfs:watch') {\n                VFS.triggerWatch(data.args.event, new FileMetadata(data.args.file));\n            }\n            if (this._evHandler) {\n                this._evHandler.emit(data.action, data.args);\n            }\n        }\n        createRequest(method, args, options) {\n            if (!this.ws) {\n                return Promise.reject(new Error('No websocket connection'));\n            }\n            if ([\n                    'FS:upload',\n                    'FS:get',\n                    'logout'\n                ].indexOf(method) !== -1) {\n                return super.createRequest(...arguments);\n            }\n            const idx = this.index++;\n            const base = method.match(/^FS:/) ? '/FS/' : '/API/';\n            try {\n                this.ws.send(JSON.stringify({\n                    _index: idx,\n                    path: base + method.replace(/^FS:/, ''),\n                    args: args\n                }));\n            } catch (e) {\n                return Promise.reject(e);\n            }\n            return new Promise((resolve, reject) => {\n                this.wsqueue[idx] = function (err, res) {\n                    return err ? reject(err) : resolve(res);\n                };\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/database',[\n\t'../storage'\n], function (Storage) {\n    'use strict';\n    return class DatabaseStorage extends Storage {\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/demo',[\n    '../config',\n    '../storage'\n], function (a, Storage) {\n    'use strict';\n    return class DemoStorage extends Storage {\n        init() {\n            const curr = a.getConfig('Version');\n            const version = localStorage.getItem('__version__');\n            if (curr !== version) {\n                localStorage.clear();\n            }\n            localStorage.setItem('__version__', String(curr));\n            return Promise.resolve();\n        }\n        saveSettings(pool, storage) {\n            Object.keys(storage).forEach(key => {\n                if (pool && key !== pool) {\n                    return;\n                }\n                try {\n                    localStorage.setItem('OSjs/' + key, JSON.stringify(storage[key]));\n                } catch (e) {\n                    console.warn('DemoStorage::settings()', e, e.stack);\n                }\n            });\n            return Promise.resolve();\n        }\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/standalone',[\n\t'./demo'\n], function (DemoStorage) {\n    'use strict';\n    return class StandaloneStorage extends DemoStorage {\n    };\n});\ndefine('skylark-osjsv2-client/core/storage/system',[\n\t'../storage'\n], function (Storage) {\n    'use strict';\n    return class SystemStorage extends Storage {\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/containers',[\n    '../../utils/gui',\n    '../../utils/events',\n    '../element'\n], function (GUI, Events, GUIElement) {\n    'use strict';\n    function toggleState(el, expanded) {\n        if (typeof expanded === 'undefined') {\n            expanded = el.getAttribute('data-expanded') !== 'false';\n            expanded = !expanded;\n        }\n        el.setAttribute('aria-expanded', String(expanded));\n        el.setAttribute('data-expanded', String(expanded));\n        return expanded;\n    }\n    class GUIPanedView extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-paned-view',\n                type: 'container',\n                allowedChildren: ['gui-paned-view-container']\n            }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            if (evName === 'resize') {\n                evName = '_' + evName;\n            }\n            Events.$bind(el, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const orient = el.getAttribute('data-orientation') || 'horizontal';\n            function bindResizer(resizer, idx, cel) {\n                const resizeEl = resizer.previousElementSibling;\n                if (!resizeEl) {\n                    return;\n                }\n                let startWidth = resizeEl.offsetWidth;\n                let startHeight = resizeEl.offsetHeight;\n                let minSize = 16;\n                let maxSize = Number.MAX_VALUE;\n                GUI.createDrag(resizer, ev => {\n                    startWidth = resizeEl.offsetWidth;\n                    startHeight = resizeEl.offsetHeight;\n                    minSize = parseInt(cel.getAttribute('data-min-size'), 10) || minSize;\n                    const max = parseInt(cel.getAttribute('data-max-size'), 10);\n                    if (!max) {\n                        const totalSize = resizer.parentNode[orient === 'horizontal' ? 'offsetWidth' : 'offsetHeight'];\n                        const totalContainers = resizer.parentNode.querySelectorAll('gui-paned-view-container').length;\n                        const totalSpacers = resizer.parentNode.querySelectorAll('gui-paned-view-handle').length;\n                        maxSize = totalSize - totalContainers * 16 - totalSpacers * 8;\n                    }\n                }, (ev, diff) => {\n                    const newWidth = startWidth + diff.x;\n                    const newHeight = startHeight + diff.y;\n                    let flex;\n                    if (orient === 'horizontal') {\n                        if (!isNaN(newWidth) && newWidth > 0 && newWidth >= minSize && newWidth <= maxSize) {\n                            flex = newWidth.toString() + 'px';\n                        }\n                    } else {\n                        if (!isNaN(newHeight) && newHeight > 0 && newHeight >= minSize && newHeight <= maxSize) {\n                            flex = newHeight.toString() + 'px';\n                        }\n                    }\n                    if (flex) {\n                        resizeEl.style.webkitFlexBasis = flex;\n                        resizeEl.style.mozFflexBasis = flex;\n                        resizeEl.style.msFflexBasis = flex;\n                        resizeEl.style.oFlexBasis = flex;\n                        resizeEl.style.flexBasis = flex;\n                    }\n                }, ev => {\n                    el.dispatchEvent(new CustomEvent('_resize', { detail: { index: idx } }));\n                });\n            }\n            el.querySelectorAll('gui-paned-view-container').forEach((cel, idx) => {\n                if (idx % 2) {\n                    const resizer = document.createElement('gui-paned-view-handle');\n                    resizer.setAttribute('role', 'separator');\n                    cel.parentNode.insertBefore(resizer, cel);\n                    bindResizer(resizer, idx, cel);\n                }\n            });\n            return this;\n        }\n    }\n    class GUIPanedViewContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-paned-view-container',\n                type: 'container',\n                allowedParents: ['gui-paned-view']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIButtonBar extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-button-bar',\n                type: 'container'\n            }, this);\n        }\n        build() {\n            this.$element.setAttribute('role', 'toolbar');\n            return this;\n        }\n    }\n    class GUIToolBar extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-toolbar',\n                type: 'container'\n            }, this);\n        }\n        build() {\n            this.$element.setAttribute('role', 'toolbar');\n            return this;\n        }\n    }\n    class GUIGrid extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid',\n                type: 'container',\n                allowedChildren: ['gui-grid-row']\n            }, this);\n        }\n        build() {\n            const rows = this.$element.querySelectorAll('gui-grid-row');\n            const p = 100 / rows.length;\n            rows.forEach(r => {\n                r.style.height = String(p) + '%';\n            });\n            return this;\n        }\n    }\n    class GUIGridRow extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid-row',\n                type: 'container',\n                allowedChildren: ['gui-grid-entry'],\n                allowedParents: ['gui-grid-row']\n            }, this);\n        }\n    }\n    class GUIGridEntry extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-grid-entry',\n                type: 'container',\n                allowedParents: ['gui-grid-row']\n            }, this);\n        }\n    }\n    class GUIVBox extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-vbox',\n                type: 'container',\n                allowedChildren: ['gui-vbox-container']\n            }, this);\n        }\n    }\n    class GUIVBoxContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-vbox-container',\n                type: 'container',\n                allowedParents: ['gui-vbox']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIHBox extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-hbox',\n                type: 'container',\n                allowedChildren: ['gui-hbox-container']\n            }, this);\n        }\n    }\n    class GUIHBoxContainer extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-hbox-container',\n                type: 'container',\n                allowedParents: ['gui-hbox']\n            }, this);\n        }\n        build() {\n            GUI.setFlexbox(this.$element);\n            return this;\n        }\n    }\n    class GUIExpander extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-expander',\n                type: 'container'\n            }, this);\n        }\n        set(param, value) {\n            if (param === 'expanded') {\n                return toggleState(this.$element, value === true);\n            }\n            return super.set(...arguments);\n        }\n        on(evName, callback, params) {\n            if (['change'].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const lbltxt = el.getAttribute('data-label') || '';\n            const label = document.createElement('gui-expander-label');\n            Events.$bind(label, 'pointerdown', ev => {\n                el.dispatchEvent(new CustomEvent('_change', { detail: { expanded: toggleState(el) } }));\n            }, false);\n            label.appendChild(document.createTextNode(lbltxt));\n            el.setAttribute('role', 'toolbar');\n            el.setAttribute('aria-expanded', 'true');\n            el.setAttribute('data-expanded', 'true');\n            if (el.children.length) {\n                el.insertBefore(label, el.children[0]);\n            } else {\n                el.appendChild(label);\n            }\n            return this;\n        }\n    }\n    return {\n        GUIPanedView: GUIPanedView,\n        GUIPanedViewContainer: GUIPanedViewContainer,\n        GUIButtonBar: GUIButtonBar,\n        GUIToolBar: GUIToolBar,\n        GUIGrid: GUIGrid,\n        GUIGridRow: GUIGridRow,\n        GUIGridEntry: GUIGridEntry,\n        GUIVBox: GUIVBox,\n        GUIVBoxContainer: GUIVBoxContainer,\n        GUIHBox: GUIHBox,\n        GUIHBoxContainer: GUIHBoxContainer,\n        GUIExpander: GUIExpander\n    };\n});\ndefine('skylark-osjsv2-client/utils/clipboard',[],function () {\n    'use strict';\n    let _CLIPBOARD;\n    function setClipboard(data) {\n        console.debug('setClipboard()', data);\n        _CLIPBOARD = data;\n    }\n    function getClipboard() {\n        return _CLIPBOARD;\n    }\n    return {\n        setClipboard: setClipboard,\n        getClipboard: getClipboard\n    };\n});\ndefine('skylark-osjsv2-client/gui/dataview',[\n    '../utils/gui',\n    '../utils/dom',\n    '../utils/events',\n    '../utils/clipboard',\n    '../utils/keycodes',\n    '../vfs/file',\n    './element'\n], function (GUI, DOM, Events, Clipboard, Keycodes, FileMetadata, GUIElement) {\n    'use strict';\n    const _classMap = { 'gui-list-view': 'gui-list-view-row' };\n    function getEntryTagName(type) {\n        if (typeof type !== 'string') {\n            type = type.tagName.toLowerCase();\n        }\n        let className = _classMap[type];\n        if (!className) {\n            className = type + '-entry';\n        }\n        return className;\n    }\n    function getEntryFromEvent(ev, header) {\n        const t = ev.target;\n        const tn = t.tagName.toLowerCase();\n        if (tn.match(/(view|textarea|body)$/)) {\n            return null;\n        } else if (tn === 'gui-list-view-column' && !header) {\n            return t.parentNode;\n        }\n        return t;\n    }\n    function isHeader(ev, row) {\n        row = row || getEntryFromEvent(ev);\n        return row && row.parentNode.tagName === 'GUI-LIST-VIEW-HEAD';\n    }\n    function handleItemSelection(ev, item, idx, className, selected, root, multipleSelect) {\n        root = root || item.parentNode;\n        if (isHeader(null, item)) {\n            return multipleSelect ? [] : null;\n        }\n        if (idx === -1) {\n            root.querySelectorAll(getEntryTagName(root)).forEach(function (e) {\n                DOM.$removeClass(e, 'gui-active');\n            });\n            selected = [];\n        } else {\n            if (!multipleSelect || !ev.shiftKey) {\n                root.querySelectorAll(className).forEach(function (i) {\n                    DOM.$removeClass(i, 'gui-active');\n                });\n                selected = [];\n            }\n            const findex = selected.indexOf(idx);\n            if (findex >= 0) {\n                selected.splice(findex, 1);\n                DOM.$removeClass(item, 'gui-active');\n            } else {\n                selected.push(idx);\n                DOM.$addClass(item, 'gui-active');\n            }\n        }\n        selected.sort(function (a, b) {\n            return a - b;\n        });\n        return selected;\n    }\n    function handleKeyPress(cls, el, ev) {\n        const map = {};\n        const key = ev.keyCode;\n        const type = el.tagName.toLowerCase();\n        const className = getEntryTagName(type);\n        const root = el.querySelector(type + '-body');\n        const entries = root.querySelectorAll(className);\n        const count = entries.length;\n        if (!count) {\n            return;\n        }\n        if (key === Keycodes.ENTER) {\n            el.dispatchEvent(new CustomEvent('_activate', { detail: { entries: cls.values() } }));\n            return;\n        }\n        map[Keycodes.C] = function (ev) {\n            if (ev.ctrlKey) {\n                const selected = cls.values();\n                if (selected && selected.length) {\n                    const data = [];\n                    selected.forEach(function (s) {\n                        if (s && s.data) {\n                            data.push(new FileMetadata(s.data.path, s.data.mime));\n                        }\n                    });\n                    Clipboard.setClipboard(data);\n                }\n            }\n        };\n        const selected = el._selected.concat() || [];\n        const first = selected.length ? selected[0] : 0;\n        const last = selected.length > 1 ? selected[selected.length - 1] : first;\n        let current = 0;\n        function select() {\n            const item = entries[current];\n            if (item) {\n                el._selected = handleItemSelection(ev, item, current, className, selected, root, ev.shiftKey);\n                cls.scrollIntoView(item);\n            }\n        }\n        function getRowSize() {\n            let d = 0;\n            let lastTop = -1;\n            entries.forEach(function (e) {\n                if (lastTop === -1) {\n                    lastTop = e.offsetTop;\n                }\n                if (lastTop !== e.offsetTop) {\n                    return false;\n                }\n                lastTop = e.offsetTop;\n                d++;\n                return true;\n            });\n            return d;\n        }\n        function handleKey() {\n            function next() {\n                current = Math.min(last + 1, count);\n                select();\n            }\n            function prev() {\n                current = Math.max(0, first - 1);\n                select();\n            }\n            if (type === 'gui-tree-view' || type === 'gui-list-view') {\n                map[Keycodes.UP] = prev;\n                map[Keycodes.DOWN] = next;\n            } else {\n                map[Keycodes.UP] = function () {\n                    current = Math.max(0, first - getRowSize());\n                    select();\n                };\n                map[Keycodes.DOWN] = function () {\n                    current = Math.max(last, last + getRowSize());\n                    select();\n                };\n                map[Keycodes.LEFT] = prev;\n                map[Keycodes.RIGHT] = next;\n            }\n            if (map[key]) {\n                map[key](ev);\n            }\n        }\n        handleKey();\n    }\n    function getValueParameter(r) {\n        const value = r.getAttribute('data-value');\n        try {\n            return JSON.parse(value);\n        } catch (e) {\n        }\n        return value;\n    }\n    function matchValueByKey(r, val, key, idx) {\n        const value = r.getAttribute('data-value');\n        if (!key && (val === idx || val === value)) {\n            return r;\n        } else {\n            try {\n                const json = JSON.parse(value);\n                if (typeof json[key] === 'object' ? json[key] === val : String(json[key]) === String(val)) {\n                    return r;\n                }\n            } catch (e) {\n            }\n        }\n        return false;\n    }\n    return class UIDataView extends GUIElement {\n        clear(body) {\n            const el = this.$element;\n            if (!arguments.length) {\n                body = el;\n            }\n            el.querySelectorAll(getEntryTagName(el)).forEach(row => {\n                Events.$unbind(row);\n            });\n            DOM.$empty(body);\n            body.scrollTop = 0;\n            el._selected = [];\n            return this;\n        }\n        add(entries, oncreate) {\n            oncreate = oncreate || function () {\n            };\n            if (!(entries instanceof Array)) {\n                entries = [entries];\n            }\n            entries.forEach(el => {\n                oncreate(this, el);\n            });\n            return this;\n        }\n        patch(entries, className, body, oncreate, oninit) {\n            let single = false;\n            if (!(entries instanceof Array)) {\n                entries = [entries];\n                single = true;\n            }\n            let inView = {};\n            body.querySelectorAll(className).forEach(row => {\n                const id = row.getAttribute('data-id');\n                if (id !== null) {\n                    inView[id] = row;\n                }\n            });\n            entries.forEach(entry => {\n                let insertBefore;\n                if (typeof entry.id !== 'undefined' && entry.id !== null) {\n                    if (inView[entry.id]) {\n                        insertBefore = inView[entry.id];\n                        delete inView[entry.id];\n                    }\n                    const row = oncreate(this, entry);\n                    if (row) {\n                        if (insertBefore) {\n                            if (DOM.$hasClass(insertBefore, 'gui-active')) {\n                                DOM.$addClass(row, 'gui-active');\n                            }\n                            body.insertBefore(row, insertBefore);\n                            UIDataView.prototype.remove.call(this, null, className, insertBefore, body);\n                        } else {\n                            body.appendChild(row);\n                        }\n                        oninit(this, row);\n                    }\n                }\n            });\n            if (!single) {\n                Object.keys(inView).forEach(k => {\n                    UIDataView.prototype.remove.call(this, null, className, inView[k]);\n                });\n            }\n            inView = {};\n            this.updateActiveSelection(className);\n            return this;\n        }\n        remove(args, className, target, parentEl) {\n            args = args || [];\n            parentEl = parentEl || this.$element;\n            if (target) {\n                DOM.$remove(target);\n            } else if (typeof args[1] === 'undefined' && typeof args[0] === 'number') {\n                DOM.$remove(parentEl.querySelectorAll(className)[args[0]]);\n            } else {\n                const findId = args[0];\n                const findKey = args[1] || 'id';\n                const q = 'data-' + findKey + '=\"' + findId + '\"';\n                parentEl.querySelectorAll(className + '[' + q + ']').forEach(DOM.$remove);\n            }\n            this.updateActiveSelection(className);\n            return this;\n        }\n        updateActiveSelection(className) {\n            const active = [];\n            this.$element.querySelectorAll(className + '.gui-active').forEach(cel => {\n                active.push(DOM.$index(cel));\n            });\n            this.$element._active = active;\n        }\n        scrollIntoView(element) {\n            const el = this.$element;\n            const pos = DOM.$position(element, el);\n            let marginTop = 0;\n            if (el.tagName.toLowerCase() === 'gui-list-view') {\n                const header = el.querySelector('gui-list-view-head');\n                if (header) {\n                    marginTop = header.offsetHeight;\n                }\n            }\n            const scrollSpace = el.scrollTop + el.offsetHeight - marginTop;\n            const scrollTop = el.scrollTop + marginTop;\n            const elTop = pos.top - marginTop;\n            if (pos !== null && (elTop > scrollSpace || elTop < scrollTop)) {\n                el.scrollTop = elTop;\n                return true;\n            }\n            return false;\n        }\n        bindEntryEvents(row, className) {\n            const el = this.$element;\n            function createDraggable() {\n                let value = row.getAttribute('data-value');\n                if (value !== null) {\n                    try {\n                        value = JSON.parse(value);\n                    } catch (e) {\n                    }\n                }\n                let source = row.getAttribute('data-draggable-source');\n                if (source === null) {\n                    source = GUI.getWindowId(el);\n                    if (source !== null) {\n                        source = { wid: source };\n                    }\n                }\n                GUI.createDraggable(row, {\n                    type: el.getAttribute('data-draggable-type') || row.getAttribute('data-draggable-type'),\n                    source: source,\n                    data: value\n                });\n                let tooltip = row.getAttribute('data-tooltip');\n                if (tooltip && !row.getAttribute('title')) {\n                    row.setAttribute('title', tooltip);\n                }\n            }\n            el.dispatchEvent(new CustomEvent('_render', {\n                detail: {\n                    element: row,\n                    data: GUI.getViewNodeValue(row)\n                }\n            }));\n            if (el.getAttribute('data-draggable') === 'true') {\n                createDraggable();\n            }\n        }\n        getSelected(entries) {\n            const selected = [];\n            entries.forEach((iter, idx) => {\n                if (DOM.$hasClass(iter, 'gui-active')) {\n                    selected.push({\n                        index: idx,\n                        data: GUI.getViewNodeValue(iter)\n                    });\n                }\n            });\n            return selected;\n        }\n        getEntry(entries, val, key, asValue) {\n            if (val) {\n                let result = null;\n                entries.forEach((r, idx) => {\n                    if (!result && matchValueByKey(r, val, key, idx)) {\n                        result = r;\n                    }\n                });\n                return asValue && result ? getValueParameter(result) : result;\n            }\n            if (asValue && entries) {\n                try {\n                    return entries.map(iter => {\n                        return getValueParameter(iter);\n                    });\n                } catch (e) {\n                    console.warn(e);\n                }\n            }\n            return entries;\n        }\n        setSelected(body, entries, val, key, opts) {\n            const select = [];\n            const el = this.$element;\n            let scrollIntoView = false;\n            if (typeof opts === 'object') {\n                scrollIntoView = opts.scroll === true;\n            }\n            const sel = (r, idx) => {\n                select.push(idx);\n                DOM.$addClass(r, 'gui-active');\n                if (scrollIntoView) {\n                    this.scrollIntoView(r);\n                }\n            };\n            entries.forEach((r, idx) => {\n                DOM.$removeClass(r, 'gui-active');\n                if (matchValueByKey(r, val, key, idx)) {\n                    sel(r, idx);\n                }\n            });\n            el._selected = select;\n        }\n        build(applyArgs) {\n            const el = this.$element;\n            el._selected = [];\n            el.scrollTop = 0;\n            DOM.$addClass(el, 'gui-data-view');\n            const singleClick = el.getAttribute('data-single-click') === 'true';\n            let moved;\n            let wasResized = false;\n            let multipleSelect = el.getAttribute('data-multiple');\n            multipleSelect = multipleSelect === null || multipleSelect === 'true';\n            const select = ev => {\n                if (moved || wasResized) {\n                    return false;\n                }\n                const row = getEntryFromEvent(ev);\n                if (!row) {\n                    return false;\n                }\n                const className = row.tagName.toLowerCase();\n                if (isHeader(null, row)) {\n                    const col = getEntryFromEvent(ev, true);\n                    if (col) {\n                        let sortBy = col.getAttribute('data-sortby');\n                        if (sortBy) {\n                            let sortDir = col.getAttribute('data-sortdir');\n                            let resetDir = sortDir === 'desc';\n                            sortDir = sortDir === 'asc' ? 'desc' : resetDir ? null : 'asc';\n                            sortBy = resetDir ? null : sortBy;\n                            col.setAttribute('data-sortdir', sortDir);\n                            el.setAttribute('data-sortby', sortBy || '');\n                            el.setAttribute('data-sortdir', sortDir || '');\n                            el.dispatchEvent(new CustomEvent('_sort', {\n                                detail: {\n                                    sortDir: sortDir,\n                                    sortBy: sortBy\n                                }\n                            }));\n                        }\n                    }\n                    return false;\n                }\n                if (className === 'gui-tree-view-expander') {\n                    this.expand({\n                        ev: ev,\n                        entry: row.parentNode\n                    });\n                    return true;\n                }\n                const idx = DOM.$index(row);\n                el._selected = handleItemSelection(ev, row, idx, className, el._selected, el, multipleSelect);\n                el.dispatchEvent(new CustomEvent('_select', { detail: { entries: this.values() } }));\n                return true;\n            };\n            const activate = ev => {\n                if (moved || isHeader(ev)) {\n                    return;\n                }\n                if (singleClick) {\n                    if (select(ev) === false) {\n                        return;\n                    }\n                } else {\n                    if (!getEntryFromEvent(ev)) {\n                        return;\n                    }\n                }\n                el.dispatchEvent(new CustomEvent('_activate', { detail: { entries: this.values() } }));\n            };\n            const context = ev => {\n                if (isHeader(ev)) {\n                    return;\n                }\n                select(ev);\n                el.dispatchEvent(new CustomEvent('_contextmenu', {\n                    detail: {\n                        entries: this.values(),\n                        x: ev.clientX,\n                        y: ev.clientY\n                    }\n                }));\n            };\n            if (!el.querySelector('textarea.gui-focus-element') && !el.getAttribute('no-selection')) {\n                const underlay = document.createElement('textarea');\n                underlay.setAttribute('aria-label', '');\n                underlay.setAttribute('aria-hidden', 'true');\n                underlay.setAttribute('readonly', 'true');\n                underlay.className = 'gui-focus-element';\n                Events.$bind(underlay, 'focus', ev => {\n                    ev.preventDefault();\n                    DOM.$addClass(el, 'gui-element-focused');\n                });\n                Events.$bind(underlay, 'blur', ev => {\n                    ev.preventDefault();\n                    DOM.$removeClass(el, 'gui-element-focused');\n                });\n                Events.$bind(underlay, 'keydown', ev => {\n                    ev.preventDefault();\n                    handleKeyPress(this, el, ev);\n                });\n                Events.$bind(underlay, 'keypress', ev => {\n                    ev.preventDefault();\n                });\n                Events.$bind(el, 'pointerdown,touchstart', ev => {\n                    moved = false;\n                    const target = ev.target;\n                    wasResized = target && target.tagName === 'GUI-LIST-VIEW-COLUMN-RESIZER';\n                }, true);\n                Events.$bind(el, 'touchmove', ev => {\n                    moved = true;\n                }, true);\n                if (singleClick) {\n                    Events.$bind(el, 'click', activate, true);\n                } else {\n                    Events.$bind(el, 'click', select, true);\n                    Events.$bind(el, 'dblclick', activate, true);\n                }\n                Events.$bind(el, 'contextmenu', ev => {\n                    ev.preventDefault();\n                    context(ev);\n                    return false;\n                }, true);\n                this.on('select', ev => {\n                    if (DOM.$hasClass(el, 'gui-element-focused')) {\n                        return;\n                    }\n                    const oldTop = el.scrollTop;\n                    underlay.focus();\n                    el.scrollTop = oldTop;\n                    setTimeout(() => {\n                        el.scrollTop = oldTop;\n                    }, 2);\n                }, true);\n                el.appendChild(underlay);\n            }\n        }\n        focus() {\n            try {\n                const underlay = this.$element.querySelector('.gui-focus-element');\n                underlay.focus();\n            } catch (e) {\n                console.warn(e, e.stack);\n            }\n        }\n        blur() {\n            try {\n                const underlay = this.$element.querySelector('.gui-focus-element');\n                underlay.blur();\n            } catch (e) {\n                console.warn(e, e.stack);\n            }\n        }\n        values() {\n            return [];\n        }\n        on(evName, callback, params) {\n            if ([\n                    'activate',\n                    'select',\n                    'expand',\n                    'contextmenu',\n                    'render',\n                    'drop',\n                    'sort'\n                ].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/date',[],function () {\n    'use strict';\n    class ExtendedDate {\n        constructor(date) {\n            if (date) {\n                if (date instanceof Date) {\n                    this.date = date;\n                } else if (date instanceof ExtendedDate) {\n                    this.date = date.date;\n                } else if (typeof date === 'string') {\n                    this.date = new Date(date);\n                }\n            }\n            if (!this.date) {\n                this.date = new Date();\n            }\n        }\n        static get config() {\n            return { defaultFormat: 'isoDateTime' };\n        }\n        static get dayNames() {\n            return [\n                'Sun',\n                'Mon',\n                'Tue',\n                'Wed',\n                'Thu',\n                'Fri',\n                'Sat',\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Saturday'\n            ];\n        }\n        static get monthNames() {\n            return [\n                'Jan',\n                'Feb',\n                'Mar',\n                'Apr',\n                'May',\n                'Jun',\n                'Jul',\n                'Aug',\n                'Sep',\n                'Oct',\n                'Nov',\n                'Dec',\n                'January',\n                'February',\n                'March',\n                'April',\n                'May',\n                'June',\n                'July',\n                'August',\n                'September',\n                'October',\n                'November',\n                'December'\n            ];\n        }\n        get() {\n            return this.date;\n        }\n        format(fmt) {\n            return ExtendedDate.format(this, fmt);\n        }\n        getFirstDayInMonth(fmt) {\n            return ExtendedDate.getFirstDayInMonth(fmt, null, null, this);\n        }\n        getLastDayInMonth(fmt) {\n            return ExtendedDate.getLastDayInMonth(fmt, null, null, this);\n        }\n        getDaysInMonth() {\n            return ExtendedDate.getDaysInMonth(null, null, this);\n        }\n        getWeekNumber() {\n            return ExtendedDate.getWeekNumber(this);\n        }\n        isWithinMonth(from, to) {\n            return ExtendedDate.isWithinMonth(this, from, to);\n        }\n        getDayOfTheYear() {\n            return ExtendedDate.getDayOfTheYear();\n        }\n        static format(date, fmt) {\n            return format(fmt, date);\n        }\n        static getPreviousMonth(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            let current;\n            if (now.getMonth() === 0) {\n                current = new Date(now.getFullYear() - 1, 11, now.getDate());\n            } else {\n                current = new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n            }\n            return new ExtendedDate(current);\n        }\n        static getNextMonth(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            let current;\n            if (now.getMonth() === 11) {\n                current = new Date(now.getFullYear() + 1, 0, now.getDate());\n            } else {\n                current = new Date(now.getFullYear(), now.getMonth() + 1, now.getDate());\n            }\n            return new ExtendedDate(current);\n        }\n        static getFirstDayInMonth(fmt, y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 1);\n            if (fmt === true) {\n                return date.getDate();\n            }\n            return fmt ? format(fmt, date) : new ExtendedDate(date);\n        }\n        static getLastDayInMonth(fmt, y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 0);\n            if (fmt === true) {\n                return date.getDate();\n            }\n            return fmt ? format(fmt, date) : new ExtendedDate(date);\n        }\n        static getDaysInMonth(y, m, now) {\n            now = _now(now);\n            y = _y(y, now);\n            m = _m(m, now);\n            const date = new Date();\n            date.setFullYear(y, m, 0);\n            return parseInt(date.getDate(), 10);\n        }\n        static getWeekNumber(now) {\n            now = now ? now instanceof ExtendedDate ? now.date : now : new Date();\n            const d = new Date(+now);\n            d.setHours(0, 0, 0);\n            d.setDate(d.getDate() + 4 - (d.getDay() || 7));\n            return Math.ceil(((d - new Date(d.getFullYear(), 0, 1)) / 86400000 + 1) / 7);\n        }\n        static getDayName(index, shrt) {\n            if (index < 0 || index === null || typeof index === 'undefined') {\n                return filter(ExtendedDate.dayNames, index, shrt, 7);\n            }\n            shrt = shrt ? 0 : 1;\n            const idx = index + (shrt + 7);\n            return ExtendedDate.dayNames[idx];\n        }\n        static getMonthName(index, shrt) {\n            if (index < 0 || index === null || typeof index === 'undefined') {\n                return filter(ExtendedDate.monthNames, index, shrt, 12);\n            }\n            shrt = shrt ? 0 : 1;\n            const idx = index + (shrt + 12);\n            return ExtendedDate.monthNames[idx];\n        }\n        static isWithinMonth(now, from, to) {\n            if (now.getFullYear() >= from.getFullYear() && now.getMonth() >= from.getMonth()) {\n                if (now.getFullYear() <= to.getFullYear() && now.getMonth() <= to.getMonth()) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        static getDayOfTheYear() {\n            const now = new Date();\n            const start = new Date(now.getFullYear(), 0, 0);\n            const diff = now - start;\n            const oneDay = 1000 * 60 * 60 * 24;\n            return Math.floor(diff / oneDay);\n        }\n    };\n    const methods = [\n        'UTC',\n        'toString',\n        'now',\n        'parse',\n        'getDate',\n        'getDay',\n        'getFullYear',\n        'getHours',\n        'getMilliseconds',\n        'getMinutes',\n        'getMonth',\n        'getSeconds',\n        'getTime',\n        'getTimezoneOffset',\n        'getUTCDate',\n        'getUTCDay',\n        'getUTCFullYear',\n        'getUTCHours',\n        'getUTCMilliseconds',\n        'getUTCMinutes',\n        'getUTCMonth',\n        'getUTCSeconds',\n        'getYear',\n        'setDate',\n        'setFullYear',\n        'setHours',\n        'setMilliseconds',\n        'setMinutes',\n        'setMonth',\n        'setSeconds',\n        'setTime',\n        'setUTCDate',\n        'setUTCFullYear',\n        'setUTCHours',\n        'setUTCMilliseconds',\n        'setUTCMinutes',\n        'setUTCMonth',\n        'setUTCSeconds',\n        'setYear',\n        'toDateString',\n        'toGMTString',\n        'toISOString',\n        'toJSON',\n        'toLocaleDateString',\n        'toLocaleFormat',\n        'toLocaleString',\n        'toLocaleTimeString',\n        'toSource',\n        'toString',\n        'toTimeString',\n        'toUTCString',\n        'valueOf'\n    ];\n    methods.forEach(function (m) {\n        ExtendedDate.prototype[m] = function () {\n            return this.date[m].apply(this.date, arguments);\n        };\n    });\n    function formatDate(date, format, utc) {\n        utc = utc === true;\n        function pad(val, len) {\n            val = String(val);\n            len = len || 2;\n            while (val.length < len) {\n                val = '0' + val;\n            }\n            return val;\n        }\n        const defaultFormats = {\n            'default': 'Y-m-d H:i:s',\n            shortDate: 'm/d/y',\n            mediumDate: 'M d, Y',\n            longDate: 'F d, Y',\n            fullDate: 'l, F d, Y',\n            shortTime: 'h:i A',\n            mediumTime: 'h:i:s A',\n            longTime: 'h:i:s A T',\n            isoDate: 'Y-m-d',\n            isoTime: 'H:i:s',\n            isoDateTime: 'Y-m-d H:i:s'\n        };\n        format = defaultFormats[format] || format;\n        if (!(date instanceof ExtendedDate)) {\n            date = new ExtendedDate(date);\n        }\n        const map = {\n            d: function (s) {\n                return pad(map.j(s));\n            },\n            D: function (s) {\n                return ExtendedDate.dayNames[utc ? date.getUTCDay() : date.getDay()];\n            },\n            j: function (s) {\n                return utc ? date.getUTCDate() : date.getDate();\n            },\n            l: function (s) {\n                return ExtendedDate.dayNames[(utc ? date.getUTCDay() : date.getDay()) + 7];\n            },\n            w: function (s) {\n                return utc ? date.getUTCDay() : date.getDay();\n            },\n            z: function (s) {\n                return date.getDayOfTheYear();\n            },\n            S: function (s) {\n                const d = utc ? date.getUTCDate() : date.getDate();\n                return [\n                    'th',\n                    'st',\n                    'nd',\n                    'rd'\n                ][d % 10 > 3 ? 0 : (d % 100 - d % 10 !== 10) * d % 10];\n            },\n            W: function (s) {\n                return date.getWeekNumber();\n            },\n            F: function (s) {\n                return ExtendedDate.monthNames[(utc ? date.getUTCMonth() : date.getMonth()) + 12];\n            },\n            m: function (s) {\n                return pad(map.n(s));\n            },\n            M: function (s) {\n                return ExtendedDate.monthNames[utc ? date.getUTCMonth() : date.getMonth()];\n            },\n            n: function (s) {\n                return (utc ? date.getUTCMonth() : date.getMonth()) + 1;\n            },\n            t: function (s) {\n                return date.getDaysInMonth();\n            },\n            Y: function (s) {\n                return utc ? date.getUTCFullYear() : date.getFullYear();\n            },\n            y: function (s) {\n                return String(map.Y(s)).slice(2);\n            },\n            a: function (s) {\n                return map.G(s) < 12 ? 'am' : 'pm';\n            },\n            A: function (s) {\n                return map.a(s).toUpperCase();\n            },\n            g: function (s) {\n                return map.G(s) % 12 || 12;\n            },\n            G: function (s) {\n                return utc ? date.getUTCHours() : date.getHours();\n            },\n            h: function (s) {\n                return pad(map.g(s));\n            },\n            H: function (s) {\n                return pad(map.G(s));\n            },\n            i: function (s) {\n                return pad(utc ? date.getUTCMinutes() : date.getMinutes());\n            },\n            s: function (s) {\n                return pad(utc ? date.getUTCSeconds() : date.getSeconds());\n            },\n            O: function (s) {\n                const tzo = -date.getTimezoneOffset();\n                const dif = tzo >= 0 ? '+' : '-';\n                function ppad(num) {\n                    const norm = Math.abs(Math.floor(num));\n                    return (norm < 10 ? '0' : '') + norm;\n                }\n                const str = dif + ppad(tzo / 60) + ':' + ppad(tzo % 60);\n                return str;\n            },\n            T: function (s) {\n                if (utc) {\n                    return 'UTC';\n                }\n                const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n                const zones = String(date.date).match(timezone) || [''];\n                return zones.pop().replace(/(\\+|\\-)[0-9]+$/, '');\n            },\n            U: function (s) {\n                return date.getTime();\n            }\n        };\n        const result = [];\n        format.split('').forEach(function (s) {\n            result.push(map[s] ? map[s]() : s);\n        });\n        return result.join('');\n    }\n\n    function filter(from, index, shrt, toindex) {\n        const list = [];\n        for (let i = shrt ? 0 : toindex; i < from.length; i++) {\n            list.push(from[i]);\n        }\n        return list;\n    }\n    function format(fmt, date) {\n        let utc;\n        if (typeof fmt === 'undefined' || !fmt) {\n            fmt = ExtendedDate.config.defaultFormat;\n        } else {\n            if (typeof fmt !== 'string') {\n                utc = fmt.utc;\n                fmt = fmt.format;\n            } else {\n                utc = ExtendedDate.config.utc;\n            }\n        }\n        return formatDate(date, fmt, utc);\n    }\n    function _now(now) {\n        return now ? now instanceof ExtendedDate ? now.date : now : new Date();\n    }\n    function _y(y, now) {\n        return typeof y === 'undefined' || y === null || y < 0 ? now.getFullYear() : y;\n    }\n    function _m(m, now) {\n        return typeof m === 'undefined' || m === null || m < 0 ? now.getMonth() : m;\n    }\n    return ExtendedDate;\n});\ndefine('skylark-osjsv2-client/gui/elements/fileview',[\n    '../../utils/fs',\n    '../../vfs/fs',\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/misc',\n    '../../utils/events',\n    '../menu',\n    '../element',\n    '../dataview',\n    '../../core/package-manager',\n    '../../core/settings-manager',\n    '../../vfs/file',\n    '../../helpers/date',\n    '../../core/theme',\n    '../../core/locales',\n    '../../core/config'\n], function (FS, VFS, DOM, GUI, Utils, Events, Menu, GUIElement, GUIDataView, PackageManager, SettingsManager, FileMetadata, DateExtended, Theme, a, b) {\n    'use strict';\n    let _iconSizes = { 'gui-icon-view': '32x32' };\n    function getFileIcon(iter, size) {\n        if (iter.icon && typeof iter.icon === 'object') {\n            if (iter.icon.application) {\n                return PackageManager.getPackageResource(iter.icon.filename, iter.icon.application);\n            }\n            return Theme.getIcon(iter.icon.filename, size, iter.icon.application);\n        }\n        const icon = 'status/dialog-question.png';\n        return Theme.getFileIcon(iter, size, icon);\n    }\n    function getFileSize(iter) {\n        let filesize = '';\n        if (iter.type !== 'dir' && iter.size >= 0) {\n            filesize = FS.humanFileSize(iter.size);\n        }\n        return filesize;\n    }\n    const removeExtension = (() => {\n        let mimeConfig;\n        return (str, opts) => {\n            if (!mimeConfig) {\n                mimeConfig = b.getConfig('MIME.mapping');\n            }\n            if (opts.extensions === false) {\n                let ext = FS.filext(str);\n                if (ext) {\n                    ext = '.' + ext;\n                    if (mimeConfig[ext]) {\n                        str = str.substr(0, str.length - ext.length);\n                    }\n                }\n            }\n            return str;\n        };\n    })();\n    function getDateFromStamp(stamp) {\n        if (typeof stamp === 'string') {\n            let date = null;\n            try {\n                date = new Date(stamp);\n            } catch (e) {\n            }\n            if (date) {\n                return DateExtended.format(date);\n            }\n        }\n        return stamp;\n    }\n    function getListViewColumns(cls, iter, opts) {\n        opts = opts || {};\n        const columnMapping = {\n            filename: {\n                label: 'LBL_FILENAME',\n                icon: () => {\n                    return getFileIcon(iter);\n                },\n                value: () => {\n                    return removeExtension(iter.filename, opts);\n                }\n            },\n            mime: {\n                label: 'LBL_MIME',\n                size: '100px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return iter.mime;\n                }\n            },\n            mtime: {\n                label: 'LBL_MODIFIED',\n                size: '160px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getDateFromStamp(iter.mtime);\n                }\n            },\n            ctime: {\n                label: 'LBL_CREATED',\n                size: '160px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getDateFromStamp(iter.ctime);\n                }\n            },\n            size: {\n                label: 'LBL_SIZE',\n                size: '120px',\n                icon: () => {\n                    return null;\n                },\n                value: () => {\n                    return getFileSize(iter);\n                }\n            }\n        };\n        let defColumns = [\n            'filename',\n            'mime',\n            'size'\n        ];\n        let useColumns = defColumns;\n        if (!opts.defaultcolumns) {\n            const vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n            const scandirOptions = vfsOptions.scandir || {};\n            useColumns = scandirOptions.columns || defColumns;\n        }\n        const columns = [];\n        const sortBy = cls.$element.getAttribute('data-sortby');\n        const sortDir = cls.$element.getAttribute('data-sortdir');\n        useColumns.forEach((key, idx) => {\n            const map = columnMapping[key];\n            if (iter) {\n                columns.push({\n                    sortBy: key,\n                    label: map.value(),\n                    icon: map.icon(),\n                    textalign: idx === 0 ? 'left' : 'right'\n                });\n            } else {\n                columns.push({\n                    sortBy: key,\n                    sortDir: key === sortBy ? sortDir : null,\n                    label: a._(map.label),\n                    size: map.size || '',\n                    resizable: idx > 0,\n                    textalign: idx === 0 ? 'left' : 'right'\n                });\n            }\n        });\n        return columns;\n    }\n    function scandir(dir, opts, cb, oncreate) {\n        const file = new FileMetadata(dir);\n        file.type = 'dir';\n        const scanopts = {\n            backlink: opts.backlink,\n            showDotFiles: opts.dotfiles === true,\n            showFileExtensions: opts.extensions === true,\n            mimeFilter: opts.filter || [],\n            typeFilter: opts.filetype || null,\n            sortBy: opts.sortby,\n            sortDir: opts.sortdir\n        };\n        VFS.scandir(file, scanopts).then(result => {\n            const list = [];\n            const summary = {\n                size: 0,\n                directories: 0,\n                files: 0,\n                hidden: 0\n            };\n            function isHidden(iter) {\n                return (iter.filename || '').substr(0) === '.';\n            }\n            (result || []).forEach(iter => {\n                list.push(oncreate(iter));\n                summary.size += iter.size || 0;\n                summary.directories += iter.type === 'dir' ? 1 : 0;\n                summary.files += iter.type !== 'dir' ? 1 : 0;\n                summary.hidden += isHidden(iter) ? 1 : 0;\n            });\n            cb(false, list, summary);\n        }).catch(cb);\n    }\n    function readdir(cls, dir, done, sopts) {\n        const childView = cls.getChildView();\n        if (!childView) {\n            return;\n        }\n        sopts = sopts || {};\n        const vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n        const scandirOptions = vfsOptions.scandir || {};\n        const el = cls.$element;\n        const target = childView.$element;\n        const tagName = target.tagName.toLowerCase();\n        el.setAttribute('data-path', dir);\n        const opts = {\n            filter: null,\n            backlink: sopts.backlink\n        };\n        function setOption(s, d, c, cc) {\n            if (el.hasAttribute(s)) {\n                opts[d] = c(el.getAttribute(s));\n            } else {\n                opts[d] = (cc || function () {\n                })();\n            }\n        }\n        setOption('data-sortby', 'sortby', val => {\n            return val;\n        });\n        setOption('data-sortdir', 'sortdir', val => {\n            return val;\n        });\n        setOption('data-dotfiles', 'dotfiles', val => {\n            return val === 'true';\n        }, () => {\n            return scandirOptions.showHiddenFiles === true;\n        });\n        setOption('data-extensions', 'extensions', val => {\n            return val === 'true';\n        }, () => {\n            return scandirOptions.showFileExtensions === true;\n        });\n        setOption('data-filetype', 'filetype', val => {\n            return val;\n        });\n        setOption('data-defaultcolumns', 'defaultcolumns', val => {\n            return val === 'true';\n        });\n        try {\n            opts.filter = JSON.parse(el.getAttribute('data-filter'));\n        } catch (e) {\n        }\n        scandir(dir, opts, (error, result, summary) => {\n            if (tagName === 'gui-list-view') {\n                cls.getChildView().set('zebra', true);\n                if (sopts.headers !== false) {\n                    cls.getChildView().set('columns', getListViewColumns(cls, null, opts));\n                }\n            }\n            done(error, result, summary);\n        }, iter => {\n            const tooltip = Utils.format('{0}\\n{1}\\n{2} {3}', iter.type.toUpperCase(), iter.filename, getFileSize(iter), iter.mime || '');\n            function _createEntry() {\n                const row = {\n                    value: iter,\n                    id: iter.id || removeExtension(iter.filename, opts),\n                    label: iter.filename,\n                    tooltip: tooltip,\n                    icon: getFileIcon(iter, _iconSizes[tagName] || '16x16')\n                };\n                if (tagName === 'gui-tree-view' && iter.type === 'dir') {\n                    if (iter.filename !== '..') {\n                        row.entries = [{ label: 'Loading...' }];\n                    }\n                }\n                return row;\n            }\n            if (tagName !== 'gui-list-view') {\n                return _createEntry();\n            }\n            return {\n                value: iter,\n                id: iter.id || iter.filename,\n                tooltip: tooltip,\n                columns: getListViewColumns(cls, iter, opts)\n            };\n        });\n    }\n    class GUIFileView extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-file-view' }, this);\n        }\n        on(evName, callback, params) {\n            if ([\n                    'activate',\n                    'select',\n                    'contextmenu',\n                    'sort'\n                ].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            const el = this.$element;\n            if (evName === '_contextmenu') {\n                el.setAttribute('data-has-contextmenu', 'true');\n            }\n            Events.$bind(el, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            if (param === 'type') {\n                const firstChild = el.children[0];\n                if (firstChild && firstChild.tagName.toLowerCase() === value) {\n                    return true;\n                }\n                el.setAttribute('data-type', value);\n                this.buildChildView();\n                if (typeof arg === 'undefined' || arg === true) {\n                    this.chdir({ path: el.getAttribute('data-path') });\n                }\n                return this;\n            } else if ([\n                    'filter',\n                    'dotfiles',\n                    'filetype',\n                    'extensions',\n                    'defaultcolumns',\n                    'sortby',\n                    'sortdir'\n                ].indexOf(param) >= 0) {\n                GUI.setProperty(el, param, value);\n                return this;\n            }\n            const childView = this.getChildView();\n            if (childView) {\n                return childView.set.apply(childView, arguments);\n            }\n            return GUIDataView.prototype.set.apply(this, arguments);\n        }\n        build() {\n            if (this.childView) {\n                return this;\n            }\n            this.buildChildView();\n            const el = this.$element;\n            Events.$bind(el, '_expand', ev => {\n                const target = ev.detail.element;\n                if (target.getAttribute('data-was-rendered')) {\n                    return;\n                }\n                if (ev.detail.expanded) {\n                    const entry = ev.detail.entries[0].data;\n                    target.setAttribute('data-was-rendered', String(true));\n                    readdir(this, entry.path, (error, result, summary) => {\n                        if (!error) {\n                            target.querySelectorAll('gui-tree-view-entry').forEach(e => {\n                                DOM.$remove(e);\n                            });\n                            const childView = this.getChildView();\n                            if (childView) {\n                                childView.add({\n                                    entries: result,\n                                    parentNode: target\n                                });\n                            }\n                        }\n                    }, { backlink: false });\n                }\n            });\n            return this;\n        }\n        values() {\n            const childView = this.getChildView();\n            if (childView) {\n                return childView.values();\n            }\n            return null;\n        }\n        contextmenu(ev) {\n            const vfsOptions = SettingsManager.instance('VFS');\n            const scandirOptions = vfsOptions.get('scandir') || {};\n            function setOption(opt, toggle) {\n                const opts = { scandir: {} };\n                opts.scandir[opt] = toggle;\n                vfsOptions.set(null, opts, true);\n            }\n            Menu.create([\n                {\n                    title: a._('LBL_SHOW_HIDDENFILES'),\n                    type: 'checkbox',\n                    checked: scandirOptions.showHiddenFiles === true,\n                    onClick: () => {\n                        setOption('showHiddenFiles', !scandirOptions.showHiddenFiles);\n                    }\n                },\n                {\n                    title: a._('LBL_SHOW_FILEEXTENSIONS'),\n                    type: 'checkbox',\n                    checked: scandirOptions.showFileExtensions === true,\n                    onClick: () => {\n                        setOption('showFileExtensions', !scandirOptions.showFileExtensions);\n                    }\n                }\n            ], ev);\n        }\n        chdir(args) {\n            let childView = this.getChildView();\n            if (!childView) {\n                childView = this.buildChildView();\n            }\n            const cb = args.done || function () {\n            };\n            const dir = args.path || b.getDefaultPath();\n            const child = childView;\n            const el = this.$element;\n            clearTimeout(el._readdirTimeout);\n            el._readdirTimeout = setTimeout(() => {\n                readdir(this, dir, (error, result, summary) => {\n                    if (error) {\n                        OSjs.error(a._('ERR_VFSMODULE_XHR_ERROR'), a._('ERR_VFSMODULE_SCANDIR_FMT', dir), error);\n                    } else {\n                        child.clear();\n                        child.add(result);\n                    }\n                    cb(error, summary);\n                }, args.opts);\n            }, 50);\n        }\n        getChildViewType() {\n            let type = this.$element.getAttribute('data-type') || 'list-view';\n            if (!type.match(/^gui\\-/)) {\n                type = 'gui-' + type;\n            }\n            return type;\n        }\n        getChildView() {\n            return GUIElement.createFromNode(this.$element.children[0]);\n        }\n        buildChildView() {\n            const el = this.$element;\n            const type = this.getChildViewType();\n            const childView = this.getChildView();\n            if (childView) {\n                if (childView.$element && childView.$element.tagName.toLowerCase() === type) {\n                    return null;\n                }\n            }\n            DOM.$empty(el);\n            const nel = GUIElement.create(type, {\n                'draggable': true,\n                'draggable-type': 'file'\n            });\n            nel.build();\n            nel.on('select', ev => {\n                el.dispatchEvent(new CustomEvent('_select', { detail: ev.detail }));\n            });\n            nel.on('activate', ev => {\n                el.dispatchEvent(new CustomEvent('_activate', { detail: ev.detail }));\n            });\n            nel.on('sort', ev => {\n                el.setAttribute('data-sortby', String(ev.detail.sortBy));\n                el.setAttribute('data-sortdir', String(ev.detail.sortDir));\n                this.chdir({\n                    sopts: { headers: false },\n                    path: el.getAttribute('data-path')\n                });\n                el.dispatchEvent(new CustomEvent('_sort', { detail: ev.detail }));\n            });\n            nel.on('contextmenu', ev => {\n                if (!el.hasAttribute('data-has-contextmenu') || el.hasAttribute('data-has-contextmenu') === 'false') {\n                    this.contextmenu(ev);\n                }\n                el.dispatchEvent(new CustomEvent('_contextmenu', { detail: ev.detail }));\n            });\n            if (type === 'gui-tree-view') {\n                nel.on('expand', ev => {\n                    el.dispatchEvent(new CustomEvent('_expand', { detail: ev.detail }));\n                });\n            }\n            el.setAttribute('role', 'region');\n            el.appendChild(nel.$element);\n            return nel;\n        }\n    }\n    return { GUIFileView: GUIFileView };\n});\ndefine('skylark-osjsv2-client/gui/elements/iconview',[\n    '../../utils/gui',\n    '../dataview'\n], function (GUI, GUIDataView) {\n    'use strict';\n    function createEntry(cls, e) {\n        const entry = GUI.createElement('gui-icon-view-entry', e);\n        return entry;\n    }\n    function initEntry(cls, cel) {\n        const icon = cel.getAttribute('data-icon');\n        const label = GUI.getLabel(cel);\n        const dicon = document.createElement('div');\n        const dimg = document.createElement('img');\n        dimg.src = icon;\n        dicon.appendChild(dimg);\n        const dlabel = document.createElement('div');\n        const dspan = document.createElement('span');\n        dspan.appendChild(document.createTextNode(label));\n        dlabel.appendChild(dspan);\n        cls.bindEntryEvents(cel, 'gui-icon-view-entry');\n        cel.setAttribute('role', 'listitem');\n        cel.appendChild(dicon);\n        cel.appendChild(dlabel);\n    }\n    class GUIIconView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-icon-view'\n            }, this);\n        }\n        values() {\n            return this.getSelected(this.$element.querySelectorAll('gui-icon-view-entry'));\n        }\n        build() {\n            const el = this.$element;\n            let body = el.querySelector('gui-icon-view-body');\n            const found = !!body;\n            if (!found) {\n                body = document.createElement('gui-icon-view-body');\n                el.appendChild(body);\n            }\n            el.querySelectorAll('gui-icon-view-entry').forEach((cel, idx) => {\n                if (!found) {\n                    body.appendChild(cel);\n                }\n                initEntry(this, cel);\n            });\n            el.setAttribute('role', 'list');\n            return super.build(...arguments);\n        }\n        get(param, value, arg, asValue) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-icon-view-body');\n                const rows = body.querySelectorAll('gui-icon-view-entry');\n                return this.getEntry(rows, value, arg, asValue);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            if (param === 'selected' || param === 'value') {\n                if (body) {\n                    this.setSelected(body, body.querySelectorAll('gui-icon-view-entry'), value, arg);\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.add(entries, (cls, e) => {\n                const entry = createEntry(this, e);\n                body.appendChild(entry);\n                initEntry(this, entry);\n            });\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.clear(body);\n        }\n        remove(entries) {\n            return super.remove(entries, 'gui-icon-view-entry');\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-icon-view-body');\n            return super.patch(entries, 'gui-icon-view-entry', body, createEntry, initEntry);\n        }\n    }\n    return { GUIIconView: GUIIconView };\n});\ndefine('skylark-osjsv2-client/gui/elements/inputs',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/clipboard',\n    '../../utils/events',\n    '../../utils/keycodes',\n    '../element',\n    '../../core/locales'\n], function (DOM, GUI, Clipboard, Events, Keycodes, GUIElement, locales) {\n    'use strict';\n    let _buttonCount = 0;\n    function createInputOfType(el, type) {\n        const group = el.getAttribute('data-group');\n        const placeholder = el.getAttribute('data-placeholder');\n        const disabled = String(el.getAttribute('data-disabled')) === 'true';\n        const value = el.childNodes.length ? el.childNodes[0].nodeValue : null;\n        DOM.$empty(el);\n        const input = document.createElement(type === 'textarea' ? 'textarea' : 'input');\n        const attribs = {\n            value: null,\n            type: type,\n            tabindex: -1,\n            placeholder: placeholder,\n            disabled: disabled ? 'disabled' : null,\n            name: group ? group + '[]' : null\n        };\n        [\n            'autocomplete',\n            'autocorrect',\n            'autocapitalize',\n            'spellcheck'\n        ].forEach(a => {\n            attribs[a] = el.getAttribute('data-' + a) || 'false';\n        });\n        function _bindDefaults() {\n            if ([\n                    'range',\n                    'slider'\n                ].indexOf(type) >= 0) {\n                attribs.min = el.getAttribute('data-min');\n                attribs.max = el.getAttribute('data-max');\n                attribs.step = el.getAttribute('data-step');\n            } else if ([\n                    'radio',\n                    'checkbox'\n                ].indexOf(type) >= 0) {\n                if (el.getAttribute('data-value') === 'true') {\n                    attribs.checked = 'checked';\n                }\n            } else if ([\n                    'text',\n                    'password',\n                    'textarea'\n                ].indexOf(type) >= 0) {\n                attribs.value = value || '';\n            }\n            Object.keys(attribs).forEach(a => {\n                if (attribs[a] !== null) {\n                    if (a === 'value') {\n                        input.value = attribs[a];\n                    } else {\n                        input.setAttribute(a, attribs[a]);\n                    }\n                }\n            });\n        }\n        function _bindEvents() {\n            if (type === 'text' || type === 'password' || type === 'textarea') {\n                Events.$bind(input, 'keydown', ev => {\n                    if (ev.keyCode === Keycodes.ENTER) {\n                        input.dispatchEvent(new CustomEvent('_enter', { detail: input.value }));\n                    } else if (ev.keyCode === Keycodes.C && ev.ctrlKey) {\n                        Clipboard.setClipboard(input.value);\n                    }\n                    if (type === 'textarea' && ev.keyCode === Keycodes.TAB) {\n                        ev.preventDefault();\n                        input.value += '\\t';\n                    }\n                }, false);\n            }\n        }\n        function _create() {\n            _bindDefaults();\n            _bindEvents();\n            GUI.createInputLabel(el, type, input);\n            const rolemap = {\n                'TEXTAREA': () => {\n                    return 'textbox';\n                },\n                'INPUT': i => {\n                    const typemap = {\n                        'range': 'slider',\n                        'text': 'textbox',\n                        'password': 'textbox'\n                    };\n                    return typemap[i.type] || i.type;\n                }\n            };\n            if (rolemap[el.tagName]) {\n                input.setAttribute('role', rolemap[el.tagName](input));\n            }\n            input.setAttribute('aria-label', el.getAttribute('title') || '');\n            el.setAttribute('role', 'region');\n            el.setAttribute('aria-disabled', String(disabled));\n            Events.$bind(input, 'change', ev => {\n                let value = input.value;\n                if (type === 'radio' || type === 'checkbox') {\n                    value = input.checked;\n                }\n                input.dispatchEvent(new CustomEvent('_change', { detail: value }));\n            }, false);\n        }\n        _create();\n    }\n    function addToSelectBox(el, entries) {\n        const target = el.querySelector('select');\n        if (!(entries instanceof Array)) {\n            entries = [entries];\n        }\n        entries.forEach(e => {\n            const opt = document.createElement('option');\n            opt.setAttribute('role', 'option');\n            opt.setAttribute('value', e.value);\n            opt.appendChild(document.createTextNode(e.label));\n            target.appendChild(opt);\n        });\n    }\n    function removeFromSelectBox(el, what) {\n        const target = el.querySelector('select');\n        target.querySelectorAll('option').forEach(opt => {\n            if (String(opt.value) === String(what)) {\n                DOM.$remove(opt);\n                return false;\n            }\n            return true;\n        });\n    }\n    function createSelectInput(el, multiple) {\n        const disabled = el.getAttribute('data-disabled') !== null;\n        const selected = el.getAttribute('data-selected');\n        const select = document.createElement('select');\n        if (multiple) {\n            select.setAttribute('size', el.getAttribute('data-size') || 2);\n            multiple = el.getAttribute('data-multiple') === 'true';\n        }\n        if (multiple) {\n            select.setAttribute('multiple', 'multiple');\n        }\n        if (disabled) {\n            select.setAttribute('disabled', 'disabled');\n        }\n        if (selected !== null) {\n            select.selectedIndex = selected;\n        }\n        el.querySelectorAll('gui-select-option').forEach(sel => {\n            const value = sel.getAttribute('data-value') || '';\n            const label = sel.childNodes.length ? sel.childNodes[0].nodeValue : '';\n            const option = document.createElement('option');\n            option.setAttribute('role', 'option');\n            option.setAttribute('value', value);\n            option.appendChild(document.createTextNode(label));\n            if (sel.getAttribute('selected')) {\n                option.setAttribute('selected', 'selected');\n            }\n            select.appendChild(option);\n            sel.parentNode.removeChild(sel);\n        });\n        Events.$bind(select, 'change', ev => {\n            select.dispatchEvent(new CustomEvent('_change', { detail: select.value }));\n        }, false);\n        select.setAttribute('role', 'listbox');\n        select.setAttribute('aria-label', el.getAttribute('title') || '');\n        el.setAttribute('aria-disabled', String(disabled));\n        el.setAttribute('role', 'region');\n        el.appendChild(select);\n    }\n    function setSwitchValue(val, input, button) {\n        if (val !== true) {\n            input.removeAttribute('checked');\n            DOM.$removeClass(button, 'gui-active');\n            button.innerHTML = '0';\n        } else {\n            input.setAttribute('checked', 'checked');\n            DOM.$addClass(button, 'gui-active');\n            button.innerHTML = '1';\n        }\n    }\n    class _GUIInput extends GUIElement {\n        on(evName, callback, params) {\n            if (evName === 'enter') {\n                evName = '_enter';\n            } else if (evName === 'change') {\n                evName = '_change';\n            }\n            const target = this.$element.querySelector('textarea, input, select');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n    }\n    class GUILabel extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-label' }, this);\n        }\n        set(param, value, isHTML) {\n            const el = this.$element;\n            if (param === 'value' || param === 'label') {\n                el.setAttribute('data-label', String(value));\n                const lbl = el.querySelector('label');\n                DOM.$empty(lbl);\n                if (isHTML) {\n                    lbl.innerHTML = value;\n                } else {\n                    lbl.appendChild(document.createTextNode(value));\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const label = GUI.getValueLabel(el, true);\n            const lbl = document.createElement('label');\n            lbl.appendChild(document.createTextNode(label));\n            el.setAttribute('role', 'heading');\n            el.setAttribute('data-label', String(label));\n            el.appendChild(lbl);\n            return this;\n        }\n    }\n    class GUITextarea extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-textarea',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'textarea');\n            return this;\n        }\n        set(param, value) {\n            const el = this.$element;\n            if (el && param === 'scrollTop') {\n                if (typeof value !== 'number') {\n                    value = el.firstChild.scrollHeight;\n                }\n                el.firstChild.scrollTop = value;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n    }\n    class GUIText extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-text',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'text');\n            return this;\n        }\n    }\n    class GUIPassword extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-password',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'password');\n            return this;\n        }\n    }\n    class GUIFileUpload extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-file-upload',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            const input = document.createElement('input');\n            input.setAttribute('role', 'button');\n            input.setAttribute('type', 'file');\n            input.onchange = ev => {\n                input.dispatchEvent(new CustomEvent('_change', { detail: input.files[0] }));\n            };\n            this.$element.appendChild(input);\n            return this;\n        }\n    }\n    class GUIRadio extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-radio',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'radio');\n            return this;\n        }\n    }\n    class GUICheckbox extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-checkbox',\n                type: 'input'\n            }, this);\n        }\n        build() {\n            createInputOfType(this.$element, 'checkbox');\n            return this;\n        }\n    }\n    class GUISwitch extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-switch',\n                type: 'input'\n            }, this);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                const button = this.$element.querySelector('button');\n                setSwitchValue(value, input, button);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const input = document.createElement('input');\n            input.type = 'checkbox';\n            el.appendChild(input);\n            const inner = document.createElement('div');\n            const button = document.createElement('button');\n            inner.appendChild(button);\n            GUI.createInputLabel(el, 'switch', inner);\n            function toggleValue(v) {\n                let val = false;\n                if (typeof v === 'undefined') {\n                    val = !!input.checked;\n                    val = !val;\n                } else {\n                    val = v;\n                }\n                setSwitchValue(val, input, button);\n            }\n            Events.$bind(inner, 'pointerup', ev => {\n                ev.preventDefault();\n                const disabled = el.getAttribute('data-disabled') !== null;\n                if (!disabled) {\n                    toggleValue();\n                }\n            }, false);\n            toggleValue(false);\n            return this;\n        }\n    }\n    class GUIButton extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-button',\n                type: 'input'\n            }, this);\n        }\n        set(param, value, isHTML) {\n            if (param === 'value' || param === 'label') {\n                const lbl = this.$element.querySelector('button');\n                DOM.$empty(lbl);\n                if (isHTML) {\n                    lbl.innerHTML = value;\n                } else {\n                    lbl.appendChild(document.createTextNode(value));\n                }\n                lbl.setAttribute('aria-label', value);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        create(params) {\n            const label = params.label;\n            if (params.label) {\n                delete params.label;\n            }\n            const el = GUI.createElement('gui-button', params);\n            if (label) {\n                el.appendChild(document.createTextNode(label));\n            }\n            return el;\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('button');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const icon = el.getAttribute('data-icon');\n            const disabled = el.getAttribute('data-disabled') !== null;\n            const group = el.getAttribute('data-group');\n            const label = GUI.getValueLabel(el);\n            const input = document.createElement('button');\n            function setGroup(g) {\n                if (g) {\n                    input.setAttribute('name', g + '[' + _buttonCount + ']');\n                    Events.$bind(input, 'pointerup', () => {\n                        let root = el;\n                        while (root.parentNode) {\n                            if (root.tagName.toLowerCase() === 'application-window-content') {\n                                break;\n                            }\n                            root = root.parentNode;\n                        }\n                        DOM.$addClass(input, 'gui-active');\n                        root.querySelectorAll('gui-button[data-group=\"' + g + '\"] > button').forEach(b => {\n                            if (b.name === input.name) {\n                                return;\n                            }\n                            DOM.$removeClass(b, 'gui-active');\n                        });\n                    });\n                }\n            }\n            function setImage() {\n                if (icon && icon !== 'null') {\n                    const tip = locales._(el.getAttribute('data-tooltip') || '');\n                    const img = document.createElement('img');\n                    img.src = icon;\n                    img.alt = tip;\n                    img.title = tip;\n                    if (input.firstChild) {\n                        input.insertBefore(img, input.firstChild);\n                    } else {\n                        input.appendChild(img);\n                    }\n                    DOM.$addClass(el, 'gui-has-image');\n                }\n            }\n            function setLabel() {\n                if (label) {\n                    DOM.$addClass(el, 'gui-has-label');\n                }\n                input.appendChild(document.createTextNode(label));\n                input.setAttribute('aria-label', label);\n            }\n            if (disabled) {\n                input.setAttribute('disabled', 'disabled');\n            }\n            setLabel();\n            setImage();\n            setGroup(group);\n            _buttonCount++;\n            el.setAttribute('role', 'navigation');\n            el.appendChild(input);\n            return this;\n        }\n    }\n    class _GUISelect extends _GUIInput {\n        add(arg) {\n            addToSelectBox(this.$element, arg);\n            return this;\n        }\n        remove(arg) {\n            removeFromSelectBox(this.$element, arg);\n            return this;\n        }\n        clear() {\n            const target = this.$element.querySelector('select');\n            DOM.$empty(target);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const multiple = el.tagName.toLowerCase() === 'gui-select-list';\n            createSelectInput(el, multiple);\n            return this;\n        }\n    }\n    class GUISelect extends _GUISelect {\n        static register() {\n            return super.register({\n                tagName: 'gui-select',\n                type: 'input'\n            }, this);\n        }\n    }\n    class GUISelectList extends _GUISelect {\n        static register() {\n            return super.register({\n                tagName: 'gui-select-list',\n                type: 'input'\n            }, this);\n        }\n    }\n    class GUISlider extends _GUIInput {\n        static register() {\n            return super.register({\n                tagName: 'gui-slider',\n                type: 'input'\n            }, this);\n        }\n        get(param) {\n            const val = GUIElement.getProperty(this.$element, param); // modified by lwf\n            if (param === 'value') {\n                return parseInt(val, 10);\n            }\n            return val;\n        }\n        build() {\n            createInputOfType(this.$element, 'range');\n            return this;\n        }\n    }\n    class GUIInputModal extends GUIElement {\n        static register() {\n            return super.register({\n                tagName: 'gui-input-modal',\n                type: 'input'\n            }, this);\n        }\n        on(evName, callback, params) {\n            if (evName === 'open') {\n                evName = '_open';\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        get(param) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                return input.value;\n            }\n            return super.get(...arguments);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                const input = this.$element.querySelector('input');\n                input.removeAttribute('disabled');\n                input.value = value;\n                input.setAttribute('disabled', 'disabled');\n                input.setAttribute('aria-disabled', 'true');\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const container = document.createElement('div');\n            const input = document.createElement('input');\n            input.type = 'text';\n            input.setAttribute('disabled', 'disabled');\n            const button = document.createElement('button');\n            button.innerHTML = '...';\n            Events.$bind(button, 'pointerup', ev => {\n                el.dispatchEvent(new CustomEvent('_open', { detail: input.value }));\n            }, false);\n            container.appendChild(input);\n            container.appendChild(button);\n            el.appendChild(container);\n            return this;\n        }\n    }\n    return {\n        GUILabel: GUILabel,\n        GUITextarea: GUITextarea,\n        GUIText: GUIText,\n        GUIPassword: GUIPassword,\n        GUIFileUpload: GUIFileUpload,\n        GUIRadio: GUIRadio,\n        GUICheckbox: GUICheckbox,\n        GUISwitch: GUISwitch,\n        GUIButton: GUIButton,\n        GUISelect: GUISelect,\n        GUISelectList: GUISelectList,\n        GUISlider: GUISlider,\n        GUIInputModal: GUIInputModal\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/listview',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../dataview'\n], function (DOM, GUI, Events, GUIDataView) {\n    'use strict';\n    function createFakeHeader(el) {\n        function createResizers() {\n            const fhead = el.querySelector('gui-list-view-fake-head');\n            const head = el.querySelector('gui-list-view-head');\n            const fcols = fhead.querySelectorAll('gui-list-view-column');\n            const cols = head.querySelectorAll('gui-list-view-column');\n            fhead.querySelectorAll('gui-list-view-column-resizer').forEach(rel => {\n                DOM.$remove(rel);\n            });\n            cols.forEach((col, idx) => {\n                const attr = col.getAttribute('data-resizable');\n                if (attr === 'true') {\n                    const fcol = fcols[idx];\n                    const resizer = document.createElement('gui-list-view-column-resizer');\n                    fcol.appendChild(resizer);\n                    let startWidth = 0;\n                    let maxWidth = 0;\n                    let widthOffset = 16;\n                    let minWidth = widthOffset;\n                    let tmpEl = null;\n                    GUI.createDrag(resizer, ev => {\n                        startWidth = col.offsetWidth;\n                        minWidth = widthOffset;\n                        maxWidth = el.offsetWidth - el.children.length * widthOffset;\n                    }, (ev, diff) => {\n                        const newWidth = startWidth - diff.x;\n                        if (!isNaN(newWidth) && newWidth > minWidth && newWidth < maxWidth) {\n                            col.style.width = String(newWidth) + 'px';\n                            fcol.style.width = String(newWidth) + 'px';\n                        }\n                        tmpEl = DOM.$remove(tmpEl);\n                    });\n                }\n            });\n        }\n        const fh = el.querySelector('gui-list-view-fake-head gui-list-view-head');\n        DOM.$empty(fh);\n        const row = el.querySelector('gui-list-view-head gui-list-view-row');\n        if (row) {\n            fh.appendChild(row.cloneNode(true));\n            createResizers();\n        }\n    }\n    function initRow(cls, row) {\n        const el = cls.$element;\n        row.querySelectorAll('gui-list-view-column').forEach((cel, idx) => {\n            const icon = cel.getAttribute('data-icon');\n            if (icon && icon !== 'null') {\n                DOM.$addClass(cel, 'gui-has-image');\n                cel.style.backgroundImage = 'url(' + icon + ')';\n            }\n            const text = cel.firstChild;\n            if (text && text.nodeType === 3) {\n                const span = document.createElement('span');\n                span.appendChild(document.createTextNode(text.nodeValue));\n                cel.insertBefore(span, text);\n                cel.removeChild(text);\n            }\n            if (el._columns[idx] && !el._columns[idx].visible) {\n                cel.style.display = 'none';\n            }\n            cel.setAttribute('role', 'listitem');\n        });\n        cls.bindEntryEvents(row, 'gui-list-view-row');\n    }\n    function createEntry(cls, v, head) {\n        const label = v.label || '';\n        if (v.label) {\n            delete v.label;\n        }\n        let setSize = null;\n        if (v.size) {\n            setSize = v.size;\n            delete v.size;\n        }\n        const nel = GUI.createElement('gui-list-view-column', v);\n        if (setSize) {\n            nel.style.width = setSize;\n        }\n        if (typeof label === 'function') {\n            nel.appendChild(label.call(nel, nel, v));\n        } else {\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(label));\n            nel.appendChild(span);\n        }\n        return nel;\n    }\n    function createRow(cls, e) {\n        e = e || {};\n        if (e.columns) {\n            const row = GUI.createElement('gui-list-view-row', e, ['columns']);\n            e.columns.forEach(se => {\n                row.appendChild(createEntry(cls, se));\n            });\n            return row;\n        }\n        return null;\n    }\n    class GUIListView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-list-view'\n            }, this);\n        }\n        values() {\n            const body = this.$element.querySelector('gui-list-view-body');\n            const values = this.getSelected(body.querySelectorAll('gui-list-view-row'));\n            return values;\n        }\n        get(param, value, arg, asValue) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-list-view-body');\n                const rows = body.querySelectorAll('gui-list-view-row');\n                return this.getEntry(rows, value, arg, asValue);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            if (param === 'columns') {\n                const head = el.querySelector('gui-list-view-head');\n                const row = document.createElement('gui-list-view-row');\n                DOM.$empty(head);\n                el._columns = [];\n                value.forEach(v => {\n                    v.visible = typeof v.visible === 'undefined' || v.visible === true;\n                    const nel = createEntry(this, v, true);\n                    el._columns.push(v);\n                    if (!v.visible) {\n                        nel.style.display = 'none';\n                    }\n                    row.appendChild(nel);\n                });\n                head.appendChild(row);\n                createFakeHeader(el);\n                return this;\n            } else if (param === 'selected' || param === 'value') {\n                const body = el.querySelector('gui-list-view-body');\n                this.setSelected(body, body.querySelectorAll('gui-list-view-row'), value, arg, arg2);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.add(entries, (cls, e) => {\n                const cbCreated = e.onCreated || function () {\n                };\n                const row = createRow(this, e);\n                if (row) {\n                    body.appendChild(row);\n                    initRow(this, row);\n                }\n                cbCreated(row);\n            });\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.clear(body);\n        }\n        remove(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.remove(entries, 'gui-list-view-row', null, body);\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-list-view-body');\n            return super.patch(entries, 'gui-list-view-row', body, createRow, initRow);\n        }\n        build() {\n            const el = this.$element;\n            el._columns = [];\n            let inner = el.querySelector('gui-list-view-inner');\n            let head = el.querySelector('gui-list-view-head');\n            let body = el.querySelector('gui-list-view-body');\n            function moveIntoInner(cel) {\n                if (cel.parentNode.tagName !== 'GUI-LIST-VIEW-INNER') {\n                    inner.appendChild(cel);\n                }\n            }\n            let fakeHead = el.querySelector('gui-list-view-fake-head');\n            if (!fakeHead) {\n                fakeHead = document.createElement('gui-list-view-fake-head');\n                const fakeHeadInner = document.createElement('gui-list-view-inner');\n                fakeHeadInner.appendChild(document.createElement('gui-list-view-head'));\n                fakeHead.appendChild(fakeHeadInner);\n            }\n            if (!inner) {\n                inner = document.createElement('gui-list-view-inner');\n                el.appendChild(inner);\n            }\n            (function _createBody() {\n                if (body) {\n                    moveIntoInner(body);\n                } else {\n                    body = document.createElement('gui-list-view-body');\n                    inner.appendChild(body);\n                }\n                body.setAttribute('role', 'group');\n            }());\n            (function _createHead() {\n                if (head) {\n                    moveIntoInner(head);\n                } else {\n                    head = document.createElement('gui-list-view-head');\n                    inner.insertBefore(head, body);\n                }\n                head.setAttribute('role', 'group');\n            }());\n            el.setAttribute('role', 'list');\n            el.appendChild(fakeHead);\n            Events.$bind(el, 'scroll', ev => {\n                fakeHead.style.top = el.scrollTop + 'px';\n            }, false);\n            const hcols = el.querySelectorAll('gui-list-view-head gui-list-view-column');\n            hcols.forEach((cel, idx) => {\n                const vis = cel.getAttribute('data-visible');\n                const iter = {\n                    visible: vis === null || vis === 'true',\n                    size: cel.getAttribute('data-size')\n                };\n                if (iter.size) {\n                    cel.style.width = iter.size;\n                }\n                el._columns.push(iter);\n                if (!iter.visible) {\n                    cel.style.display = 'none';\n                }\n            });\n            createFakeHeader(el);\n            el.querySelectorAll('gui-list-view-body gui-list-view-row').forEach(row => {\n                initRow(this, row);\n            });\n            return super.build(...arguments);\n        }\n    }\n    return { GUIListView: GUIListView };\n});\ndefine('skylark-osjsv2-client/gui/elements/menus',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../menu',\n    '../element'\n], function (DOM, GUI, Events, Menu, GUIElement) {\n    'use strict';\n    let debounce;\n    function getSelectionEventAttribs(mel, didx) {\n        const id = mel.getAttribute('data-id');\n        let idx = DOM.$index(mel);\n        if (!didx) {\n            idx = parseInt(mel.getAttribute('data-index'), 10);\n        }\n        const result = {\n            index: idx,\n            id: id\n        };\n        Array.prototype.slice.call(mel.attributes).forEach(item => {\n            if (item.name.match(/^data\\-/)) {\n                const an = item.name.replace(/^data\\-/, '');\n                if (typeof result[an] === 'undefined') {\n                    result[an] = item.value;\n                }\n            }\n        });\n        return result;\n    }\n    function getEventName(evName) {\n        if ([\n                'select',\n                'click'\n            ].indexOf(evName) !== -1) {\n            return '_select';\n        }\n        return evName;\n    }\n    function runChildren(pel, level, winRef, cb) {\n        level = level || 0;\n        cb = cb || function () {\n        };\n        if (pel.children) {\n            pel.children.forEach((child, i) => {\n                if (child && child.tagName.toLowerCase() === 'gui-menu-entry') {\n                    GUIElement.createFromNode(child).build(null, winRef);\n                    cb(child, level);\n                }\n            });\n        }\n    }\n    function onEntryClick(ev, pos, target, original) {\n        const isExpander = !!target.querySelector('gui-menu');\n        if (!isExpander) {\n            const dispatcher = (original || target).querySelector('label');\n            dispatcher.dispatchEvent(new CustomEvent('_select', { detail: getSelectionEventAttribs(target, true) }));\n        }\n    }\n    function createTyped(child, par) {\n        const type = child.getAttribute('data-type');\n        const value = child.getAttribute('data-checked') === 'true';\n        let input = null;\n        if (type) {\n            const group = child.getAttribute('data-group');\n            input = document.createElement('input');\n            input.type = type;\n            input.name = group ? group + '[]' : '';\n            if (value) {\n                input.setAttribute('checked', 'checked');\n            }\n            par.setAttribute('role', 'menuitem' + type);\n            par.appendChild(input);\n        }\n    }\n    class GUIMenuEntry extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu-entry' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            const target = this.$element.querySelector('gui-menu-entry > label');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(arg, winRef) {\n            const child = this.$element;\n            if (arguments.length < 2) {\n                return this;\n            }\n            child.setAttribute('role', 'menuitem' + (child.getAttribute('data-type') || ''));\n            const label = GUI.getLabel(child);\n            const icon = GUI.getIcon(child, winRef);\n            child.setAttribute('aria-label', label);\n            const span = document.createElement('label');\n            if (icon) {\n                child.style.backgroundImage = 'url(' + icon + ')';\n                DOM.$addClass(span, 'gui-has-image');\n            }\n            child.appendChild(span);\n            createTyped(child, span);\n            if (child.getAttribute('data-labelhtml') === 'true') {\n                span.innerHTML = label;\n            } else {\n                span.appendChild(document.createTextNode(label));\n            }\n            if (child.querySelector('gui-menu')) {\n                DOM.$addClass(child, 'gui-menu-expand');\n                child.setAttribute('aria-haspopup', 'true');\n            } else {\n                child.setAttribute('aria-haspopup', 'false');\n            }\n            return this;\n        }\n    }\n    class GUIMenu extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            Events.$bind(this.$element, evName, function (ev) {\n                if (ev.target.tagName === 'LABEL') {\n                    callback.apply(new GUIElement(ev.target.parentNode), arguments);\n                }\n            }, true);\n            return this;\n        }\n        show(ev) {\n            ev.stopPropagation();\n            ev.preventDefault();\n            const newNode = this.$element.cloneNode(true);\n            Menu.create(null, ev, newNode);\n        }\n        set(param, value, arg) {\n            if (param === 'checked') {\n                const found = this.$element.querySelector('gui-menu-entry[data-id=\"' + value + '\"]');\n                if (found) {\n                    const input = found.querySelector('input');\n                    if (input) {\n                        if (arg) {\n                            input.setAttribute('checked', 'checked');\n                        } else {\n                            input.removeAttribute('checked');\n                        }\n                    }\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build(customMenu, winRef) {\n            const el = this.$element;\n            el.setAttribute('role', 'menu');\n            try {\n                runChildren(el, 0, winRef, (child, level) => {\n                    if (customMenu) {\n                        if (child) {\n                            const submenus = child.getElementsByTagName('gui-menu');\n                            submenus.forEach(sub => {\n                                if (sub) {\n                                    runChildren(sub, level + 1, winRef);\n                                }\n                            });\n                        }\n                    }\n                });\n            } catch (e) {\n                console.warn(e);\n            }\n            if (!customMenu) {\n                Events.$bind(el, 'click', (ev, pos) => {\n                    clearTimeout(debounce);\n                    debounce = setTimeout(() => {\n                        debounce = clearTimeout(debounce);\n                        Menu.clickWrapper(ev, pos, onEntryClick);\n                    }, 1);\n                }, true);\n            }\n            return this;\n        }\n    }\n    class GUIMenuBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-menu-bar' }, this);\n        }\n        on(evName, callback, params) {\n            evName = getEventName(evName);\n            this.$element.querySelectorAll('gui-menu-bar-entry').forEach(target => {\n                Events.$bind(target, evName, callback.bind(this), params);\n            });\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            el.setAttribute('role', 'menubar');\n            function updateChildren(sm, level) {\n                if (sm && sm.children) {\n                    const children = sm.children;\n                    let child;\n                    for (let i = 0; i < children.length; i++) {\n                        child = children[i];\n                        if (child.tagName === 'GUI-MENU-ENTRY') {\n                            child.setAttribute('aria-haspopup', String(!!child.firstChild));\n                            updateChildren(child.firstChild, level + 1);\n                        }\n                    }\n                }\n            }\n            function _onClick(ev) {\n                ev.preventDefault();\n                const mel = ev.target;\n                const submenu = mel.querySelector('gui-menu');\n                if (mel.getAttribute('data-disabled') === 'true') {\n                    return;\n                }\n                mel.querySelectorAll('gui-menu-entry').forEach(c => {\n                    DOM.$removeClass(c, 'gui-hover');\n                });\n                if (submenu) {\n                    Menu.setActive(ev => {\n                        if (ev instanceof window.Event) {\n                            ev.stopPropagation();\n                        }\n                        DOM.$removeClass(mel, 'gui-active');\n                    });\n                }\n                if (DOM.$hasClass(mel, 'gui-active')) {\n                    if (submenu) {\n                        DOM.$removeClass(mel, 'gui-active');\n                    }\n                } else {\n                    if (submenu) {\n                        DOM.$addClass(mel, 'gui-active');\n                    }\n                    mel.dispatchEvent(new CustomEvent('_select', { detail: getSelectionEventAttribs(mel) }));\n                }\n            }\n            el.querySelectorAll('gui-menu-bar-entry').forEach((mel, idx) => {\n                const label = GUI.getLabel(mel);\n                const span = document.createElement('span');\n                span.appendChild(document.createTextNode(label));\n                mel.setAttribute('role', 'menuitem');\n                mel.insertBefore(span, mel.firstChild);\n                const submenu = mel.querySelector('gui-menu');\n                Menu.clamp(submenu);\n                mel.setAttribute('aria-haspopup', String(!!submenu));\n                mel.setAttribute('data-index', String(idx));\n                updateChildren(submenu, 2);\n            });\n            Events.$bind(el, 'click', ev => {\n                if (ev.target.tagName === 'GUI-MENU-BAR-ENTRY') {\n                    _onClick(ev);\n                }\n            }, true);\n            return this;\n        }\n    }\n    return {\n        GUIMenuEntry: GUIMenuEntry,\n        GUIMenuBar: GUIMenuBar,\n        GUIMenu: GUIMenu\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/misc',[\n    '../../utils/dom',\n    '../../utils/events',\n    '../../utils/colors',\n    '../element'\n], function (DOM, Events, Colors, GUIElement) {\n    'use strict';\n    class GUIColorBox extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-color-box' }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            const target = el.querySelector('div');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value) {\n            if (param === 'value') {\n                this.$element.firstChild.style.backgroundColor = value;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const inner = document.createElement('div');\n            this.$element.appendChild(inner);\n            return this;\n        }\n    }\n    class GUIColorSwatch extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-color-swatch' }, this);\n        }\n        on(evName, callback, params) {\n            const el = this.$element;\n            const target = el.querySelector('canvas');\n            if (evName === 'select' || evName === 'change') {\n                evName = '_change';\n            }\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const cv = document.createElement('canvas');\n            cv.width = 100;\n            cv.height = 100;\n            const ctx = cv.getContext('2d');\n            let gradient = ctx.createLinearGradient(0, 0, ctx.canvas.width, 0);\n            function getColor(ev) {\n                const pos = DOM.$position(cv);\n                const cx = typeof ev.offsetX === 'undefined' ? ev.clientX - pos.left : ev.offsetX;\n                const cy = typeof ev.offsetY === 'undefined' ? ev.clientY - pos.top : ev.offsetY;\n                if (isNaN(cx) || isNaN(cy)) {\n                    return null;\n                }\n                const data = ctx.getImageData(cx, cy, 1, 1).data;\n                return {\n                    r: data[0],\n                    g: data[1],\n                    b: data[2],\n                    hex: Colors.convertToHEX(data[0], data[1], data[2])\n                };\n            }\n            gradient.addColorStop(0, 'rgb(255,   0,   0)');\n            gradient.addColorStop(0.15, 'rgb(255,   0, 255)');\n            gradient.addColorStop(0.33, 'rgb(0,     0, 255)');\n            gradient.addColorStop(0.49, 'rgb(0,   255, 255)');\n            gradient.addColorStop(0.67, 'rgb(0,   255,   0)');\n            gradient.addColorStop(0.84, 'rgb(255, 255,   0)');\n            gradient.addColorStop(1, 'rgb(255,   0,   0)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            gradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n            gradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n            gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0)');\n            gradient.addColorStop(0.5, 'rgba(0,     0,   0, 0)');\n            gradient.addColorStop(1, 'rgba(0,     0,   0, 1)');\n            ctx.fillStyle = gradient;\n            ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n            Events.$bind(cv, 'pointerdown', ev => {\n                const c = getColor(ev);\n                if (c) {\n                    cv.dispatchEvent(new CustomEvent('_change', { detail: c }));\n                }\n            }, false);\n            el.appendChild(cv);\n            return this;\n        }\n    }\n    class GUIIframe extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-iframe' }, this);\n        }\n        static get _tagName() {\n            let isStandalone = false;\n            try {\n                isStandalone = window.navigator.standalone || window.matchMedia('(display-mode: standalone)').matches;\n            } catch (e) {\n            }\n            return isStandalone ? 'webview' : 'iframe';\n        }\n        set(key, val) {\n            if (key === 'src') {\n                this.$element.querySelector(GUIIframe._tagName).src = val;\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            const src = el.getAttribute('data-src') || 'about:blank';\n            const iframe = document.createElement(GUIIframe._tagName);\n            iframe.src = src;\n            iframe.setAttribute('border', 0);\n            el.appendChild(iframe);\n            return this;\n        }\n    }\n    class GUIProgressBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-progress-bar' }, this);\n        }\n        set(param, value) {\n            const el = this.$element;\n            el.setAttribute('data-' + param, value);\n            if (param === 'progress' || param === 'value') {\n                value = parseInt(value, 10);\n                value = Math.max(0, Math.min(100, value));\n                el.setAttribute('aria-label', String(value));\n                el.setAttribute('aria-valuenow', String(value));\n                el.querySelector('div').style.width = value.toString() + '%';\n                el.querySelector('span').innerHTML = value + '%';\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build() {\n            const el = this.$element;\n            let p = el.getAttribute('data-progress') || 0;\n            p = Math.max(0, Math.min(100, p));\n            const percentage = p.toString() + '%';\n            const progress = document.createElement('div');\n            progress.style.width = percentage;\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(percentage));\n            el.setAttribute('role', 'progressbar');\n            el.setAttribute('aria-valuemin', 0);\n            el.setAttribute('aria-valuemax', 100);\n            el.setAttribute('aria-label', 0);\n            el.setAttribute('aria-valuenow', 0);\n            el.appendChild(progress);\n            el.appendChild(span);\n            return this;\n        }\n    }\n    class GUIStatusBar extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-statusbar' }, this);\n        }\n        set(param, value) {\n            if (param === 'label' || param === 'value') {\n                const span = this.$element.getElementsByTagName('gui-statusbar-label')[0];\n                if (span) {\n                    DOM.$empty(span);\n                    span.innerHTML = value;\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        build(args, win) {\n            const el = this.$element;\n            const span = document.createElement('gui-statusbar-label');\n            let lbl = el.getAttribute('data-label') || el.getAttribute('data-value');\n            if (!lbl) {\n                lbl = (() => {\n                    let textNodes = [];\n                    let node, value;\n                    for (let i = 0; i < el.childNodes.length; i++) {\n                        node = el.childNodes[i];\n                        if (node.nodeType === Node.TEXT_NODE) {\n                            value = node.nodeValue.replace(/\\s+/g, '').replace(/^\\s+/g, '');\n                            if (value.length > 0) {\n                                textNodes.push(value);\n                            }\n                            el.removeChild(node);\n                            i++;\n                        }\n                    }\n                    return textNodes.join(' ');\n                })();\n            }\n            span.innerHTML = lbl;\n            el.setAttribute('role', 'log');\n            el.appendChild(span);\n            return this;\n        }\n    }\n    return {\n        GUIColorBox: GUIColorBox,\n        GUIColorSwatch: GUIColorSwatch,\n        GUIIframe: GUIIframe,\n        GUIProgressBar: GUIProgressBar,\n        GUIStatusBar: GUIStatusBar\n    };\n});\ndefine('skylark-osjsv2-client/gui/elements/richtext',[\n    '../../utils/dom',\n    '../../utils/events',\n    '../../core/theme',\n    '../element'\n], function (DOM, Events, Theme, GUIElement) {\n    'use strict';\n    function getDocument(el, iframe) {\n        iframe = iframe || el.querySelector('iframe');\n        return iframe.contentDocument || iframe.contentWindow.document;\n    }\n    function getDocumentData(el) {\n        try {\n            const doc = getDocument(el);\n            return doc.body.innerHTML;\n        } catch (error) {\n            console.error('gui-richtext', 'getDocumentData()', error.stack, error);\n        }\n        return '';\n    }\n    function destroyFixInterval(el) {\n        el._fixTry = 0;\n        el._fixInterval = clearInterval(el._fixInterval);\n    }\n    function createFixInterval(el, doc, text) {\n        if (el._fixTry > 10) {\n            el._fixTry = 0;\n            return;\n        }\n        el._fixInterval = setInterval(() => {\n            try {\n                if (text) {\n                    doc.body.innerHTML = text;\n                }\n                destroyFixInterval(el);\n            } catch (error) {\n                console.warn('gui-richtext', 'setDocumentData()', error.stack, error, '... trying again');\n            }\n            el._fixTry++;\n        }, 100);\n    }\n    function setDocumentData(el, text) {\n        destroyFixInterval(el);\n        text = text || '';\n        const themeName = Theme.getStyleTheme();\n        const themeSrc = '/themes.css';\n        let editable = el.getAttribute('data-editable');\n        editable = editable === null || editable === 'true';\n        function onMouseDown(ev) {\n            function insertTextAtCursor(text) {\n                let sel, range;\n                if (window.getSelection) {\n                    sel = window.getSelection();\n                    if (sel.getRangeAt && sel.rangeCount) {\n                        range = sel.getRangeAt(0);\n                        range.deleteContents();\n                        range.insertNode(document.createTextNode(text));\n                    }\n                } else if (document.selection && document.selection.createRange) {\n                    document.selection.createRange().text = text;\n                }\n            }\n            if (ev.keyCode === 9) {\n                insertTextAtCursor('\\xA0');\n                ev.preventDefault();\n            }\n        }\n        const script = onMouseDown.toString() + ';window.addEventListener(\"keydown\", onMouseDown)';\n        let template = '<!DOCTYPE html><html><head><link rel=\"stylesheet\" type=\"text/css\" href=\"' + themeSrc + '\" /><script>' + script + '</script></head><body contentEditable=\"true\" data-style-theme=\"' + themeName + '\"></body></html>';\n        if (!editable) {\n            template = template.replace(' contentEditable=\"true\"', '');\n        }\n        const doc = getDocument(el);\n        doc.open();\n        doc.write(template);\n        doc.close();\n        createFixInterval(el, doc, text);\n    }\n    class GUIRichText extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-richtext' }, this);\n        }\n        on(evName, callback, params) {\n            if (['selection'].indexOf(evName) !== -1) {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const text = el.childNodes.length ? el.childNodes[0].nodeValue : '';\n            DOM.$empty(el);\n            const iframe = document.createElement('iframe');\n            iframe.setAttribute('border', 0);\n            iframe.onload = () => {\n                iframe.contentWindow.addEventListener('selectstart', () => {\n                    el.dispatchEvent(new CustomEvent('_selection', { detail: {} }));\n                });\n                iframe.contentWindow.addEventListener('pointerup', () => {\n                    el.dispatchEvent(new CustomEvent('_selection', { detail: {} }));\n                });\n            };\n            el.appendChild(iframe);\n            setTimeout(() => {\n                try {\n                    setDocumentData(el, text);\n                } catch (e) {\n                    console.warn('gui-richtext', 'build()', e);\n                }\n            }, 1);\n            return this;\n        }\n        command() {\n            try {\n                const doc = getDocument(this.$element);\n                if (doc && doc.execCommand) {\n                    return doc.execCommand.apply(doc, arguments);\n                }\n            } catch (e) {\n                console.warn('gui-richtext call() warning', e.stack, e);\n            }\n            return this;\n        }\n        query() {\n            try {\n                const doc = getDocument(this.$element);\n                if (doc && doc.queryCommandValue) {\n                    return doc.queryCommandValue.apply(doc, arguments);\n                }\n            } catch (e) {\n                console.warn('gui-richtext call() warning', e.stack, e);\n            }\n            return null;\n        }\n        get(param, value) {\n            if (param === 'value') {\n                return getDocumentData(this.$element);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value) {\n            if (param === 'value') {\n                setDocumentData(this.$element, value);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n    }\n    return { GUIRichText: GUIRichText };\n});\ndefine('skylark-osjsv2-client/gui/elements/tabs',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../../utils/events',\n    '../element'\n], function (DOM, GUI, Events, GUIElement) {\n    'use strict';\n    function toggleActive(el, eidx, idx) {\n        DOM.$removeClass(el, 'gui-active');\n        if (eidx === idx) {\n            DOM.$addClass(el, 'gui-active');\n        }\n    }\n    function selectTab(el, tabs, ev, idx, tab) {\n        tabs.querySelectorAll('li').forEach((tel, eidx) => {\n            toggleActive(tel, eidx, idx);\n        });\n        el.querySelectorAll('gui-tab-container').forEach((tel, eidx) => {\n            toggleActive(tel, eidx, idx);\n        });\n        DOM.$addClass(tab, 'gui-active');\n        el.dispatchEvent(new CustomEvent('_change', { detail: { index: idx } }));\n    }\n    function findTab(el, tabs, idx) {\n        let found = null;\n        if (typeof idx === 'number') {\n            found = idx;\n        } else {\n            tabs.querySelectorAll('li').forEach((iter, i) => {\n                if (found === null && iter.firstChild.textContent === idx) {\n                    found = i;\n                }\n            });\n        }\n        return found;\n    }\n    function removeTab(el, tabs, idx) {\n        const found = findTab(el, tabs, idx);\n        if (found !== null) {\n            tabs.children[found].remove();\n            el.querySelectorAll('gui-tab-container')[found].remove();\n        }\n    }\n    function createTab(el, tabs, label, prog) {\n        const tab = document.createElement('li');\n        const idx = tabs.children.length;\n        Events.$bind(tab, 'pointerdown', ev => {\n            selectTab(el, tabs, ev, idx, tab);\n        }, false);\n        tab.setAttribute('role', 'tab');\n        tab.setAttribute('aria-label', label);\n        tab.appendChild(document.createTextNode(label));\n        tabs.appendChild(tab);\n        if (prog) {\n            const tel = document.createElement('gui-tab-container');\n            tel.setAttribute('data-label', label);\n            tel.setAttribute('role', 'tabpanel');\n            el.appendChild(tel);\n        }\n    }\n    class GUITabs extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-tabs' }, this);\n        }\n        on(evName, callback, params) {\n            if ([\n                    'select',\n                    'activate'\n                ].indexOf(evName) !== -1) {\n                evName = 'change';\n            }\n            if (evName === 'change') {\n                evName = '_' + evName;\n            }\n            Events.$bind(this.$element, evName, callback.bind(this), params);\n            return this;\n        }\n        set(param, value) {\n            if ([\n                    'current',\n                    'selected',\n                    'active'\n                ].indexOf(param) !== -1) {\n                const el = this.$element;\n                const tabs = el.querySelector('ul');\n                const found = findTab(el, tabs, value);\n                if (found !== null) {\n                    selectTab(el, tabs, null, found, tabs[found]);\n                }\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        get(param, value) {\n            if ([\n                    'current',\n                    'selected',\n                    'active'\n                ].indexOf(param) !== -1) {\n                const cur = this.$element.querySelector('ul > li[class=\"gui-active\"]');\n                return DOM.$index(cur);\n            }\n            return super.get(...arguments);\n        }\n        add(newtabs) {\n            const el = this.$element;\n            const tabs = el.querySelector('ul');\n            if (!(newtabs instanceof Array)) {\n                newtabs = [newtabs];\n            }\n            newtabs.forEach(label => {\n                createTab(el, tabs, label, true);\n            });\n            return this;\n        }\n        remove(removetabs) {\n            const el = this.$element;\n            const tabs = el.querySelector('ul');\n            if (!(removetabs instanceof Array)) {\n                removetabs = [removetabs];\n            }\n            removetabs.forEach(id => {\n                removeTab(el, tabs, id);\n            });\n            return this;\n        }\n        build() {\n            const el = this.$element;\n            const tabs = document.createElement('ul');\n            el.querySelectorAll('gui-tab-container').forEach((tel, idx) => {\n                createTab(el, tabs, GUI.getLabel(tel));\n                tel.setAttribute('role', 'tabpanel');\n            });\n            tabs.setAttribute('role', 'tablist');\n            el.setAttribute('role', 'navigation');\n            if (el.children.length) {\n                el.insertBefore(tabs, el.children[0]);\n            } else {\n                el.appendChild(tabs);\n            }\n            const currentTab = parseInt(el.getAttribute('data-selected-index'), 10) || 0;\n            selectTab(el, tabs, null, currentTab);\n            return this;\n        }\n    }\n    return { GUITabs: GUITabs };\n});\ndefine('skylark-osjsv2-client/gui/elements/treeview',[\n    '../../utils/dom',\n    '../../utils/gui',\n    '../dataview'\n], function (DOM, GUI, GUIDataView) {\n    'use strict';\n    function createEntry(cls, e) {\n        const entry = GUI.createElement('gui-tree-view-entry', e, ['entries']);\n        return entry;\n    }\n    function handleItemExpand(ev, el, root, expanded) {\n        if (typeof expanded === 'undefined') {\n            expanded = !DOM.$hasClass(root, 'gui-expanded');\n        }\n        DOM.$removeClass(root, 'gui-expanded');\n        if (expanded) {\n            DOM.$addClass(root, 'gui-expanded');\n        }\n        const children = root.children;\n        for (let i = 0; i < children.length; i++) {\n            if (children[i].tagName.toLowerCase() === 'gui-tree-view-entry') {\n                children[i].style.display = expanded ? 'block' : 'none';\n            }\n        }\n        const selected = {\n            index: DOM.$index(root),\n            data: GUI.getViewNodeValue(root)\n        };\n        root.setAttribute('data-expanded', String(expanded));\n        root.setAttribute('aria-expanded', String(expanded));\n        el.dispatchEvent(new CustomEvent('_expand', {\n            detail: {\n                entries: [selected],\n                expanded: expanded,\n                element: root\n            }\n        }));\n    }\n    function initEntry(cls, sel) {\n        const el = cls.$element;\n        if (sel._rendered) {\n            return;\n        }\n        sel._rendered = true;\n        const icon = sel.getAttribute('data-icon');\n        const label = GUI.getLabel(sel);\n        const expanded = el.getAttribute('data-expanded') === 'true';\n        const next = sel.querySelector('gui-tree-view-entry');\n        const container = document.createElement('div');\n        const dspan = document.createElement('span');\n        function onDndEnter(ev) {\n            ev.stopPropagation();\n            DOM.$addClass(sel, 'dnd-over');\n        }\n        function onDndLeave(ev) {\n            DOM.$removeClass(sel, 'dnd-over');\n        }\n        if (icon) {\n            dspan.style.backgroundImage = 'url(' + icon + ')';\n            DOM.$addClass(dspan, 'gui-has-image');\n        }\n        dspan.appendChild(document.createTextNode(label));\n        container.appendChild(dspan);\n        if (next) {\n            DOM.$addClass(sel, 'gui-expandable');\n            const expander = document.createElement('gui-tree-view-expander');\n            sel.insertBefore(container, next);\n            sel.insertBefore(expander, container);\n        } else {\n            sel.appendChild(container);\n        }\n        if (String(sel.getAttribute('data-draggable')) === 'true') {\n            GUI.createDraggable(container, (() => {\n                let data = {};\n                try {\n                    data = JSON.parse(sel.getAttribute('data-value'));\n                } catch (e) {\n                }\n                return { data: data };\n            })());\n        }\n        if (String(sel.getAttribute('data-droppable')) === 'true') {\n            let timeout;\n            GUI.createDroppable(container, {\n                onEnter: onDndEnter,\n                onOver: onDndEnter,\n                onLeave: onDndLeave,\n                onDrop: onDndLeave,\n                onItemDropped: (ev, eel, item) => {\n                    ev.stopPropagation();\n                    ev.preventDefault();\n                    timeout = clearTimeout(timeout);\n                    timeout = setTimeout(() => {\n                        DOM.$removeClass(sel, 'dnd-over');\n                    }, 10);\n                    let dval = {};\n                    try {\n                        dval = JSON.parse(eel.parentNode.getAttribute('data-value'));\n                    } catch (e) {\n                    }\n                    el.dispatchEvent(new CustomEvent('_drop', {\n                        detail: {\n                            src: item.data,\n                            dest: dval\n                        }\n                    }));\n                }\n            });\n        }\n        handleItemExpand(null, el, sel, expanded);\n        cls.bindEntryEvents(sel, 'gui-tree-view-entry');\n    }\n    class GUITreeView extends GUIDataView {\n        static register() {\n            return super.register({\n                parent: GUIDataView,\n                tagName: 'gui-tree-view'\n            }, this);\n        }\n        values() {\n            const el = this.$element;\n            return this.getSelected(el.querySelectorAll('gui-tree-view-entry'));\n        }\n        build(applyArgs) {\n            const el = this.$element;\n            let body = el.querySelector('gui-tree-view-body');\n            let found = !!body;\n            if (!body) {\n                body = document.createElement('gui-tree-view-body');\n                el.appendChild(body);\n            }\n            body.setAttribute('role', 'group');\n            el.setAttribute('role', 'tree');\n            el.setAttribute('aria-multiselectable', body.getAttribute('data-multiselect') || 'false');\n            el.querySelectorAll('gui-tree-view-entry').forEach((sel, idx) => {\n                sel.setAttribute('aria-expanded', 'false');\n                if (!found) {\n                    body.appendChild(sel);\n                }\n                sel.setAttribute('role', 'treeitem');\n                initEntry(this, sel);\n            });\n            return super.build(...arguments);\n        }\n        get(param, value, arg) {\n            if (param === 'entry') {\n                const body = this.$element.querySelector('gui-tree-view-body');\n                return this.getEntry(body.querySelectorAll('gui-tree-view-entry'), value, arg);\n            }\n            return super.get(...arguments);\n        }\n        set(param, value, arg, arg2) {\n            const el = this.$element;\n            const body = el.querySelector('gui-tree-view-body');\n            if (param === 'selected' || param === 'value') {\n                this.setSelected(body, body.querySelectorAll('gui-tree-view-entry'), value, arg, arg2);\n                return this;\n            }\n            return super.set(...arguments);\n        }\n        clear() {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            return super.clear(body);\n        }\n        add(entries) {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            let parentNode = body;\n            const recurse = (a, root, level) => {\n                super.add(a, (cls, e) => {\n                    if (e) {\n                        if (e.parentNode) {\n                            delete e.parentNode;\n                        }\n                        const entry = createEntry(this, e);\n                        root.appendChild(entry);\n                        if (e.entries) {\n                            recurse(e.entries, entry, level + 1);\n                        }\n                        initEntry(this, entry);\n                    }\n                });\n            };\n            if (typeof entries === 'object' && !(entries instanceof Array) && Object.keys(entries).length) {\n                parentNode = entries.parentNode || body;\n                entries = entries.entries || [];\n            }\n            recurse(entries, parentNode, 0);\n            return this;\n        }\n        remove(entries) {\n            return super.remove(entries, 'gui-tree-view-entry');\n        }\n        patch(entries) {\n            const body = this.$element.querySelector('gui-tree-view-body');\n            return super.patch(entries, 'gui-list-view-entry', body, createEntry, initEntry);\n        }\n        expand(entry) {\n            handleItemExpand(entry.ev, this.$element, entry.entry);\n            return this;\n        }\n    }\n    return { GUITreeView: GUITreeView };\n});\ndefine('skylark-osjsv2-client/gui/elements/visual',[\n    '../../utils/events',\n    '../element'\n], function (Events, GUIElement) {\n    'use strict';\n    function createVisualElement(el, nodeType, applyArgs) {\n        applyArgs = applyArgs || {};\n        if (typeof applyArgs !== 'object') {\n            console.error('Derp', 'applyArgs was not an object ?!');\n            applyArgs = {};\n        }\n        const img = document.createElement(nodeType);\n        const src = el.getAttribute('data-src');\n        const controls = el.getAttribute('data-controls');\n        if (controls) {\n            img.setAttribute('controls', 'controls');\n        }\n        const autoplay = el.getAttribute('data-autoplay');\n        if (autoplay) {\n            img.setAttribute('autoplay', 'autoplay');\n        }\n        Object.keys(applyArgs).forEach(function (k) {\n            let val = applyArgs[k];\n            if (typeof val === 'function') {\n                k = k.replace(/^on/, '');\n                if ((nodeType === 'video' || nodeType === 'audio') && k === 'load') {\n                    k = 'loadedmetadata';\n                }\n                Events.$bind(img, k, val.bind(img), false);\n            } else {\n                if (typeof applyArgs[k] === 'boolean') {\n                    val = val ? 'true' : 'false';\n                }\n                img.setAttribute(k, val);\n            }\n        });\n        img.src = src || 'about:blank';\n        el.appendChild(img);\n    }\n    class GUIAudio extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-audio' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('audio');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'audio', applyArgs);\n            return this;\n        }\n    }\n    class GUIVideo extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-video' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('video');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'video', applyArgs);\n            return this;\n        }\n    }\n    class GUIImage extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-image' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('img');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build(applyArgs) {\n            createVisualElement(this.$element, 'img', applyArgs);\n            return this;\n        }\n    }\n    class GUICanvas extends GUIElement {\n        static register() {\n            return super.register({ tagName: 'gui-canvas' }, this);\n        }\n        on(evName, callback, params) {\n            const target = this.$element.querySelector('canvas');\n            Events.$bind(target, evName, callback.bind(this), params);\n            return this;\n        }\n        build() {\n            const canvas = document.createElement('canvas');\n            this.$element.appendChild(canvas);\n            return this;\n        }\n    }\n    return {\n        GUIAudio: GUIAudio,\n        GUIVideo: GUIVideo,\n        GUIImage: GUIImage,\n        GUICanvas: GUICanvas\n    };\n});\ndefine('skylark-osjsv2-client/helpers/default-application-window',[\n    '../vfs/file',\n    '../core/window',\n    '../core/dialog',\n    '../core/locales'\n], function (FileMetadata, Window, DialogWindow, a) {\n    'use strict';\n    return class DefaultApplicationWindow extends Window {\n        constructor(name, args, app, file) {\n            super(...arguments);\n            this.hasClosingDialog = false;\n            this.currentFile = file ? new FileMetadata(file) : null;\n            this.hasChanged = false;\n        }\n        destroy() {\n            super.destroy(...arguments);\n            this.currentFile = null;\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            return root;\n        }\n        _inited() {\n            const result = Window.prototype._inited.apply(this, arguments);\n            const app = this._app;\n            const menuMap = {\n                MenuNew: () => {\n                    app.newDialog(this.currentFile, this);\n                },\n                MenuSave: () => {\n                    app.saveDialog(this.currentFile, this);\n                },\n                MenuSaveAs: () => {\n                    app.saveDialog(this.currentFile, this, true);\n                },\n                MenuOpen: () => {\n                    app.openDialog(this.currentFile, this);\n                },\n                MenuClose: () => {\n                    this._close();\n                }\n            };\n            this._find('SubmenuFile').on('select', ev => {\n                if (menuMap[ev.detail.id]) {\n                    menuMap[ev.detail.id]();\n                }\n            });\n            this._find('MenuSave').set('disabled', true);\n            if (this.currentFile) {\n                if (!this._app.openFile(this.currentFile, this)) {\n                    this.currentFile = null;\n                }\n            }\n            return result;\n        }\n        _onDndEvent(ev, type, item, args) {\n            if (!Window.prototype._onDndEvent.apply(this, arguments)) {\n                return;\n            }\n            if (type === 'itemDrop' && item) {\n                const data = item.data;\n                if (data && data.type === 'file' && data.mime) {\n                    this._app.openFile(new FileMetadata(data), this);\n                }\n            }\n        }\n        _close() {\n            if (this.hasClosingDialog) {\n                return;\n            }\n            if (this.hasChanged) {\n                this.hasClosingDialog = true;\n                this.checkHasChanged(discard => {\n                    this.hasClosingDialog = false;\n                    if (discard) {\n                        this.hasChanged = false;\n                        this._close();\n                    }\n                });\n                return;\n            }\n            Window.prototype._close.apply(this, arguments);\n        }\n        checkHasChanged(cb) {\n            if (this.hasChanged) {\n                DialogWindow.create('Confirm', {\n                    buttons: [\n                        'yes',\n                        'no'\n                    ],\n                    message: a._('MSG_GENERIC_APP_DISCARD')\n                }, function (ev, button) {\n                    cb(button === 'ok' || button === 'yes');\n                }, {\n                    parent: this,\n                    modal: true\n                });\n                return;\n            }\n            cb(true);\n        }\n        showFile(file, content) {\n            this.updateFile(file);\n        }\n        updateFile(file) {\n            this.currentFile = file || null;\n            this.hasChanged = false;\n            if (this._scheme) {\n                this._find('MenuSave').set('disabled', !file);\n            }\n            if (file) {\n                this._setTitle(file.filename, true);\n            } else {\n                this._setTitle();\n            }\n        }\n        getFileData() {\n            return null;\n        }\n        _onKeyEvent(ev, type, shortcut) {\n            if (shortcut === 'SAVE') {\n                this._app.saveDialog(this.currentFile, this, !this.currentFile);\n                return false;\n            } else if (shortcut === 'SAVEAS') {\n                this._app.saveDialog(this.currentFile, this, true);\n                return false;\n            } else if (shortcut === 'OPEN') {\n                this._app.openDialog(this.currentFile, this);\n                return false;\n            }\n            return Window.prototype._onKeyEvent.apply(this, arguments);\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/default-application',[\n    '../core/application',\n    '../core/dialog',\n    '../vfs/file',\n    '../vfs/fs',\n    '../utils/fs',\n    '../core/locales'\n], function (Application, DialogWindow, FileMetadata, VFS, FS, a) {\n    'use strict';\n    return class DefaultApplication extends Application {\n        constructor(name, args, metadata, opts) {\n            super(...arguments);\n            this.defaultOptions = Object.assign({}, {\n                readData: true,\n                rawData: false,\n                extension: '',\n                mime: 'application/octet-stream',\n                filetypes: [],\n                filename: 'New file'\n            }, opts);\n        }\n        destroy() {\n            super.destroy(...arguments);\n        }\n        _onMessage(msg, obj, args) {\n            super._onMessage(...arguments);\n            const current = this._getArgument('file');\n            const win = this._getWindow(this.__mainwindow);\n            if (msg === 'vfs' && args.source !== null && args.source !== this.__pid && args.file) {\n                if (win && current && current.path === args.file.path) {\n                    DialogWindow.create('Confirm', {\n                        buttons: [\n                            'yes',\n                            'no'\n                        ],\n                        message: a._('MSG_FILE_CHANGED')\n                    }, (ev, button) => {\n                        if (button === 'ok' || button === 'yes') {\n                            this.openFile(new FileMetadata(args.file), win);\n                        }\n                    }, {\n                        parent: win,\n                        modal: true\n                    });\n                }\n            }\n        }\n        openFile(file, win) {\n            if (!file) {\n                return false;\n            }\n            const onError = error => {\n                if (error) {\n                    OSjs.error(this.__label, a._('ERR_FILE_APP_OPEN'), a._('ERR_FILE_APP_OPEN_ALT_FMT', file.path, error));\n                    return true;\n                }\n                return false;\n            };\n            const onDone = result => {\n                this._setArgument('file', file);\n                win.showFile(file, result);\n            };\n            const check = this.__metadata.mime || [];\n            if (!FS.checkAcceptMime(file.mime, check)) {\n                OSjs.error(this.__label, a._('ERR_FILE_APP_OPEN'), a._('ERR_FILE_APP_OPEN_FMT', file.path, file.mime));\n                return false;\n            }\n            win._toggleLoading(true);\n            function callbackVFS(error, result) {\n                win._toggleLoading(false);\n                if (onError(error)) {\n                    return;\n                }\n                onDone(result);\n            }\n            if (this.defaultOptions.readData) {\n                VFS.read(file, { type: this.defaultOptions.rawData ? 'binary' : 'text' }, this).then(res => callbackVFS(false, res)).catch(err => callbackVFS(err));\n            } else {\n                VFS.url(file).then(res => callbackVFS(false, res)).catch(err => callbackVFS(err));\n            }\n            return true;\n        }\n        saveFile(file, value, win) {\n            if (!file) {\n                return;\n            }\n            win._toggleLoading(true);\n            VFS.write(file, value || '', null, this).then(() => {\n                this._setArgument('file', file);\n                win.updateFile(file);\n                return true;\n            }).catch(error => {\n                OSjs.error(this.__label, a._('ERR_FILE_APP_SAVE'), a._('ERR_FILE_APP_SAVE_ALT_FMT', file.path, error));\n            }).finally(() => {\n                win._toggleLoading(false);\n            });\n        }\n        saveDialog(file, win, saveAs, cb) {\n            const value = win.getFileData();\n            if (!saveAs) {\n                this.saveFile(file, value, win);\n                return;\n            }\n            DialogWindow.create('File', {\n                file: file,\n                filename: file ? file.filename : this.defaultOptions.filename,\n                filetypes: this.defaultOptions.filetypes,\n                filter: this.__metadata.mime,\n                extension: this.defaultOptions.extension,\n                mime: this.defaultOptions.mime,\n                type: 'save'\n            }, (ev, button, result) => {\n                if (button === 'ok') {\n                    this.saveFile(result, value, win);\n                }\n                if (typeof cb === 'function') {\n                    cb(ev, button, result);\n                }\n            }, {\n                parent: win,\n                modal: true\n            });\n        }\n        openDialog(file, win) {\n            const openDialog = () => {\n                DialogWindow.create('File', {\n                    file: file,\n                    filter: this.__metadata.mime\n                }, (ev, button, result) => {\n                    if (button === 'ok' && result) {\n                        this.openFile(new FileMetadata(result), win);\n                    }\n                }, {\n                    parent: win,\n                    modal: true\n                });\n            };\n            win.checkHasChanged(discard => {\n                if (discard) {\n                    openDialog();\n                }\n            });\n        }\n        newDialog(path, win) {\n            win.checkHasChanged(discard => {\n                if (discard) {\n                    this._setArgument('file', null);\n                    win.showFile(null, null);\n                }\n            });\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/iframe-application-window',['../core/window'], function (Window) {\n    'use strict';\n    let IFRAME_COUNT = 0;\n    return class IFrameApplicationWindow extends Window {\n        constructor(name, opts, app) {\n            opts = Object.assign({}, {\n                src: 'about:blank',\n                focus: function () {\n                },\n                blur: function () {\n                },\n                icon: null,\n                title: 'IframeApplicationWindow',\n                width: 320,\n                height: 240,\n                allow_resize: false,\n                allow_restore: false,\n                allow_maximize: false\n            }, opts);\n            super('IFrameApplicationWindow', opts, app);\n            this._iwin = null;\n            this._frame = null;\n        }\n        destroy() {\n            this.postMessage('Window::destroy');\n            return super.destroy(...arguments);\n        }\n        init(wmRef, app) {\n            const root = super.init(...arguments);\n            root.style.overflow = 'visible';\n            const id = 'IframeApplicationWindow' + IFRAME_COUNT.toString();\n            const iframe = document.createElement('iframe');\n            iframe.setAttribute('border', 0);\n            iframe.id = id;\n            iframe.className = 'IframeApplicationFrame';\n            iframe.addEventListener('load', () => {\n                this._iwin = iframe.contentWindow;\n                this.postMessage('Window::init');\n            });\n            this.setLocation(this._opts.src, iframe);\n            root.appendChild(iframe);\n            this._frame = iframe;\n            try {\n                this._iwin = iframe.contentWindow;\n            } catch (e) {\n            }\n            if (this._iwin) {\n                this._iwin.focus();\n            }\n            this._frame.focus();\n            this._opts.focus(this._frame, this._iwin);\n            IFRAME_COUNT++;\n            return root;\n        }\n        _blur() {\n            if (super._blur(...arguments)) {\n                if (this._iwin) {\n                    this._iwin.blur();\n                }\n                if (this._frame) {\n                    this._frame.blur();\n                }\n                this._opts.blur(this._frame, this._iwin);\n                return true;\n            }\n            return false;\n        }\n        _focus() {\n            if (super._focus(...arguments)) {\n                if (this._iwin) {\n                    this._iwin.focus();\n                }\n                if (this._frame) {\n                    this._frame.focus();\n                }\n                this._opts.focus(this._frame, this._iwin);\n                return true;\n            }\n            return false;\n        }\n        postMessage(message) {\n            if (this._iwin && this._app) {\n                console.debug('IFrameApplicationWindow::postMessage()', message);\n                this._iwin.postMessage({\n                    message: message,\n                    pid: this._app.__pid,\n                    wid: this._wid\n                }, window.location.href);\n            }\n        }\n        onPostMessage(message, ev) {\n            console.debug('IFrameApplicationWindow::onPostMessage()', message);\n        }\n        setLocation(src, iframe) {\n            iframe = iframe || this._frame;\n            const oldbefore = window.onbeforeunload;\n            window.onbeforeunload = null;\n            iframe.src = src;\n            window.onbeforeunload = oldbefore;\n        }\n    };\n});\ndefine('skylark-osjsv2-client/helpers/iframe-application',[\n    './iframe-application-window',\n    '../core/application'\n], function (IFrameApplicationWindow, Application) {\n    'use strict';\n    return class IFrameApplication extends Application {\n        constructor(name, args, metadata, opts) {\n            super(...arguments);\n            this.options = Object.assign({}, {\n                icon: '',\n                title: 'IframeApplicationWindow'\n            }, opts);\n            this.options.src = this._getResource(this.options.src);\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            const name = this.__pname + 'Window';\n            this._addWindow(new IFrameApplicationWindow(name, this.options, this));\n        }\n        onPostMessage(message, ev) {\n            console.debug('IFrameApplication::onPostMessage()', message);\n            const _response = (err, res) => {\n                this.postMessage({\n                    id: message.id,\n                    method: message.method,\n                    error: err,\n                    result: Object.assign({}, res)\n                });\n            };\n            if (typeof message.id === 'number' && message.method) {\n                if (this[message.method]) {\n                    this[message.method](message.args || {}, _response);\n                } else {\n                    _response('No such method');\n                }\n            }\n        }\n        postMessage(message) {\n            const win = this._getMainWindow();\n            if (win) {\n                win.postMessage(message);\n            }\n        }\n    };\n});\ndefine('skylark-osjsv2-client/main',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"./boot\",\r\n\t\"./locales/en_EN\",\r\n\t\"./core/auth/database\",\r\n\t\"./core/auth/demo\",\r\n\t\"./core/auth/pam\",\r\n\t\"./core/auth/standalone\",\r\n\t\"./core/connections/http\",\r\n\t\"./core/connections/standalone\",\r\n\t\"./core/connections/ws\",\r\n\t\"./core/storage/database\",\r\n\t\"./core/storage/demo\",\r\n\t\"./core/storage/standalone\",\r\n\t\"./core/storage/system\",\r\n\t\"./gui/elements/containers\",\r\n\t\"./gui/elements/fileview\",\r\n\t\"./gui/elements/iconview\",\r\n\t\"./gui/elements/inputs\",\r\n\t\"./gui/elements/listview\",\r\n\t\"./gui/elements/menus\",\r\n\t\"./gui/elements/misc\",\r\n\t\"./gui/elements/richtext\",\r\n\t\"./gui/elements/tabs\",\r\n\t\"./gui/elements/treeview\",\r\n\t\"./gui/elements/visual\",\r\n\t\"./helpers/default-application-window\",\r\n\t\"./helpers/default-application\",\r\n\t\"./helpers/event-handler\",\r\n\t\"./helpers/handle-qs\",\r\n\t\"./helpers/hooks\",\r\n\t\"./helpers/iframe-application-window\",\r\n\t\"./helpers/iframe-application\",\r\n\t\"./helpers/settings-fragment\",\r\n\t\"./helpers/window-behaviour\",\r\n\r\n],function(){\r\n\treturn {};\r\n});\ndefine('skylark-osjsv2-client', ['skylark-osjsv2-client/main'], function (main) { return main; });\n\n"]}