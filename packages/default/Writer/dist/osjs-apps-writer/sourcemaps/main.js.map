{"version":3,"sources":["main.js"],"names":["define","Translations","schemeHtml","VFS","OSjs","require","Config","Dialog","GUIElement","Utils","Locales","DefaultApplication","DefaultApplicationWindow","_","createLocalizer","ApplicationWriterWindow","[object Object]","app","metadata","file","config","getConfig","super","allow_drop","icon","title","name","width","height","translator","this","checkChangeLength","checkChangeInterval","color","background","foreground","font","Fonts","size","clearInterval","destroy","arguments","wmRef","root","init","self","_render","text","_find","buttons","text-bold","command","text-italic","text-underline","text-strikethrough","justify-left","justify-center","justify-right","indent","unindent","menuEntries","MenuUndo","MenuRedo","MenuCopy","MenuCut","MenuDelete","MenuPaste","MenuUnlink","MenuInsertOL","MenuInsertUL","MenuInsertImage","create","filter","ev","button","result","url","then","MenuInsertLink","message","placeholder","menuEvent","detail","id","createColorDialog","current","cb","_toggleDisabled","hex","on","back","set","front","fontName","fontSize","minSize","maxSize","unit","updateSelection","style","hiliteColor","foreColor","format","toString","updateToolbar","_call","cmd","query","split","replace","parseInt","Object","keys","forEach","b","value","getSelectionStyle","querySelectorAll","getAttribute","createFromNode","preventDefault","setInterval","hasChanged","get","length","len","prototype","updateFile","apply","$element","focus","e","content","showFile","_focus","Applications","ApplicationWriter","args","extension","mime","filename","settings","_getArgument","_addWindow"],"mappings":"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","file":"../main.js","sourcesContent":["define([\n    './locales',\n    \"./scheme.html\"\n], function (Translations,schemeHtml) {\n    'use strict';\n    const VFS = OSjs.require('vfs/fs');\n    const Config = OSjs.require('core/config');\n    const Dialog = OSjs.require('core/dialog');\n    const GUIElement = OSjs.require('gui/element');\n    const Utils = OSjs.require('utils/misc');\n    const Locales = OSjs.require('core/locales');\n    const DefaultApplication = OSjs.require('helpers/default-application');\n    const DefaultApplicationWindow = OSjs.require('helpers/default-application-window');\n    const _ = Locales.createLocalizer(Translations);\n    class ApplicationWriterWindow extends DefaultApplicationWindow {\n        constructor(app, metadata, file) {\n            const config = Config.getConfig();\n            super('ApplicationWriterWindow', {\n                allow_drop: true,\n                icon: metadata.icon,\n                title: metadata.name,\n                width: 550,\n                height: 400,\n                translator: _\n            }, app, file);\n            this.checkChangeLength = -1;\n            this.checkChangeInterval = null;\n            this.color = {\n                background: '#ffffff',\n                foreground: '#000000'\n            };\n            this.font = {\n                name: config.Fonts['default'],\n                size: 3\n            };\n        }\n        destroy() {\n            this.checkChangeInterval = clearInterval(this.checkChangeInterval);\n            super.destroy(...arguments);\n        }\n        init(wmRef, app) {\n            const root = super.init(...arguments);\n            var self = this;\n            this._render('WriterWindow', schemeHtml);\n            var text = this._find('Text');\n            var buttons = {\n                'text-bold': { command: 'bold' },\n                'text-italic': { command: 'italic' },\n                'text-underline': { command: 'underline' },\n                'text-strikethrough': { command: 'strikeThrough' },\n                'justify-left': { command: 'justifyLeft' },\n                'justify-center': { command: 'justifyCenter' },\n                'justify-right': { command: 'justifyRight' },\n                'indent': { command: 'indent' },\n                'unindent': { command: 'outdent' }\n            };\n            var menuEntries = {\n                'MenuUndo': function () {\n                    text.command('undo', false);\n                },\n                'MenuRedo': function () {\n                    text.command('redo', false);\n                },\n                'MenuCopy': function () {\n                    text.command('copy', false);\n                },\n                'MenuCut': function () {\n                    text.command('cut', false);\n                },\n                'MenuDelete': function () {\n                    text.command('delete', false);\n                },\n                'MenuPaste': function () {\n                    text.command('paste', false);\n                },\n                'MenuUnlink': function () {\n                    text.command('unlink', false);\n                },\n                'MenuInsertOL': function () {\n                    text.command('insertOrderedList', false);\n                },\n                'MenuInsertUL': function () {\n                    text.command('insertUnorderedList', false);\n                },\n                'MenuInsertImage': function () {\n                    Dialog.create('File', { filter: ['^image'] }, function (ev, button, result) {\n                        if (button !== 'ok' || !result) {\n                            return;\n                        }\n                        VFS.url(result).then(url => {\n                            text.command('insertImage', false, url);\n                        });\n                    }, self);\n                },\n                'MenuInsertLink': function () {\n                    Dialog.create('Input', {\n                        message: _('Insert URL'),\n                        placeholder: 'https://os-js.org'\n                    }, function (ev, button, result) {\n                        if (button !== 'ok' || !result) {\n                            return;\n                        }\n                        text.command('createLink', false, result);\n                    }, self);\n                }\n            };\n            function menuEvent(ev) {\n                if (menuEntries[ev.detail.id]) {\n                    menuEntries[ev.detail.id]();\n                }\n            }\n            this._find('SubmenuEdit').on('select', menuEvent);\n            this._find('SubmenuInsert').on('select', menuEvent);\n            function getSelectionStyle() {\n                function _call(cmd) {\n                    return text.query(cmd);\n                }\n                var style = {\n                    fontName: (_call('fontName') || '').split(',')[0].replace(/^'/, '').replace(/'$/, ''),\n                    fontSize: parseInt(_call('fontSize'), 10) || self.font.size,\n                    foreColor: _call('foreColor'),\n                    hiliteColor: _call('hiliteColor')\n                };\n                Object.keys(buttons).forEach(function (b) {\n                    var button = buttons[b];\n                    style[button.command] = {\n                        button: b,\n                        value: _call(button.command)\n                    };\n                });\n                return style;\n            }\n            function createColorDialog(current, cb) {\n                self._toggleDisabled(true);\n                Dialog.create('Color', { color: current }, function (ev, button, result) {\n                    self._toggleDisabled(false);\n                    if (button === 'ok' && result) {\n                        cb(result.hex);\n                    }\n                }, self);\n            }\n            function createFontDialog(current, cb) {\n                self._toggleDisabled(true);\n                Dialog.create('Font', {\n                    fontSize: self.font.size,\n                    fontName: self.font.name,\n                    minSize: 1,\n                    maxSize: 8,\n                    unit: 'null'\n                }, function (ev, button, result) {\n                    self._toggleDisabled(false);\n                    if (button === 'ok' && result) {\n                        cb(result);\n                    }\n                }, self);\n            }\n            var back = this._find('Background').on('click', function () {\n                createColorDialog(self.color.background, function (hex) {\n                    text.command('hiliteColor', false, hex);\n                    self.color.background = hex;\n                    back.set('value', hex);\n                });\n            });\n            var front = this._find('Foreground').on('click', function () {\n                createColorDialog(self.color.foreground, function (hex) {\n                    text.command('foreColor', false, hex);\n                    self.color.foreground = hex;\n                    front.set('value', hex);\n                });\n            });\n            var font = this._find('Font').on('click', function () {\n                createFontDialog(null, function (font) {\n                    text.command('fontName', false, font.fontName);\n                    text.command('fontSize', false, font.fontSize);\n                    self.font.name = font.fontName;\n                    self.font.size = font.fontSize;\n                });\n            });\n            root.querySelectorAll('gui-toolbar > gui-button').forEach(function (b) {\n                var id = b.getAttribute('data-id');\n                var button = buttons[id];\n                if (button) {\n                    GUIElement.createFromNode(b).on('click', function () {\n                        text.command(button.command);\n                    }).on('mousedown', function (ev) {\n                        ev.preventDefault();\n                    });\n                }\n            });\n            function updateToolbar(style) {\n                back.set('value', style.hiliteColor);\n                front.set('value', style.foreColor);\n                if (style.fontName) {\n                    font.set('label', Utils.format('{0} ({1})', style.fontName, style.fontSize.toString()));\n                }\n            }\n            function updateSelection() {\n                var style = getSelectionStyle();\n                updateToolbar(style);\n            }\n            back.set('value', this.color.background);\n            front.set('value', this.color.foreground);\n            font.set('label', Utils.format('{0} ({1})', this.font.name, this.font.size.toString()));\n            text.on('selection', function () {\n                updateSelection();\n            });\n            this.checkChangeInterval = setInterval(function () {\n                if (self.hasChanged) {\n                    return;\n                }\n                if (self.checkChangeLength < 0) {\n                    self.checkChangeLength = text.get('value').length;\n                }\n                var len = text.get('value').length;\n                if (len !== self.checkChangeLength) {\n                    self.hasChanged = true;\n                }\n                self.checkChangeLength = len;\n            }, 500);\n            return root;\n        }\n        updateFile(file) {\n            DefaultApplicationWindow.prototype.updateFile.apply(this, arguments);\n            try {\n                var el = this._find('Text');\n                el.$element.focus();\n            } catch (e) {\n            }\n            this.checkChangeLength = -1;\n        }\n        showFile(file, content) {\n            this._find('Text').set('value', content || '');\n            DefaultApplicationWindow.prototype.showFile.apply(this, arguments);\n        }\n        getFileData() {\n            return this._find('Text').get('value');\n        }\n        _focus(file, content) {\n            if (super._focus(...arguments)) {\n                this._find('Text').focus();\n                return true;\n            }\n            return false;\n        }\n    }\n    class ApplicationWriter extends DefaultApplication {\n        constructor(args, metadata) {\n            super('ApplicationWriter', args, metadata, {\n                extension: 'odoc',\n                mime: 'osjs/document',\n                filename: 'New text file.odoc'\n            });\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            const file = this._getArgument('file');\n            this._addWindow(new ApplicationWriterWindow(this, metadata, file));\n        }\n    }\n    OSjs.Applications.ApplicationWriter = ApplicationWriter;\n});"]}