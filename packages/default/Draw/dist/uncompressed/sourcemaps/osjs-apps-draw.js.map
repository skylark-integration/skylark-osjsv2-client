{"version":3,"sources":["osjs-apps-draw.js"],"names":[],"mappingsfile":"../osjs-apps-draw.js","sourcesContent":["define('osjs-apps-draw/locales',[],function () {\n    'use strict';\n    return {\n        bg_BG: {\n            'Toggle tools toolbar': 'Бар с инструменти',\n            'Toggle layers toolbar': 'Бар с слоеве',\n            'Layer': 'Слой',\n            'Effect': 'Ефект',\n            'Flip Horizontally': 'Обърни хоризонтално',\n            'Flip Vertically': 'Обърни вертикално',\n            'Foreground': 'Преден фон',\n            'Bakgrunn': 'Заден фон',\n            'Foreground (Fill) Color': 'Преден фон (Запълни) цвят',\n            'Background (Stroke) Color': 'Заден фон цвят',\n            'Line join': 'Съединяване на линии',\n            'Line width': 'Широчина на линия',\n            'Toggle Stroke': 'Превключване на удър',\n            'Enable stroke': 'Включи удър',\n            'Round': 'Кръгъл',\n            'Miter': 'Митра',\n            'Bevel': 'Откос',\n            'Stroked': 'Ударен',\n            'No stroke': 'Без удър',\n            'Pointer': 'Стрелка',\n            'Move active layer': 'Премести активен слой',\n            'Picker': 'берач',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: изберете цвят за преден план, RMB: изберете цвят за фон',\n            'Pencil': 'Молив',\n            'LMB/RMB: Draw with fg/bg color': 'LMB/RMB: рисувай с fg/bg цвят',\n            'Path': 'Път',\n            'Square/Rectangle': 'Квадрат/Правоъгъкник',\n            'LMB/RMB: Draw with fg/bg color, SHIFT: Draw rectangle': 'LMB/RMB: рисувай с fb/bg цвят, SHIFT: нарисувай правоъгълник',\n            'Circle/Ellipse': 'Кръг/Елипса',\n            'LMB/RMB: Draw with fg/bg color, SHIFT: Draw ellipse': 'LMB/RMB: рисувай с fb/bg цвят, SHIFT: нарисувай елипса',\n            'Blur': 'Замъгли',\n            'Noise': 'Шум',\n            'Invert colors': 'Инвертирай цветове',\n            'Grayscale': 'Черно-бяло',\n            'Sharpen': 'Острота',\n            'Simple Blur': 'Опростено замъгляване',\n            'Radius': 'Радиус',\n            'Iterations': 'Повторения'\n        },\n        de_DE: {\n            'Toggle tools toolbar': 'Tools Toolbar',\n            'Toggle layers toolbar': 'Ebenen Toolbar',\n            'Layer': 'Ebene',\n            'Effect': 'Effekt',\n            'Flip Horizontally': 'Horizontal spiegeln',\n            'Flip Vertically': 'Vertikal spiegeln',\n            'Foreground': 'Vordergrund',\n            'Bakgrunn': 'Hintergrund',\n            'Foreground (Fill) Color': 'Vordergrund (Füll-) Farbe',\n            'Background (Stroke) Color': 'Hintergrund (Streich-) Farbe',\n            'Line join': 'Linienverbindung',\n            'Line width': 'Linienbreite',\n            'Toggle Stroke': 'Streichen',\n            'Enable stroke': 'Streichen aktivieren',\n            'Round': 'Runde',\n            'Miter': 'Live',\n            'Bevel': 'Schräge',\n            'Stroked': 'Gestrichen',\n            'No stroke': 'Nicht gestrichen',\n            'Pointer': 'Zeiger',\n            'Move active layer': 'Bewege aktive Ebene',\n            'Picker': 'Wähler',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: wähle Vordergrundfarbe, RMB: wähle Hintergrundfarbe',\n            'Pencil': 'Stift',\n            'LMB/RMB: Draw with fg/bg color': 'LMB/RMB: Zeichnen mit fg/bg Farbe',\n            'Path': 'Pfad',\n            'Square/Rectangle': 'Quadrat/Rechteck',\n            'LMB/RMB: Draw with fg/bg color, SHIFT: Draw rectangle': 'LMB/RMB: Zeichnen mit fb/bg Farbe, SHIFT: Rechteck zeichnen',\n            'Circle/Ellipse': 'Kreis/Ellipse',\n            'LMB/RMB: Draw with fg/bg color, SHIFT: Draw ellipse': 'LMB/RMB: Zeichnen mit fb/bg Farbe, SHIFT: Ellipse zeichnen',\n            'Blur': 'Weichzeichner (Blur)',\n            'Noise': 'Rauschen',\n            'Invert colors': 'Farben invertieren',\n            'Grayscale': 'Graustufen',\n            'Sharpen': 'Schärfen',\n            'Simple Blur': 'Einfacher Weichzeichner (Blur)',\n            'Radius': 'Radius',\n            'Iterations': 'Iterationen'\n        },\n        es_ES: {\n            'Toggle tools toolbar': 'Mostrar/ocultar la barra de herramientas de utilidades',\n            'Toggle layers toolbar': 'Mostrar/ocultar la barra de herramientas de capas',\n            'Layer': 'Capa',\n            'Effect': 'Efecto',\n            'Flip Horizontally': 'Girar horizontalmente',\n            'Flip Vertically': 'Girar verticalmente',\n            'Foreground': 'Primer plano',\n            'Bakgrunn': 'Fondo',\n            'Foreground (Fill) Color': 'Color de primer plano (relleno)',\n            'Background (Stroke) Color': 'Color de de fondo (contorno)',\n            'Line join': 'Terminación de línea',\n            'Line width': 'Ancho de línea',\n            'Toggle Stroke': 'Activar/Desactivar trazado',\n            'Enable stroke': 'Activar trazado',\n            'Round': 'Curvo',\n            'Miter': 'En ángulo',\n            'Bevel': 'Biselado',\n            'Stroked': 'Trazado',\n            'No stroke': 'Sin trazado',\n            'Pointer': 'Puntero',\n            'Move active layer': 'Mover la capa activa',\n            'Picker': 'Selector',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: Establecer el color de primer plano, RMB: Establecer el color de fondo',\n            'Pencil': 'Lápiz',\n            'LMB/RMB: Draw with fg/bg color': 'LMB/RMB: Dibujar con el color de fondo/de primer plano',\n            'Path': 'Ruta',\n            'Square/Rectangle': 'Cuadrado/Rectángulo',\n            'LMB/RMB: Draw with fg/bg color, SHIFT: Draw rectangle': 'LMB/RMB: Zeichnen mit fb/bg Farbe, SHIFT: Rechteck zeichnen',\n            'Circle/Ellipse': 'Kreis/Ellipse',\n            'LMB/RMB: Draw with fg/bg color, SHIFT: Draw ellipse': 'LMB/RMB: Dibujar con el color de fondo/de primer plano, SHIFT: Dibujar una elipse',\n            'Blur': 'Desenfoque',\n            'Noise': 'Ruido',\n            'Invert colors': 'Invertir colores',\n            'Grayscale': 'Escala de grises',\n            'Sharpen': 'Afilar',\n            'Simple Blur': 'Desenfoque simple',\n            'Radius': 'Radio',\n            'Iterations': 'Iteraciones'\n        },\n        fr_FR: {\n            'Toggle tools toolbar': \"Afficher la barre d'outils\",\n            'Toggle layers toolbar': 'Afficher la barre des calques',\n            'Layer': 'Calque',\n            'Effect': 'Effet',\n            'Flip Horizontally': 'Pivoter horizontalement',\n            'Flip Vertically': 'Pivoter verticalement',\n            'Foreground': 'Avant-plan',\n            'Background': 'Arrière-plan',\n            'Foreground (Fill) Color': \"Couleur de l'avant-plan (remplissage)\",\n            'Background (Stroke) Color': \"Couleur de l'arrière-plan (trait)\",\n            'Line join': 'Jointure',\n            'Line width': 'Taille de la ligne',\n            'Toggle Stroke': 'Afficher les traits',\n            'Enable stroke': 'Activer les traits',\n            'Round': 'Arrondi',\n            'Miter': 'Pointu',\n            'Bevel': 'Biseauté',\n            'Stroked': 'Barré',\n            'No stroke': 'Non barré',\n            'Pointer': 'Pointeur',\n            'Move active layer': 'Déplacer le calque actif',\n            'Picker': 'Sélecteur',\n            'LMB: Pick foreground-, RMB: Pick background color': \"Clic gauche: sélectionne la couleur de l'avant-plan, clic droit: sélectionne la couleur de l'arrière-plan\",\n            'Pencil': 'Pinceau',\n            'LMB: Use foreground-, RMB: Use background color': \"Clic gauche: utilise la couleur d'avant-plan, clic droit : utilise la couleur d'arrière-plan\",\n            'Path': 'Chemin',\n            'Square/Rectangle': 'Carré/Rectangle',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': \"Clic gauche: utilise la couleur d'avant-plan, clic droit: utilise la couleur d'arrière-plan, SHIFT: affiche le mode rectangle\",\n            'Circle/Ellipse': 'Cercle/Ellipse',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': \"Clic gauche: utilise la couleur d'avant-plan, clic droit: utilise la couleur d'arrière-plan, SHIFT: affiche le mode ellipse\",\n            'LMB: Fill with foreground-, RMB: Fill with background color': \"Clic gauche: remplir avec la couleur d'avant-plan, clic droit: remplir avec la couleur d'arrière-plan\",\n            'Set foreground color': \"Définir la couleur d'avant-plan\",\n            'Set background color': \"Définir la couleur d'arrière-plan\",\n            'Blur': 'Flou',\n            'Noise': 'Bruit',\n            'Invert colors': 'Inverser les couleurs',\n            'Grayscale': 'Niveau de gris',\n            'Sharpen': 'Netteté',\n            'Simple Blur': 'Flou simple',\n            'Radius': 'Rayon',\n            'Iterations': 'Itérations'\n        },\n        ar_DZ: {\n            'Toggle tools toolbar': 'إظهار شريط الأدوات',\n            'Toggle layers toolbar': 'إظهار شريط الشفائف',\n            'Layer': 'شفيفة',\n            'Effect': 'تأثير',\n            'Flip Horizontally': 'دوران أفقي',\n            'Flip Vertically': 'دوران عمودي',\n            'Foreground': 'الأمامي',\n            'Background': 'الخلفية',\n            'Foreground (Fill) Color': 'اللون الأمامي (التعبئة)',\n            'Background (Stroke) Color': 'لون الخلفية (الخط)',\n            'Line join': 'مفصل خطي',\n            'Line width': 'عرض الخط',\n            'Toggle Stroke': 'إظهار الخطوط',\n            'Enable stroke': 'تفعيل الخطوط',\n            'Round': 'دائري',\n            'Miter': 'مذبب',\n            'Bevel': 'شطف',\n            'Stroked': 'مشطوب',\n            'No stroke': 'بدون خط',\n            'Pointer': 'المؤشر',\n            'Move active layer': 'نقل الشفيفة المفعلة',\n            'Picker': 'المرشح',\n            'LMB: Pick foreground-, RMB: Pick background color': 'ضغط باليسار: إختيار اللون الأمامي, ضغط باليمين: إختيار لون الخلفية',\n            'Pencil': 'القلم',\n            'LMB: Use foreground-, RMB: Use background color': 'ضغط باليسار: إستعمال اللون الأمامي, ضغط باليمين: إستعمال لون الخلفية',\n            'Path': 'المسار',\n            'Square/Rectangle': 'مربع/مستطيل',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': 'ضغط باليسار: إستعمال اللون الأمامي, ضغط باليمين: إستعمال لون الخلفية\\u060C SHIFT : تحويل بين مربع/مستطيل',\n            'Circle/Ellipse': 'دائرة/قطع ناقص',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': 'ضغط باليسار: إستعمال اللون الأمامي, ضغط باليمين: إستعمال لون الخلفية\\u060C SHIFT : تحويل بين دائرة/قطع ناقص',\n            'LMB: Fill with foreground-, RMB: Fill with background color': 'ضغط باليسار: ملئ باللون الأمامي, ضغط باليمين: ملئ بلون الخلفية',\n            'Set foreground color': 'إستعمال كلون أمامي',\n            'Set background color': 'إستعمال كلون للخلفية',\n            'Blur': 'ضبابي',\n            'Noise': 'ضجيج',\n            'Invert colors': 'عكس الألوان',\n            'Grayscale': 'مستوى الرمادي',\n            'Sharpen': 'صفاء',\n            'Simple Blur': 'ضباب عادي',\n            'Radius': 'القطر',\n            'Iterations': 'عدد العمليات'\n        },\n        it_IT: {\n            'Toggle tools toolbar': 'Mostra la barra strumenti',\n            'Toggle layers toolbar': 'Mostra la barra dei livelli',\n            'Layer': 'Livello',\n            'Effect': 'Effetto',\n            'Flip Horizontally': 'Specchia orizzontalmente',\n            'Flip Vertically': 'Specchia verticalmente',\n            'Foreground': 'Primopiano',\n            'Background': 'Sfondo',\n            'Foreground (Fill) Color': 'Colore in primopiano (Riempimento)',\n            'Background (Stroke) Color': 'Colore di sfondo (Tracciato)',\n            'Line join': 'Congiungi linea',\n            'Line width': 'Lunghezza linea',\n            'Toggle Stroke': 'Mostra tracciato',\n            'Enable stroke': 'Abilita tracciato',\n            'Round': 'Arrotonda',\n            'Miter': 'Miter',\n            'Bevel': 'Smussatura',\n            'Stroked': 'Tracciato',\n            'No stroke': 'Nessun tracciato',\n            'Pointer': 'Puntatore',\n            'Move active layer': 'Sposta livello attivo',\n            'Picker': 'Selettore',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: Imposta colore primopiano, RMB: Imposta colore di sfondo',\n            'Pencil': 'Matita',\n            'LMB/RMB: Draw with fg/bg color': 'LMB/RMB: Disegna con colori fg/bg',\n            'Path': 'Percorso',\n            'Square/Rectangle': 'Quadrato/Rettangolo',\n            'LMB/RMB: Draw with fg/bg color, SHIFT: Draw rectangle': 'LMB/RMB: Disegna con colori di fg/bg, SHIFT: Disegna rettangolo',\n            'Circle/Ellipse': 'Cerchio/Ellisse',\n            'LMB/RMB: Draw with fg/bg color, SHIFT: Draw ellipse': 'LMB/RMB: Disegna con colori di fg/bg, SHIFT: Disegna ellisse',\n            'Blur': 'Sfoca',\n            'Noise': 'Disturbo',\n            'Invert colors': 'Inverti colori',\n            'Grayscale': 'Scala di grigi',\n            'Sharpen': 'Intensifica',\n            'Simple Blur': 'Sfocatura leggera',\n            'Radius': 'Raggio',\n            'Iterations': 'Ripetizioni'\n        },\n        ko_KR: {\n            'Toggle tools toolbar': '도구 툴바 켜기/끄기',\n            'Toggle layers toolbar': '레이어 툴바 켜기/끄기',\n            'Layer': '레이어',\n            'Effect': '효과',\n            'Flip Horizontally': '수평으로 뒤집기',\n            'Flip Vertically': '수직으로 뒤집기',\n            'Foreground': '전경',\n            'Background': '배경',\n            'Foreground (Fill) Color': '전경색(채우기)',\n            'Background (Stroke) Color': '배경색(칠하기)',\n            'Line join': '선 종류',\n            'Line width': '선 굵기',\n            'Toggle Stroke': '선 활성화',\n            'Enable stroke': '선 그리기',\n            'Round': '둥글게',\n            'Miter': '기울이기',\n            'Bevel': '비스듬히',\n            'Stroked': '선 보이기',\n            'No stroke': '선없음',\n            'Pointer': '포인터',\n            'Move active layer': '활성 레이어 옮기기',\n            'Picker': '색상 추출',\n            'LMB: Pick foreground-, RMB: Pick background color': '왼쪽 마우스 버튼: 전경색, 오른쪽 마우스 버튼 : 배경색',\n            'Pencil': '연필',\n            'LMB: Use foreground-, RMB: Use background color': '왼쪽 마우스/오른쪽 마우스 버튼 전경/배경색 그리기',\n            'Path': '경로',\n            'Square/Rectangle': '정사각형/직사각형',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': '왼쪽/오른쪽 마우스 버튼 전경/배경색 그리기, SHIFT: 직사각형 그리기',\n            'Circle/Ellipse': '원/타원',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': '왼쪽/오른쪽 마우스 버튼 전경/배경색 그리기, SHIFT: 타원 그리기',\n            'Blur': '블러',\n            'Noise': '노이즈',\n            'Invert colors': '반전',\n            'Grayscale': '흑백',\n            'Sharpen': '샤픈',\n            'Simple Blur': '약한 블러',\n            'Radius': '반경',\n            'Iterations': '반복',\n            'LMB: Fill with foreground-, RMB: Fill with background color': '왼쪽 마우스/오른쪽 마우스 버튼 전경/배경색 칠하기',\n            'Set {0} color': '{0}색을 선택'\n        },\n        nl_NL: {\n            'Toggle tools toolbar': 'Toolbar gereedschappen',\n            'Toggle layers toolbar': 'Toolbar lagen',\n            'Layer': 'Laag',\n            'Effect': 'Effecten',\n            'Flip Horizontally': 'Horizontaal spiegelen',\n            'Flip Vertically': 'Verticaal spiegelen',\n            'Foreground': 'Voorgrond',\n            'Background': 'Achtergrond',\n            'Foreground (Fill) Color': 'Voorgrond (vul) kleur',\n            'Background (Stroke) Color': 'Achtergrond (penseel-) kleur',\n            'Line join': 'Lijnverbinding',\n            'Line width': 'Lijnbreedte',\n            'Toggle Stroke': 'Penseel streek',\n            'Enable stroke': 'Penseel activeren',\n            'Round': 'Rond',\n            'Miter': 'Live',\n            'Bevel': 'Schuin',\n            'Stroked': 'Gestreken',\n            'No stroke': 'Geen penseel streken',\n            'Pointer': 'Aanwijzer',\n            'Move active layer': 'Verplaats de actieve laag',\n            'Picker': 'Kiezer',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: Kies voorgrond-kleur, RMB: Kies achtergrondkleur',\n            'Pencil': 'Penseel',\n            'LMB: Use foreground-, RMB: Use background color': 'LMB: Teken met voorgrond-, RMB: Teken met achtergrond-kleur',\n            'Path': 'Pfad',\n            'Square/Rectangle': 'Vierkant/rechthoek',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': 'LMB/RMB: Teken met voor- en achtergrondkleur, SHIFT: Rechthoek tekenen',\n            'Circle/Ellipse': 'Cirkel/elipse',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': 'LMB/RMB: Teken met voor- en achtergrondkleur, SHIFT: Elipse tekenen',\n            'Blur': 'Vervagen (Blur)',\n            'Noise': 'Ruis',\n            'Invert colors': 'Kleuren inverteren',\n            'Grayscale': 'Grijstinten',\n            'Sharpen': 'Verscherpen',\n            'Simple Blur': 'Eenvoudig vervagen (Blur)',\n            'Radius': 'Radius',\n            'Iterations': 'Herhalingen'\n        },\n        no_NO: {\n            'Toggle tools toolbar': 'Svitsj verktøylinje',\n            'Toggle layers toolbar': 'Svitsj lag-verktøylinje',\n            'Layer': 'Lag',\n            'Effect': 'Effekt',\n            'Flip Horizontally': 'Flipp Horisontalt',\n            'Flip Vertically': 'Flipp Vertikalt',\n            'Foreground': 'Forgrunn',\n            'Background': 'Bakgrunn',\n            'Foreground (Fill) Color': 'Forgrunn (Fyll) Farge',\n            'Background (Stroke) Color': 'Bakgrunn (Strøk) Farge',\n            'Line join': 'Linje Knytting',\n            'Line width': 'Linje Bredde',\n            'Toggle Stroke': 'Svitsj strøk',\n            'Enable stroke': 'Skru på strøk',\n            'Round': 'Rund',\n            'Miter': 'Skjev',\n            'Bevel': 'Kantet',\n            'Stroked': 'Strøk På',\n            'No stroke': 'Strøk Av',\n            'Pointer': 'Peker',\n            'Move active layer': 'Flytt aktivt lag',\n            'Picker': 'Plukker',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: sett bg farge, RMB: sett fg farge',\n            'Pencil': 'Penn',\n            'LMB: Use foreground-, RMB: Use background color': 'LMB/RMB: Tegn med fg/bg farge',\n            'Path': 'Sti',\n            'Square/Rectangle': 'Firkant/Rektangel',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': 'LMB/RMB: Tegn med fg/bg farge, SHIFT: Tegn rektangel',\n            'Circle/Ellipse': 'Sirkel/Ellipse',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': 'LMB/RMB: Tegn med fg/bg farge, SHIFT: Tegn ellipse',\n            'Blur': 'Klatte (Blur)',\n            'Noise': 'Støy',\n            'Invert colors': 'Inverter farger',\n            'Grayscale': 'Gråskala',\n            'Sharpen': 'Skarpgjør',\n            'Simple Blur': 'Simpel Klatte (Blur)',\n            'Radius': 'Radius',\n            'Iterations': 'Itereringer'\n        },\n        pl_PL: {\n            'Toggle tools toolbar': 'Przełącz Pasek narzędzi',\n            'Toggle layers toolbar': 'Przełącz Pasek warstw',\n            'Layer': 'Warstwy',\n            'Effect': 'Efekty',\n            'Flip Horizontally': 'Przerzuć w poziomie',\n            'Flip Vertically': 'Przerzuć w pionie',\n            'Foreground': 'Pierwszy plan',\n            'Bakgrunn': 'Tło',\n            'Foreground (Fill) Color': 'Kolor pierwszoplanowy (Wypełnienie)',\n            'Background (Stroke) Color': 'Kolor tła (Wycinanie)',\n            'Line join': 'Rodzaj lini',\n            'Line width': 'Grubość',\n            'Toggle Stroke': 'Włącz/wyłącz obramowanie',\n            'Enable stroke': 'Włącz obramowanie',\n            'Round': 'Zwykłe',\n            'Miter': 'Paski',\n            'Bevel': 'Kątownik',\n            'Stroked': 'Obranowanie',\n            'No stroke': 'Bez obramowania',\n            'Pointer': 'Wskaźnik',\n            'Move active layer': 'Przenieś aktywne warstwy',\n            'Picker': 'Wybór',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: Wstaw kolor bg, RMB: ustaw kolor fg',\n            'Pencil': 'Ołówek',\n            'LMB: Use foreground-, RMB: Use background color': 'Maluj w kolorze fg/bg',\n            'Path': 'Ścieżka',\n            'Square/Rectangle': 'Kwadratowe / prostokątne',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': 'LMB/RMB: Maluj w kolorze fb/bg, SHIFT: Narysuj prostokąt',\n            'Circle/Ellipse': 'Koło / Elipsa',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': 'LMB/RMB: Maluj w kolorze fb/bg, SHIFT: Narysuj elipse',\n            'Blur': 'Blur',\n            'Noise': 'Szum',\n            'Invert colors': 'Odwróc kolory',\n            'Grayscale': 'Skala szaroścu',\n            'Sharpen': 'Zaostrzone',\n            'Simple Blur': 'Łatwy Blur',\n            'Radius': 'Promień',\n            'Iterations': 'Powtórzenia'\n        },\n        ru_RU: {\n            'Toggle tools toolbar': 'Панель инструментов',\n            'Toggle layers toolbar': 'Панель слоев',\n            'Layer': 'Слой',\n            'Effect': 'Эффекты',\n            'Flip Horizontally': 'Отразить горизонтально',\n            'Flip Vertically': 'Отразить вертикально',\n            'Foreground': 'Передний план',\n            'Bakgrunn': 'Фон',\n            'Foreground (Fill) Color': 'Передний план (Заливка) цвет',\n            'Background (Stroke) Color': 'Фоновый (Обводка) цвет',\n            'Line join': 'Замкнутая линия',\n            'Line width': 'Ширина линии',\n            'Toggle Stroke': 'Вкл/выкл обводку',\n            'Enable stroke': 'Включить обводку',\n            'Round': 'Закругленный',\n            'Miter': 'Прямой',\n            'Bevel': 'Скошенный',\n            'Stroked': 'С обводкой',\n            'No stroke': 'Без обводки',\n            'Pointer': 'Указатель',\n            'Move active layer': 'Перемещает активный слой',\n            'Picker': 'Пипетка',\n            'LMB: Pick foreground-, RMB: Pick background color': 'ЛКМ: устананавливает первичный цвет, ПКМ: устанавливает вторичный(фоновый) цвет',\n            'Pencil': 'Карандаш',\n            'LMB: Use foreground-, RMB: Use background color': 'ЛКМ/ПКМ: Рисует первичным/вторичным цветом',\n            'Path': 'Прямая',\n            'Square/Rectangle': 'Квадрат/Прямоугольник',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': 'ЛКМ/ПКМ: рисует первичным/вторичным цветом квадрат, SHIFT: нарисовать прямоуголник',\n            'Circle/Ellipse': 'Круг/Эллипс',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': 'ЛКМ/ПКМ: рисует первичным/вторичным цветом круг, SHIFT: нарисовать эллипс',\n            'Blur': 'Размытие (Blur)',\n            'Noise': 'Шум',\n            'Invert colors': 'Инвертировать цвета',\n            'Grayscale': 'Обесцветить',\n            'Sharpen': 'Сточить',\n            'Simple Blur': 'Простое размытие (Blur)',\n            'Radius': 'Радиус',\n            'Iterations': 'Итерации'\n        },\n        sk_SK: {\n            'Toggle tools toolbar': 'Zobraz panel nástrojov',\n            'Toggle layers toolbar': 'Zobraz vrstvy',\n            'Layer': 'Vrstvy',\n            'Effect': 'Efekty',\n            'Flip Horizontally': 'Transformuj horizontálne',\n            'Flip Vertically': 'Transformuj vertikálne',\n            'Foreground': 'Popredie',\n            'Bakgrunn': 'Pozadie',\n            'Line join': 'Typ čiary',\n            'Line width': 'Šírka čiary',\n            'Toggle Stroke': 'Zapnúť orámovanie',\n            'Enable stroke': 'Orámovanie',\n            'Round': 'Okrúhly',\n            'Miter': 'Naklonený',\n            'Bevel': 'Šikmý',\n            'Stroked': 'Orámovaný',\n            'No stroke': 'Bez orámovania',\n            'Pointer': 'Ukazovateľ',\n            'Move active layer': 'Presuň aktívnu vrstvu',\n            'Picker': 'Kurzor',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: nastav farbu pozadia, RMB: nastav farbu popredia',\n            'Pencil': 'Ceruzka',\n            'LMB: Use foreground-, RMB: Use background color': 'Maľuj farbou fg/bg',\n            'Path': 'Cesta',\n            'Square/Rectangle': 'Štvorec / Obdĺžnik',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': 'LMB/RMB: Maľuj farbou fb/bg, SHIFT: Obdĺžnik',\n            'Circle/Ellipse': 'Kruh / Elipsa',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': 'LMB/RMB: Maľuj farbou fb/bg, SHIFT: Elipsa',\n            'Blur': 'Rozmazať',\n            'Noise': 'Šum',\n            'Invert colors': 'Invertovať farby',\n            'Grayscale': 'Odtiene šedej',\n            'Sharpen': 'Zostriť',\n            'Simple Blur': 'Jednoduchý Blur',\n            'Radius': 'Rádius',\n            'Iterations': 'Iterácie'\n        },\n        tr_TR: {\n            'Toggle tools toolbar': 'araç çubugu değiştirme araçları',\n            'Toggle layers toolbar': 'Araç çubugu katmanı değiştirme',\n            'Layer': 'Katman',\n            'Effect': 'efekt',\n            'Flip Horizontally': 'Yatay çevir',\n            'Flip Vertically': 'Dikey çevir',\n            'Foreground': 'Önplana al',\n            'Background': 'Arkaplana al',\n            'Foreground (Fill) Color': 'Önplan rengi',\n            'Background (Stroke) Color': 'Arkaplan rengi',\n            'Line join': 'Çizgi bitişimi',\n            'Line width': 'Çizgi genişliği',\n            'Toggle Stroke': 'vuruşu değiştir',\n            'Enable stroke': 'vuruş aktif',\n            'Round': 'yuvarlamak',\n            'Miter': 'gönye',\n            'Bevel': 'eğmek',\n            'Stroked': 'Stroked',\n            'No stroke': 'No stroke',\n            'Pointer': 'işaretçi',\n            'Move active layer': 'hareket eden katman',\n            'Picker': 'toplayıcı',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: fg rengi ayarla, RMB: gb rengi ayarla',\n            'Pencil': 'kalem',\n            'LMB: Use foreground-, RMB: Use background color': 'LMB/RMB:fg/bg rengi ile çiz',\n            'Path': 'yol',\n            'Square/Rectangle': 'kare/üçgen',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': 'LMB/RMB: fg/bg renkleri ile çiz , SHIFT: üçgen çiz',\n            'Circle/Ellipse': 'dair/elips',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': 'LMB/RMB: fb/bg ile çiz , SHIFT: elips çiz',\n            'Blur': 'Bulanık',\n            'Noise': 'gürültü',\n            'Invert colors': 'renkleri tersine çevir',\n            'Grayscale': 'gri ton',\n            'Sharpen': 'keskinleştirmek',\n            'Simple Blur': 'sade Bulanık',\n            'Radius': 'yarıçap',\n            'Iterations': 'yineleme'\n        },\n        vi_VN: {\n            'Toggle tools toolbar': 'Công cụ bật tắt thanh công cụ',\n            'Toggle layers toolbar': 'Bật tắt cửa sổ layer',\n            'Layer': 'Lớp',\n            'Effect': 'Hiệu ứng',\n            'Flip Horizontally': 'Lật ngang',\n            'Flip Vertically': 'Lật theo chiều dọc',\n            'Foreground': 'Nền trước',\n            'Background': 'Nền dưới',\n            'Foreground (Fill) Color': 'Màu nền trước',\n            'Background (Stroke) Color': 'Màu nền dưới',\n            'Line join': 'Ghép đoạn thằng',\n            'Line width': 'Độ rộng dòng',\n            'Toggle Stroke': 'Bật tắt nét',\n            'Enable stroke': 'Bật nét',\n            'Round': 'Tròn',\n            'Miter': 'Góc',\n            'Bevel': 'Góc xiên',\n            'Stroked': 'Vuốt',\n            'No stroke': 'Không vuốt',\n            'Pointer': 'Con trỏ',\n            'Move active layer': 'Di chuyển layer đang chọn',\n            'Picker': 'Bảng chọn',\n            'LMB: Pick foreground-, RMB: Pick background color': 'LMB: chọn màu fg, RMB: chọn màu gb',\n            'Pencil': 'Bút chì',\n            'LMB: Use foreground-, RMB: Use background color': 'LMB/RMB: vẽ với màu fg/bg',\n            'Path': 'Đường',\n            'Square/Rectangle': 'Firkant/Rektangel',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode': 'LMB/RMB: Tegn med fg/bg farge, SHIFT: Tegn rektangel',\n            'Circle/Ellipse': 'Vuông / chữ nhật',\n            'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode': 'LMB/RMB: vẽ với màu fg/bg, SHIFT: Vẽ ê-líp',\n            'Blur': 'Làm mờ',\n            'Noise': 'Làm nhiễu',\n            'Invert colors': 'Nghịch đảo màu',\n            'Grayscale': 'Độ xám',\n            'Sharpen': 'Làm sắc nét',\n            'Simple Blur': 'Làm mờ đơn giản',\n            'Radius': 'Bán kính',\n            'Iterations': 'Lặp đi lặp lại'\n        }\n    };\n});\ndefine('osjs-apps-draw/scheme.html',[], function() { return \"<application-window data-id=\\\"DrawWindow\\\">\\r\\n\\r\\n  <gui-vbox>\\r\\n    <!-- MENU BAR -->\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\" data-basis=\\\"auto\\\">\\r\\n      <gui-menu-bar>\\r\\n\\r\\n        <gui-menu-bar-entry data-label=\\\"LBL_FILE\\\">\\r\\n          <gui-menu data-id=\\\"SubmenuFile\\\">\\r\\n            <gui-menu-entry data-id=\\\"MenuNew\\\" data-label=\\\"LBL_NEW\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuOpen\\\" data-label=\\\"LBL_OPEN\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuSave\\\" data-label=\\\"LBL_SAVE\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuSaveAs\\\" data-label=\\\"LBL_SAVEAS\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuClose\\\" data-label=\\\"LBL_CLOSE\\\"></gui-menu-entry>\\r\\n          </gui-menu>\\r\\n        </gui-menu-bar-entry>\\r\\n\\r\\n      </gui-menu-bar>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <!-- CONTENT -->\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\" data-basis=\\\"auto\\\" data-fill=\\\"true\\\">\\r\\n\\r\\n      <gui-hbox class=\\\"gui-no-overflow\\\">\\r\\n        <gui-hbox-container data-id=\\\"Toolbar\\\">\\r\\n          <gui-toolbar data-orientation=\\\"vertical\\\" style=\\\"text-align:center\\\">\\r\\n            <gui-color-box data-id=\\\"Foreground\\\"></gui-color-box>\\r\\n            <gui-color-box data-id=\\\"Background\\\"></gui-color-box>\\r\\n            <gui-button data-id=\\\"tool-pointer\\\" data-group=\\\"tool\\\" data-tool-name=\\\"pointer\\\" data-icon=\\\"icons/stock-cursor-16.png\\\"></gui-button>\\r\\n            <gui-button data-id=\\\"tool-picker\\\" data-group=\\\"tool\\\" data-tool-name=\\\"picker\\\" data-icon=\\\"icons/stock-color-pick-from-screen-16.png\\\"></gui-button>\\r\\n            <gui-button data-id=\\\"tool-bucket\\\" data-group=\\\"tool\\\" data-tool-name=\\\"bucket\\\" data-icon=\\\"icons/stock-tool-bucket-fill-16.png\\\"></gui-button>\\r\\n            <gui-button data-id=\\\"tool-pencil\\\" data-group=\\\"tool\\\" data-tool-name=\\\"pencil\\\" data-icon=\\\"icons/stock-tool-pencil-16.png\\\"></gui-button>\\r\\n            <gui-button data-id=\\\"tool-path\\\" data-group=\\\"tool\\\" data-tool-name=\\\"path\\\" data-icon=\\\"icons/stock-tool-path-16.png\\\"></gui-button>\\r\\n            <gui-button data-id=\\\"tool-rectangle\\\" data-group=\\\"tool\\\" data-tool-name=\\\"rectangle\\\" data-icon=\\\"icons/stock-shape-square-16.png\\\"></gui-button>\\r\\n            <gui-button data-id=\\\"tool-circle\\\" data-group=\\\"tool\\\" data-tool-name=\\\"circle\\\" data-icon=\\\"icons/stock-shape-circle-16.png\\\"></gui-button>\\r\\n\\r\\n            <gui-button data-group=\\\"tool\\\" data-tool-name=\\\"cursor\\\" data-icon=\\\"icons/stock-cursor-16.png\\\" style=\\\"visibility:hidden;pointer-events:none\\\"></gui-button>\\r\\n          </gui-toolbar>\\r\\n        </gui-hbox-container>\\r\\n\\r\\n        <gui-hbox-container data-shrink=\\\"0\\\" data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n\\r\\n          <gui-vbox>\\r\\n            <!-- TOOL BAR -->\\r\\n            <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\" data-basis=\\\"auto\\\">\\r\\n              <gui-toolbar data-id=\\\"TopToolbar\\\">\\r\\n\\r\\n                <gui-label>Line join</gui-label>\\r\\n                <gui-select data-id=\\\"LineJoin\\\">\\r\\n                  <gui-select-option data-value=\\\"round\\\">Round</gui-select-option>\\r\\n                  <gui-select-option data-value=\\\"miter\\\">Miter</gui-select-option>\\r\\n                  <gui-select-option data-value=\\\"bevel\\\">Bevel</gui-select-option>\\r\\n                </gui-select>\\r\\n\\r\\n                <gui-label>Line width</gui-label>\\r\\n                <gui-select data-id=\\\"LineWidth\\\">\\r\\n                </gui-select>\\r\\n\\r\\n                <gui-checkbox data-id=\\\"LineStroke\\\" data-label=\\\"Enable stroke\\\"></gui-checkbox>\\r\\n\\r\\n              </gui-toolbar>\\r\\n            </gui-vbox-container>\\r\\n            <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\" data-basis=\\\"auto\\\" data-fill=\\\"true\\\" data-id=\\\"ScrollContainer\\\">\\r\\n              <gui-scroll-container data-id=\\\"ScrollView\\\">\\r\\n                <gui-canvas data-id=\\\"Canvas\\\">\\r\\n                </gui-canvas>\\r\\n              </gui-scroll-container>\\r\\n            </gui-vbox-container>\\r\\n          </gui-vbox>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <!-- STATUSBAR -->\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\" data-basis=\\\"auto\\\">\\r\\n      <gui-statusbar data-id=\\\"Statusbar\\\"></gui-statusbar>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n  </gui-vbox>\\r\\n\\r\\n\\r\\n</application-window>\\r\\n\"; });\ndefine('osjs-apps-draw/main',[\n    './locales',\n    \"./scheme.html\"\n], function (Translations,schemeHtml) {\n    'use strict';\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const GUI = OSjs.require('utils/gui');\n    const DOM = OSjs.require('utils/dom');\n    const Colors = OSjs.require('utils/colors');\n    const FileDataURL = OSjs.require('vfs/filedataurl');\n    const DefaultApplication = OSjs.require('helpers/default-application');\n    const DefaultApplicationWindow = OSjs.require('helpers/default-application-window');\n    const doTranslate = Locales.createLocalizer(Translations);\n    var DEFAULT_WIDTH = 1024;\n    var DEFAULT_HEIGHT = 768;\n    var tools = {\n        pointer: { statusText: '' },\n        picker: { statusText: 'LMB: Pick foreground-, RMB: Pick background color' },\n        bucket: { statusText: 'LMB: Fill with foreground-, RMB: Fill with background color' },\n        pencil: { statusText: 'LMB: Use foreground-, RMB: Use background color' },\n        path: { statusText: 'LMB: Use foreground-, RMB: Use background color' },\n        rectangle: { statusText: 'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle rectangle/square mode' },\n        circle: { statusText: 'LMB: Use foreground-, RMB: Use background color. SHIFT: Toggle circle/ellipse mode' }\n    };\n    var toolEvents = {\n        pointer: {},\n        picker: function () {\n            var imageData;\n            function pick(ev, args) {\n                var value = '#000000';\n                var t = ev.shiftKey || ev.button > 0 ? 'background' : 'foreground';\n                if (!imageData) {\n                    imageData = args.ctx.getImageData(0, 0, args.canvas.width, args.canvas.height).data;\n                }\n                var index = (args.pos.x + args.pos.y * args.canvas.width) * 4;\n                try {\n                    value = Colors.convertToHEX({\n                        r: imageData[index + 0],\n                        g: imageData[index + 1],\n                        b: imageData[index + 2],\n                        a: imageData[index + 3]\n                    });\n                } catch (e) {\n                }\n                args.win.setToolProperty(t, value);\n            }\n            return {\n                mousedown: pick,\n                mousemove: pick,\n                mouseup: function (ev, pos, canvas, ctx, win) {\n                    imageData = null;\n                }\n            };\n        }(),\n        bucket: {\n            mousedown: function (ev, args) {\n                var t = ev.shiftKey || ev.button > 0 ? 'background' : 'foreground';\n                args.ctx.fillStyle = args.win.tool[t];\n                args.ctx.fillRect(0, 0, args.canvas.width, args.canvas.height);\n            }\n        },\n        pencil: {\n            mousedown: function (ev, args) {\n                var t = ev.shiftKey || ev.button > 0 ? 'background' : 'foreground';\n                args.ctx.strokeStyle = args.win.tool[t];\n            },\n            mousemove: function (ev, args) {\n                args.ctx.beginPath();\n                args.ctx.moveTo(args.pos.x - 1, args.pos.y);\n                args.ctx.lineTo(args.pos.x, args.pos.y);\n                args.ctx.closePath();\n                args.ctx.stroke();\n            }\n        },\n        path: {\n            mousemove: function (ev, args) {\n                if (args.tmpContext) {\n                    args.tmpContext.clearRect(0, 0, args.tmpCanvas.width, args.tmpCanvas.height);\n                    args.tmpContext.beginPath();\n                    args.tmpContext.moveTo(args.start.x, args.start.y);\n                    args.tmpContext.lineTo(args.pos.x, args.pos.y);\n                    args.tmpContext.closePath();\n                    args.tmpContext.stroke();\n                }\n            }\n        },\n        rectangle: {\n            mousedown: function (ev, args) {\n                args.tmpContext.fillStyle = ev.button > 0 ? args.win.tool.background : args.win.tool.foreground;\n                args.tmpContext.strokeStyle = ev.button <= 0 ? args.win.tool.background : args.win.tool.foreground;\n            },\n            mousemove: function (ev, args) {\n                var x, y, w, h;\n                if (ev.shiftKey) {\n                    x = Math.min(args.pos.x, args.start.x);\n                    y = Math.min(args.pos.y, args.start.y);\n                    w = Math.abs(args.pos.x - args.start.x);\n                    h = Math.abs(args.pos.y - args.start.y);\n                } else {\n                    x = args.start.x;\n                    y = args.start.y;\n                    w = Math.abs(args.pos.x - args.start.x) * (args.pos.x < args.start.x ? -1 : 1);\n                    h = Math.abs(w) * (args.pos.y < args.start.y ? -1 : 1);\n                }\n                args.tmpContext.clearRect(0, 0, args.tmpCanvas.width, args.tmpCanvas.height);\n                if (w && h) {\n                    if (args.win.tool.lineStroke) {\n                        args.tmpContext.strokeRect(x, y, w, h);\n                    }\n                    args.tmpContext.fillRect(x, y, w, h);\n                }\n            }\n        },\n        circle: {\n            mousedown: function (ev, args) {\n                args.tmpContext.fillStyle = ev.button > 0 ? args.win.tool.background : args.win.tool.foreground;\n                args.tmpContext.strokeStyle = ev.button <= 0 ? args.win.tool.background : args.win.tool.foreground;\n            },\n            mousemove: function (ev, args) {\n                if (ev.shiftKey) {\n                    var width = Math.abs(args.start.x - args.pos.x);\n                    var height = Math.abs(args.start.y - args.pos.y);\n                    args.tmpContext.clearRect(0, 0, args.tmpCanvas.width, args.tmpCanvas.height);\n                    if (width > 0 && height > 0) {\n                        args.tmpContext.beginPath();\n                        args.tmpContext.moveTo(args.start.x, args.start.y - height * 2);\n                        args.tmpContext.bezierCurveTo(args.start.x + width * 2, args.start.y - height * 2, args.start.x + width * 2, args.start.y + height * 2, args.start.x, args.start.y + height * 2);\n                        args.tmpContext.bezierCurveTo(args.start.x - width * 2, args.start.y + height * 2, args.start.x - width * 2, args.start.y - height * 2, args.start.x, args.start.y - height * 2);\n                        args.tmpContext.closePath();\n                        if (args.win.tool.lineStroke) {\n                            args.tmpContext.stroke();\n                        }\n                        args.tmpContext.fill();\n                    }\n                } else {\n                    var x = Math.abs(args.start.x - args.pos.x);\n                    var y = Math.abs(args.start.y - args.pos.y);\n                    var r = Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2));\n                    args.tmpContext.clearRect(0, 0, args.tmpCanvas.width, args.tmpCanvas.height);\n                    if (r > 0) {\n                        args.tmpContext.beginPath();\n                        args.tmpContext.arc(args.start.x, args.start.y, r, 0, Math.PI * 2, true);\n                        args.tmpContext.closePath();\n                        if (args.win.tool.lineStroke) {\n                            args.tmpContext.stroke();\n                        }\n                        args.tmpContext.fill();\n                    }\n                }\n            }\n        }\n    };\n    class ApplicationDrawWindow extends DefaultApplicationWindow {\n        constructor(app, metadata, file) {\n            super('ApplicationDrawWindow', {\n                icon: metadata.icon,\n                title: metadata.name,\n                allow_drop: true,\n                min_width: 400,\n                min_height: 450,\n                width: 800,\n                height: 450,\n                translator: doTranslate\n            }, app, file);\n            this.tool = {\n                name: 'pointer',\n                background: '#ffffff',\n                foreground: '#000000',\n                lineJoin: 'round',\n                lineWidth: 1,\n                lineStroke: false\n            };\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            var self = this;\n            this._render('DrawWindow', schemeHtml);\n            var statusbar = this._find('Statusbar');\n            var canvas = this._find('Canvas').querySelector('canvas');\n            canvas.width = DEFAULT_WIDTH;\n            canvas.height = DEFAULT_HEIGHT;\n            var ctx = canvas.getContext('2d');\n            var startPos = {\n                x: 0,\n                y: 0\n            };\n            var cpos = {\n                x: 0,\n                y: 0\n            };\n            var tmpTools = [\n                'path',\n                'rectangle',\n                'circle'\n            ];\n            var tmpCanvas, tmpContext;\n            function createTempCanvas(ev) {\n                tmpCanvas = document.createElement('canvas');\n                tmpCanvas.width = canvas.width;\n                tmpCanvas.height = canvas.height;\n                tmpCanvas.style.position = 'absolute';\n                tmpCanvas.style.top = '0px';\n                tmpCanvas.style.left = '0px';\n                tmpCanvas.style.zIndex = 9999999999;\n                canvas.parentNode.appendChild(tmpCanvas);\n                var t = ev.shiftKey || ev.button > 0;\n                tmpContext = tmpCanvas.getContext('2d');\n                tmpContext.strokeStyle = t ? ctx.fillStyle : ctx.strokeStyle;\n                tmpContext.fillStyle = t ? ctx.strokeStyle : ctx.fillStyle;\n                tmpContext.lineWidth = ctx.lineWidth;\n                tmpContext.lineJoin = ctx.lineJoin;\n            }\n            function removeTempCanvas() {\n                DOM.$remove(tmpCanvas);\n                tmpContext = null;\n                tmpCanvas = null;\n            }\n            function toolAction(action, ev, pos, diff) {\n                if (action === 'down') {\n                    startPos = {\n                        x: pos.x,\n                        y: pos.y\n                    };\n                    removeTempCanvas();\n                    var elpos = DOM.$position(canvas);\n                    startPos.x = pos.x - elpos.left;\n                    startPos.y = pos.y - elpos.top;\n                    cpos = {\n                        x: startPos.x,\n                        y: startPos.y\n                    };\n                    ctx.strokeStyle = self.tool.foreground;\n                    ctx.fillStyle = self.tool.background;\n                    ctx.lineWidth = self.tool.lineWidth;\n                    ctx.lineJoin = self.tool.lineJoin;\n                    if (tmpTools.indexOf(self.tool.name) >= 0) {\n                        createTempCanvas(ev);\n                    }\n                } else if (action === 'move') {\n                    cpos.x = startPos.x + diff.x;\n                    cpos.y = startPos.y + diff.y;\n                } else if (action === 'up') {\n                    if (tmpCanvas && ctx) {\n                        ctx.drawImage(tmpCanvas, 0, 0);\n                    }\n                    removeTempCanvas();\n                    startPos = null;\n                }\n                if (toolEvents[self.tool.name] && toolEvents[self.tool.name]['mouse' + action]) {\n                    toolEvents[self.tool.name]['mouse' + action](ev, {\n                        pos: cpos,\n                        start: startPos,\n                        canvas: canvas,\n                        ctx: ctx,\n                        tmpContext: tmpContext,\n                        tmpCanvas: tmpCanvas,\n                        win: self\n                    });\n                }\n            }\n            GUI.createDrag(canvas, function (ev, pos) {\n                toolAction('down', ev, pos);\n            }, function (ev, diff, pos) {\n                toolAction('move', ev, pos, diff);\n            }, function (ev, pos) {\n                toolAction('up', ev, pos);\n                self.hasChanged = true;\n            });\n            this._find('Foreground').on('click', function () {\n                self.openColorDialog('foreground');\n            });\n            this._find('Background').on('click', function () {\n                self.openColorDialog('background');\n            });\n            var ts = Object.keys(tools);\n            ts.forEach(function (t) {\n                self._find('tool-' + t).on('click', function () {\n                    var stats = tools[t].statusText || '';\n                    statusbar.set('value', doTranslate(stats));\n                    self.setToolProperty('name', t);\n                });\n            });\n            var lineWidths = [];\n            for (var i = 1; i < 22; i++) {\n                lineWidths.push({\n                    label: i.toString(),\n                    value: i\n                });\n            }\n            this._find('LineWidth').add(lineWidths).on('change', function (ev) {\n                self.setToolProperty('lineWidth', parseInt(ev.detail, 10));\n            });\n            this._find('LineJoin').on('change', function (ev) {\n                self.setToolProperty('lineJoin', ev.detail);\n            });\n            this._find('LineStroke').on('change', function (ev) {\n                self.setToolProperty('lineStroke', ev.detail);\n            });\n            this.setToolProperty('background', null);\n            this.setToolProperty('foreground', null);\n            this.setToolProperty('lineJoin', null);\n            this.setToolProperty('lineWidth', null);\n            this.setToolProperty('lineStroke', null);\n            return root;\n        }\n        openColorDialog(param) {\n            var self = this;\n            var colorParam = null;\n            if (param === 'background') {\n                colorParam = doTranslate('Set background color');\n            } else if (param === 'foreground') {\n                colorParam = doTranslate('Set foreground color');\n            }\n            Dialog.create('Color', {\n                title: colorParam,\n                color: self.tool[param]\n            }, function (ev, button, result) {\n                if (button !== 'ok') {\n                    return;\n                }\n                self.setToolProperty(param, result.hex);\n            }, this);\n        }\n        setToolProperty(param, value) {\n            console.warn('setToolProperty', param, value);\n            if (typeof this.tool[param] !== 'undefined') {\n                if (value !== null) {\n                    this.tool[param] = value;\n                }\n            }\n            this._find('Foreground').set('value', this.tool.foreground);\n            this._find('Background').set('value', this.tool.background);\n            this._find('LineJoin').set('value', this.tool.lineJoin);\n            this._find('LineWidth').set('value', this.tool.lineWidth);\n            this._find('LineStroke').set('value', this.tool.lineStroke);\n        }\n        showFile(file, result) {\n            var self = this;\n            super.showFile(...arguments);\n            var canvas = this._find('Canvas').querySelector('canvas');\n            var ctx = canvas.getContext('2d');\n            function open(img) {\n                if (window.Uint8Array && img instanceof Uint8Array) {\n                    var image = ctx.createImageData(canvas.width, ctx.height);\n                    for (var i = 0; i < img.length; i++) {\n                        image.data[i] = img[i];\n                    }\n                    ctx.clearRect(0, 0, canvas.width, canvas.height);\n                    ctx.drawImage(image, 0, 0);\n                } else if (img instanceof Image || img instanceof HTMLImageElement) {\n                    canvas.width = img.width;\n                    canvas.height = img.height;\n                    ctx.clearRect(0, 0, img.width, img.height);\n                    ctx.drawImage(img, 0, 0);\n                }\n            }\n            if (result) {\n                this._toggleLoading(true);\n                var tmp = new Image();\n                tmp.onerror = function () {\n                    self._toggleLoading(false);\n                    alert('Failed to open image');\n                };\n                tmp.onload = function () {\n                    self._toggleLoading(false);\n                    open(this);\n                };\n                tmp.src = result;\n            } else {\n                canvas.width = DEFAULT_WIDTH;\n                canvas.height = DEFAULT_HEIGHT;\n                ctx.clearRect(0, 0, canvas.width, canvas.height);\n            }\n        }\n        getFileData() {\n            var canvas = this._find('Canvas').querySelector('canvas');\n            if (canvas) {\n                return new FileDataURL(canvas.toDataURL('image/png'));\n            }\n            return null;\n        }\n    }\n    class ApplicationDraw extends DefaultApplication {\n        constructor(args, metadata) {\n            super('ApplicationDraw', args, metadata, {\n                readData: false,\n                extension: 'png',\n                mime: 'image/png',\n                filename: 'New image.png',\n                filetypes: [{\n                        label: 'PNG Image',\n                        mime: 'image/png',\n                        extension: 'png'\n                    }]\n            });\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            const file = this._getArgument('file');\n            this._addWindow(new ApplicationDrawWindow(this, metadata, file));\n        }\n    }\n    OSjs.Applications.ApplicationDraw = ApplicationDraw;\n});\ndefine('osjs-apps-draw', ['osjs-apps-draw/main'], function (main) { return main; });\n\n"]}