{"version":3,"sources":["main.js"],"names":["define","Translations","FS","OSjs","require","Utils","Locales","Dialog","FileMetadata","DefaultApplication","DefaultApplicationWindow","doTranslate","createLocalizer","formatTime","secs","hr","Math","floor","min","sec","ApplicationMusicPlayerWindow","[object Object]","app","metadata","file","super","icon","title","name","auto_size","allow_drop","allow_resize","allow_maximize","width","height","translator","this","updated","seeking","wm","root","init","arguments","self","_render","label","_find","seeker","player","audio","$element","firstChild","set","buttonPlay","on","play","buttonPause","pause","ev","paused","currentTime","detail","e","updateTime","src","msg","target","error","code","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","_","create","_title","message","content","artist","filename","album","dirname","path","labelArtist","labelTitle","labelAlbum","_app","_api","then","info","Artist","Album","Title","Track","_destroyed","total","duration","current","unknown","isNaN","isFinite","time","format","Applications","ApplicationMusicPlayer","args","readData","settings","_getArgument","_addWindow","obj","_onMessage","win","_getMainWindow","openFile"],"mappings":"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","file":"../main.js","sourcesContent":["define(['./locales'], function (Translations) {\n    'use strict';\n    const FS = OSjs.require('utils/fs');\n    const Utils = OSjs.require('utils/misc');\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const FileMetadata = OSjs.require('vfs/file');\n    const DefaultApplication = OSjs.require('helpers/default-application');\n    const DefaultApplicationWindow = OSjs.require('helpers/default-application-window');\n    const doTranslate = Locales.createLocalizer(Translations);\n    function formatTime(secs) {\n        var hr = Math.floor(secs / 3600);\n        var min = Math.floor((secs - hr * 3600) / 60);\n        var sec = Math.floor(secs - hr * 3600 - min * 60);\n        if (min < 10) {\n            min = '0' + min;\n        }\n        if (sec < 10) {\n            sec = '0' + sec;\n        }\n        return min + ':' + sec;\n    }\n    class ApplicationMusicPlayerWindow extends DefaultApplicationWindow {\n        constructor(app, metadata, file) {\n            super('ApplicationMusicPlayerWindow', {\n                icon: metadata.icon,\n                title: metadata.name,\n                auto_size: true,\n                allow_drop: true,\n                allow_resize: false,\n                allow_maximize: false,\n                width: 370,\n                height: 260,\n                translator: doTranslate\n            }, app, file);\n            this.updated = 0;\n            this.seeking = false;\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            var self = this;\n            this._render('MusicPlayerWindow', require('osjs-scheme-loader!./scheme.html'));\n            var label = this._find('LabelTime');\n            var seeker = this._find('Seek');\n            var player = this._find('Player');\n            var audio = player.$element.firstChild;\n            this._find('ButtonStart').set('disabled', true);\n            this._find('ButtonRew').set('disabled', true);\n            var buttonPlay = this._find('ButtonPlay').set('disabled', true).on('click', function () {\n                audio.play();\n            });\n            var buttonPause = this._find('ButtonPause').set('disabled', true).on('click', function () {\n                audio.pause();\n            });\n            this._find('ButtonFwd').set('disabled', true);\n            this._find('ButtonEnd').set('disabled', true);\n            seeker.on('change', function (ev) {\n                self.seeking = false;\n                if (audio && !audio.paused) {\n                    try {\n                        audio.pause();\n                        if (ev) {\n                            audio.currentTime = ev.detail || 0;\n                        }\n                        audio.play();\n                    } catch (e) {\n                    }\n                }\n            });\n            player.on('play', function (ev) {\n                seeker.set('disabled', false);\n                buttonPause.set('disabled', false);\n                buttonPlay.set('disabled', true);\n            });\n            player.on('ended', function (ev) {\n                seeker.set('disabled', true);\n                buttonPause.set('disabled', true);\n            });\n            player.on('pause', function (ev) {\n                seeker.set('disabled', true);\n                buttonPause.set('disabled', false);\n                buttonPlay.set('disabled', false);\n            });\n            player.on('loadeddata', function (ev) {\n            });\n            player.on('timeupdate', function (ev) {\n                self.updateTime(label, seeker);\n            });\n            player.on('error', function (ev) {\n                if (!player.$element.src) {\n                    return;\n                }\n                var msg = null;\n                try {\n                    switch (ev.target.error.code) {\n                    case ev.target.error.MEDIA_ERR_ABORTED:\n                        msg = doTranslate('Playback aborted');\n                        break;\n                    case ev.target.error.MEDIA_ERR_NETWORK:\n                        msg = doTranslate('Network or communication error');\n                        break;\n                    case ev.target.error.MEDIA_ERR_DECODE:\n                        msg = doTranslate('Decoding failed. Corruption or unsupported media');\n                        break;\n                    case ev.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n                        msg = doTranslate('Media source not supported');\n                        break;\n                    default:\n                        msg = Locales._('ERR_APP_UNKNOWN_ERROR');\n                        break;\n                    }\n                } catch (e) {\n                    msg = Locales._('ERR_GENERIC_APP_FATAL_FMT', e);\n                }\n                if (msg) {\n                    Dialog.create('Alert', {\n                        title: self._title,\n                        message: msg\n                    }, null, self);\n                }\n            });\n            return root;\n        }\n        showFile(file, content) {\n            if (!file || !content) {\n                return;\n            }\n            var self = this;\n            var player = this._find('Player');\n            var seeker = this._find('Seek');\n            var audio = player.$element.firstChild;\n            seeker.on('mousedown', function () {\n                self.seeking = true;\n            });\n            seeker.on('mouseup', function () {\n                self.seeking = false;\n            });\n            var artist = file ? file.filename : '';\n            var album = file ? FS.dirname(file.path) : '';\n            var labelArtist = this._find('LabelArtist').set('value', '');\n            var labelTitle = this._find('LabelTitle').set('value', artist);\n            var labelAlbum = this._find('LabelAlbum').set('value', album);\n            this._find('LabelTime').set('value', '');\n            seeker.set('min', 0);\n            seeker.set('max', 0);\n            seeker.set('value', 0);\n            this.updated = 0;\n            this.seeking = false;\n            function getInfo() {\n                self._app._api('info', { filename: file.path }).then(info => {\n                    if (info) {\n                        if (info.Artist) {\n                            labelArtist.set('value', info.Artist);\n                        }\n                        if (info.Album) {\n                            labelAlbum.set('value', info.Album);\n                        }\n                        if (info.Title) {\n                            labelTitle.set('value', info.Track);\n                        }\n                    }\n                });\n            }\n            audio.src = content || '';\n            audio.play();\n            getInfo();\n        }\n        updateTime(label, seeker) {\n            if (this._destroyed) {\n                return;\n            }\n            var player = this._find('Player');\n            var audio = player.$element.firstChild;\n            var total = audio.duration;\n            var current = audio.currentTime;\n            var unknown = false;\n            if (isNaN(current) || !isFinite(current)) {\n                current = 0;\n            }\n            if (isNaN(total) || !isFinite(total)) {\n                total = current;\n                unknown = true;\n            }\n            var time = Utils.format('{0} / {1}', formatTime(current), unknown ? '<unknown>' : formatTime(total));\n            if (this.updated < 2) {\n                seeker.set('min', 0);\n                seeker.set('max', total);\n            } else {\n                this.updated++;\n            }\n            label.set('value', time);\n            if (!this.seeking) {\n                seeker.set('value', current);\n            }\n        }\n    }\n    class ApplicationMusicPlayer extends DefaultApplication {\n        constructor(args, metadata) {\n            super('ApplicationMusicPlayer', args, metadata, { readData: false });\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            const file = this._getArgument('file');\n            this._addWindow(new ApplicationMusicPlayerWindow(this, metadata, file));\n        }\n        _onMessage(msg, obj, args) {\n            super._onMessage(...arguments);\n            if (msg === 'attention' && obj && obj.file) {\n                var win = this._getMainWindow();\n                this.openFile(new FileMetadata(obj.file), win);\n            }\n        }\n    }\n    OSjs.Applications.ApplicationMusicPlayer = ApplicationMusicPlayer;\n});"]}