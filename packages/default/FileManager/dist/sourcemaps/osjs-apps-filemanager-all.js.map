{"version":3,"sources":["osjs-apps-filemanager-all.js"],"names":["define","bg_BG","Copying file...","Copying **{0}** to **{1}**","Refreshing...","Loading...","Create a new directory in **{0}**","Rename **{0}**","Delete **{0}** ?","de_DE","fr_FR","Create a new file in **{0}**","Selected {0} files, {1} dirs, {2}","Showing {0} files ({1} hidden), {2} dirs, {3}","ar_DZ","it_IT","ko_KR","nl_NL","no_NO","pl_PL","ru_RU","sk_SK","tr_TR","vi_VN","Translations","schemeHtml","FS","OSjs","require","VFS","FileMetadata","Application","Window","Dialog","Locales","Events","Utils","SettingsManager","MountManager","GUIElement","Clipboard","Keycodes","Config","Theme","Notification","doTranslate","createLocalizer","getSelected","view","selected","get","forEach","sub","data","shortcut","push","createUploadDialog","opts","cb","ref","destination","upload","file","create","dest","ev","btn","ufile","fromUpload","notificationWasDisplayed","ApplicationFileManagerWindow","[object Object]","app","metadata","path","settings","super","icon","title","name","allow_drop","width","height","translator","this","wasFileDropped","currentPath","currentSummary","viewOptions","argumentDefaults","ViewNavigation","ViewSide","history","historyIndex","self","settingsWatch","watch","_loaded","changePath","_on","item","src","dirname","dst","pathJoin","filename","copy","keyCode","shiftKey","ctrlKey","altKey","keyCombination","clip","getClipboard","Array","c","DELETE","rm","_find","unwatch","e","wm","root","init","arguments","viewType","ViewType","viewSide","viewNav","vfsOptions","cloneObject","scandirOptions","scandir","viewHidden","showHiddenFiles","viewExtension","showFileExtensions","_render","getConfig","window","location","protocol","match","_setWarning","menuMap","MenuClose","_close","MenuCreateFile","mkfile","MenuCreateDirectory","mkdir","MenuUpload","MenuRename","rename","MenuDelete","MenuInfo","info","MenuOpen","open","MenuDownload","download","MenuRefresh","MenuViewList","changeView","MenuViewTree","MenuViewIcon","MenuShowSidebar","toggleSidebar","MenuShowNavigation","toggleNavbar","MenuShowHidden","toggleHidden","MenuShowExtension","toggleExtension","MenuColumnFilename","toggleColumn","MenuColumnMIME","MenuColumnCreated","MenuColumnModified","MenuColumnSize","menuEvent","f","detail","func","id","on","contextMenu","viewMenu","set","changeHistory","pw","$element","curr","getAttribute","setAttribute","String","side","entries","entry","checkActivation","checkSelection","show","renderSideView","files","scheme","_scheme","sum","content","statusbar","length","directories","size","type","isShortcut","humanFileSize","toggleMenuItems","hidden","isFile","isDirectory","isShort","MODE_F","MODE_FD","createFromFile","updateModule","_destroyed","found","getModules","special","m","i","option","sideViewItems","classNames","mounted","isReadOnly","value","options","className","join","columns","label","getIcon","onCreated","nel","style","backgroundImage","clear","add","msg","getDefaultPath","updateSideView","chk","isDest","wasFileDroped","dir","selectFile","isNav","isInput","applyScroll","_toggleLoading","chdir","done","error","summary","_app","_setArgument","current","_setTitle","updateHistory","scroll","_setSetting","toggle","container","handle","parentNode","querySelector","hide","opt","key","instance","toggleVFSOption","col","viewColumns","indexOf","splice","Applications","ApplicationFileManager","args","_getArgument","obj","win","_getMainWindow","onMountEvent","onFileEvent","source","_addWindow","items","url","then","result","_toggleDisabled","buttons","message","format","button","_action","forceList","dialog","newName","newitem","replaceFilename","setRange","getFilenameRange","finished","write","exists","catch","_","__label","Promise","each","yes","no","res","callback","apply","concat","main"],"mappings":"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","file":"../osjs-apps-filemanager-all.js","sourcesContent":["define('osjs-apps-filemanager/locales',[],function () {\n    'use strict';\n    return {\n        bg_BG: {\n            'Copying file...': 'Копиране на файл...',\n            'Copying **{0}** to **{1}**': 'Копиране **{0}** към **{1}**',\n            'Refreshing...': 'Опресняване...',\n            'Loading...': 'Зареждане...',\n            'Create a new directory in **{0}**': 'Създаване на нова директория в **{0}**',\n            'Rename **{0}**': 'преименуване на **{0}**',\n            'Delete **{0}** ?': 'Изтриване на **{0}**?'\n        },\n        de_DE: {\n            'Copying file...': 'Kopiere Datei...',\n            'Copying **{0}** to **{1}**': 'Kopiere **{0}** nach **{1}**',\n            'Refreshing...': 'Aktualisiere...',\n            'Loading...': 'Lade...',\n            'Create a new directory in **{0}**': 'Erstelle ein neues Verzeichnis in **{0}**',\n            'Rename **{0}**': '**{0}** umbenennen',\n            'Delete **{0}** ?': '**{0}** löschen?'\n        },\n        fr_FR: {\n            'Copying file...': 'Copie de fichier...',\n            'Copying **{0}** to **{1}**': 'Copie de **{0}** à **{1}**',\n            'Refreshing...': 'Rafraichissement...',\n            'Loading...': 'Chargement...',\n            'Create a new file in **{0}**': 'Créer un nouveau fichier dans **{0}**',\n            'Create a new directory in **{0}**': 'Créer un nouveau dossier dans **{0}**',\n            'Rename **{0}**': 'Renommer **{0}**',\n            'Delete **{0}** ?': 'Supprimer **{0}** ?',\n            'Selected {0} files, {1} dirs, {2}': '{0} fichier(s) selectionné(s), {1} dossier(s), {2}',\n            'Showing {0} files ({1} hidden), {2} dirs, {3}': '{0} fichier(s) affiché(s) ({1} caché(s)), {2} dossier(s), {3}'\n        },\n        ar_DZ: {\n            'Copying file...': 'جاري نسخ الملف...',\n            'Copying **{0}** to **{1}**': 'نسخ من **{0}** إلى **{1}**',\n            'Refreshing...': 'جاري التحديث...',\n            'Loading...': 'جاري التحميل...',\n            'Create a new file in **{0}**': 'إنشاء ملف جديد في **{0}**',\n            'Create a new directory in **{0}**': 'إنشاء مجلد جديد في **{0}**',\n            'Rename **{0}**': 'إعادة التسمية **{0}**',\n            'Delete **{0}** ?': 'حذف **{0}** ?',\n            'Selected {0} files, {1} dirs, {2}': '{0} ملف مختار, {1} مجلد, {2}',\n            'Showing {0} files ({1} hidden), {2} dirs, {3}': '{0} ملف مرئي ({1} مخفي(s)), {2} مجلد, {3}'\n        },\n        it_IT: {\n            'Copying file...': 'Copiamento file...',\n            'Copying **{0}** to **{1}**': 'Copia **{0}** in **{1}**',\n            'Refreshing...': 'Ricarica...',\n            'Loading...': 'Caricamento...',\n            'Create a new file in **{0}**': 'Creazione nuovo file in **{0}**',\n            'Create a new directory in **{0}**': 'Creazione nuova cartella in **{0}**',\n            'Rename **{0}**': 'Rinomina **{0}**',\n            'Delete **{0}** ?': 'Cancellare **{0}** ?',\n            'Selected {0} files, {1} dirs, {2}': '{0} file selezionati, {1} cartelle, {2}',\n            'Showing {0} files ({1} hidden), {2} dirs, {3}': 'Mostrando {0} file(s) ({1} nascosti), {2} cartelle, {3}'\n        },\n        ko_KR: {\n            'Copying file...': '파일 복사...',\n            'Copying **{0}** to **{1}**': '**{0}**를 **{1}**으로 복사',\n            'Refreshing...': '새로고치는 중...',\n            'Loading...': '기다려주세요...',\n            'Create a new file in **{0}**': '**{0}**에 새 파일 만들기',\n            'Create a new directory in **{0}**': '**{0}**에 새 디렉토리 만들기',\n            'Rename **{0}**': '**{0}**의 이름 바꾸기',\n            'Delete **{0}** ?': '**{0}**을 삭제하시겠습니까?',\n            'Selected {0} files, {1} dirs, {2}': '{0} 개의 파일, {1} 개의 디렉토리가 선택됨, {2}',\n            'Showing {0} files ({1} hidden), {2} dirs, {3}': '{0} 개의 파일({1} 개의 숨긴 파일), {2} 개의 디렉토리가 존재, {3}'\n        },\n        nl_NL: {\n            'Copying file...': 'Bestand kopieren...',\n            'Copying **{0}** to **{1}**': 'Kopieer **{0}** naar **{1}**',\n            'Refreshing...': 'Vernieuwen...',\n            'Loading...': 'Laden...',\n            'Create a new directory in **{0}**': 'Maak een nieuwe map in **{0}**',\n            'Rename **{0}**': 'Hernoem **{0}**',\n            'Delete **{0}** ?': '**{0}** verwijderen?'\n        },\n        no_NO: {\n            'Copying file...': 'Kopierer fil...',\n            'Copying **{0}** to **{1}**': 'Kopierer **{0}** to **{1}**',\n            'Refreshing...': 'Gjenoppfrisker...',\n            'Loading...': 'Laster...',\n            'Create a new file in **{0}**': 'Opprett ny fil i **{0}**',\n            'Create a new directory in **{0}**': 'Opprett ny mappe i **{0}**',\n            'Rename **{0}**': 'Navngi **{0}**',\n            'Delete **{0}** ?': 'Slette **{0}** ?'\n        },\n        pl_PL: {\n            'Copying file...': 'Kopiowanie pliku...',\n            'Copying **{0}** to **{1}**': 'Kopiowanie **{0}** do **{1}**',\n            'Refreshing...': 'Odświeżanie...',\n            'Loading...': 'Ładowanie...',\n            'Create a new file in **{0}**': 'Utwórz nowy plik w **{0}**',\n            'Create a new directory in **{0}**': 'Utwórz nowy folder w **{0}**',\n            'Rename **{0}**': 'Zmień nazwę **{0}**',\n            'Delete **{0}** ?': 'Usunąć **{0}** ?',\n            'Selected {0} files, {1} dirs, {2}': 'Wybrane pliki: {0}, foldery: {1}, {2}',\n            'Showing {0} files ({1} hidden), {2} dirs, {3}': 'Pokazywane pliki: {0} /(ukryte: {1}, foldery: {2}, {3}'\n        },\n        ru_RU: {\n            'Copying file...': 'Копирование файла...',\n            'Copying **{0}** to **{1}**': 'Копирование **{0}** в **{1}**',\n            'Refreshing...': 'Обновление...',\n            'Loading...': 'Загрузка...',\n            'Create a new directory in **{0}**': 'Создать новый каталог в **{0}**',\n            'Rename **{0}**': 'Переименовать **{0}**',\n            'Delete **{0}** ?': 'Удалить **{0}** ?'\n        },\n        sk_SK: {\n            'Copying file...': 'Kopírujem súbor...',\n            'Copying **{0}** to **{1}**': 'Kopírujem **{0}** do **{1}**',\n            'Refreshing...': 'Obnovujem...',\n            'Loading...': 'Nahrávam...',\n            'Create a new file in **{0}**': 'Vytvor nový súbor v **{0}**',\n            'Create a new directory in **{0}**': 'Vytvor nový adresár v **{0}**',\n            'Rename **{0}**': 'Premenuj **{0}**',\n            'Delete **{0}** ?': 'Zmazať **{0}** ?'\n        },\n        tr_TR: {\n            'Copying file...': 'kopyalanıyor...',\n            'Copying **{0}** to **{1}**': '**{0}** dosyası  **{1}**e kopyalanıyor',\n            'Refreshing...': 'yenileniyor...',\n            'Loading...': 'yükleniyor...',\n            'Create a new directory in **{0}**': ' **{0}** içinde yeni bir klasör aç',\n            'Rename **{0}**': 'yeniden adlandır **{0}**',\n            'Delete **{0}** ?': 'sil **{0}**?'\n        },\n        vi_VN: {\n            'Copying file...': 'Đang sao chép...',\n            'Copying **{0}** to **{1}**': 'Đang chép **{0}** tới **{1}**',\n            'Refreshing...': 'Đang làm mới...',\n            'Loading...': 'Đang tải...',\n            'Create a new file in **{0}**': 'Tạo một tập tin mới trong **{0}**',\n            'Create a new directory in **{0}**': 'Tạo một thư mục mới trong **{0}**',\n            'Rename **{0}**': 'Đổi tên **{0}**',\n            'Delete **{0}** ?': 'Xóa **{0}**?',\n            'Selected {0} files, {1} dirs, {2}': 'Đã chọn {0} tập tin, {1} thư mục, {2}',\n            'Showing {0} files ({1} hidden), {2} dirs, {3}': 'Đang hiển thị {0} tập tin({1} bị ẩn), {2} thư mục, {3}'\n        }\n    };\n});\ndefine('osjs-apps-filemanager/scheme.html',[], function() { return \"<application-window data-id=\\\"FileManagerWindow\\\">\\r\\n\\r\\n  <gui-vbox>\\r\\n    <!-- MENU BAR -->\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\" data-basis=\\\"auto\\\">\\r\\n      <gui-menu-bar>\\r\\n\\r\\n        <gui-menu-bar-entry data-label=\\\"LBL_FILE\\\">\\r\\n          <gui-menu data-id=\\\"SubmenuFile\\\">\\r\\n            <gui-menu-entry data-id=\\\"MenuCreate\\\" data-label=\\\"LBL_CREATE\\\">\\r\\n              <gui-menu data-id=\\\"SubmenuCreate\\\">\\r\\n                <gui-menu-entry data-id=\\\"MenuCreateDirectory\\\" data-label=\\\"LBL_DIRECTORY\\\"></gui-menu-entry>\\r\\n                <gui-menu-entry data-id=\\\"MenuCreateFile\\\" data-label=\\\"LBL_FILE\\\"></gui-menu-entry>\\r\\n              </gui-menu>\\r\\n            </gui-menu-entry>\\r\\n\\r\\n            <gui-menu-entry data-id=\\\"MenuUpload\\\" data-label=\\\"LBL_UPLOAD\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuClose\\\" data-label=\\\"LBL_CLOSE\\\"></gui-menu-entry>\\r\\n          </gui-menu>\\r\\n        </gui-menu-bar-entry>\\r\\n\\r\\n        <gui-menu-bar-entry data-label=\\\"LBL_EDIT\\\">\\r\\n          <gui-menu data-id=\\\"SubmenuEdit\\\">\\r\\n            <gui-menu-entry data-id=\\\"MenuRename\\\" data-label=\\\"LBL_RENAME\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuDelete\\\" data-label=\\\"LBL_DELETE\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuInfo\\\" data-label=\\\"LBL_INFORMATION\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuOpen\\\" data-label=\\\"LBL_OPENWITH\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuDownload\\\" data-label=\\\"LBL_DOWNLOAD_COMP\\\"></gui-menu-entry>\\r\\n          </gui-menu>\\r\\n        </gui-menu-bar-entry>\\r\\n\\r\\n        <gui-menu-bar-entry data-label=\\\"LBL_VIEW\\\">\\r\\n          <gui-menu data-id=\\\"SubmenuView\\\">\\r\\n            <gui-menu-entry data-id=\\\"MenuRefresh\\\" data-label=\\\"LBL_REFRESH\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuShowSidebar\\\" data-label=\\\"LBL_SHOW_SIDEBAR\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuShowNavigation\\\" data-label=\\\"LBL_SHOW_NAVIGATION\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuShowHidden\\\" data-label=\\\"LBL_SHOW_HIDDENFILES\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuShowExtension\\\" data-label=\\\"LBL_SHOW_FILEEXTENSIONS\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"\\\" data-label=\\\"LBL_VIEWTYPE\\\">\\r\\n              <gui-menu>\\r\\n                <gui-menu-entry data-id=\\\"MenuViewList\\\" data-label=\\\"LBL_LISTVIEW\\\" data-type=\\\"radio\\\" data-group=\\\"ViewType\\\"></gui-menu-entry>\\r\\n                <gui-menu-entry data-id=\\\"MenuViewIcon\\\" data-label=\\\"LBL_ICONVIEW\\\" data-type=\\\"radio\\\" data-group=\\\"ViewType\\\"></gui-menu-entry>\\r\\n                <gui-menu-entry data-id=\\\"MenuViewTree\\\" data-label=\\\"LBL_TREEVIEW\\\" data-type=\\\"radio\\\" data-group=\\\"ViewType\\\"></gui-menu-entry>\\r\\n              </gui-menu>\\r\\n            </gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"\\\" data-label=\\\"LBL_SHOW_COLUMNS\\\">\\r\\n              <gui-menu>\\r\\n                <gui-menu-entry data-id=\\\"MenuColumnFilename\\\" data-label=\\\"LBL_FILENAME\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n                <gui-menu-entry data-id=\\\"MenuColumnMIME\\\" data-label=\\\"LBL_MIME\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n                <gui-menu-entry data-id=\\\"MenuColumnCreated\\\" data-label=\\\"LBL_CREATED\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n                <gui-menu-entry data-id=\\\"MenuColumnModified\\\" data-label=\\\"LBL_MODIFIED\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n                <gui-menu-entry data-id=\\\"MenuColumnSize\\\" data-label=\\\"LBL_SIZE\\\" data-type=\\\"checkbox\\\"></gui-menu-entry>\\r\\n              </gui-menu>\\r\\n            </gui-menu-entry>\\r\\n          </gui-menu>\\r\\n        </gui-menu-bar-entry>\\r\\n        <!-- CONTEXT MENU -->\\r\\n        <gui-menu-bar-entry data-id=\\\"ContextMenu\\\" data-label=\\\"LBL_CONTEXT\\\">\\r\\n            <gui-menu data-id=\\\"SubmenuContext\\\">\\r\\n              <gui-menu-entry data-id=\\\"MenuCreate\\\" data-label=\\\"LBL_CREATE\\\">\\r\\n            <gui-menu data-id=\\\"SubmenuCreate\\\">\\r\\n              <gui-menu-entry data-id=\\\"MenuCreateDirectory\\\" data-label=\\\"LBL_DIRECTORY\\\" data-func=\\\"MenuCreateDirectory\\\"></gui-menu-entry>\\r\\n              <gui-menu-entry data-id=\\\"MenuCreateFile\\\" data-label=\\\"LBL_FILE\\\" data-func=\\\"MenuCreateFile\\\"></gui-menu-entry>\\r\\n            </gui-menu>\\r\\n            </gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"ContextMenuUpload\\\" data-label=\\\"LBL_UPLOAD\\\" data-func=\\\"MenuUpload\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"ContextMenuRename\\\" data-label=\\\"LBL_RENAME\\\" data-func=\\\"MenuRename\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"ContextMenuDelete\\\" data-label=\\\"LBL_DELETE\\\" data-func=\\\"MenuDelete\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"ContextMenuInfo\\\" data-label=\\\"LBL_INFORMATION\\\" data-func=\\\"MenuInfo\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"ContextMenuOpen\\\" data-label=\\\"LBL_OPENWITH\\\" data-func=\\\"MenuOpen\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"ContextMenuDownload\\\" data-label=\\\"LBL_DOWNLOAD_COMP\\\" data-func=\\\"MenuDownload\\\"></gui-menu-entry>\\r\\n          </gui-menu>\\r\\n        </gui-menu-bar-entry>\\r\\n    </gui-menu-bar>\\r\\n  </gui-vbox-container>\\r\\n\\r\\n    <!-- TOOLBAR -->\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\" data-basis=\\\"auto\\\" data-id=\\\"ToolbarContainer\\\">\\r\\n      <gui-toolbar data-id=\\\"TopToolbar\\\" class=\\\"gui-flex\\\">\\r\\n\\r\\n        <gui-button data-icon=\\\"stock://16x16/actions/go-previous.png\\\" data-id=\\\"GoBack\\\"></gui-button>\\r\\n        <gui-button data-icon=\\\"stock://16x16/actions/go-next.png\\\" data-id=\\\"GoNext\\\"></gui-button>\\r\\n        <gui-button data-icon=\\\"stock://16x16/devices/drive-harddisk.png\\\" data-id=\\\"ToggleSideview\\\"></gui-button>\\r\\n        <gui-text class=\\\"gui-flex-grow\\\" data-id=\\\"GoLocation\\\" data-placeholder=\\\"location:///path\\\"></gui-text>\\r\\n\\r\\n      </gui-toolbar>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <!-- CONTENT -->\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\" data-basis=\\\"auto\\\" data-fill=\\\"true\\\">\\r\\n      <gui-paned-view data-id=\\\"PanedView\\\">\\r\\n        <!-- SIDE PANEL -->\\r\\n        <gui-paned-view-container data-basis=\\\"150px\\\" data-grow=\\\"0\\\" data-shrink=\\\"0\\\" data-multiple=\\\"false\\\" data-id=\\\"SideContainer\\\">\\r\\n          <gui-list-view data-id=\\\"SideView\\\" data-single-click=\\\"true\\\">\\r\\n          </gui-list-view>\\r\\n        </gui-paned-view-container>\\r\\n\\r\\n        <!-- FILE VIEW -->\\r\\n        <gui-paned-view-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\">\\r\\n          <gui-file-view data-id=\\\"FileView\\\">\\r\\n          </gui-file-view>\\r\\n        </gui-paned-view-container>\\r\\n      </gui-paned-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n\\r\\n    <!-- STATUSBAR -->\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\" data-basis=\\\"auto\\\">\\r\\n      <gui-statusbar data-id=\\\"Statusbar\\\"></gui-statusbar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n\\r\\n</application-window>\\r\\n\"; });\ndefine('osjs-apps-filemanager/main',[\n    './locales',\n    \"./scheme.html\"\n], function (Translations,schemeHtml) {\n    'use strict';\n    const FS = OSjs.require('utils/fs');\n    const VFS = OSjs.require('vfs/fs');\n    const FileMetadata = OSjs.require('vfs/file');\n    const Application = OSjs.require('core/application');\n    const Window = OSjs.require('core/window');\n    const Dialog = OSjs.require('core/dialog');\n    const Locales = OSjs.require('core/locales');\n    const Events = OSjs.require('utils/events');\n    const Utils = OSjs.require('utils/misc');\n    const SettingsManager = OSjs.require('core/settings-manager');\n    const MountManager = OSjs.require('core/mount-manager');\n    const GUIElement = OSjs.require('gui/element');\n    const Clipboard = OSjs.require('utils/clipboard');\n    const Keycodes = OSjs.require('utils/keycodes');\n    const Config = OSjs.require('core/config');\n    const Theme = OSjs.require('core/theme');\n    const Notification = OSjs.require('gui/notification');\n    const doTranslate = Locales.createLocalizer(Translations);\n    function getSelected(view) {\n        var selected = [];\n        (view.get('value') || []).forEach(function (sub) {\n            if (!sub.data.shortcut) {\n                selected.push(sub.data);\n            }\n        });\n        return selected;\n    }\n    function createUploadDialog(opts, cb, ref) {\n        var destination = opts.destination;\n        var upload = opts.file;\n        Dialog.create('FileUpload', {\n            dest: destination,\n            file: upload\n        }, function (ev, btn, ufile) {\n            if (btn !== 'ok' && btn !== 'complete') {\n                cb(false, false);\n            } else {\n                var file = FileMetadata.fromUpload(destination, ufile);\n                cb(false, file);\n            }\n        }, ref);\n    }\n    var notificationWasDisplayed = {};\n    class ApplicationFileManagerWindow extends Window {\n        constructor(app, metadata, path, settings) {\n            super('ApplicationFileManagerWindow', {\n                icon: metadata.icon,\n                title: metadata.name,\n                allow_drop: true,\n                width: 650,\n                height: 420,\n                translator: doTranslate\n            }, app);\n            this.wasFileDropped = false;\n            this.currentPath = path;\n            this.currentSummary = {};\n            this.viewOptions = Utils.argumentDefaults(settings || {}, {\n                ViewNavigation: true,\n                ViewSide: true\n            }, true);\n            this.history = [];\n            this.historyIndex = -1;\n            var self = this;\n            this.settingsWatch = SettingsManager.watch('VFS', function () {\n                if (self._loaded) {\n                    self.changePath();\n                }\n            });\n            this._on('drop:upload', function (ev, item) {\n                app.upload(self.currentPath, item, self);\n            });\n            this._on('drop:file', function (ev, src) {\n                if (FS.dirname(src.path) !== self.currentPath) {\n                    var dst = new FileMetadata(FS.pathJoin(self.currentPath, src.filename));\n                    self.wasFileDropped = dst;\n                    app.copy(src, dst, self);\n                }\n            });\n            this._on('keydown', function (ev, keyCode, shiftKey, ctrlKey, altKey) {\n                if (Events.keyCombination(ev, 'CTRL+V')) {\n                    var clip = Clipboard.getClipboard();\n                    if (clip && clip instanceof Array) {\n                        clip.forEach(function (c) {\n                            if (c && c instanceof FileMetadata) {\n                                var dst = new FileMetadata(FS.pathJoin(self.currentPath, c.filename));\n                                app.copy(c, dst, self);\n                            }\n                        });\n                    }\n                } else if (ev.keyCode === Keycodes.DELETE) {\n                    app.rm(getSelected(self._find('FileView')), self);\n                }\n            });\n            this._on('destroy', function () {\n                try {\n                    SettingsManager.unwatch(self.settingsWatch);\n                } catch (e) {\n                }\n            });\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            var self = this;\n            var view;\n            var viewType = this.viewOptions.ViewType || 'gui-list-view';\n            var viewSide = this.viewOptions.ViewSide === true;\n            var viewNav = this.viewOptions.ViewNavigation === true;\n            var vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n            var scandirOptions = vfsOptions.scandir || {};\n            var viewHidden = scandirOptions.showHiddenFiles === true;\n            var viewExtension = scandirOptions.showFileExtensions === true;\n            this._render('FileManagerWindow', schemeHtml);\n            if (Config.getConfig('Connection.Type') !== 'nw' && window.location.protocol.match(/^file/)) {\n                this._setWarning('VFS does not work when in standalone mode');\n            }\n            var menuMap = {\n                MenuClose: function () {\n                    self._close();\n                },\n                MenuCreateFile: function () {\n                    app.mkfile(self.currentPath, self);\n                },\n                MenuCreateDirectory: function () {\n                    app.mkdir(self.currentPath, self);\n                },\n                MenuUpload: function () {\n                    app.upload(self.currentPath, null, self);\n                },\n                MenuRename: function () {\n                    app.rename(getSelected(view), self);\n                },\n                MenuDelete: function () {\n                    app.rm(getSelected(view), self);\n                },\n                MenuInfo: function () {\n                    app.info(getSelected(view), self);\n                },\n                MenuOpen: function () {\n                    app.open(getSelected(view), self);\n                },\n                MenuDownload: function () {\n                    app.download(getSelected(view), self);\n                },\n                MenuRefresh: function () {\n                    self.changePath();\n                },\n                MenuViewList: function () {\n                    self.changeView('gui-list-view', true);\n                },\n                MenuViewTree: function () {\n                    self.changeView('gui-tree-view', true);\n                },\n                MenuViewIcon: function () {\n                    self.changeView('gui-icon-view', true);\n                },\n                MenuShowSidebar: function () {\n                    viewSide = self.toggleSidebar(!viewSide, true);\n                },\n                MenuShowNavigation: function () {\n                    viewNav = self.toggleNavbar(!viewNav, true);\n                },\n                MenuShowHidden: function () {\n                    viewHidden = self.toggleHidden(!viewHidden, true);\n                },\n                MenuShowExtension: function () {\n                    viewExtension = self.toggleExtension(!viewExtension, true);\n                },\n                MenuColumnFilename: function () {\n                    self.toggleColumn('filename', true);\n                },\n                MenuColumnMIME: function () {\n                    self.toggleColumn('mime', true);\n                },\n                MenuColumnCreated: function () {\n                    self.toggleColumn('ctime', true);\n                },\n                MenuColumnModified: function () {\n                    self.toggleColumn('mtime', true);\n                },\n                MenuColumnSize: function () {\n                    self.toggleColumn('size', true);\n                }\n            };\n            function menuEvent(ev) {\n                var f = ev.detail.func || ev.detail.id;\n                if (menuMap[f]) {\n                    menuMap[f]();\n                }\n            }\n            this._find('SubmenuFile').on('select', menuEvent);\n            var contextMenu = this._find('SubmenuContext').on('select', menuEvent);\n            this._find('SubmenuEdit').on('select', menuEvent);\n            var viewMenu = this._find('SubmenuView').on('select', menuEvent);\n            viewMenu.set('checked', 'MenuViewList', viewType === 'gui-list-view');\n            viewMenu.set('checked', 'MenuViewTree', viewType === 'gui-tree-view');\n            viewMenu.set('checked', 'MenuViewIcon', viewType === 'gui-icon-view');\n            viewMenu.set('checked', 'MenuShowSidebar', viewSide);\n            viewMenu.set('checked', 'MenuShowNavigation', viewNav);\n            viewMenu.set('checked', 'MenuShowHidden', viewHidden);\n            viewMenu.set('checked', 'MenuShowExtension', viewExtension);\n            this._find('GoLocation').on('enter', function (ev) {\n                self.changePath(ev.detail, null, false, true);\n            });\n            this._find('GoBack').on('click', function (ev) {\n                self.changeHistory(-1);\n            });\n            this._find('GoNext').on('click', function (ev) {\n                self.changeHistory(1);\n            });\n            var pw = this._find('PanedView');\n            this._find('ToggleSideview').on('click', function (ev) {\n                if (!pw.$element) {\n                    return;\n                }\n                var curr = pw.$element.getAttribute('data-toggled');\n                pw.$element.setAttribute('data-toggled', String(curr === 'true' ? false : true));\n            });\n            var side = this._find('SideView');\n            side.on('activate', function (ev) {\n                if (ev && ev.detail && ev.detail.entries) {\n                    var entry = ev.detail.entries[0];\n                    if (entry) {\n                        self.changePath(entry.data.root);\n                    }\n                }\n            });\n            view = this._find('FileView');\n            view.on('activate', function (ev) {\n                if (ev && ev.detail && ev.detail.entries) {\n                    self.checkActivation(ev.detail.entries);\n                }\n            });\n            view.on('select', function (ev) {\n                if (ev && ev.detail && ev.detail.entries) {\n                    self.checkSelection(ev.detail.entries);\n                }\n            });\n            view.on('contextmenu', function (ev) {\n                if (ev && ev.detail && ev.detail.entries) {\n                    self.checkSelection(ev.detail.entries);\n                }\n                contextMenu.show(ev);\n            });\n            this.renderSideView();\n            this.changeView(viewType, false);\n            this.toggleHidden(viewHidden, false);\n            this.toggleExtension(viewExtension, false);\n            this.toggleSidebar(viewSide, false);\n            this.toggleNavbar(viewNav, false);\n            this.changePath(this.currentPath);\n            this.toggleColumn();\n            return root;\n        }\n        checkSelection(files) {\n            files = files || [];\n            var scheme = this._scheme;\n            if (!scheme) {\n                return;\n            }\n            var self = this;\n            var content = '';\n            var statusbar = this._find('Statusbar');\n            var sum, label;\n            function toggleMenuItems(isFile, isDirectory, isShort) {\n                var MODE_F = !isFile || !!isDirectory;\n                var MODE_FD = !(isFile || isDirectory);\n                self._find('MenuRename').set('disabled', isShort || MODE_FD);\n                self._find('MenuDelete').set('disabled', isShort || MODE_FD);\n                self._find('MenuInfo').set('disabled', MODE_FD);\n                self._find('MenuDownload').set('disabled', MODE_F);\n                self._find('MenuOpen').set('disabled', MODE_F);\n                self._find('ContextMenuRename').set('disabled', isShort || MODE_FD);\n                self._find('ContextMenuDelete').set('disabled', isShort || MODE_FD);\n                self._find('ContextMenuInfo').set('disabled', MODE_FD);\n                self._find('ContextMenuDownload').set('disabled', MODE_F);\n                self._find('ContextMenuOpen').set('disabled', MODE_F);\n            }\n            if (files && files.length) {\n                sum = {\n                    files: 0,\n                    directories: 0,\n                    size: 0\n                };\n                files.forEach(function (f) {\n                    if (f.data.type === 'dir') {\n                        sum.directories++;\n                    } else {\n                        sum.files++;\n                        sum.size += f.data.size;\n                    }\n                });\n                var isShortcut = files.length === 1 ? files[0].data.shortcut === true : false;\n                label = 'Selected {0} files, {1} dirs, {2}';\n                content = doTranslate(label, sum.files, sum.directories, FS.humanFileSize(sum.size));\n                toggleMenuItems(sum.files, sum.directories, isShortcut);\n            } else {\n                sum = this.currentSummary;\n                if (sum) {\n                    label = 'Showing {0} files ({1} hidden), {2} dirs, {3}';\n                    content = doTranslate(label, sum.files, sum.hidden, sum.directories, FS.humanFileSize(sum.size));\n                }\n                toggleMenuItems(false, false, false);\n            }\n            statusbar.set('value', content);\n        }\n        checkActivation(files) {\n            var self = this;\n            (files || []).forEach(function (f) {\n                if (f.data.type === 'dir') {\n                    self.changePath(f.data.path);\n                    return false;\n                }\n                Application.createFromFile(new FileMetadata(f.data));\n                return true;\n            });\n        }\n        updateSideView(updateModule) {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            var found = null;\n            var path = this.currentPath || '/';\n            if (updateModule) {\n                this.renderSideView();\n            }\n            MountManager.getModules({ special: true }).forEach(function (m, i) {\n                if (path.match(m.option('match'))) {\n                    found = m.option('root');\n                }\n            });\n            var view = this._find('SideView');\n            view.set('selected', found, 'root');\n        }\n        renderSideView() {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            var sideViewItems = [];\n            MountManager.getModules({ special: true }).forEach(function (m, i) {\n                var classNames = [m.mounted() ? 'mounted' : 'unmounted'];\n                if (m.isReadOnly()) {\n                    classNames.push('readonly gui-has-emblem');\n                }\n                sideViewItems.push({\n                    value: m.options,\n                    className: classNames.join(' '),\n                    columns: [{\n                            label: m.option('title'),\n                            icon: Theme.getIcon(m.option('icon'))\n                        }],\n                    onCreated: function (nel) {\n                        if (m.isReadOnly()) {\n                            nel.style.backgroundImage = 'url(' + Theme.getIcon('emblems/emblem-readonly.png', '16x16') + ')';\n                        }\n                    }\n                });\n            });\n            var side = this._find('SideView');\n            side.clear();\n            side.add(sideViewItems);\n        }\n        onMountEvent(m, msg) {\n            if (m) {\n                if (msg === 'vfs:unmount') {\n                    if (this.currentPath.match(m.option('match'))) {\n                        this.changePath(Config.getDefaultPath());\n                    }\n                }\n                this.updateSideView(m);\n            }\n        }\n        onFileEvent(chk, isDest) {\n            if (this.currentPath === FS.dirname(chk.path) || this.currentPath === chk.path) {\n                this.changePath(null, this.wasFileDropped, false, false, !this.wasFileDroped);\n            }\n        }\n        changeHistory(dir) {\n            if (this.historyIndex !== -1) {\n                if (dir < 0) {\n                    if (this.historyIndex > 0) {\n                        this.historyIndex--;\n                    }\n                } else if (dir > 0) {\n                    if (this.historyIndex < this.history.length - 1) {\n                        this.historyIndex++;\n                    }\n                }\n                this.changePath(this.history[this.historyIndex], null, true);\n            }\n        }\n        changePath(dir, selectFile, isNav, isInput, applyScroll) {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            this.wasFileDropped = false;\n            dir = dir || this.currentPath;\n            var self = this;\n            var view = this._find('FileView');\n            function updateNavigation() {\n                self._find('GoLocation').set('value', dir);\n                self._find('GoBack').set('disabled', self.historyIndex <= 0);\n                self._find('GoNext').set('disabled', self.historyIndex < 0 || self.historyIndex >= self.history.length - 1);\n            }\n            function updateHistory(dir) {\n                if (!isNav) {\n                    if (self.historyIndex >= 0 && self.historyIndex < self.history.length - 1) {\n                        self.history = [];\n                    }\n                    var current = self.history[self.history.length - 1];\n                    if (current !== dir) {\n                        self.history.push(dir);\n                    }\n                    if (self.history.length > 1) {\n                        self.historyIndex = self.history.length - 1;\n                    } else {\n                        self.historyIndex = -1;\n                    }\n                }\n                if (isInput) {\n                    self.history = [dir];\n                    self.historyIndex = 0;\n                }\n                self._setTitle(dir, true);\n            }\n            this._toggleLoading(true);\n            view.chdir({\n                path: dir,\n                done: function (error, summary) {\n                    if (self._destroyed || !self._scheme) {\n                        return;\n                    }\n                    if (dir && !error) {\n                        self.currentPath = dir;\n                        self.currentSummary = summary;\n                        if (self._app) {\n                            self._app._setArgument('path', dir);\n                        }\n                        updateHistory(dir);\n                    }\n                    self._toggleLoading(false);\n                    self.checkSelection([]);\n                    self.updateSideView();\n                    if (selectFile && view) {\n                        view.set('selected', selectFile.filename, 'filename', { scroll: applyScroll });\n                    }\n                    updateNavigation();\n                }\n            });\n        }\n        changeView(viewType, set) {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            var view = this._find('FileView');\n            view.set('type', viewType, !!set);\n            if (set) {\n                this._app._setSetting('ViewType', viewType, true);\n            }\n        }\n        toggleSidebar(toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            this.viewOptions.ViewSide = toggle;\n            var container = this._find('SideContainer');\n            var handle = new GUIElement(container.$element.parentNode.querySelector('gui-paned-view-handle'));\n            if (toggle) {\n                container.show();\n                handle.show();\n            } else {\n                container.hide();\n                handle.hide();\n            }\n            if (set) {\n                this._app._setSetting('ViewSide', toggle, true);\n            }\n            return toggle;\n        }\n        toggleVFSOption(opt, key, toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            var view = this._find('FileView');\n            var vfsOptions = SettingsManager.instance('VFS');\n            var opts = { scandir: {} };\n            opts.scandir[opt] = toggle;\n            vfsOptions.set(null, opts, null, set);\n            view.set(key, toggle);\n            return toggle;\n        }\n        toggleHidden(toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            return this.toggleVFSOption('showHiddenFiles', 'dotfiles', toggle, set);\n        }\n        toggleExtension(toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            return this.toggleVFSOption('showFileExtensions', 'extensions', toggle, set);\n        }\n        toggleNavbar(toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            this.viewOptions.ViewNavigation = toggle;\n            var viewNav = this._find('ToolbarContainer');\n            if (toggle) {\n                viewNav.show();\n            } else {\n                viewNav.hide();\n            }\n            if (set) {\n                this._app._setSetting('ViewNavigation', toggle, true);\n            }\n            return toggle;\n        }\n        toggleColumn(col, set) {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            var vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n            var scandirOptions = vfsOptions.scandir || {};\n            var viewColumns = scandirOptions.columns || [\n                'filename',\n                'mime',\n                'size'\n            ];\n            if (col) {\n                var found = viewColumns.indexOf(col);\n                if (found >= 0) {\n                    viewColumns.splice(found, 1);\n                } else {\n                    viewColumns.push(col);\n                }\n                scandirOptions.columns = viewColumns;\n                SettingsManager.set('VFS', 'scandir', scandirOptions, set);\n            }\n            var viewMenu = this._find('SubmenuView');\n            viewMenu.set('checked', 'MenuColumnFilename', viewColumns.indexOf('filename') >= 0);\n            viewMenu.set('checked', 'MenuColumnMIME', viewColumns.indexOf('mime') >= 0);\n            viewMenu.set('checked', 'MenuColumnCreated', viewColumns.indexOf('ctime') >= 0);\n            viewMenu.set('checked', 'MenuColumnModified', viewColumns.indexOf('mtime') >= 0);\n            viewMenu.set('checked', 'MenuColumnSize', viewColumns.indexOf('size') >= 0);\n        }\n    }\n    class ApplicationFileManager extends Application {\n        constructor(args, metadata) {\n            super('ApplicationFileManager', args, metadata);\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            var self = this;\n            var path = this._getArgument('path') || Config.getDefaultPath();\n            this._on('vfs', function (msg, obj) {\n                var win = self._getMainWindow();\n                if (win) {\n                    if (msg === 'vfs:mount' || msg === 'vfs:unmount') {\n                        win.onMountEvent(obj, msg);\n                    } else {\n                        if (obj.destination) {\n                            win.onFileEvent(obj.destination, true);\n                            win.onFileEvent(obj.source);\n                        } else {\n                            win.onFileEvent(obj);\n                        }\n                    }\n                }\n            });\n            this._addWindow(new ApplicationFileManagerWindow(this, metadata, path, settings));\n        }\n        download(items) {\n            if (!items.length) {\n                return;\n            }\n            items.forEach(function (item) {\n                VFS.url(new FileMetadata(item), { download: true }).then(result => {\n                    return window.open(result);\n                }, { download: true });\n            });\n        }\n        rm(items, win) {\n            var self = this;\n            if (!items.length) {\n                return;\n            }\n            var files = [];\n            items.forEach(function (i) {\n                files.push(i.filename);\n            });\n            files = files.join(', ');\n            win._toggleDisabled(true);\n            Dialog.create('Confirm', {\n                buttons: [\n                    'yes',\n                    'no'\n                ],\n                message: Utils.format(doTranslate('Delete **{0}** ?'), files)\n            }, function (ev, button) {\n                win._toggleDisabled(false);\n                if (button !== 'ok' && button !== 'yes') {\n                    return;\n                }\n                items.forEach(function (item) {\n                    item = new FileMetadata(item);\n                    self._action('unlink', [item], function () {\n                        win.changePath(null);\n                    });\n                });\n            }, win);\n        }\n        info(items, win) {\n            if (!items.length) {\n                return;\n            }\n            items.forEach(function (item) {\n                if (item.type === 'file') {\n                    Dialog.create('FileInfo', { file: new FileMetadata(item) }, null, win);\n                }\n            });\n        }\n        open(items) {\n            if (!items.length) {\n                return;\n            }\n            items.forEach(function (item) {\n                if (item.type === 'file') {\n                    Application.createFromFile(new FileMetadata(item), { forceList: true });\n                }\n            });\n        }\n        rename(items, win) {\n            var self = this;\n            if (!items.length) {\n                return;\n            }\n            function rename(item, newName) {\n                item = new FileMetadata(item);\n                var newitem = new FileMetadata(item);\n                newitem.filename = newName;\n                newitem.path = FS.replaceFilename(item.path, newName);\n                self._action('move', [\n                    item,\n                    newitem\n                ], function (error) {\n                    if (!error) {\n                        win.changePath(null, newitem);\n                    }\n                });\n            }\n            items.forEach(function (item) {\n                var dialog = Dialog.create('Input', {\n                    message: doTranslate('Rename **{0}**', item.filename),\n                    value: item.filename\n                }, function (ev, button, result) {\n                    if (button === 'ok' && result) {\n                        rename(item, result);\n                    }\n                }, win);\n                dialog.setRange(FS.getFilenameRange(item.filename));\n            });\n        }\n        mkfile(dir, win) {\n            var self = this;\n            win._toggleDisabled(true);\n            function finished(write, item) {\n                win._toggleDisabled(false);\n                if (item) {\n                    VFS.write(item, '', {}, self).then(() => {\n                        return win.changePath(null, item);\n                    });\n                }\n            }\n            Dialog.create('Input', {\n                value: 'My new File',\n                message: doTranslate('Create a new file in **{0}**', dir)\n            }, function (ev, button, result) {\n                if (!result) {\n                    win._toggleDisabled(false);\n                    return;\n                }\n                var item = new FileMetadata(dir + '/' + result);\n                const done = (error, result) => {\n                    if (result) {\n                        win._toggleDisabled(true);\n                        Dialog.create('Confirm', {\n                            buttons: [\n                                'yes',\n                                'no'\n                            ],\n                            message: Locales._('DIALOG_FILE_OVERWRITE', item.filename)\n                        }, function (ev, button) {\n                            finished(button === 'yes' || button === 'ok', item);\n                        }, self);\n                    } else {\n                        finished(true, item);\n                    }\n                };\n                VFS.exists(item).then(done => {\n                    return done(false, result);\n                }).catch(done);\n            }, win);\n        }\n        mkdir(dir, win) {\n            var self = this;\n            win._toggleDisabled(true);\n            Dialog.create('Input', { message: doTranslate('Create a new directory in **{0}**', dir) }, function (ev, button, result) {\n                if (!result) {\n                    win._toggleDisabled(false);\n                    return;\n                }\n                var item = new FileMetadata(FS.pathJoin(dir, result));\n                self._action('mkdir', [item], function () {\n                    win._toggleDisabled(false);\n                    win.changePath(null, item);\n                });\n            }, win);\n        }\n        copy(src, dest, win) {\n            var self = this;\n            var dialog = Dialog.create('FileProgress', { message: doTranslate('Copying **{0}** to **{1}**', src.filename, dest.path) }, function () {\n            }, win);\n            win._toggleLoading(true);\n            const done = error => {\n                win._toggleLoading(false);\n                try {\n                    dialog._close();\n                } catch (e) {\n                }\n                if (error) {\n                    OSjs.error(Locales._('ERR_GENERIC_APP_FMT', self.__label), Locales._('ERR_GENERIC_APP_REQUEST'), error);\n                    return;\n                }\n            };\n            VFS.copy(src, dest, { dialog: dialog }, this._app).then(() => done(false)).catch(done);\n        }\n        upload(dest, files, win) {\n            var self = this;\n            function upload() {\n                win._toggleLoading(true);\n                function done(error, file) {\n                    win._toggleLoading(false);\n                    if (error) {\n                        OSjs.error(Locales._('ERR_GENERIC_APP_FMT', self.__label), Locales._('ERR_GENERIC_APP_REQUEST'), error);\n                    } else {\n                    }\n                }\n                if (files) {\n                    Promise.each(files, f => {\n                        return new Promise((yes, no) => {\n                            createUploadDialog({\n                                file: f,\n                                destination: dest\n                            }, function (error) {\n                                if (error) {\n                                    no(error);\n                                } else {\n                                    yes();\n                                }\n                            }, self);\n                        });\n                    }).then(res => done(null, res)).catch(done);\n                } else {\n                    createUploadDialog({ destination: dest }, done, self);\n                }\n            }\n            if (files) {\n                upload();\n            } else {\n                Dialog.create('FileUpload', { dest: dest }, function (ev, button, result) {\n                    if (result) {\n                        win.changePath(null, result);\n                    }\n                }, win);\n            }\n        }\n        showStorageNotification(type) {\n            if (notificationWasDisplayed[type]) {\n                return;\n            }\n            notificationWasDisplayed[type] = true;\n            Notification.create({\n                title: 'External Storage',\n                message: 'Using external services requires authorization. A popup-window may appear.',\n                icon: Theme.getIcon('status/dialog-information.png', '32x32')\n            });\n        }\n        _action(name, args, callback) {\n            callback = callback || function () {\n            };\n            VFS[name].apply(VFS, args.concat(null, this)).then(res => {\n                return callback(false, res);\n            }).catch(error => {\n                OSjs.error(Locales._('ERR_GENERIC_APP_FMT', this.__label), Locales._('ERR_GENERIC_APP_REQUEST'), error);\n                callback(error);\n            });\n        }\n    }\n    OSjs.Applications.ApplicationFileManager = ApplicationFileManager;\n});\ndefine('osjs-apps-filemanager', ['osjs-apps-filemanager/main'], function (main) { return main; });\n\n"]}