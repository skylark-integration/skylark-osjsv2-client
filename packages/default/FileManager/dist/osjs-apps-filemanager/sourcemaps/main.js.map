{"version":3,"sources":["main.js"],"names":["define","Translations","schemeHtml","FS","OSjs","require","VFS","FileMetadata","Application","Window","Dialog","Locales","Events","Utils","SettingsManager","MountManager","GUIElement","Clipboard","Keycodes","Config","Theme","Notification","doTranslate","createLocalizer","getSelected","view","selected","get","forEach","sub","data","shortcut","push","createUploadDialog","opts","cb","ref","destination","upload","file","create","dest","ev","btn","ufile","fromUpload","notificationWasDisplayed","ApplicationFileManagerWindow","[object Object]","app","metadata","path","settings","super","icon","title","name","allow_drop","width","height","translator","this","wasFileDropped","currentPath","currentSummary","viewOptions","argumentDefaults","ViewNavigation","ViewSide","history","historyIndex","self","settingsWatch","watch","_loaded","changePath","_on","item","src","dirname","dst","pathJoin","filename","copy","keyCode","shiftKey","ctrlKey","altKey","keyCombination","clip","getClipboard","Array","c","DELETE","rm","_find","unwatch","e","wm","root","init","arguments","viewType","ViewType","viewSide","viewNav","scandirOptions","cloneObject","scandir","viewHidden","showHiddenFiles","viewExtension","showFileExtensions","_render","getConfig","window","location","protocol","match","_setWarning","menuMap","MenuClose","_close","MenuCreateFile","mkfile","MenuCreateDirectory","mkdir","MenuUpload","MenuRename","rename","MenuDelete","MenuInfo","info","MenuOpen","open","MenuDownload","download","MenuRefresh","MenuViewList","changeView","MenuViewTree","MenuViewIcon","MenuShowSidebar","toggleSidebar","MenuShowNavigation","toggleNavbar","MenuShowHidden","toggleHidden","MenuShowExtension","toggleExtension","MenuColumnFilename","toggleColumn","MenuColumnMIME","MenuColumnCreated","MenuColumnModified","MenuColumnSize","menuEvent","f","detail","func","id","on","contextMenu","viewMenu","set","changeHistory","pw","$element","curr","getAttribute","setAttribute","String","entries","entry","checkActivation","checkSelection","show","renderSideView","files","_scheme","sum","content","statusbar","length","directories","size","type","isShortcut","humanFileSize","toggleMenuItems","hidden","isFile","isDirectory","isShort","MODE_F","MODE_FD","createFromFile","updateModule","_destroyed","found","getModules","special","m","i","option","sideViewItems","classNames","mounted","isReadOnly","value","options","className","join","columns","label","getIcon","onCreated","nel","style","backgroundImage","side","clear","add","msg","getDefaultPath","updateSideView","chk","isDest","wasFileDroped","dir","selectFile","isNav","isInput","applyScroll","_toggleLoading","chdir","done","error","summary","_app","_setArgument","_setTitle","updateHistory","scroll","_setSetting","toggle","container","handle","parentNode","querySelector","hide","opt","key","vfsOptions","instance","toggleVFSOption","col","viewColumns","indexOf","splice","Applications","ApplicationFileManager","args","_getArgument","obj","win","_getMainWindow","onMountEvent","onFileEvent","source","_addWindow","items","url","then","result","_toggleDisabled","buttons","message","format","button","_action","forceList","newName","newitem","replaceFilename","setRange","getFilenameRange","finished","write","exists","catch","_","dialog","__label","Promise","each","yes","no","res","callback","apply","concat"],"mappings":"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","file":"../main.js","sourcesContent":["define([\n    './locales',\n    \"./scheme.html\"\n], function (Translations,schemeHtml) {\n    'use strict';\n    const FS = OSjs.require('utils/fs');\n    const VFS = OSjs.require('vfs/fs');\n    const FileMetadata = OSjs.require('vfs/file');\n    const Application = OSjs.require('core/application');\n    const Window = OSjs.require('core/window');\n    const Dialog = OSjs.require('core/dialog');\n    const Locales = OSjs.require('core/locales');\n    const Events = OSjs.require('utils/events');\n    const Utils = OSjs.require('utils/misc');\n    const SettingsManager = OSjs.require('core/settings-manager');\n    const MountManager = OSjs.require('core/mount-manager');\n    const GUIElement = OSjs.require('gui/element');\n    const Clipboard = OSjs.require('utils/clipboard');\n    const Keycodes = OSjs.require('utils/keycodes');\n    const Config = OSjs.require('core/config');\n    const Theme = OSjs.require('core/theme');\n    const Notification = OSjs.require('gui/notification');\n    const doTranslate = Locales.createLocalizer(Translations);\n    function getSelected(view) {\n        var selected = [];\n        (view.get('value') || []).forEach(function (sub) {\n            if (!sub.data.shortcut) {\n                selected.push(sub.data);\n            }\n        });\n        return selected;\n    }\n    function createUploadDialog(opts, cb, ref) {\n        var destination = opts.destination;\n        var upload = opts.file;\n        Dialog.create('FileUpload', {\n            dest: destination,\n            file: upload\n        }, function (ev, btn, ufile) {\n            if (btn !== 'ok' && btn !== 'complete') {\n                cb(false, false);\n            } else {\n                var file = FileMetadata.fromUpload(destination, ufile);\n                cb(false, file);\n            }\n        }, ref);\n    }\n    var notificationWasDisplayed = {};\n    class ApplicationFileManagerWindow extends Window {\n        constructor(app, metadata, path, settings) {\n            super('ApplicationFileManagerWindow', {\n                icon: metadata.icon,\n                title: metadata.name,\n                allow_drop: true,\n                width: 650,\n                height: 420,\n                translator: doTranslate\n            }, app);\n            this.wasFileDropped = false;\n            this.currentPath = path;\n            this.currentSummary = {};\n            this.viewOptions = Utils.argumentDefaults(settings || {}, {\n                ViewNavigation: true,\n                ViewSide: true\n            }, true);\n            this.history = [];\n            this.historyIndex = -1;\n            var self = this;\n            this.settingsWatch = SettingsManager.watch('VFS', function () {\n                if (self._loaded) {\n                    self.changePath();\n                }\n            });\n            this._on('drop:upload', function (ev, item) {\n                app.upload(self.currentPath, item, self);\n            });\n            this._on('drop:file', function (ev, src) {\n                if (FS.dirname(src.path) !== self.currentPath) {\n                    var dst = new FileMetadata(FS.pathJoin(self.currentPath, src.filename));\n                    self.wasFileDropped = dst;\n                    app.copy(src, dst, self);\n                }\n            });\n            this._on('keydown', function (ev, keyCode, shiftKey, ctrlKey, altKey) {\n                if (Events.keyCombination(ev, 'CTRL+V')) {\n                    var clip = Clipboard.getClipboard();\n                    if (clip && clip instanceof Array) {\n                        clip.forEach(function (c) {\n                            if (c && c instanceof FileMetadata) {\n                                var dst = new FileMetadata(FS.pathJoin(self.currentPath, c.filename));\n                                app.copy(c, dst, self);\n                            }\n                        });\n                    }\n                } else if (ev.keyCode === Keycodes.DELETE) {\n                    app.rm(getSelected(self._find('FileView')), self);\n                }\n            });\n            this._on('destroy', function () {\n                try {\n                    SettingsManager.unwatch(self.settingsWatch);\n                } catch (e) {\n                }\n            });\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            var self = this;\n            var view;\n            var viewType = this.viewOptions.ViewType || 'gui-list-view';\n            var viewSide = this.viewOptions.ViewSide === true;\n            var viewNav = this.viewOptions.ViewNavigation === true;\n            var vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n            var scandirOptions = vfsOptions.scandir || {};\n            var viewHidden = scandirOptions.showHiddenFiles === true;\n            var viewExtension = scandirOptions.showFileExtensions === true;\n            this._render('FileManagerWindow', schemeHtml);\n            if (Config.getConfig('Connection.Type') !== 'nw' && window.location.protocol.match(/^file/)) {\n                this._setWarning('VFS does not work when in standalone mode');\n            }\n            var menuMap = {\n                MenuClose: function () {\n                    self._close();\n                },\n                MenuCreateFile: function () {\n                    app.mkfile(self.currentPath, self);\n                },\n                MenuCreateDirectory: function () {\n                    app.mkdir(self.currentPath, self);\n                },\n                MenuUpload: function () {\n                    app.upload(self.currentPath, null, self);\n                },\n                MenuRename: function () {\n                    app.rename(getSelected(view), self);\n                },\n                MenuDelete: function () {\n                    app.rm(getSelected(view), self);\n                },\n                MenuInfo: function () {\n                    app.info(getSelected(view), self);\n                },\n                MenuOpen: function () {\n                    app.open(getSelected(view), self);\n                },\n                MenuDownload: function () {\n                    app.download(getSelected(view), self);\n                },\n                MenuRefresh: function () {\n                    self.changePath();\n                },\n                MenuViewList: function () {\n                    self.changeView('gui-list-view', true);\n                },\n                MenuViewTree: function () {\n                    self.changeView('gui-tree-view', true);\n                },\n                MenuViewIcon: function () {\n                    self.changeView('gui-icon-view', true);\n                },\n                MenuShowSidebar: function () {\n                    viewSide = self.toggleSidebar(!viewSide, true);\n                },\n                MenuShowNavigation: function () {\n                    viewNav = self.toggleNavbar(!viewNav, true);\n                },\n                MenuShowHidden: function () {\n                    viewHidden = self.toggleHidden(!viewHidden, true);\n                },\n                MenuShowExtension: function () {\n                    viewExtension = self.toggleExtension(!viewExtension, true);\n                },\n                MenuColumnFilename: function () {\n                    self.toggleColumn('filename', true);\n                },\n                MenuColumnMIME: function () {\n                    self.toggleColumn('mime', true);\n                },\n                MenuColumnCreated: function () {\n                    self.toggleColumn('ctime', true);\n                },\n                MenuColumnModified: function () {\n                    self.toggleColumn('mtime', true);\n                },\n                MenuColumnSize: function () {\n                    self.toggleColumn('size', true);\n                }\n            };\n            function menuEvent(ev) {\n                var f = ev.detail.func || ev.detail.id;\n                if (menuMap[f]) {\n                    menuMap[f]();\n                }\n            }\n            this._find('SubmenuFile').on('select', menuEvent);\n            var contextMenu = this._find('SubmenuContext').on('select', menuEvent);\n            this._find('SubmenuEdit').on('select', menuEvent);\n            var viewMenu = this._find('SubmenuView').on('select', menuEvent);\n            viewMenu.set('checked', 'MenuViewList', viewType === 'gui-list-view');\n            viewMenu.set('checked', 'MenuViewTree', viewType === 'gui-tree-view');\n            viewMenu.set('checked', 'MenuViewIcon', viewType === 'gui-icon-view');\n            viewMenu.set('checked', 'MenuShowSidebar', viewSide);\n            viewMenu.set('checked', 'MenuShowNavigation', viewNav);\n            viewMenu.set('checked', 'MenuShowHidden', viewHidden);\n            viewMenu.set('checked', 'MenuShowExtension', viewExtension);\n            this._find('GoLocation').on('enter', function (ev) {\n                self.changePath(ev.detail, null, false, true);\n            });\n            this._find('GoBack').on('click', function (ev) {\n                self.changeHistory(-1);\n            });\n            this._find('GoNext').on('click', function (ev) {\n                self.changeHistory(1);\n            });\n            var pw = this._find('PanedView');\n            this._find('ToggleSideview').on('click', function (ev) {\n                if (!pw.$element) {\n                    return;\n                }\n                var curr = pw.$element.getAttribute('data-toggled');\n                pw.$element.setAttribute('data-toggled', String(curr === 'true' ? false : true));\n            });\n            var side = this._find('SideView');\n            side.on('activate', function (ev) {\n                if (ev && ev.detail && ev.detail.entries) {\n                    var entry = ev.detail.entries[0];\n                    if (entry) {\n                        self.changePath(entry.data.root);\n                    }\n                }\n            });\n            view = this._find('FileView');\n            view.on('activate', function (ev) {\n                if (ev && ev.detail && ev.detail.entries) {\n                    self.checkActivation(ev.detail.entries);\n                }\n            });\n            view.on('select', function (ev) {\n                if (ev && ev.detail && ev.detail.entries) {\n                    self.checkSelection(ev.detail.entries);\n                }\n            });\n            view.on('contextmenu', function (ev) {\n                if (ev && ev.detail && ev.detail.entries) {\n                    self.checkSelection(ev.detail.entries);\n                }\n                contextMenu.show(ev);\n            });\n            this.renderSideView();\n            this.changeView(viewType, false);\n            this.toggleHidden(viewHidden, false);\n            this.toggleExtension(viewExtension, false);\n            this.toggleSidebar(viewSide, false);\n            this.toggleNavbar(viewNav, false);\n            this.changePath(this.currentPath);\n            this.toggleColumn();\n            return root;\n        }\n        checkSelection(files) {\n            files = files || [];\n            var scheme = this._scheme;\n            if (!scheme) {\n                return;\n            }\n            var self = this;\n            var content = '';\n            var statusbar = this._find('Statusbar');\n            var sum, label;\n            function toggleMenuItems(isFile, isDirectory, isShort) {\n                var MODE_F = !isFile || !!isDirectory;\n                var MODE_FD = !(isFile || isDirectory);\n                self._find('MenuRename').set('disabled', isShort || MODE_FD);\n                self._find('MenuDelete').set('disabled', isShort || MODE_FD);\n                self._find('MenuInfo').set('disabled', MODE_FD);\n                self._find('MenuDownload').set('disabled', MODE_F);\n                self._find('MenuOpen').set('disabled', MODE_F);\n                self._find('ContextMenuRename').set('disabled', isShort || MODE_FD);\n                self._find('ContextMenuDelete').set('disabled', isShort || MODE_FD);\n                self._find('ContextMenuInfo').set('disabled', MODE_FD);\n                self._find('ContextMenuDownload').set('disabled', MODE_F);\n                self._find('ContextMenuOpen').set('disabled', MODE_F);\n            }\n            if (files && files.length) {\n                sum = {\n                    files: 0,\n                    directories: 0,\n                    size: 0\n                };\n                files.forEach(function (f) {\n                    if (f.data.type === 'dir') {\n                        sum.directories++;\n                    } else {\n                        sum.files++;\n                        sum.size += f.data.size;\n                    }\n                });\n                var isShortcut = files.length === 1 ? files[0].data.shortcut === true : false;\n                label = 'Selected {0} files, {1} dirs, {2}';\n                content = doTranslate(label, sum.files, sum.directories, FS.humanFileSize(sum.size));\n                toggleMenuItems(sum.files, sum.directories, isShortcut);\n            } else {\n                sum = this.currentSummary;\n                if (sum) {\n                    label = 'Showing {0} files ({1} hidden), {2} dirs, {3}';\n                    content = doTranslate(label, sum.files, sum.hidden, sum.directories, FS.humanFileSize(sum.size));\n                }\n                toggleMenuItems(false, false, false);\n            }\n            statusbar.set('value', content);\n        }\n        checkActivation(files) {\n            var self = this;\n            (files || []).forEach(function (f) {\n                if (f.data.type === 'dir') {\n                    self.changePath(f.data.path);\n                    return false;\n                }\n                Application.createFromFile(new FileMetadata(f.data));\n                return true;\n            });\n        }\n        updateSideView(updateModule) {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            var found = null;\n            var path = this.currentPath || '/';\n            if (updateModule) {\n                this.renderSideView();\n            }\n            MountManager.getModules({ special: true }).forEach(function (m, i) {\n                if (path.match(m.option('match'))) {\n                    found = m.option('root');\n                }\n            });\n            var view = this._find('SideView');\n            view.set('selected', found, 'root');\n        }\n        renderSideView() {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            var sideViewItems = [];\n            MountManager.getModules({ special: true }).forEach(function (m, i) {\n                var classNames = [m.mounted() ? 'mounted' : 'unmounted'];\n                if (m.isReadOnly()) {\n                    classNames.push('readonly gui-has-emblem');\n                }\n                sideViewItems.push({\n                    value: m.options,\n                    className: classNames.join(' '),\n                    columns: [{\n                            label: m.option('title'),\n                            icon: Theme.getIcon(m.option('icon'))\n                        }],\n                    onCreated: function (nel) {\n                        if (m.isReadOnly()) {\n                            nel.style.backgroundImage = 'url(' + Theme.getIcon('emblems/emblem-readonly.png', '16x16') + ')';\n                        }\n                    }\n                });\n            });\n            var side = this._find('SideView');\n            side.clear();\n            side.add(sideViewItems);\n        }\n        onMountEvent(m, msg) {\n            if (m) {\n                if (msg === 'vfs:unmount') {\n                    if (this.currentPath.match(m.option('match'))) {\n                        this.changePath(Config.getDefaultPath());\n                    }\n                }\n                this.updateSideView(m);\n            }\n        }\n        onFileEvent(chk, isDest) {\n            if (this.currentPath === FS.dirname(chk.path) || this.currentPath === chk.path) {\n                this.changePath(null, this.wasFileDropped, false, false, !this.wasFileDroped);\n            }\n        }\n        changeHistory(dir) {\n            if (this.historyIndex !== -1) {\n                if (dir < 0) {\n                    if (this.historyIndex > 0) {\n                        this.historyIndex--;\n                    }\n                } else if (dir > 0) {\n                    if (this.historyIndex < this.history.length - 1) {\n                        this.historyIndex++;\n                    }\n                }\n                this.changePath(this.history[this.historyIndex], null, true);\n            }\n        }\n        changePath(dir, selectFile, isNav, isInput, applyScroll) {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            this.wasFileDropped = false;\n            dir = dir || this.currentPath;\n            var self = this;\n            var view = this._find('FileView');\n            function updateNavigation() {\n                self._find('GoLocation').set('value', dir);\n                self._find('GoBack').set('disabled', self.historyIndex <= 0);\n                self._find('GoNext').set('disabled', self.historyIndex < 0 || self.historyIndex >= self.history.length - 1);\n            }\n            function updateHistory(dir) {\n                if (!isNav) {\n                    if (self.historyIndex >= 0 && self.historyIndex < self.history.length - 1) {\n                        self.history = [];\n                    }\n                    var current = self.history[self.history.length - 1];\n                    if (current !== dir) {\n                        self.history.push(dir);\n                    }\n                    if (self.history.length > 1) {\n                        self.historyIndex = self.history.length - 1;\n                    } else {\n                        self.historyIndex = -1;\n                    }\n                }\n                if (isInput) {\n                    self.history = [dir];\n                    self.historyIndex = 0;\n                }\n                self._setTitle(dir, true);\n            }\n            this._toggleLoading(true);\n            view.chdir({\n                path: dir,\n                done: function (error, summary) {\n                    if (self._destroyed || !self._scheme) {\n                        return;\n                    }\n                    if (dir && !error) {\n                        self.currentPath = dir;\n                        self.currentSummary = summary;\n                        if (self._app) {\n                            self._app._setArgument('path', dir);\n                        }\n                        updateHistory(dir);\n                    }\n                    self._toggleLoading(false);\n                    self.checkSelection([]);\n                    self.updateSideView();\n                    if (selectFile && view) {\n                        view.set('selected', selectFile.filename, 'filename', { scroll: applyScroll });\n                    }\n                    updateNavigation();\n                }\n            });\n        }\n        changeView(viewType, set) {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            var view = this._find('FileView');\n            view.set('type', viewType, !!set);\n            if (set) {\n                this._app._setSetting('ViewType', viewType, true);\n            }\n        }\n        toggleSidebar(toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            this.viewOptions.ViewSide = toggle;\n            var container = this._find('SideContainer');\n            var handle = new GUIElement(container.$element.parentNode.querySelector('gui-paned-view-handle'));\n            if (toggle) {\n                container.show();\n                handle.show();\n            } else {\n                container.hide();\n                handle.hide();\n            }\n            if (set) {\n                this._app._setSetting('ViewSide', toggle, true);\n            }\n            return toggle;\n        }\n        toggleVFSOption(opt, key, toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            var view = this._find('FileView');\n            var vfsOptions = SettingsManager.instance('VFS');\n            var opts = { scandir: {} };\n            opts.scandir[opt] = toggle;\n            vfsOptions.set(null, opts, null, set);\n            view.set(key, toggle);\n            return toggle;\n        }\n        toggleHidden(toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            return this.toggleVFSOption('showHiddenFiles', 'dotfiles', toggle, set);\n        }\n        toggleExtension(toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            return this.toggleVFSOption('showFileExtensions', 'extensions', toggle, set);\n        }\n        toggleNavbar(toggle, set) {\n            if (this._destroyed || !this._scheme) {\n                return null;\n            }\n            this.viewOptions.ViewNavigation = toggle;\n            var viewNav = this._find('ToolbarContainer');\n            if (toggle) {\n                viewNav.show();\n            } else {\n                viewNav.hide();\n            }\n            if (set) {\n                this._app._setSetting('ViewNavigation', toggle, true);\n            }\n            return toggle;\n        }\n        toggleColumn(col, set) {\n            if (this._destroyed || !this._scheme) {\n                return;\n            }\n            var vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n            var scandirOptions = vfsOptions.scandir || {};\n            var viewColumns = scandirOptions.columns || [\n                'filename',\n                'mime',\n                'size'\n            ];\n            if (col) {\n                var found = viewColumns.indexOf(col);\n                if (found >= 0) {\n                    viewColumns.splice(found, 1);\n                } else {\n                    viewColumns.push(col);\n                }\n                scandirOptions.columns = viewColumns;\n                SettingsManager.set('VFS', 'scandir', scandirOptions, set);\n            }\n            var viewMenu = this._find('SubmenuView');\n            viewMenu.set('checked', 'MenuColumnFilename', viewColumns.indexOf('filename') >= 0);\n            viewMenu.set('checked', 'MenuColumnMIME', viewColumns.indexOf('mime') >= 0);\n            viewMenu.set('checked', 'MenuColumnCreated', viewColumns.indexOf('ctime') >= 0);\n            viewMenu.set('checked', 'MenuColumnModified', viewColumns.indexOf('mtime') >= 0);\n            viewMenu.set('checked', 'MenuColumnSize', viewColumns.indexOf('size') >= 0);\n        }\n    }\n    class ApplicationFileManager extends Application {\n        constructor(args, metadata) {\n            super('ApplicationFileManager', args, metadata);\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            var self = this;\n            var path = this._getArgument('path') || Config.getDefaultPath();\n            this._on('vfs', function (msg, obj) {\n                var win = self._getMainWindow();\n                if (win) {\n                    if (msg === 'vfs:mount' || msg === 'vfs:unmount') {\n                        win.onMountEvent(obj, msg);\n                    } else {\n                        if (obj.destination) {\n                            win.onFileEvent(obj.destination, true);\n                            win.onFileEvent(obj.source);\n                        } else {\n                            win.onFileEvent(obj);\n                        }\n                    }\n                }\n            });\n            this._addWindow(new ApplicationFileManagerWindow(this, metadata, path, settings));\n        }\n        download(items) {\n            if (!items.length) {\n                return;\n            }\n            items.forEach(function (item) {\n                VFS.url(new FileMetadata(item), { download: true }).then(result => {\n                    return window.open(result);\n                }, { download: true });\n            });\n        }\n        rm(items, win) {\n            var self = this;\n            if (!items.length) {\n                return;\n            }\n            var files = [];\n            items.forEach(function (i) {\n                files.push(i.filename);\n            });\n            files = files.join(', ');\n            win._toggleDisabled(true);\n            Dialog.create('Confirm', {\n                buttons: [\n                    'yes',\n                    'no'\n                ],\n                message: Utils.format(doTranslate('Delete **{0}** ?'), files)\n            }, function (ev, button) {\n                win._toggleDisabled(false);\n                if (button !== 'ok' && button !== 'yes') {\n                    return;\n                }\n                items.forEach(function (item) {\n                    item = new FileMetadata(item);\n                    self._action('unlink', [item], function () {\n                        win.changePath(null);\n                    });\n                });\n            }, win);\n        }\n        info(items, win) {\n            if (!items.length) {\n                return;\n            }\n            items.forEach(function (item) {\n                if (item.type === 'file') {\n                    Dialog.create('FileInfo', { file: new FileMetadata(item) }, null, win);\n                }\n            });\n        }\n        open(items) {\n            if (!items.length) {\n                return;\n            }\n            items.forEach(function (item) {\n                if (item.type === 'file') {\n                    Application.createFromFile(new FileMetadata(item), { forceList: true });\n                }\n            });\n        }\n        rename(items, win) {\n            var self = this;\n            if (!items.length) {\n                return;\n            }\n            function rename(item, newName) {\n                item = new FileMetadata(item);\n                var newitem = new FileMetadata(item);\n                newitem.filename = newName;\n                newitem.path = FS.replaceFilename(item.path, newName);\n                self._action('move', [\n                    item,\n                    newitem\n                ], function (error) {\n                    if (!error) {\n                        win.changePath(null, newitem);\n                    }\n                });\n            }\n            items.forEach(function (item) {\n                var dialog = Dialog.create('Input', {\n                    message: doTranslate('Rename **{0}**', item.filename),\n                    value: item.filename\n                }, function (ev, button, result) {\n                    if (button === 'ok' && result) {\n                        rename(item, result);\n                    }\n                }, win);\n                dialog.setRange(FS.getFilenameRange(item.filename));\n            });\n        }\n        mkfile(dir, win) {\n            var self = this;\n            win._toggleDisabled(true);\n            function finished(write, item) {\n                win._toggleDisabled(false);\n                if (item) {\n                    VFS.write(item, '', {}, self).then(() => {\n                        return win.changePath(null, item);\n                    });\n                }\n            }\n            Dialog.create('Input', {\n                value: 'My new File',\n                message: doTranslate('Create a new file in **{0}**', dir)\n            }, function (ev, button, result) {\n                if (!result) {\n                    win._toggleDisabled(false);\n                    return;\n                }\n                var item = new FileMetadata(dir + '/' + result);\n                const done = (error, result) => {\n                    if (result) {\n                        win._toggleDisabled(true);\n                        Dialog.create('Confirm', {\n                            buttons: [\n                                'yes',\n                                'no'\n                            ],\n                            message: Locales._('DIALOG_FILE_OVERWRITE', item.filename)\n                        }, function (ev, button) {\n                            finished(button === 'yes' || button === 'ok', item);\n                        }, self);\n                    } else {\n                        finished(true, item);\n                    }\n                };\n                VFS.exists(item).then(done => {\n                    return done(false, result);\n                }).catch(done);\n            }, win);\n        }\n        mkdir(dir, win) {\n            var self = this;\n            win._toggleDisabled(true);\n            Dialog.create('Input', { message: doTranslate('Create a new directory in **{0}**', dir) }, function (ev, button, result) {\n                if (!result) {\n                    win._toggleDisabled(false);\n                    return;\n                }\n                var item = new FileMetadata(FS.pathJoin(dir, result));\n                self._action('mkdir', [item], function () {\n                    win._toggleDisabled(false);\n                    win.changePath(null, item);\n                });\n            }, win);\n        }\n        copy(src, dest, win) {\n            var self = this;\n            var dialog = Dialog.create('FileProgress', { message: doTranslate('Copying **{0}** to **{1}**', src.filename, dest.path) }, function () {\n            }, win);\n            win._toggleLoading(true);\n            const done = error => {\n                win._toggleLoading(false);\n                try {\n                    dialog._close();\n                } catch (e) {\n                }\n                if (error) {\n                    OSjs.error(Locales._('ERR_GENERIC_APP_FMT', self.__label), Locales._('ERR_GENERIC_APP_REQUEST'), error);\n                    return;\n                }\n            };\n            VFS.copy(src, dest, { dialog: dialog }, this._app).then(() => done(false)).catch(done);\n        }\n        upload(dest, files, win) {\n            var self = this;\n            function upload() {\n                win._toggleLoading(true);\n                function done(error, file) {\n                    win._toggleLoading(false);\n                    if (error) {\n                        OSjs.error(Locales._('ERR_GENERIC_APP_FMT', self.__label), Locales._('ERR_GENERIC_APP_REQUEST'), error);\n                    } else {\n                    }\n                }\n                if (files) {\n                    Promise.each(files, f => {\n                        return new Promise((yes, no) => {\n                            createUploadDialog({\n                                file: f,\n                                destination: dest\n                            }, function (error) {\n                                if (error) {\n                                    no(error);\n                                } else {\n                                    yes();\n                                }\n                            }, self);\n                        });\n                    }).then(res => done(null, res)).catch(done);\n                } else {\n                    createUploadDialog({ destination: dest }, done, self);\n                }\n            }\n            if (files) {\n                upload();\n            } else {\n                Dialog.create('FileUpload', { dest: dest }, function (ev, button, result) {\n                    if (result) {\n                        win.changePath(null, result);\n                    }\n                }, win);\n            }\n        }\n        showStorageNotification(type) {\n            if (notificationWasDisplayed[type]) {\n                return;\n            }\n            notificationWasDisplayed[type] = true;\n            Notification.create({\n                title: 'External Storage',\n                message: 'Using external services requires authorization. A popup-window may appear.',\n                icon: Theme.getIcon('status/dialog-information.png', '32x32')\n            });\n        }\n        _action(name, args, callback) {\n            callback = callback || function () {\n            };\n            VFS[name].apply(VFS, args.concat(null, this)).then(res => {\n                return callback(false, res);\n            }).catch(error => {\n                OSjs.error(Locales._('ERR_GENERIC_APP_FMT', this.__label), Locales._('ERR_GENERIC_APP_REQUEST'), error);\n                callback(error);\n            });\n        }\n    }\n    OSjs.Applications.ApplicationFileManager = ApplicationFileManager;\n});"]}