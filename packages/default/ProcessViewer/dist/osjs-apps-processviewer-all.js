/**
 * osjs-apps-processviewer - 
 * @author 
 * @version v1.0.0
 * @link 
 * @license 
 */
!function(e,t){var i=t.define,require=t.require,r="function"==typeof i&&i.amd,n=!r&&"undefined"!=typeof exports;if(!r&&!i){var s={};i=t.define=function(e,t,i){"function"==typeof i?(s[e]={factory:i,deps:t.map(function(t){return function(e,t){if("."!==e[0])return e;var i=t.split("/"),r=e.split("/");i.pop();for(var n=0;n<r.length;n++)"."!=r[n]&&(".."==r[n]?i.pop():i.push(r[n]));return i.join("/")}(t,e)}),resolved:!1,exports:null},require(e)):s[e]={factory:null,resolved:!0,exports:i}},require=t.require=function(e){if(!s.hasOwnProperty(e))throw new Error("Module "+e+" has not been defined");var module=s[e];if(!module.resolved){var i=[];module.deps.forEach(function(e){i.push(require(e))}),module.exports=module.factory.apply(t,i)||null,module.resolved=!0}return module.exports}}if(!i)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(e,require){const t=OSjs.require("core/window"),i=OSjs.require("core/application");class r extends t{constructor(e,t){super("ApplicationProcessViewerWindow",{icon:t.icon,title:t.name,width:400,height:300},e),this.interval=null}init(e,t){const r=super.init(...arguments);this._render("ProcessViewerWindow",require("osjs-scheme-loader!scheme.html"));var n=this._find("View");function s(){var e=new Date,t=[];i.getProcesses().forEach(function(i){if(i){var r=e-i.__started,n={value:i.__pid,id:i.__pid,columns:[{label:i.__pname},{label:i.__pid.toString(),textalign:"right"},{label:r.toString(),textalign:"right"}]};t.push(n)}}),n.patch(t)}return n.set("columns",[{label:"Name"},{label:"PID",size:"60px",textalign:"right"},{label:"Alive",size:"60px",textalign:"right"}]),this._find("ButtonKill").on("click",function(){var e=n.get("selected");e&&e[0]&&void 0!==e[0].data&&i.kill(e[0].data)}),this.interval=setInterval(function(){s()},1e3),s(),r}destroy(){super.destroy(...arguments),this.interval=clearInterval(this.interval)}}OSjs.Applications.ApplicationProcessViewer=class extends i{constructor(e,t){super("ApplicationProcessViewer",e,t)}init(e,t){super.init(...arguments),this._addWindow(new r(this,t))}},e("osjs-apps-processviewer",["osjs-apps-processviewer/main"],function(e){return e}),e("osjs-apps-processviewer/main",function(){})}(i,require),!r){var o=require("skylark-langx/skylark");n?module.exports=o:t.skylarkjs=o}}(0,this);
//# sourceMappingURL=sourcemaps/osjs-apps-processviewer-all.js.map
