{"version":3,"sources":["main.js"],"names":["define","schemeHtml","DefaultApplication","OSjs","require","DefaultApplicationWindow","ApplicationTextpadWindow","[object Object]","app","metadata","file","super","allow_drop","icon","title","name","width","height","wmRef","root","init","arguments","this","_render","_find","on","hasChanged","updateFile","gel","$element","focus","content","set","showFile","get","_focus","Applications","ApplicationTextpad","args","extension","mime","filename","settings","_getArgument","_addWindow"],"mappings":";;;;;;;AAAAA,QACI,iBACD,SAAUC,GACb,MAAMC,EAAqBC,KAAKC,QAAQ,+BAClCC,EAA2BF,KAAKC,QAAQ,4CAExCE,UAAiCD,EAErCE,YAAYC,EAAKC,EAAUC,GACzBC,MAAM,4BACJC,YAAY,EACZC,KAAMJ,EAASI,KACfC,MAAOL,EAASM,KAChBC,MAAO,IACPC,OAAQ,KACPT,EAAKE,GAGVH,KAAKW,EAAOV,GACV,MAAMW,EAAOR,MAAMS,QAAQC,WAS3B,OANAC,KAAKC,QAAQ,gBAAiBtB,GAE9BqB,KAAKE,MAAM,QAAQC,GAAG,QAAS,KAC7BH,KAAKI,YAAa,IAGbP,EAGTZ,WAAWG,GACTC,MAAMgB,cAAcN,WAEpB,MAAMO,EAAMN,KAAKE,MAAM,QAClBI,GACHA,EAAIC,SAASC,QAIjBvB,SAASG,EAAMqB,GACb,MAAMH,EAAMN,KAAKE,MAAM,QAClBI,GACHA,EAAII,IAAI,QAASD,GAAW,IAG9BpB,MAAMsB,YAAYZ,WAGpBd,cACE,IAAIqB,EAAMN,KAAKE,MAAM,QACrB,OAAOI,EAAMA,EAAIM,IAAI,SAAW,GAGlC3B,SACE,GAAKI,MAAMwB,UAAUd,WAAa,CAChC,IAAIO,EAAMN,KAAKE,MAAM,QAMrB,OALKI,GACEA,EAAIC,UACPD,EAAIC,SAASC,SAGV,EAET,OAAO,GAwBX3B,KAAKiC,aAAaC,iCApBenC,EAE/BK,YAAY+B,EAAM7B,GAChBE,MAAM,qBAAsB2B,EAAM7B,GAChC8B,UAAW,MACXC,KAAM,aACNC,SAAU,sBAIdlC,KAAKmC,EAAUjC,GACbE,MAAMS,QAAQC,WAEd,MAAMX,EAAOY,KAAKqB,aAAa,QAE/BrB,KAAKsB,WAAW,IAAItC,EAAyBgB,KAAMb,EAAUC","file":"../main.js","sourcesContent":["define([\r\n    \"./scheme.html\"\r\n], function (schemeHtml) {\r\nconst DefaultApplication = OSjs.require('helpers/default-application');\r\nconst DefaultApplicationWindow = OSjs.require('helpers/default-application-window');\r\n\r\nclass ApplicationTextpadWindow extends DefaultApplicationWindow {\r\n\r\n  constructor(app, metadata, file) {\r\n    super('ApplicationTextpadWindow', {\r\n      allow_drop: true,\r\n      icon: metadata.icon,\r\n      title: metadata.name,\r\n      width: 450,\r\n      height: 300\r\n    }, app, file);\r\n  }\r\n\r\n  init(wmRef, app) {\r\n    const root = super.init(...arguments);\r\n\r\n    // Load and set up scheme (GUI) here\r\n    this._render('TextpadWindow', schemeHtml);\r\n\r\n    this._find('Text').on('input', () => {\r\n      this.hasChanged = true;\r\n    });\r\n\r\n    return root;\r\n  }\r\n\r\n  updateFile(file) {\r\n    super.updateFile(...arguments);\r\n\r\n    const gel = this._find('Text');\r\n    if ( gel ) {\r\n      gel.$element.focus();\r\n    }\r\n  }\r\n\r\n  showFile(file, content) {\r\n    const gel = this._find('Text');\r\n    if ( gel ) {\r\n      gel.set('value', content || '');\r\n    }\r\n\r\n    super.showFile(...arguments);\r\n  }\r\n\r\n  getFileData() {\r\n    var gel = this._find('Text');\r\n    return gel ? gel.get('value') : '';\r\n  }\r\n\r\n  _focus() {\r\n    if ( super._focus(...arguments) ) {\r\n      var gel = this._find('Text');\r\n      if ( gel ) {\r\n        if ( gel.$element ) {\r\n          gel.$element.focus();\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nclass ApplicationTextpad extends DefaultApplication {\r\n\r\n  constructor(args, metadata) {\r\n    super('ApplicationTextpad', args, metadata, {\r\n      extension: 'txt',\r\n      mime: 'text/plain',\r\n      filename: 'New text file.txt'\r\n    });\r\n  }\r\n\r\n  init(settings, metadata) {\r\n    super.init(...arguments);\r\n\r\n    const file = this._getArgument('file');\r\n\r\n    this._addWindow(new ApplicationTextpadWindow(this, metadata, file));\r\n  }\r\n\r\n}\r\n\r\nOSjs.Applications.ApplicationTextpad = ApplicationTextpad;\r\n\r\n});"]}