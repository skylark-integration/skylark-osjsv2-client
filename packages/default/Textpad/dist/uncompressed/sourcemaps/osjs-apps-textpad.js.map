{"version":3,"sources":["osjs-apps-textpad.js"],"names":[],"mappingsfile":"../osjs-apps-textpad.js","sourcesContent":["define('osjs-apps-textpad/scheme.html',[], function() { return \"<application-window data-id=\\\"TextpadWindow\\\">\\r\\n\\r\\n  <gui-vbox>\\r\\n    <!-- MENU BAR -->\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\" data-basis=\\\"auto\\\">\\r\\n      <gui-menu-bar>\\r\\n\\r\\n        <gui-menu-bar-entry data-label=\\\"LBL_FILE\\\">\\r\\n          <gui-menu data-id=\\\"SubmenuFile\\\">\\r\\n            <gui-menu-entry data-id=\\\"MenuNew\\\" data-label=\\\"LBL_NEW\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuOpen\\\" data-label=\\\"LBL_OPEN\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuSave\\\" data-label=\\\"LBL_SAVE\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuSaveAs\\\" data-label=\\\"LBL_SAVEAS\\\"></gui-menu-entry>\\r\\n            <gui-menu-entry data-id=\\\"MenuClose\\\" data-label=\\\"LBL_CLOSE\\\"></gui-menu-entry>\\r\\n          </gui-menu>\\r\\n        </gui-menu-bar-entry>\\r\\n\\r\\n      </gui-menu-bar>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <!-- CONTENT -->\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\" data-basis=\\\"auto\\\" data-fill=\\\"true\\\">\\r\\n      <gui-textarea data-id=\\\"Text\\\"></gui-textarea>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <!-- STATUSBAR -->\\r\\n    <!--\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\" data-basis=\\\"auto\\\">\\r\\n      <gui-statusbar data-id=\\\"Statusbar\\\"></gui-statusbar>\\r\\n    </gui-vbox-container>\\r\\n    -->\\r\\n\\r\\n  </gui-vbox>\\r\\n\\r\\n\\r\\n</application-window>\\r\\n\"; });\ndefine('osjs-apps-textpad/main',[\r\n    \"./scheme.html\"\r\n], function (schemeHtml) {\r\nconst DefaultApplication = OSjs.require('helpers/default-application');\r\nconst DefaultApplicationWindow = OSjs.require('helpers/default-application-window');\r\n\r\nclass ApplicationTextpadWindow extends DefaultApplicationWindow {\r\n\r\n  constructor(app, metadata, file) {\r\n    super('ApplicationTextpadWindow', {\r\n      allow_drop: true,\r\n      icon: metadata.icon,\r\n      title: metadata.name,\r\n      width: 450,\r\n      height: 300\r\n    }, app, file);\r\n  }\r\n\r\n  init(wmRef, app) {\r\n    const root = super.init(...arguments);\r\n\r\n    // Load and set up scheme (GUI) here\r\n    this._render('TextpadWindow', schemeHtml);\r\n\r\n    this._find('Text').on('input', () => {\r\n      this.hasChanged = true;\r\n    });\r\n\r\n    return root;\r\n  }\r\n\r\n  updateFile(file) {\r\n    super.updateFile(...arguments);\r\n\r\n    const gel = this._find('Text');\r\n    if ( gel ) {\r\n      gel.$element.focus();\r\n    }\r\n  }\r\n\r\n  showFile(file, content) {\r\n    const gel = this._find('Text');\r\n    if ( gel ) {\r\n      gel.set('value', content || '');\r\n    }\r\n\r\n    super.showFile(...arguments);\r\n  }\r\n\r\n  getFileData() {\r\n    var gel = this._find('Text');\r\n    return gel ? gel.get('value') : '';\r\n  }\r\n\r\n  _focus() {\r\n    if ( super._focus(...arguments) ) {\r\n      var gel = this._find('Text');\r\n      if ( gel ) {\r\n        if ( gel.$element ) {\r\n          gel.$element.focus();\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n\r\nclass ApplicationTextpad extends DefaultApplication {\r\n\r\n  constructor(args, metadata) {\r\n    super('ApplicationTextpad', args, metadata, {\r\n      extension: 'txt',\r\n      mime: 'text/plain',\r\n      filename: 'New text file.txt'\r\n    });\r\n  }\r\n\r\n  init(settings, metadata) {\r\n    super.init(...arguments);\r\n\r\n    const file = this._getArgument('file');\r\n\r\n    this._addWindow(new ApplicationTextpadWindow(this, metadata, file));\r\n  }\r\n\r\n}\r\n\r\nOSjs.Applications.ApplicationTextpad = ApplicationTextpad;\r\n\r\n});\ndefine('osjs-apps-textpad', ['osjs-apps-textpad/main'], function (main) { return main; });\n\n"]}