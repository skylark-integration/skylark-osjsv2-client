/**
 * osjs-apps-settings - 
 * @author 
 * @version v1.0.0
 * @link 
 * @license 
 */
define(function(){"use strict";const n=OSjs.require("core/settings-manager"),e=OSjs.require("core/mount-manager"),t=OSjs.require("core/authenticator"),o=OSjs.require("core/window"),i=OSjs.require("utils/misc"),s={WebDAV:{MountName:"owncloud",MountDescription:"OwnCloud",MountHost:"http://localhost/remote.php/webdav/",MountNamespace:"DAV:",MountUsername:function(){return t.instance.getUser().username}}};let u=[],a=[];function c(n,e,t,i){const u=new o("SettingsMountWindow",{icon:n._app.__metadata.icon,title:n._app.__metadata.name,width:400,height:440},n._app);return u._on("destroy",function(e){n._toggleDisabled(!1)}),u._on("inited",function(e){n._toggleDisabled(!0)}),u._on("init",function(n){function o(n){const e=s[n];e&&Object.keys(e).forEach(function(n){let t=e[n];"function"==typeof t&&(t=t()),u._find(n).set("value",t)})}e.render(u,u._name),t?(u._find("MountType").set("value",t.transport),u._find("MountName").set("value",t.name),u._find("MountDescription").set("value",t.description),t.options&&(u._find("MountHost").set("value",t.options.host),u._find("MountNamespace").set("value",t.options.ns),u._find("MountUsername").set("value",t.options.username),u._find("MountPassword").set("value",t.options.password),u._find("MountCORS").set("value",t.options.cors))):(o(u._find("MountType").get("value")),u._find("MountType").on("change",function(n){o(n.detail)})),u._find("ButtonClose").on("click",function(){u._close()}),u._find("ButtonOK").on("click",function(){i({transport:u._find("MountType").get("value"),name:u._find("MountName").get("value"),description:u._find("MountDescription").get("value"),options:{host:u._find("MountHost").get("value"),ns:u._find("MountNamespace").get("value"),username:u._find("MountUsername").get("value"),password:u._find("MountPassword").get("value"),cors:u._find("MountCORS").get("value")}},t),u._close()})}),n._addChild(u,!0,!0)}return{group:"system",name:"VFS",label:"VFS",icon:"devices/drive-harddisk.png",watch:["VFS"],init:function(n){},update:function(e,t,o,s){const u=i.cloneObject(n.get("VFS")||{}).scandir||{};e._find("ShowFileExtensions").set("value",!0===u.showFileExtensions),e._find("ShowHiddenFiles").set("value",!0===u.showHiddenFiles),function(e,t){const o=n.instance("VFS").get("mounts",[]).map(function(n,e){return{value:e,columns:[{label:n.name},{label:n.description}]}});e._find("MountList").clear().add(o)}(e)},render:function(e,t,o,i,s){function d(n,t){n&&(t&&u.push(t),a.push(n)),e.onButtonOK(),e.onModuleSelect(module.name)}e._find("MountList").set("columns",[{label:"Name"},{label:"Description"}]),e._find("MountRemove").on("click",function(){const t=e._find("MountList").get("selected");t instanceof Array&&t.forEach(function(t){const o=n.instance("VFS").get("mounts",[]),i=t.data;o[i]&&(u.push(o[i]),e.onButtonOK(),e.onModuleSelect(module.name))})}),e._find("MountAdd").on("click",function(){c(e,t,null,d)}),e._find("MountEdit").on("click",function(){const o=e._find("MountList").get("selected"),i=n.instance("VFS").get("mounts",[]);if(o&&o.length){const n=i[o[0].data];n&&c(e,t,n,d)}})},save:function(t,o,i,s){const c=n.instance("VFS"),d=c.get("mounts",[]).filter(function(n){for(let t=0;t<u.length;t++){const o=u[t].name;if(o===n.name)return e.remove(o),u.splice(t,1),!1}return!0});a.forEach(function(n){try{e.add(Object.assign({},n)),d.push(n)}catch(n){OSjs.error("Settings","An error occured while trying to mount",n),console.warn(n.stack,n)}});const l={mounts:d,scandir:{showHiddenFiles:t._find("ShowHiddenFiles").get("value"),showFileExtensions:t._find("ShowFileExtensions").get("value")}};c.set(null,l,!1,!1),a=[],u=[]}}});
//# sourceMappingURL=sourcemaps/module-vfs.js.map
