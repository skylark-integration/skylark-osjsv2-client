/**
 * osjs-apps-settings - 
 * @author 
 * @version v1.0.0
 * @link 
 * @license 
 */
define(function(){"use strict";const e=OSjs.require("core/dialog"),n=OSjs.require("core/settings-manager"),t=OSjs.require("core/package-manager"),a=OSjs.require("vfs/file");let i,c;function o(e,a){if(!e||e._destroyed)return;e._find("ButtonUninstall").set("disabled",!0),function(){const e=n.instance("PackageManager",{Hidden:[]});i=t.getPackages(!1),c=e.get("Hidden")}();const o=e._find("InstalledPackages"),l=Object.keys(i).map(function(e,n){return{index:n,value:e,columns:[{label:""},{label:e},{label:i[e].scope},{label:i[e].name}]}});o.clear(),o.add(l),o.$element.querySelectorAll("gui-list-view-body > gui-list-view-row").forEach(function(n){const t=n.children[0],a=n.getAttribute("data-value"),i=c.indexOf(a)>=0;e._create("gui-checkbox",{value:i},t).on("change",function(e){const n=c.indexOf(a);e.detail?n<0&&c.push(a):n>=0&&c.splice(n,1)})})}function l(e,t){if(!e||e._destroyed)return;const a=n.instance("PackageManager").get("PackagePaths",[]);e._find("PackagePaths").clear().add(a.map(function(e,n){return{value:n,columns:[{label:e}]}}))}function g(e,n,t,a){n._toggleLoading(!0),e.set(null,{PackagePaths:a},function(){l(n),n._toggleLoading(!1)},!1)}return{group:"misc",name:"Packages",label:"LBL_PACKAGES",icon:"apps/system-software-install.png",button:!1,init:function(){},update:function(e,n,t,a){o(e),l(e)},render:function(i,l,s,d,u){const r=n.instance("PackageManager",{Hidden:[]});i._find("ButtonUninstall").on("click",function(){const e=i._find("InstalledPackages").get("selected");if(e&&e[0]){const n=t.getPackage(e[0].data);if(n&&"user"===n.scope){i._toggleLoading(!0);const e=new a(n.path);t.uninstall(e).then(()=>{i._toggleLoading(!1),o(i)}).catch(e=>{i._toggleLoading(!1),alert(e)})}}}),i._find("InstalledPackages").on("select",function(e){let n=!0;const a=e.detail.entries||[];if(a.length){const e=t.getPackage(a[0].data);e&&"user"===e.scope&&(n=!1)}i._find("ButtonUninstall").set("disabled",n)}),i._find("ButtonSaveHidden").on("click",function(){i._toggleLoading(!0),r.set("Hidden",c,function(){i._toggleLoading(!1)})}),i._find("ButtonRegen").on("click",function(){i._toggleLoading(!0),t.generateUserMetadata().then(()=>{i._toggleLoading(!1),o(i)}).catch(()=>{i._toggleLoading(!1)})}),i._find("ButtonZipInstall").on("click",function(){i._toggleDisabled(!0),e.create("File",{filter:["application/zip"]},function(e,n,a){"ok"===n&&a?t.install(a,!0).then(()=>{i._toggleDisabled(!1),o(i)}).catch(e=>{i._toggleDisabled(!1),alert(e)}):i._toggleDisabled(!1)},i)}),i._find("PackagePathsRemove").on("click",function(){const e=i._find("PackagePaths").get("selected");e&&e.length&&function(e,t,a){const i=n.instance("PackageManager"),c=i.get("PackagePaths",[]);void 0!==c[a]&&(c.splice(a,1),g(i,e,0,c))}(i,0,e[0].data)}),i._find("PackagePathsAdd").on("click",function(){!function(t,a){const i=n.instance("PackageManager"),c=i.get("PackagePaths",[]);t._toggleDisabled(!0),e.create("Input",{message:"Enter path",placeholder:"mount:///path"},function(e,n,a){t._toggleDisabled(!1),a&&-1===c.indexOf(a)&&(c.push(a),g(i,t,0,c))})}(i)})},save:function(e,n,t,a){}}});
//# sourceMappingURL=sourcemaps/module-pm.js.map
