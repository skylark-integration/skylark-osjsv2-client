{"version":3,"sources":["module-panel.js"],"names":["define","PackageManager","OSjs","require","Locales","Dialog","Theme","Utils","panel","panelItems","items","max","checkSelection","win","idx","hasOptions","name","HasOptions","e","_find","set","renderItems","setSelected","list","forEach","i","push","value","columns","icon","getIcon","Icon","label","format","Name","Description","length","view","clear","add","movePanelItem","index","pos","newIndex","splice","createColorDialog","color","cb","_toggleDisabled","create","ev","button","result","hex","group","watch","init","update","scheme","settings","wm","opacity","panels","options","position","autohide","ontop","background","foreground","getPackage","render","root","_","on","detail","entries","app","_app","nwin","Applications","ApplicationSettings","SettingsItemDialog","__metadata","_on","Object","keys","map","_setTitle","_addChild","createDialog","data","selected","get","defaults","getDefaultSetting","_items","openSettings","openOptions","save"],"mappings":"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","file":"../module-panel.js","sourcesContent":["define(function () {\n    'use strict';\n    const PackageManager = OSjs.require('core/package-manager');\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const Theme = OSjs.require('core/theme');\n    const Utils = OSjs.require('utils/misc');\n    let panelItems = [];\n    let items = [];\n    let max = 0;\n    let panel;\n    function openOptions(wm, idx) {\n        try {\n            wm.panels[0]._items[idx].openSettings();\n        } catch (e) {\n        }\n    }\n    function checkSelection(win, idx) {\n        let hasOptions = true;\n        try {\n            const it = items[panel.items[idx].name];\n            hasOptions = it.HasOptions === true;\n        } catch (e) {\n        }\n        win._find('PanelButtonOptions').set('disabled', idx < 0 || !hasOptions);\n        win._find('PanelButtonRemove').set('disabled', idx < 0);\n        win._find('PanelButtonUp').set('disabled', idx <= 0);\n        win._find('PanelButtonDown').set('disabled', idx < 0 || idx >= max);\n    }\n    function renderItems(win, setSelected) {\n        const list = [];\n        panelItems.forEach(function (i, idx) {\n            const name = i.name;\n            if (items[name]) {\n                list.push({\n                    value: idx,\n                    columns: [{\n                            icon: Theme.getIcon(items[name].Icon),\n                            label: Utils.format('{0} ({1})', items[name].Name, items[name].Description)\n                        }]\n                });\n            }\n        });\n        max = panelItems.length - 1;\n        const view = win._find('PanelItems');\n        view.clear();\n        view.add(list);\n        if (typeof setSelected !== 'undefined') {\n            view.set('selected', setSelected);\n            checkSelection(win, setSelected);\n        } else {\n            checkSelection(win, -1);\n        }\n    }\n    function movePanelItem(win, index, pos) {\n        const value = panelItems[index];\n        const newIndex = index + pos;\n        panelItems.splice(index, 1);\n        panelItems.splice(newIndex, 0, value);\n        renderItems(win, newIndex);\n    }\n    function createDialog(win, scheme, cb) {\n        if (scheme) {\n            const app = win._app;\n            const nwin = new OSjs.Applications.ApplicationSettings.SettingsItemDialog(app, app.__metadata, scheme, cb);\n            nwin._on('inited', function (scheme) {\n                nwin._find('List').clear().add(Object.keys(items).map(function (i, idx) {\n                    return {\n                        value: i,\n                        columns: [{\n                                icon: Theme.getIcon(items[i].Icon),\n                                label: Utils.format('{0} ({1})', items[i].Name, items[i].Description)\n                            }]\n                    };\n                }));\n                nwin._setTitle('Panel Items', true);\n            });\n            win._addChild(nwin, true, true);\n        }\n    }\n    function createColorDialog(win, color, cb) {\n        win._toggleDisabled(true);\n        Dialog.create('Color', { color: color }, function (ev, button, result) {\n            win._toggleDisabled(false);\n            if (button === 'ok' && result) {\n                cb(result.hex);\n            }\n        }, win);\n    }\n    return {\n        group: 'personal',\n        name: 'Panel',\n        label: 'LBL_PANELS',\n        icon: 'apps/gnome-panel.png',\n        watch: ['CoreWM'],\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            panel = settings.panels[0];\n            let opacity = 85;\n            if (typeof panel.options.opacity === 'number') {\n                opacity = panel.options.opacity;\n            }\n            win._find('PanelPosition').set('value', panel.options.position);\n            win._find('PanelAutoHide').set('value', panel.options.autohide);\n            win._find('PanelOntop').set('value', panel.options.ontop);\n            win._find('PanelBackgroundColor').set('value', panel.options.background || '#101010');\n            win._find('PanelForegroundColor').set('value', panel.options.foreground || '#ffffff');\n            win._find('PanelOpacity').set('value', opacity);\n            items = PackageManager.getPackage('CoreWM').panelItems;\n            panelItems = panel.items || [];\n            renderItems(win);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            win._find('PanelPosition').add([\n                {\n                    value: 'top',\n                    label: Locales._('LBL_TOP')\n                },\n                {\n                    value: 'bottom',\n                    label: Locales._('LBL_BOTTOM')\n                }\n            ]);\n            win._find('PanelBackgroundColor').on('open', function (ev) {\n                createColorDialog(win, ev.detail, function (result) {\n                    win._find('PanelBackgroundColor').set('value', result);\n                });\n            });\n            win._find('PanelForegroundColor').on('open', function (ev) {\n                createColorDialog(win, ev.detail, function (result) {\n                    win._find('PanelForegroundColor').set('value', result);\n                });\n            });\n            win._find('PanelItems').on('select', function (ev) {\n                if (ev && ev.detail && ev.detail.entries && ev.detail.entries.length) {\n                    checkSelection(win, ev.detail.entries[0].index);\n                }\n            });\n            win._find('PanelButtonAdd').on('click', function () {\n                win._toggleDisabled(true);\n                createDialog(win, scheme, function (ev, result) {\n                    win._toggleDisabled(false);\n                    if (result) {\n                        panelItems.push({ name: result.data });\n                        renderItems(win);\n                    }\n                });\n            });\n            win._find('PanelButtonRemove').on('click', function () {\n                const selected = win._find('PanelItems').get('selected');\n                if (selected.length) {\n                    panelItems.splice(selected[0].index, 1);\n                    renderItems(win);\n                }\n            });\n            win._find('PanelButtonUp').on('click', function () {\n                const selected = win._find('PanelItems').get('selected');\n                if (selected.length) {\n                    movePanelItem(win, selected[0].index, -1);\n                }\n            });\n            win._find('PanelButtonDown').on('click', function () {\n                const selected = win._find('PanelItems').get('selected');\n                if (selected.length) {\n                    movePanelItem(win, selected[0].index, 1);\n                }\n            });\n            win._find('PanelButtonReset').on('click', function () {\n                const defaults = wm.getDefaultSetting('panels');\n                panelItems = defaults[0].items;\n                renderItems(win);\n            });\n            win._find('PanelButtonOptions').on('click', function () {\n                const selected = win._find('PanelItems').get('selected');\n                if (selected.length) {\n                    openOptions(wm, selected[0].index);\n                }\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n            settings.panels = settings.panels || [{}];\n            settings.panels[0].options = settings.panels[0].options || {};\n            settings.panels[0].options.position = win._find('PanelPosition').get('value');\n            settings.panels[0].options.autohide = win._find('PanelAutoHide').get('value');\n            settings.panels[0].options.ontop = win._find('PanelOntop').get('value');\n            settings.panels[0].options.background = win._find('PanelBackgroundColor').get('value') || '#101010';\n            settings.panels[0].options.foreground = win._find('PanelForegroundColor').get('value') || '#ffffff';\n            settings.panels[0].options.opacity = win._find('PanelOpacity').get('value');\n            settings.panels[0].items = panelItems;\n        }\n    };\n});"]}