{"version":3,"sources":["module-search.js"],"names":["define","Translations","SettingsManager","OSjs","require","Notification","Locales","Dialog","Utils","_","createLocalizer","group","name","label","icon","init","update","win","scheme","settings","wm","searchOptions","cloneObject","get","_find","set","applications","files","view","clear","list","paths","map","l","value","id","columns","add","render","root","on","_toggleDisabled","create","select","mfilter","m","option","mounted","ev","button","result","path","forEach","c","remove","index","save","sort","tp","p","substr","length","isChildOf","title","message","push","searchSettings","instance"],"mappings":";;;;;;;AAAAA,QAAQ,aAAc,SAAUC,GAC5B,aACA,MAAMC,EAAkBC,KAAKC,QAAQ,yBAC/BC,EAAeF,KAAKC,QAAQ,oBAC5BE,EAAUH,KAAKC,QAAQ,gBACvBG,EAASJ,KAAKC,QAAQ,eACtBI,EAAQL,KAAKC,QAAQ,cACrBK,EAAIH,EAAQI,gBAAgBT,GAClC,OACIU,MAAO,SACPC,KAAM,SACNC,MAAO,aACPC,KAAM,4BACNC,KAAM,aAENC,OAAQ,SAAUC,EAAKC,EAAQC,EAAUC,GACrC,MAAMC,EAAgBb,EAAMc,YAAYpB,EAAgBqB,IAAI,qBAC5DN,EAAIO,MAAM,4BAA4BC,IAAI,SAAwC,IAA/BJ,EAAcK,cACjET,EAAIO,MAAM,qBAAqBC,IAAI,SAAiC,IAAxBJ,EAAcM,OAC1D,MAAMC,EAAOX,EAAIO,MAAM,eAAeK,QACtCD,EAAKH,IAAI,YAAcZ,MAAO,UAC9B,MAAMiB,GAAQT,EAAcU,WAAaC,IAAI,SAAUC,GACnD,OACIC,MAAOD,EACPE,GAAIF,EACJG,UAAYvB,MAAOoB,OAG3BL,EAAKS,IAAIP,IAEbQ,OAAQ,SAAUrB,EAAKC,EAAQqB,EAAMpB,EAAUC,GA0B3CH,EAAIO,MAAM,aAAagB,GAAG,QAzB1B,WACIvB,EAAIwB,iBAAgB,GACpBlC,EAAOmC,OAAO,QACVC,OAAQ,MACRC,SAAU,SAAUC,GACZ,OAAOA,EAAEC,OAAO,eAAiBD,EAAEE,aAE5C,SAAUC,EAAIC,EAAQC,GACrBjC,EAAIwB,iBAAgB,GACL,OAAXQ,GAAmBC,GACnBjC,EAAIO,MAAM,eAAea,MACjBH,MAAOgB,EAAOC,KACdhB,GAAIe,EAAOC,KACXf,UAAYvB,MAAOqC,EAAOC,WAGvClC,KAUPA,EAAIO,MAAM,gBAAgBgB,GAAG,QAR7B,WACI,MAAMZ,EAAOX,EAAIO,MAAM,gBACPI,EAAKL,IAAI,cACjB6B,QAAQ,SAAUC,GACtBzB,EAAK0B,OAAOD,EAAEE,YAM1BC,KAAM,SAAUvC,EAAKC,EAAQC,EAAUC,GACnC,MACMW,KADWd,EAAIO,MAAM,eAAeD,IAAI,QAAS,KAAM,MAAM,GAAMkC,OAWhEL,QAAQ,SAAUM,GACvB,MAAML,EAVV,SAAmBK,GACf,IAAIR,GAAS,EAMb,OALAnB,EAAMqB,QAAQ,SAAUO,GACfT,IACDA,EAASQ,EAAGE,OAAO,EAAGD,EAAEE,UAAYF,KAGrCT,EAGGY,CAAUJ,GAChBL,GACAhD,EAAaqC,QACTqB,MAAOtD,EAAE,cACTuD,QAASvD,EAAE,wDAAyDiD,KAGvE3B,EAAM8B,QAAWR,GAClBtB,EAAMkC,KAAKP,KAGnB,MAAMQ,GACFxC,aAAcT,EAAIO,MAAM,4BAA4BD,IAAI,SACxDI,MAAOV,EAAIO,MAAM,qBAAqBD,IAAI,SAC1CQ,MAAOA,GAEX7B,EAAgBiE,SAAS,gBAAgB1C,IAAI,KAAMyC,GAAgB,GAAO","file":"../module-search.js","sourcesContent":["define(['./locales'], function (Translations) {\n    'use strict';\n    const SettingsManager = OSjs.require('core/settings-manager');\n    const Notification = OSjs.require('gui/notification');\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const Utils = OSjs.require('utils/misc');\n    const _ = Locales.createLocalizer(Translations);\n    return {\n        group: 'system',\n        name: 'Search',\n        label: 'LBL_SEARCH',\n        icon: 'actions/system-search.png',\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            const searchOptions = Utils.cloneObject(SettingsManager.get('SearchEngine') || {});\n            win._find('SearchEnableApplications').set('value', searchOptions.applications === true);\n            win._find('SearchEnableFiles').set('value', searchOptions.files === true);\n            const view = win._find('SearchPaths').clear();\n            view.set('columns', [{ label: 'Path' }]);\n            const list = (searchOptions.paths || []).map(function (l) {\n                return {\n                    value: l,\n                    id: l,\n                    columns: [{ label: l }]\n                };\n            });\n            view.add(list);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            function openAddDialog() {\n                win._toggleDisabled(true);\n                Dialog.create('File', {\n                    select: 'dir',\n                    mfilter: [function (m) {\n                            return m.option('searchable') && m.mounted();\n                        }]\n                }, function (ev, button, result) {\n                    win._toggleDisabled(false);\n                    if (button === 'ok' && result) {\n                        win._find('SearchPaths').add([{\n                                value: result.path,\n                                id: result.path,\n                                columns: [{ label: result.path }]\n                            }]);\n                    }\n                }, win);\n            }\n            function removeSelected() {\n                const view = win._find('SearchPaths');\n                const current = view.get('value') || [];\n                current.forEach(function (c) {\n                    view.remove(c.index);\n                });\n            }\n            win._find('SearchAdd').on('click', openAddDialog);\n            win._find('SearchRemove').on('click', removeSelected);\n        },\n        save: function (win, scheme, settings, wm) {\n            const tmpPaths = win._find('SearchPaths').get('entry', null, null, true).sort();\n            const paths = [];\n            function isChildOf(tp) {\n                let result = false;\n                paths.forEach(function (p) {\n                    if (!result) {\n                        result = tp.substr(0, p.length) === p;\n                    }\n                });\n                return result;\n            }\n            tmpPaths.forEach(function (tp) {\n                const c = isChildOf(tp);\n                if (c) {\n                    Notification.create({\n                        title: _('LBL_SEARCH'),\n                        message: _(\"Search path '{0}' is already handled by another entry\", tp)\n                    });\n                }\n                if (!paths.length || !c) {\n                    paths.push(tp);\n                }\n            });\n            const searchSettings = {\n                applications: win._find('SearchEnableApplications').get('value'),\n                files: win._find('SearchEnableFiles').get('value'),\n                paths: paths\n            };\n            SettingsManager.instance('SearchEngine').set(null, searchSettings, false, false);\n        }\n    };\n});"]}