{"version":3,"sources":["osjs-apps-settings.js"],"names":["define","bg_BG","Background Type","Image (Repeat)","Image (Centered)","Image (Fill)","Image (Streched)","Desktop Margin ({0}px)","Enable Animations","Language (requires restart)","Enable Sounds","Enable Window Switcher","Enable Hotkeys","Enable Icon View","de_DE","es_ES","ar_DZ","Remove shortcut","File View","Show Hidden Files","Show File Extensions","File View Options","Invert Text Color","Icon View","Installed Packages","App Store","Regenerate metadata","Install from zip","Install selected","Enable TouchMenu","fr_FR","Desktop Corner Snapping ({0}px)","Window Snapping ({0}px)","it_IT","Application","Scope","ko_KR","Search Options","Enable Application Search","Enable File Search","nl_NL","no_NO","Search path '{0}' is already handled by another entry","pl_PL","ru_RU","sk_SK","tr_TR","vi_VN","Translations","Locales","OSjs","require","Theme","Utils","PackageManager","_","createLocalizer","widgets","items","renderItems","win","setSelected","list","forEach","i","idx","name","push","value","columns","icon","getIcon","Icon","label","format","Name","Description","view","_find","clear","add","updateLabel","lbl","DesktopMargin","CornerSnapping","WindowSnapping","set","group","watch","init","app","update","scheme","settings","wm","animations","useTouchMenu","enableSwitcher","desktopMargin","windowCornerSnap","windowSnap","getPackage","render","root","on","ev","detail","enableIconView","invertIconViewColor","_toggleDisabled","cb","_app","nwin","Applications","ApplicationSettings","SettingsItemDialog","__metadata","_on","Object","keys","map","_setTitle","_addChild","createDialog","result","data","selected","get","length","splice","index","save","Dialog","hotkeys","renderList","enableHotkeys","cloneObject","key","create","message","button","indexOf","editList","Config","config","getConfig","locales","Languages","filter","l","getLocale","language","panel","panelItems","max","checkSelection","hasOptions","it","HasOptions","e","movePanelItem","pos","newIndex","createColorDialog","color","hex","opacity","panels","options","position","autohide","ontop","background","foreground","entries","defaults","getDefaultSetting","_items","openSettings","openOptions","SettingsManager","FileMetadata","hidden","renderInstalled","_destroyed","pool","instance","Hidden","getPackages","updateEnabledStates","rows","k","scope","$element","querySelectorAll","row","col","children","getAttribute","enabled","_create","renderPaths","paths","iter","_save","sf","_toggleLoading","PackagePaths","pkg","file","path","uninstall","then","catch","alert","d","generateUserMetadata","install","sel","removePath","placeholder","btn","addPath","Notification","searchOptions","applications","files","id","select","mfilter","m","option","mounted","c","remove","tmpPaths","sort","tp","p","substr","isChildOf","title","searchSettings","sounds","soundTheme","enableSounds","soundThemes","tmp","getSoundThemes","t","FS","VFS","renderStore","getStorePackages","a","document","createElement","href","_repository","download","hostname","version","author","gelList","err","console","warn","clicked","Promise","resolve","reject","read","ab","dest","filename","type","mime","write","error","Error","res","installSelected","wallpaper","backgroundColor","fontFamily","styleTheme","iconTheme","_createDialog","n","done","getStyleThemes","getIconThemes","fontName","fontSize","Authenticator","user","getUser","username","groups","Connection","Window","renderUsers","request","command","users","Array","showDialog","password","action","width","height","_name","join","_close","replace","split","compatible","cfg","_action","te","_username","removeUser","MountManager","TEMPLATES","WebDAV","MountName","MountDescription","MountHost","MountNamespace","MountUsername","removeMounts","addMounts","createMountWindow","ondone","setTemplate","tpl","val","transport","description","host","ns","cors","vfsOptions","scandirOptions","scandir","showFileExtensions","showHiddenFiles","renderMounts","connection","onButtonOK","onModuleSelect","module","item","mounts","mount","si","assign","stack","vfsSettings","ModuleDesktop","ModuleInput","ModuleLocale","ModulePanel","ModulePM","ModuleSearch","ModuleSounds","ModuleStore","ModuleTheme","ModuleUser","ModuleUsers","ModuleVFS","schemeHtml","Events","Menu","WindowManager","DEFAULT_GROUP","_groups","personal","system","misc","categoryMap","theme","desktop","fileview","search","[object Object]","metadata","callback","super","translator","this","schemeRef","closed","arguments","ApplicationSettingsWindow","initialCategory","allow_resize","wmRef","_render","son","onButtonCancel","container","className","containers","tmpcontent","createDocumentFragment","h","appendChild","createTextNode","modules","setAttribute","s","String","found","querySelector","getSettings","_inited","parentNode","style","display","$bind","isTrusted","target","relatedTarget","blur","tagName","hasAttribute","preventDefault","onExternalAttention","destroy","currentModule","_$element","_d","mod","hide","show","setModule","saveSettings","cat","_focus","seal","args","registered","Modules","watches","opts","argumentDefaults","bind","w","_getMainWindow","unwatch","category","_getArgument","_addWindow","applySettings","Desktop","Input","Locale","Panel","PM","Search","Sounds","Store","User","Users","main"],"mappings":"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","file":"../osjs-apps-settings.js","sourcesContent":["define('osjs-apps-settings/locales',[],function () {\n    'use strict';\n    return {\n        bg_BG: {\n            'Background Type': 'Тип на фон',\n            'Image (Repeat)': 'Изображение (повтарящо се)',\n            'Image (Centered)': 'Изображение (Центрирано)',\n            'Image (Fill)': 'Изображение (Запълващо)',\n            'Image (Streched)': 'Изображение (Разтеглено)',\n            'Desktop Margin ({0}px)': 'Размер на работен плот ({0}px)',\n            'Enable Animations': 'Разреши анимации',\n            'Language (requires restart)': 'Език (нуждае се от рестарт)',\n            'Enable Sounds': 'Включи звуци',\n            'Enable Window Switcher': 'Включи превключване на прозорци',\n            'Enable Hotkeys': 'Включи горещи клавиши',\n            'Enable Icon View': 'Включи иконен-изглед'\n        },\n        de_DE: {\n            'Background Type': 'Hintergrundtyp',\n            'Image (Repeat)': 'Bild (Wiederholend)',\n            'Image (Centered)': 'Bild (Zentriert)',\n            'Image (Fill)': 'Bild (Ausgefüllt)',\n            'Image (Streched)': 'Bild (Gestreckt)',\n            'Desktop Margin ({0}px)': 'Arbeitsoberflächen Margin ({0}px)',\n            'Enable Animations': 'Animationen verwenden',\n            'Language (requires restart)': 'Sprache (benötigt Neustart)',\n            'Enable Sounds': 'Aktiviere Sounds',\n            'Enable Window Switcher': 'Aktiviere Fensterwechsler',\n            'Enable Hotkeys': 'Aktiviere Hotkeys',\n            'Enable Icon View': 'Aktiviere Icon-Ansicht'\n        },\n        es_ES: {\n            'Background Type': 'Tipo de fondo',\n            'Image (Repeat)': 'Imagen (Repetir)',\n            'Image (Centered)': 'Imagen (Centrada)',\n            'Image (Fill)': 'Imagen (Estirar)',\n            'Image (Streched)': 'Imagen (Ajustar)',\n            'Desktop Margin ({0}px)': 'Margen del escritorio ({0}px)',\n            'Enable Animations': 'Habilitar animaciones',\n            'Language (requires restart)': 'Idioma (requiere reiniciar)',\n            'Enable Sounds': 'Activar sonidos',\n            'Enable Window Switcher': 'Activar el alternador de ventanas',\n            'Enable Hotkeys': 'Activar Hotkeys',\n            'Enable Icon View': 'Activar la vista de icono'\n        },\n        ar_DZ: {\n            'Background Type': 'نوع الخلفية',\n            'Image (Repeat)': 'صورة (إعادة)',\n            'Image (Centered)': 'صورة (وسط)',\n            'Image (Fill)': 'صورة (ملئ)',\n            'Image (Streched)': 'صورة (تمدد)',\n            'Desktop Margin ({0}px)': 'هوامش المكتب ({0}px)',\n            'Enable Animations': 'تفعيل الحركة',\n            'Language (requires restart)': 'اللغة (تتطب إعادة التشغيل)',\n            'Enable Sounds': 'تفعيل الأصوات',\n            'Enable Window Switcher': 'تفعيل محول النوافذ',\n            'Enable Hotkeys': 'تفعيل إختصارات لوحة المفاتيح',\n            'Enable Icon View': 'تفعيل مظهر الأيقونات',\n            'Remove shortcut': 'حذف الإختصار',\n            'File View': 'خصائص الملفات',\n            'Show Hidden Files': 'إظهار الملفات المخفية',\n            'Show File Extensions': 'إظهار لواحق الملفات',\n            'File View Options': 'خيارات إظهار الملفات',\n            'Invert Text Color': 'عكس لون الخط',\n            'Icon View': 'إظهار الأيقونات',\n            'Installed Packages': 'حزم مثبتة',\n            'App Store': 'متجر التطبيقات',\n            'Regenerate metadata': 'إعادة توليد المعلومات',\n            'Install from zip': 'تثبيت من ملف مضغوط',\n            'Install selected': 'تثبيت المختار',\n            'Enable TouchMenu': 'تفعيل قائمة اللمس'\n        },\n        fr_FR: {\n            'Background Type': \"Type de fond d'écran\",\n            'Image (Repeat)': 'Image (Répéter)',\n            'Image (Centered)': 'Image (Centrer)',\n            'Image (Fill)': 'Image (Remplir)',\n            'Image (Streched)': 'Image (Étiré)',\n            'Desktop Margin ({0}px)': 'Marge du bureau ({0}px)',\n            'Desktop Corner Snapping ({0}px)': 'Délimitation des coins du bureau ({0}px)',\n            'Window Snapping ({0}px)': 'Accrochage des fenêtres ({0}px)',\n            'Enable Animations': 'Activer les animations',\n            'Language (requires restart)': 'Langue (redémarrage requis)',\n            'Enable Sounds': 'Activer la musique',\n            'Enable Window Switcher': 'Activer Window Switcher',\n            'Enable Hotkeys': 'Activer les raccourcis clavier',\n            'Enable Icon View': \"Activer l'affichage des icônes sur le bureau\",\n            'Remove shortcut': 'Supprimer le raccourci',\n            'File View': 'Options des fichiers',\n            'Show Hidden Files': 'Montrer les fichiers cachés',\n            'Show File Extensions': 'Montrer les extensions de fichiers',\n            'File View Options': \"Options d'affichage des fichier\",\n            'Invert Text Color': 'Inverser la couleur du texte',\n            'Icon View': 'Affichage des icônes',\n            'Installed Packages': 'Paquets installés',\n            'App Store': \"Magasin d'applications\",\n            'Regenerate metadata': 'Régénérer les métadonnées',\n            'Install from zip': 'Installer à partir du fichier zip',\n            'Install selected': 'Installer la sélection',\n            'Enable TouchMenu': 'Activer le TouchMenu'\n        },\n        it_IT: {\n            'Background Type': 'Tipo di sfondo',\n            'Image (Repeat)': 'Immagine (Ripeti)',\n            'Image (Centered)': 'Immagine (Centrata)',\n            'Image (Fill)': 'Immagine (Riempi)',\n            'Image (Streched)': 'Immagine (Distorci)',\n            'Desktop Margin ({0}px)': 'Margini Scrivania ({0}px)',\n            'Enable Animations': 'Abilita animazioni',\n            'Language (requires restart)': 'Lingua (necessita riavvio)',\n            'Enable Sounds': 'Abilita Suoni',\n            'Enable Window Switcher': 'Abilita Cambia-Finestre',\n            'Enable Hotkeys': 'Abilita Scorciatoie da tastiera',\n            'Enable Icon View': 'Abilita Visualizzazione ad icona',\n            'Remove shortcut': 'Rimuovi scorciatoia',\n            'File View': 'Visualizza file',\n            'Show Hidden Files': 'Mostra file nascosti',\n            'Show File Extensions': 'Mostra estenzioni dei file',\n            'File View Options': 'Opzioni visualizza file',\n            'Invert Text Color': 'Inverti colore testi',\n            'Icon View': 'Visualizzazione ad icone',\n            'Installed Packages': 'Installa pacchetti',\n            'App Store': 'Negozio applicazioni',\n            'Application': 'Applicazione',\n            'Scope': 'Scope (namespace)',\n            'Regenerate metadata': 'Rigenerazione metadata',\n            'Install from zip': 'Installa da zip',\n            'Install selected': 'Installa selezionato',\n            'Enable TouchMenu': 'Abilita TouchMenu'\n        },\n        ko_KR: {\n            'Background Type': '바탕화면 타입',\n            'Image (Repeat)': '이미지 (반복)',\n            'Image (Centered)': '이미지 (가운데)',\n            'Image (Fill)': '이미지 (채우기)',\n            'Image (Streched)': '이미지 (늘이기)',\n            'Desktop Margin ({0}px)': '데스크탑 여백 ({0}px)',\n            'Enable Animations': '애니메이션 효과 켜기',\n            'Language (requires restart)': '언어 (재시작 필요)',\n            'Enable Sounds': '사운드 켜기',\n            'Enable Window Switcher': '윈도우 전환 활성',\n            'Enable Hotkeys': '단축키 활성',\n            'Enable Icon View': '아이콘 보이기',\n            'Desktop Corner Snapping ({0}px)': '바탕화면 가장자리에 붙이기 ({0}px)',\n            'Window Snapping ({0}px)': '창 가장자리에 붙이기 ({0}px)',\n            'File View': '파일보기',\n            'Show Hidden Files': '숨긴 파일 보이기',\n            'Show File Extensions': '파일 확장자 보이기',\n            'File View Options': '파일보기 옵션',\n            'Invert Text Color': '텍스트 색상 반전',\n            'Icon View': '아이콘 보기',\n            'Installed Packages': '설치된 패키지',\n            'App Store': '앱스토어',\n            'Regenerate metadata': '메타데이터 재생성',\n            'Install from zip': 'zip 파일로부터 설치하기',\n            'Install selected': '선택된 항목 설치',\n            'Enable TouchMenu': '터치메뉴 활성화',\n            'Search Options': '검색 옵션',\n            'Enable Application Search': '어플리케이션 검색 활성화',\n            'Enable File Search': '파일 검색 활성화'\n        },\n        nl_NL: {\n            'Background Type': 'Achtergrond type',\n            'Image (Repeat)': 'Afbeelding (Herhalend)',\n            'Image (Centered)': 'Afbeelding (Gecentreerd)',\n            'Image (Fill)': 'Afbeelding (Passend)',\n            'Image (Streched)': 'Afbeelding (Uitrekken)',\n            'Desktop Margin ({0}px)': 'Achtergrondmarge ({0}px)',\n            'Enable Animations': 'Animaties gebruiken',\n            'Language (requires restart)': 'Taal (Herstarten vereist)',\n            'Enable Sounds': 'Activeer Geluiden',\n            'Enable Window Switcher': 'Activeer Venster Wisselaar',\n            'Enable Hotkeys': 'Activeer Hotkeys',\n            'Enable Icon View': 'Activeer Iconen-weergave'\n        },\n        no_NO: {\n            'Background Type': 'Bakgrunn type',\n            'Image (Repeat)': 'Bilde (Gjenta)',\n            'Image (Centered)': 'Bilde (Sentrert)',\n            'Image (Fill)': 'Bilde (Fyll)',\n            'Image (Streched)': 'Bilde (Strekk)',\n            'Desktop Margin ({0}px)': 'Skrivebord Margin ({0}px)',\n            'Enable Animations': 'Bruk animasjoner',\n            'Language (requires restart)': 'Språk (krever omstart)',\n            'Enable Sounds': 'Skru på lyder',\n            'Enable Window Switcher': 'Skru på Vindu-bytter',\n            'Enable Hotkeys': 'Skru på Hurtigtaster',\n            'Enable Icon View': 'Skru på Ikonvisning',\n            'Remove shortcut': 'Fjern snarvei',\n            \"Search path '{0}' is already handled by another entry\": \"Søkestien '{0}' er allrede håndtert av en annen oppføring\"\n        },\n        pl_PL: {\n            'Background Type': 'Typ Tła',\n            'Image (Repeat)': 'Powtarzający się',\n            'Image (Centered)': 'Wycentrowany',\n            'Image (Fill)': 'Wypełniony',\n            'Image (Streched)': 'Rozciągnięty',\n            'Desktop Margin ({0}px)': 'Margines Pulpitu ({0}px)',\n            'Desktop Corner Snapping ({0}px)': 'Przyciąganie do Narożników Pulpitu ({0}px)',\n            'Window Snapping ({0}px)': 'Przyciąganie do Okien ({0}px)',\n            'Enable Animations': 'Włączone Animacje',\n            'Icon View': 'Widok Ikon',\n            'Language (requires restart)': 'Język (zmiana wymaga restartu)',\n            'Enable Sounds': 'Włączone Dźwięki',\n            'Enable TouchMenu': 'Włączone Menu Dotykowe',\n            'Enable Window Switcher': 'Właczony Zmieniacz Okien',\n            'Enable Hotkeys': 'Włączone Skróty Klawiaturowe',\n            'Enable Icon View': 'Włączone Pokazywanie Ikon',\n            'Remove shortcut': 'Usuwanie skrótu',\n            'File View': 'Widok Plików',\n            'Show Hidden Files': 'Pokazuj Ukryte Pliki',\n            'Show File Extensions': 'Pokazuj Rozszerzenia Plików',\n            'File View Options': 'Opcje Widoku Plików',\n            'Invert Text Color': 'Odwróć Kolor Tekstu',\n            'Installed Packages': 'Zainstalowane Pakiety',\n            'App Store': 'Sklep App',\n            'Regenerate metadata': 'Zregeneruj metadane',\n            'Install from zip': 'Zainstaluj z pliku zip',\n            'Install selected': 'Zainstaluj wybrane'\n        },\n        ru_RU: {\n            'Background Type': 'Тип фона',\n            'Image (Repeat)': 'Изображение (повторяющееся)',\n            'Image (Centered)': 'Изображение (по центру)',\n            'Image (Fill)': 'Изображение (заполнить)',\n            'Image (Streched)': 'Изображение (растянуть)',\n            'Desktop Margin ({0}px)': 'Отступ рабочего стола ({0}px)',\n            'Enable Animations': 'Использовать анимацию',\n            'Enable TouchMenu': 'Крупное меню',\n            'Language (requires restart)': 'Язык (необходим перезапуск)',\n            'Enable Sounds': 'Включить звук',\n            'Enable Window Switcher': 'Включить растягивание окон',\n            'Enable Hotkeys': 'Включить горячии клавиши',\n            'Enable Icon View': 'Включить ярлыки',\n            'Icon View': 'Ярлыки рабочего стола',\n            'Invert Text Color': 'Обратить цвет текста'\n        },\n        sk_SK: {\n            'Background Type': 'Typ pozadia',\n            'Image (Repeat)': 'Dlaždice',\n            'Image (Centered)': 'Na stred',\n            'Image (Fill)': 'Vyplniť',\n            'Image (Streched)': 'Roztiahnutý',\n            'Desktop Margin ({0}px)': 'Hranice pracovnej plochy ({0}px)',\n            'Enable Animations': 'Povoliť animácie',\n            'Language (requires restart)': 'Jazyk (vyžaduje reštart)',\n            'Enable Sounds': 'Povoliť zvuky',\n            'Enable Window Switcher': 'Povoliť Prepínač Okien',\n            'Enable Hotkeys': 'Klávesové skratky',\n            'Enable Icon View': 'Ikony na ploche',\n            'Remove shortcut': 'Odstrániť skratku'\n        },\n        tr_TR: {\n            'Background Type': 'arkaplan türü',\n            'Image (Repeat)': 'resim (tekrarla)',\n            'Image (Centered)': 'resm(ortala)',\n            'Image (Fill)': 'resm (kapla/doldur)',\n            'Image (Streched)': 'resm (uzat)',\n            'Desktop Margin ({0}px)': 'masaüstü kenar ({0}px)',\n            'Enable Animations': 'animasyonlar etkin',\n            'Language (requires restart)': 'Dil(yeniden başlatma gerektirir)',\n            'Enable Sounds': 'Müzik etkin',\n            'Enable Window Switcher': 'Ekran(pencere) değiştirme etkin',\n            'Enable Hotkeys': 'kısayol tuşları etkin',\n            'Enable Icon View': 'icon görünümü etkin',\n            'Remove shortcut': 'kısayolları kaldır'\n        },\n        vi_VN: {\n            'Background Type': 'Kiểu nền',\n            'Image (Repeat)': 'Lặp lại',\n            'Image (Centered)': 'Căn giữa',\n            'Image (Fill)': 'Lấp đầy',\n            'Image (Streched)': 'Trải dài',\n            'Desktop Margin ({0}px)': 'Phần biên màn hình ({0}px)',\n            'Enable Animations': 'Bật hiệu ứng',\n            'Language (requires restart)': 'Ngôn ngữ (cần khởi động lại)',\n            'Enable Sounds': 'Bật âm thanh',\n            'Enable Window Switcher': 'Bật chuyển đổi cửa sổ',\n            'Enable Hotkeys': 'Bật phím nóng',\n            'Enable Icon View': 'Hiện biểu tượng',\n            'Remove shortcut': 'Xóa lối tắt',\n            'File View': 'Quản lí tệp',\n            'Show Hidden Files': 'Hiện tập tin ẩn',\n            'Show File Extensions': 'Hiện đuôi tập tin',\n            'File View Options': 'Cài đặt quản lí tệp',\n            'Icon View': 'Biểu tượng',\n            'Installed Packages': 'Các phần mềm đã cài',\n            'App Store': 'Chợ ứng dụng',\n            'Regenerate metadata': 'Làm mới metadata',\n            'Install from zip': 'Cài từ file zip',\n            'Install selected': 'Cài mục đã chọn',\n            'Enable TouchMenu': 'Bật Menu cảm ứng',\n            'Invert Text Color': 'Đảo màu chữ',\n            'Search Options': 'Cài đặt tìm kiếm',\n            'Enable Application Search': 'Cho phép tìm kiếm phần mềm',\n            'Enable File Search': 'Cho phép tìm kiếm tập tin',\n            \"Search path '{0}' is already handled by another entry\": \"Đường dẫn tìm kiếm '{0}' đã bị xử lý bởi mục khác\"\n        }\n    };\n});\ndefine('osjs-apps-settings/module-desktop',['./locales'], function (Translations) {\n    'use strict';\n    const Locales = OSjs.require('core/locales');\n    const Theme = OSjs.require('core/theme');\n    const Utils = OSjs.require('utils/misc');\n    const PackageManager = OSjs.require('core/package-manager');\n    const _ = Locales.createLocalizer(Translations);\n    let widgets = [];\n    let items = [];\n    function renderItems(win, setSelected) {\n        const list = [];\n        widgets.forEach(function (i, idx) {\n            const name = i.name;\n            if (items[name]) {\n                list.push({\n                    value: idx,\n                    columns: [{\n                            icon: Theme.getIcon(items[name].Icon),\n                            label: Utils.format('{0} ({1})', items[name].Name, items[name].Description)\n                        }]\n                });\n            }\n        });\n        const view = win._find('WidgetItems');\n        view.clear();\n        view.add(list);\n    }\n    function createDialog(win, scheme, cb) {\n        if (scheme) {\n            const app = win._app;\n            const nwin = new OSjs.Applications.ApplicationSettings.SettingsItemDialog(app, app.__metadata, scheme, cb);\n            nwin._on('inited', function (scheme) {\n                nwin._find('List').clear().add(Object.keys(items).map(function (i, idx) {\n                    return {\n                        value: i,\n                        columns: [{\n                                icon: Theme.getIcon(items[i].Icon),\n                                label: Utils.format('{0} ({1})', items[i].Name, items[i].Description)\n                            }]\n                    };\n                }));\n                nwin._setTitle('Widgets', true);\n            });\n            win._addChild(nwin, true, true);\n        }\n    }\n    function updateLabel(win, lbl, value) {\n        const map = {\n            DesktopMargin: 'Desktop Margin ({0}px)',\n            CornerSnapping: 'Desktop Corner Snapping ({0}px)',\n            WindowSnapping: 'Window Snapping ({0}px)'\n        };\n        const label = Utils.format(_(map[lbl]), value);\n        win._find(lbl + 'Label').set('value', label);\n    }\n    return {\n        group: 'personal',\n        name: 'Desktop',\n        label: 'LBL_DESKTOP',\n        icon: 'devices/video-display.png',\n        watch: ['CoreWM'],\n        init: function (app) {\n        },\n        update: function (win, scheme, settings, wm) {\n            win._find('EnableAnimations').set('value', settings.animations);\n            win._find('EnableTouchMenu').set('value', settings.useTouchMenu);\n            win._find('EnableWindowSwitcher').set('value', settings.enableSwitcher);\n            win._find('DesktopMargin').set('value', settings.desktopMargin);\n            win._find('CornerSnapping').set('value', settings.windowCornerSnap);\n            win._find('WindowSnapping').set('value', settings.windowSnap);\n            updateLabel(win, 'DesktopMargin', settings.desktopMargin);\n            updateLabel(win, 'CornerSnapping', settings.windowCornerSnap);\n            updateLabel(win, 'WindowSnapping', settings.windowSnap);\n            items = PackageManager.getPackage('CoreWM').widgets;\n            widgets = settings.widgets || [];\n            renderItems(win);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            win._find('DesktopMargin').on('change', function (ev) {\n                updateLabel(win, 'DesktopMargin', ev.detail);\n            });\n            win._find('CornerSnapping').on('change', function (ev) {\n                updateLabel(win, 'CornerSnapping', ev.detail);\n            });\n            win._find('WindowSnapping').on('change', function (ev) {\n                updateLabel(win, 'WindowSnapping', ev.detail);\n            });\n            win._find('EnableIconView').set('value', settings.enableIconView);\n            win._find('EnableIconViewInvert').set('value', settings.invertIconViewColor);\n            win._find('WidgetButtonAdd').on('click', function () {\n                win._toggleDisabled(true);\n                createDialog(win, scheme, function (ev, result) {\n                    win._toggleDisabled(false);\n                    if (result) {\n                        widgets.push({ name: result.data });\n                        renderItems(win);\n                    }\n                });\n            });\n            win._find('WidgetButtonRemove').on('click', function () {\n                const selected = win._find('WidgetItems').get('selected');\n                if (selected.length) {\n                    widgets.splice(selected[0].index, 1);\n                    renderItems(win);\n                }\n            });\n            win._find('WidgetButtonOptions').on('click', function () {\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n            settings.animations = win._find('EnableAnimations').get('value');\n            settings.useTouchMenu = win._find('EnableTouchMenu').get('value');\n            settings.enableSwitcher = win._find('EnableWindowSwitcher').get('value');\n            settings.desktopMargin = win._find('DesktopMargin').get('value');\n            settings.windowCornerSnap = win._find('CornerSnapping').get('value');\n            settings.windowSnap = win._find('WindowSnapping').get('value');\n            settings.enableIconView = win._find('EnableIconView').get('value');\n            settings.invertIconViewColor = win._find('EnableIconViewInvert').get('value');\n            settings.widgets = widgets;\n        }\n    };\n});\ndefine('osjs-apps-settings/module-input',['./locales'], function (Translations) {\n    'use strict';\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const Utils = OSjs.require('utils/misc');\n    const _ = Locales.createLocalizer(Translations);\n    let hotkeys = {};\n    function renderList(win, scheme) {\n        win._find('HotkeysList').clear().add(Object.keys(hotkeys).map(function (name) {\n            return {\n                value: {\n                    name: name,\n                    value: hotkeys[name]\n                },\n                columns: [\n                    { label: name },\n                    { label: hotkeys[name] }\n                ]\n            };\n        }));\n    }\n    function editList(win, scheme, key) {\n        win._toggleDisabled(true);\n        Dialog.create('Input', {\n            message: _('Enter shortcut for:') + ' ' + key.name,\n            value: key.value\n        }, function (ev, button, value) {\n            win._toggleDisabled(false);\n            value = value || '';\n            if (value.indexOf('+') !== -1) {\n                hotkeys[key.name] = value;\n            }\n            renderList(win, scheme);\n        });\n    }\n    return {\n        group: 'system',\n        name: 'Input',\n        label: 'LBL_INPUT',\n        icon: 'apps/preferences-desktop-keyboard-shortcuts.png',\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            win._find('EnableHotkeys').set('value', settings.enableHotkeys);\n            hotkeys = Utils.cloneObject(settings.hotkeys);\n            renderList(win, scheme);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            win._find('HotkeysEdit').on('click', function () {\n                const selected = win._find('HotkeysList').get('selected');\n                if (selected && selected[0]) {\n                    editList(win, scheme, selected[0].data);\n                }\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n            settings.enableHotkeys = win._find('EnableHotkeys').get('value');\n            if (hotkeys && Object.keys(hotkeys).length) {\n                settings.hotkeys = hotkeys;\n            }\n        }\n    };\n});\ndefine('osjs-apps-settings/module-locale',[],function () {\n    'use strict';\n    const Config = OSjs.require('core/config');\n    const Locales = OSjs.require('core/locales');\n    return {\n        group: 'user',\n        name: 'Locale',\n        label: 'LBL_LOCALE',\n        icon: 'apps/accessories-character-map.png',\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            const config = Config.getConfig();\n            const locales = config.Languages;\n            win._find('UserLocale').clear().add(Object.keys(locales).filter(function (l) {\n                return !!OSjs.Locales[l];\n            }).map(function (l) {\n                return {\n                    label: locales[l],\n                    value: l\n                };\n            })).set('value', Locales.getLocale());\n        },\n        render: function (win, scheme, root, settings, wm) {\n        },\n        save: function (win, scheme, settings, wm) {\n            settings.language = win._find('UserLocale').get('value');\n        }\n    };\n});\ndefine('osjs-apps-settings/module-panel',[],function () {\n    'use strict';\n    const PackageManager = OSjs.require('core/package-manager');\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const Theme = OSjs.require('core/theme');\n    const Utils = OSjs.require('utils/misc');\n    let panelItems = [];\n    let items = [];\n    let max = 0;\n    let panel;\n    function openOptions(wm, idx) {\n        try {\n            wm.panels[0]._items[idx].openSettings();\n        } catch (e) {\n        }\n    }\n    function checkSelection(win, idx) {\n        let hasOptions = true;\n        try {\n            const it = items[panel.items[idx].name];\n            hasOptions = it.HasOptions === true;\n        } catch (e) {\n        }\n        win._find('PanelButtonOptions').set('disabled', idx < 0 || !hasOptions);\n        win._find('PanelButtonRemove').set('disabled', idx < 0);\n        win._find('PanelButtonUp').set('disabled', idx <= 0);\n        win._find('PanelButtonDown').set('disabled', idx < 0 || idx >= max);\n    }\n    function renderItems(win, setSelected) {\n        const list = [];\n        panelItems.forEach(function (i, idx) {\n            const name = i.name;\n            if (items[name]) {\n                list.push({\n                    value: idx,\n                    columns: [{\n                            icon: Theme.getIcon(items[name].Icon),\n                            label: Utils.format('{0} ({1})', items[name].Name, items[name].Description)\n                        }]\n                });\n            }\n        });\n        max = panelItems.length - 1;\n        const view = win._find('PanelItems');\n        view.clear();\n        view.add(list);\n        if (typeof setSelected !== 'undefined') {\n            view.set('selected', setSelected);\n            checkSelection(win, setSelected);\n        } else {\n            checkSelection(win, -1);\n        }\n    }\n    function movePanelItem(win, index, pos) {\n        const value = panelItems[index];\n        const newIndex = index + pos;\n        panelItems.splice(index, 1);\n        panelItems.splice(newIndex, 0, value);\n        renderItems(win, newIndex);\n    }\n    function createDialog(win, scheme, cb) {\n        if (scheme) {\n            const app = win._app;\n            const nwin = new OSjs.Applications.ApplicationSettings.SettingsItemDialog(app, app.__metadata, scheme, cb);\n            nwin._on('inited', function (scheme) {\n                nwin._find('List').clear().add(Object.keys(items).map(function (i, idx) {\n                    return {\n                        value: i,\n                        columns: [{\n                                icon: Theme.getIcon(items[i].Icon),\n                                label: Utils.format('{0} ({1})', items[i].Name, items[i].Description)\n                            }]\n                    };\n                }));\n                nwin._setTitle('Panel Items', true);\n            });\n            win._addChild(nwin, true, true);\n        }\n    }\n    function createColorDialog(win, color, cb) {\n        win._toggleDisabled(true);\n        Dialog.create('Color', { color: color }, function (ev, button, result) {\n            win._toggleDisabled(false);\n            if (button === 'ok' && result) {\n                cb(result.hex);\n            }\n        }, win);\n    }\n    return {\n        group: 'personal',\n        name: 'Panel',\n        label: 'LBL_PANELS',\n        icon: 'apps/gnome-panel.png',\n        watch: ['CoreWM'],\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            panel = settings.panels[0];\n            let opacity = 85;\n            if (typeof panel.options.opacity === 'number') {\n                opacity = panel.options.opacity;\n            }\n            win._find('PanelPosition').set('value', panel.options.position);\n            win._find('PanelAutoHide').set('value', panel.options.autohide);\n            win._find('PanelOntop').set('value', panel.options.ontop);\n            win._find('PanelBackgroundColor').set('value', panel.options.background || '#101010');\n            win._find('PanelForegroundColor').set('value', panel.options.foreground || '#ffffff');\n            win._find('PanelOpacity').set('value', opacity);\n            items = PackageManager.getPackage('CoreWM').panelItems;\n            panelItems = panel.items || [];\n            renderItems(win);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            win._find('PanelPosition').add([\n                {\n                    value: 'top',\n                    label: Locales._('LBL_TOP')\n                },\n                {\n                    value: 'bottom',\n                    label: Locales._('LBL_BOTTOM')\n                }\n            ]);\n            win._find('PanelBackgroundColor').on('open', function (ev) {\n                createColorDialog(win, ev.detail, function (result) {\n                    win._find('PanelBackgroundColor').set('value', result);\n                });\n            });\n            win._find('PanelForegroundColor').on('open', function (ev) {\n                createColorDialog(win, ev.detail, function (result) {\n                    win._find('PanelForegroundColor').set('value', result);\n                });\n            });\n            win._find('PanelItems').on('select', function (ev) {\n                if (ev && ev.detail && ev.detail.entries && ev.detail.entries.length) {\n                    checkSelection(win, ev.detail.entries[0].index);\n                }\n            });\n            win._find('PanelButtonAdd').on('click', function () {\n                win._toggleDisabled(true);\n                createDialog(win, scheme, function (ev, result) {\n                    win._toggleDisabled(false);\n                    if (result) {\n                        panelItems.push({ name: result.data });\n                        renderItems(win);\n                    }\n                });\n            });\n            win._find('PanelButtonRemove').on('click', function () {\n                const selected = win._find('PanelItems').get('selected');\n                if (selected.length) {\n                    panelItems.splice(selected[0].index, 1);\n                    renderItems(win);\n                }\n            });\n            win._find('PanelButtonUp').on('click', function () {\n                const selected = win._find('PanelItems').get('selected');\n                if (selected.length) {\n                    movePanelItem(win, selected[0].index, -1);\n                }\n            });\n            win._find('PanelButtonDown').on('click', function () {\n                const selected = win._find('PanelItems').get('selected');\n                if (selected.length) {\n                    movePanelItem(win, selected[0].index, 1);\n                }\n            });\n            win._find('PanelButtonReset').on('click', function () {\n                const defaults = wm.getDefaultSetting('panels');\n                panelItems = defaults[0].items;\n                renderItems(win);\n            });\n            win._find('PanelButtonOptions').on('click', function () {\n                const selected = win._find('PanelItems').get('selected');\n                if (selected.length) {\n                    openOptions(wm, selected[0].index);\n                }\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n            settings.panels = settings.panels || [{}];\n            settings.panels[0].options = settings.panels[0].options || {};\n            settings.panels[0].options.position = win._find('PanelPosition').get('value');\n            settings.panels[0].options.autohide = win._find('PanelAutoHide').get('value');\n            settings.panels[0].options.ontop = win._find('PanelOntop').get('value');\n            settings.panels[0].options.background = win._find('PanelBackgroundColor').get('value') || '#101010';\n            settings.panels[0].options.foreground = win._find('PanelForegroundColor').get('value') || '#ffffff';\n            settings.panels[0].options.opacity = win._find('PanelOpacity').get('value');\n            settings.panels[0].items = panelItems;\n        }\n    };\n});\ndefine('osjs-apps-settings/module-pm',[],function () {\n    'use strict';\n    const Dialog = OSjs.require('core/dialog');\n    const SettingsManager = OSjs.require('core/settings-manager');\n    const PackageManager = OSjs.require('core/package-manager');\n    const FileMetadata = OSjs.require('vfs/file');\n    let list, hidden;\n    function updateEnabledStates() {\n        const pool = SettingsManager.instance('PackageManager', { Hidden: [] });\n        list = PackageManager.getPackages(false);\n        hidden = pool.get('Hidden');\n    }\n    function renderInstalled(win, scheme) {\n        if (!win || win._destroyed) {\n            return;\n        }\n        win._find('ButtonUninstall').set('disabled', true);\n        updateEnabledStates();\n        const view = win._find('InstalledPackages');\n        const rows = Object.keys(list).map(function (k, idx) {\n            return {\n                index: idx,\n                value: k,\n                columns: [\n                    { label: '' },\n                    { label: k },\n                    { label: list[k].scope },\n                    { label: list[k].name }\n                ]\n            };\n        });\n        view.clear();\n        view.add(rows);\n        view.$element.querySelectorAll('gui-list-view-body > gui-list-view-row').forEach(function (row) {\n            const col = row.children[0];\n            const name = row.getAttribute('data-value');\n            const enabled = hidden.indexOf(name) >= 0;\n            win._create('gui-checkbox', { value: enabled }, col).on('change', function (ev) {\n                const idx = hidden.indexOf(name);\n                if (ev.detail) {\n                    if (idx < 0) {\n                        hidden.push(name);\n                    }\n                } else {\n                    if (idx >= 0) {\n                        hidden.splice(idx, 1);\n                    }\n                }\n            });\n        });\n    }\n    function renderPaths(win, scheme) {\n        if (!win || win._destroyed) {\n            return;\n        }\n        const paths = SettingsManager.instance('PackageManager').get('PackagePaths', []);\n        win._find('PackagePaths').clear().add(paths.map(function (iter, idx) {\n            return {\n                value: idx,\n                columns: [{ label: iter }]\n            };\n        }));\n    }\n    function _save(sf, win, scheme, paths) {\n        win._toggleLoading(true);\n        sf.set(null, { PackagePaths: paths }, function () {\n            renderPaths(win, scheme);\n            win._toggleLoading(false);\n        }, false);\n    }\n    function addPath(win, scheme) {\n        const sf = SettingsManager.instance('PackageManager');\n        const paths = sf.get('PackagePaths', []);\n        win._toggleDisabled(true);\n        Dialog.create('Input', {\n            message: 'Enter path',\n            placeholder: 'mount:///path'\n        }, function (ev, btn, value) {\n            win._toggleDisabled(false);\n            if (value) {\n                if (paths.indexOf(value) === -1) {\n                    paths.push(value);\n                    _save(sf, win, scheme, paths);\n                }\n            }\n        });\n    }\n    function removePath(win, scheme, index) {\n        const sf = SettingsManager.instance('PackageManager');\n        const paths = sf.get('PackagePaths', []);\n        if (typeof paths[index] !== 'undefined') {\n            paths.splice(index, 1);\n            _save(sf, win, scheme, paths);\n        }\n    }\n    return {\n        group: 'misc',\n        name: 'Packages',\n        label: 'LBL_PACKAGES',\n        icon: 'apps/system-software-install.png',\n        button: false,\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            renderInstalled(win, scheme);\n            renderPaths(win, scheme);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            const pool = SettingsManager.instance('PackageManager', { Hidden: [] });\n            win._find('ButtonUninstall').on('click', function () {\n                const selected = win._find('InstalledPackages').get('selected');\n                if (selected && selected[0]) {\n                    const pkg = PackageManager.getPackage(selected[0].data);\n                    if (pkg && pkg.scope === 'user') {\n                        win._toggleLoading(true);\n                        const file = new FileMetadata(pkg.path);\n                        PackageManager.uninstall(file).then(() => {\n                            win._toggleLoading(false);\n                            renderInstalled(win, scheme);\n                        }).catch(e => {\n                            win._toggleLoading(false);\n                            alert(e);\n                        });\n                    }\n                }\n            });\n            win._find('InstalledPackages').on('select', function (ev) {\n                let d = true;\n                const e = ev.detail.entries || [];\n                if (e.length) {\n                    const pkg = PackageManager.getPackage(e[0].data);\n                    if (pkg && pkg.scope === 'user') {\n                        d = false;\n                    }\n                }\n                win._find('ButtonUninstall').set('disabled', d);\n            });\n            win._find('ButtonSaveHidden').on('click', function () {\n                win._toggleLoading(true);\n                pool.set('Hidden', hidden, function () {\n                    win._toggleLoading(false);\n                });\n            });\n            win._find('ButtonRegen').on('click', function () {\n                win._toggleLoading(true);\n                PackageManager.generateUserMetadata().then(() => {\n                    win._toggleLoading(false);\n                    renderInstalled(win, scheme);\n                }).catch(() => {\n                    win._toggleLoading(false);\n                });\n            });\n            win._find('ButtonZipInstall').on('click', function () {\n                win._toggleDisabled(true);\n                Dialog.create('File', { filter: ['application/zip'] }, function (ev, button, result) {\n                    if (button !== 'ok' || !result) {\n                        win._toggleDisabled(false);\n                    } else {\n                        PackageManager.install(result, true).then(() => {\n                            win._toggleDisabled(false);\n                            renderInstalled(win, scheme);\n                        }).catch(e => {\n                            win._toggleDisabled(false);\n                            alert(e);\n                        });\n                    }\n                }, win);\n            });\n            win._find('PackagePathsRemove').on('click', function () {\n                const sel = win._find('PackagePaths').get('selected');\n                if (sel && sel.length) {\n                    removePath(win, scheme, sel[0].data);\n                }\n            });\n            win._find('PackagePathsAdd').on('click', function () {\n                addPath(win, scheme);\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n        }\n    };\n});\ndefine('osjs-apps-settings/module-search',['./locales'], function (Translations) {\n    'use strict';\n    const SettingsManager = OSjs.require('core/settings-manager');\n    const Notification = OSjs.require('gui/notification');\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const Utils = OSjs.require('utils/misc');\n    const _ = Locales.createLocalizer(Translations);\n    return {\n        group: 'system',\n        name: 'Search',\n        label: 'LBL_SEARCH',\n        icon: 'actions/system-search.png',\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            const searchOptions = Utils.cloneObject(SettingsManager.get('SearchEngine') || {});\n            win._find('SearchEnableApplications').set('value', searchOptions.applications === true);\n            win._find('SearchEnableFiles').set('value', searchOptions.files === true);\n            const view = win._find('SearchPaths').clear();\n            view.set('columns', [{ label: 'Path' }]);\n            const list = (searchOptions.paths || []).map(function (l) {\n                return {\n                    value: l,\n                    id: l,\n                    columns: [{ label: l }]\n                };\n            });\n            view.add(list);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            function openAddDialog() {\n                win._toggleDisabled(true);\n                Dialog.create('File', {\n                    select: 'dir',\n                    mfilter: [function (m) {\n                            return m.option('searchable') && m.mounted();\n                        }]\n                }, function (ev, button, result) {\n                    win._toggleDisabled(false);\n                    if (button === 'ok' && result) {\n                        win._find('SearchPaths').add([{\n                                value: result.path,\n                                id: result.path,\n                                columns: [{ label: result.path }]\n                            }]);\n                    }\n                }, win);\n            }\n            function removeSelected() {\n                const view = win._find('SearchPaths');\n                const current = view.get('value') || [];\n                current.forEach(function (c) {\n                    view.remove(c.index);\n                });\n            }\n            win._find('SearchAdd').on('click', openAddDialog);\n            win._find('SearchRemove').on('click', removeSelected);\n        },\n        save: function (win, scheme, settings, wm) {\n            const tmpPaths = win._find('SearchPaths').get('entry', null, null, true).sort();\n            const paths = [];\n            function isChildOf(tp) {\n                let result = false;\n                paths.forEach(function (p) {\n                    if (!result) {\n                        result = tp.substr(0, p.length) === p;\n                    }\n                });\n                return result;\n            }\n            tmpPaths.forEach(function (tp) {\n                const c = isChildOf(tp);\n                if (c) {\n                    Notification.create({\n                        title: _('LBL_SEARCH'),\n                        message: _(\"Search path '{0}' is already handled by another entry\", tp)\n                    });\n                }\n                if (!paths.length || !c) {\n                    paths.push(tp);\n                }\n            });\n            const searchSettings = {\n                applications: win._find('SearchEnableApplications').get('value'),\n                files: win._find('SearchEnableFiles').get('value'),\n                paths: paths\n            };\n            SettingsManager.instance('SearchEngine').set(null, searchSettings, false, false);\n        }\n    };\n});\ndefine('osjs-apps-settings/module-sound',['./locales'], function (Translations) {\n    'use strict';\n    const Theme = OSjs.require('core/theme');\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const Utils = OSjs.require('utils/misc');\n    const _ = Locales.createLocalizer(Translations);\n    let sounds = {};\n    function renderList(win, scheme) {\n        win._find('SoundsList').clear().add(Object.keys(sounds).map(function (name) {\n            return {\n                value: {\n                    name: name,\n                    value: sounds[name]\n                },\n                columns: [\n                    { label: name },\n                    { label: sounds[name] }\n                ]\n            };\n        }));\n    }\n    function editList(win, scheme, key) {\n        win._toggleDisabled(true);\n        Dialog.create('Input', {\n            message: _('Enter filename for:') + ' ' + key.name,\n            value: key.value\n        }, function (ev, button, value) {\n            win._toggleDisabled(false);\n            value = value || '';\n            if (value.length) {\n                sounds[key.name] = value;\n            }\n            renderList(win, scheme);\n        });\n    }\n    return {\n        group: 'personal',\n        name: 'Sounds',\n        label: 'LBL_SOUNDS',\n        icon: 'status/audio-volume-high.png',\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            win._find('SoundThemeName').set('value', settings.soundTheme);\n            win._find('EnableSounds').set('value', settings.enableSounds);\n            sounds = Utils.cloneObject(settings.sounds);\n            renderList(win, scheme);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            const soundThemes = function (tmp) {\n                return Object.keys(tmp).map(function (t) {\n                    return {\n                        label: tmp[t],\n                        value: t\n                    };\n                });\n            }(Theme.getSoundThemes());\n            win._find('SoundThemeName').add(soundThemes);\n            win._find('SoundsEdit').on('click', function () {\n                const selected = win._find('SoundsList').get('selected');\n                if (selected && selected[0]) {\n                    editList(win, scheme, selected[0].data);\n                }\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n            settings.soundTheme = win._find('SoundThemeName').get('value');\n            settings.enableSounds = win._find('EnableSounds').get('value');\n            if (sounds && Object.keys(sounds).length) {\n                settings.sounds = sounds;\n            }\n        }\n    };\n});\ndefine('osjs-apps-settings/module-store',[],function () {\n    'use strict';\n    const FS = OSjs.require('utils/fs');\n    const VFS = OSjs.require('vfs/fs');\n    const FileMetadata = OSjs.require('vfs/file');\n    const PackageManager = OSjs.require('core/package-manager');\n    function installSelected(download, cb) {\n        const file = new FileMetadata(download, 'application/zip');\n        new Promise((resolve, reject) => {\n            VFS.read(file).then(ab => {\n                const dest = new FileMetadata({\n                    filename: FS.filename(download),\n                    type: 'file',\n                    path: 'home:///' + FS.filename(download),\n                    mime: 'application/zip'\n                });\n                VFS.write(dest, ab).then(() => {\n                    return PackageManager.install(dest, true).then(() => {\n                        PackageManager.generateUserMetadata().then(resolve).catch(reject);\n                    }).catch(error => {\n                        reject(new Error('Failed to install package: ' + error));\n                    });\n                }).catch(reject);\n            }).catch(reject);\n        }).then(res => cb(false, res)).catch(cb);\n    }\n    function renderStore(win) {\n        win._toggleLoading(true);\n        PackageManager.getStorePackages({}).then(result => {\n            const rows = result.map(function (i, idx) {\n                const a = document.createElement('a');\n                a.href = i._repository;\n                return {\n                    index: idx,\n                    value: i.download,\n                    columns: [\n                        { label: i.name },\n                        { label: a.hostname },\n                        { label: i.version },\n                        { label: i.author }\n                    ]\n                };\n            });\n            win._toggleLoading(false);\n            const gelList = win._find('AppStorePackages');\n            if (gelList) {\n                gelList.clear().add(rows);\n            }\n            return true;\n        }).catch(err => {\n            console.warn(err);\n            win._toggleLoading(false);\n        });\n    }\n    return {\n        group: 'user',\n        name: 'Store',\n        label: 'LBL_STORE',\n        icon: 'apps/system-software-update.png',\n        button: false,\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm, clicked) {\n            if (clicked) {\n                renderStore(win);\n            }\n        },\n        render: function (win, scheme, root, settings, wm) {\n            win._find('ButtonStoreRefresh').on('click', function () {\n                renderStore(win);\n            });\n            win._find('ButtonStoreInstall').on('click', function () {\n                const selected = win._find('AppStorePackages').get('selected');\n                if (selected.length && selected[0].data) {\n                    win._toggleLoading(true);\n                    installSelected(selected[0].data, function (error, result) {\n                        win._toggleLoading(false);\n                        if (error) {\n                            alert(error);\n                            return;\n                        }\n                    });\n                }\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n        }\n    };\n});\ndefine('osjs-apps-settings/module-theme',['./locales'], function (Translations) {\n    'use strict';\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const FileMetadata = OSjs.require('vfs/file');\n    const Theme = OSjs.require('core/theme');\n    const _ = Locales.createLocalizer(Translations);\n    return {\n        group: 'personal',\n        name: 'Theme',\n        label: 'LBL_THEME',\n        icon: 'apps/preferences-desktop-wallpaper.png',\n        watch: ['CoreWM'],\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            win._find('BackgroundImage').set('value', settings.wallpaper);\n            win._find('BackgroundColor').set('value', settings.backgroundColor);\n            win._find('FontName').set('value', settings.fontFamily);\n            win._find('StyleThemeName').set('value', settings.styleTheme);\n            win._find('IconThemeName').set('value', settings.iconTheme);\n            win._find('EnableTouchMenu').set('value', settings.useTouchMenu);\n            win._find('BackgroundStyle').set('value', settings.background);\n            win._find('BackgroundImage').set('value', settings.wallpaper);\n            win._find('BackgroundColor').set('value', settings.backgroundColor);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            function _createDialog(n, a, done) {\n                win._toggleDisabled(true);\n                Dialog.create(n, a, function (ev, button, result) {\n                    win._toggleDisabled(false);\n                    if (button === 'ok' && result) {\n                        done(result);\n                    }\n                }, win);\n            }\n            win._find('StyleThemeName').add(Theme.getStyleThemes().map(function (t) {\n                return {\n                    label: t.title,\n                    value: t.name\n                };\n            }));\n            win._find('IconThemeName').add(function (tmp) {\n                return Object.keys(tmp).map(function (t) {\n                    return {\n                        label: tmp[t],\n                        value: t\n                    };\n                });\n            }(Theme.getIconThemes()));\n            win._find('BackgroundImage').on('open', function (ev) {\n                _createDialog('File', {\n                    mime: ['^image'],\n                    file: new FileMetadata(ev.detail)\n                }, function (result) {\n                    win._find('BackgroundImage').set('value', result.path);\n                });\n            });\n            win._find('BackgroundColor').on('open', function (ev) {\n                _createDialog('Color', { color: ev.detail }, function (result) {\n                    win._find('BackgroundColor').set('value', result.hex);\n                }, win);\n            });\n            win._find('FontName').on('click', function () {\n                _createDialog('Font', {\n                    fontName: settings.fontFamily,\n                    fontSize: -1\n                }, function (result) {\n                    win._find('FontName').set('value', result.fontName);\n                }, win);\n            });\n            win._find('BackgroundStyle').add([\n                {\n                    value: 'image',\n                    label: _('LBL_IMAGE')\n                },\n                {\n                    value: 'image-repeat',\n                    label: _('Image (Repeat)')\n                },\n                {\n                    value: 'image-center',\n                    label: _('Image (Centered)')\n                },\n                {\n                    value: 'image-fill',\n                    label: _('Image (Fill)')\n                },\n                {\n                    value: 'image-strech',\n                    label: _('Image (Streched)')\n                },\n                {\n                    value: 'color',\n                    label: _('LBL_COLOR')\n                }\n            ]);\n        },\n        save: function (win, scheme, settings, wm) {\n            settings.styleTheme = win._find('StyleThemeName').get('value');\n            settings.iconTheme = win._find('IconThemeName').get('value');\n            settings.useTouchMenu = win._find('EnableTouchMenu').get('value');\n            settings.wallpaper = win._find('BackgroundImage').get('value');\n            settings.backgroundColor = win._find('BackgroundColor').get('value');\n            settings.background = win._find('BackgroundStyle').get('value');\n            settings.fontFamily = win._find('FontName').get('value');\n        }\n    };\n});\ndefine('osjs-apps-settings/module-user',[],function () {\n    'use strict';\n    const Authenticator = OSjs.require('core/authenticator');\n    return {\n        group: 'user',\n        name: 'User',\n        label: 'LBL_USER',\n        icon: 'apps/user-info.png',\n        button: false,\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            const user = Authenticator.instance.getUser();\n            win._find('UserID').set('value', user.id);\n            win._find('UserName').set('value', user.name);\n            win._find('UserUsername').set('value', user.username);\n            win._find('UserGroups').set('value', user.groups);\n        },\n        render: function (win, scheme, root, settings, wm) {\n        },\n        save: function (win, scheme, settings, wm) {\n        }\n    };\n});\ndefine('osjs-apps-settings/module-users',['./locales'], function (Translations) {\n    'use strict';\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const Config = OSjs.require('core/config');\n    const Connection = OSjs.require('core/connection');\n    const Window = OSjs.require('core/window');\n    const _ = Locales.createLocalizer(Translations);\n    function renderUsers(win, scheme) {\n        Connection.request('users', { command: 'list' }).then(users => {\n            if (users instanceof Array) {\n                win._find('UsersList').clear().add(users.map(function (iter, idx) {\n                    return {\n                        value: iter,\n                        columns: [\n                            { label: iter.id },\n                            { label: iter.username },\n                            { label: iter.name }\n                        ]\n                    };\n                }));\n            }\n        });\n    }\n    function showDialog(win, scheme, data, id) {\n        win._toggleDisabled(true);\n        if (id) {\n            Dialog.create('Input', {\n                message: _('Set user password'),\n                type: 'password'\n            }, function (ev, button, value) {\n                if (!value) {\n                    win._toggleDisabled(false);\n                    return;\n                }\n                Connection.request('users', {\n                    command: 'passwd',\n                    user: {\n                        password: value,\n                        id: id\n                    }\n                }).then(() => {\n                    win._toggleDisabled(false);\n                    renderUsers(win, scheme);\n                }).catch(err => {\n                    win._toggleDisabled(false);\n                    OSjs.error('Settings', _('Error while managing users'), err);\n                });\n            });\n            return;\n        }\n        const action = data === null ? 'add' : 'edit';\n        data = data || {};\n        const nwin = new Window('SettingsUserWindow', {\n            icon: win._app.__metadata.icon,\n            title: win._app.__metadata.name,\n            width: 400,\n            height: 250\n        }, win._app);\n        nwin._on('destroy', function (root) {\n            win._toggleDisabled(false);\n        });\n        nwin._on('init', function (root) {\n            scheme.render(nwin, nwin._name);\n            if (Object.keys(data).length) {\n                nwin._find('UserUsername').set('value', data.username);\n                nwin._find('UserName').set('value', data.name);\n                nwin._find('UserGroups').set('value', (data.groups || []).join(','));\n            }\n            nwin._find('ButtonClose').on('click', function () {\n                nwin._close();\n            });\n            nwin._find('ButtonOK').on('click', function () {\n                data.username = nwin._find('UserUsername').get('value');\n                data.name = nwin._find('UserName').get('value') || data.username;\n                data.groups = nwin._find('UserGroups').get('value').replace(/\\s/g, '').split(',');\n                if (!data.username || !data.groups) {\n                    nwin._close();\n                    return;\n                }\n                Connection.request('users', {\n                    command: action,\n                    user: data\n                }).then(() => {\n                    renderUsers(win, scheme);\n                    nwin._close();\n                }).catch(err => {\n                    OSjs.error('Settings', _('Error while managing users'), err);\n                });\n            });\n        });\n        win._addChild(nwin, true, true);\n    }\n    function removeUser(win, scheme, data) {\n        Connection.request('users', {\n            command: 'remove',\n            user: data\n        }).then(users => {\n            renderUsers(win, scheme);\n        }).catch(err => {\n            OSjs.error('Settings', _('Error while managing users'), err);\n        });\n    }\n    return {\n        group: 'system',\n        name: 'Users',\n        label: 'LBL_USERS',\n        icon: 'apps/system-users.png',\n        button: false,\n        compatible: function () {\n            const cfg = Config.getConfig('Connection.Authenticator');\n            return [\n                'demo',\n                'pam',\n                'shadow'\n            ].indexOf(cfg) === -1;\n        },\n        init: function () {\n        },\n        update: function (win, scheme, settings, wm) {\n            renderUsers(win, scheme);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            function _action(cb, te) {\n                const sel = win._find('UsersList').get('selected');\n                if (sel && sel.length) {\n                    const data = sel[0].data;\n                    data._username = data.username;\n                    cb(data);\n                } else {\n                    if (te) {\n                        cb(null);\n                    }\n                }\n            }\n            win._find('UsersAdd').on('click', function () {\n                showDialog(win, scheme, null);\n            });\n            win._find('UsersRemove').on('click', function () {\n                _action(function (data) {\n                    removeUser(win, scheme, data);\n                });\n            });\n            win._find('UsersEdit').on('click', function () {\n                _action(function (data) {\n                    showDialog(win, scheme, data);\n                });\n            });\n            win._find('UsersPasswd').on('click', function () {\n                _action(function (data) {\n                    showDialog(win, scheme, null, data.id);\n                });\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n        }\n    };\n});\ndefine('osjs-apps-settings/module-vfs',[],function () {\n    'use strict';\n    const SettingsManager = OSjs.require('core/settings-manager');\n    const MountManager = OSjs.require('core/mount-manager');\n    const Authenticator = OSjs.require('core/authenticator');\n    const Window = OSjs.require('core/window');\n    const Utils = OSjs.require('utils/misc');\n    const TEMPLATES = {\n        WebDAV: {\n            MountName: 'owncloud',\n            MountDescription: 'OwnCloud',\n            MountHost: 'http://localhost/remote.php/webdav/',\n            MountNamespace: 'DAV:',\n            MountUsername: function () {\n                return Authenticator.instance.getUser().username;\n            }\n        }\n    };\n    let removeMounts = [];\n    let addMounts = [];\n    function createMountWindow(win, scheme, selected, ondone) {\n        const nwin = new Window('SettingsMountWindow', {\n            icon: win._app.__metadata.icon,\n            title: win._app.__metadata.name,\n            width: 400,\n            height: 440\n        }, win._app);\n        nwin._on('destroy', function (root) {\n            win._toggleDisabled(false);\n        });\n        nwin._on('inited', function (root) {\n            win._toggleDisabled(true);\n        });\n        nwin._on('init', function (root) {\n            function setTemplate(name) {\n                const tpl = TEMPLATES[name];\n                if (tpl) {\n                    Object.keys(tpl).forEach(function (k) {\n                        let val = tpl[k];\n                        if (typeof val === 'function') {\n                            val = val();\n                        }\n                        nwin._find(k).set('value', val);\n                    });\n                }\n            }\n            function done() {\n                ondone({\n                    transport: nwin._find('MountType').get('value'),\n                    name: nwin._find('MountName').get('value'),\n                    description: nwin._find('MountDescription').get('value'),\n                    options: {\n                        host: nwin._find('MountHost').get('value'),\n                        ns: nwin._find('MountNamespace').get('value'),\n                        username: nwin._find('MountUsername').get('value'),\n                        password: nwin._find('MountPassword').get('value'),\n                        cors: nwin._find('MountCORS').get('value')\n                    }\n                }, selected);\n                nwin._close();\n            }\n            scheme.render(nwin, nwin._name);\n            if (selected) {\n                nwin._find('MountType').set('value', selected.transport);\n                nwin._find('MountName').set('value', selected.name);\n                nwin._find('MountDescription').set('value', selected.description);\n                if (selected.options) {\n                    nwin._find('MountHost').set('value', selected.options.host);\n                    nwin._find('MountNamespace').set('value', selected.options.ns);\n                    nwin._find('MountUsername').set('value', selected.options.username);\n                    nwin._find('MountPassword').set('value', selected.options.password);\n                    nwin._find('MountCORS').set('value', selected.options.cors);\n                }\n            } else {\n                setTemplate(nwin._find('MountType').get('value'));\n                nwin._find('MountType').on('change', function (ev) {\n                    setTemplate(ev.detail);\n                });\n            }\n            nwin._find('ButtonClose').on('click', function () {\n                nwin._close();\n            });\n            nwin._find('ButtonOK').on('click', function () {\n                done();\n            });\n        });\n        return win._addChild(nwin, true, true);\n    }\n    function renderMounts(win, scheme) {\n        const sf = SettingsManager.instance('VFS');\n        const entries = sf.get('mounts', []).map(function (i, idx) {\n            return {\n                value: idx,\n                columns: [\n                    { label: i.name },\n                    { label: i.description }\n                ]\n            };\n        });\n        win._find('MountList').clear().add(entries);\n    }\n    return {\n        group: 'system',\n        name: 'VFS',\n        label: 'VFS',\n        icon: 'devices/drive-harddisk.png',\n        watch: ['VFS'],\n        init: function (app) {\n        },\n        update: function (win, scheme, settings, wm) {\n            const vfsOptions = Utils.cloneObject(SettingsManager.get('VFS') || {});\n            const scandirOptions = vfsOptions.scandir || {};\n            win._find('ShowFileExtensions').set('value', scandirOptions.showFileExtensions === true);\n            win._find('ShowHiddenFiles').set('value', scandirOptions.showHiddenFiles === true);\n            renderMounts(win, scheme);\n        },\n        render: function (win, scheme, root, settings, wm) {\n            function ondone(connection, replace) {\n                if (connection) {\n                    if (replace) {\n                        removeMounts.push(replace);\n                    }\n                    addMounts.push(connection);\n                }\n                win.onButtonOK();\n                win.onModuleSelect(module.name);\n            }\n            win._find('MountList').set('columns', [\n                { label: 'Name' },\n                { label: 'Description' }\n            ]);\n            win._find('MountRemove').on('click', function () {\n                const sel = win._find('MountList').get('selected');\n                if (sel instanceof Array) {\n                    sel.forEach(function (item) {\n                        const mounts = SettingsManager.instance('VFS').get('mounts', []);\n                        const idx = item.data;\n                        if (mounts[idx]) {\n                            removeMounts.push(mounts[idx]);\n                            win.onButtonOK();\n                            win.onModuleSelect(module.name);\n                        }\n                    });\n                }\n            });\n            win._find('MountAdd').on('click', function () {\n                createMountWindow(win, scheme, null, ondone);\n            });\n            win._find('MountEdit').on('click', function () {\n                const sel = win._find('MountList').get('selected');\n                const mounts = SettingsManager.instance('VFS').get('mounts', []);\n                if (sel && sel.length) {\n                    const mount = mounts[sel[0].data];\n                    if (mount) {\n                        createMountWindow(win, scheme, mount, ondone);\n                    }\n                }\n            });\n        },\n        save: function (win, scheme, settings, wm) {\n            const si = SettingsManager.instance('VFS');\n            const mounts = si.get('mounts', []).filter(function (iter) {\n                for (let i = 0; i < removeMounts.length; i++) {\n                    const name = removeMounts[i].name;\n                    if (name === iter.name) {\n                        MountManager.remove(name);\n                        removeMounts.splice(i, 1);\n                        return false;\n                    }\n                }\n                return true;\n            });\n            addMounts.forEach(function (iter) {\n                try {\n                    MountManager.add(Object.assign({}, iter));\n                    mounts.push(iter);\n                } catch (e) {\n                    OSjs.error('Settings', 'An error occured while trying to mount', e);\n                    console.warn(e.stack, e);\n                }\n            });\n            const vfsSettings = {\n                mounts: mounts,\n                scandir: {\n                    showHiddenFiles: win._find('ShowHiddenFiles').get('value'),\n                    showFileExtensions: win._find('ShowFileExtensions').get('value')\n                }\n            };\n            si.set(null, vfsSettings, false, false);\n            addMounts = [];\n            removeMounts = [];\n        }\n    };\n});\ndefine('osjs-apps-settings/scheme.html',[], function() { return \"<application-window data-id=\\\"SettingsWindow\\\">\\r\\n\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\" data-id=\\\"ContainerSelection\\\">\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\" data-id=\\\"ContainerContent\\\">\\r\\n      <gui-fragment data-fragment-external=\\\"module-desktop.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-input.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-locale.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-panel.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-pm.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-store.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-search.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-sound.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-theme.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-user.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-vfs.html\\\" />\\r\\n      <gui-fragment data-fragment-external=\\\"module-users.html\\\" />\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\" data-id=\\\"ContainerButtons\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_SAVE</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonCancel\\\">LBL_BACK</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n\\r\\n</application-window>\\r\\n\\r\\n<application-window data-id=\\\"SettingsItemWindow\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n      <gui-list-view data-id=\\\"List\\\" data-multiple=\\\"false\\\">\\r\\n      </gui-list-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonItemOK\\\">LBL_OK</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonItemCancel\\\">LBL_CANCEL</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-window>\\r\\n\\r\\n<application-window data-id=\\\"SettingsMountWindow\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n\\r\\n      <gui-scroll-view>\\r\\n        <gui-vbox>\\r\\n          <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n            <gui-label>LBL_TYPE</gui-label>\\r\\n          </gui-vbox-container>\\r\\n          <gui-vbox-container data-expand=\\\"true\\\">\\r\\n            <gui-select data-id=\\\"MountType\\\">\\r\\n              <gui-select-option data-value=\\\"webdav\\\">WebDAV (OwnCloud)</gui-select-option>\\r\\n            </gui-select>\\r\\n          </gui-vbox-container>\\r\\n\\r\\n          <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n            <gui-label>LBL_NAME</gui-label>\\r\\n          </gui-vbox-container>\\r\\n          <gui-vbox-container data-expand=\\\"true\\\">\\r\\n            <gui-text data-id=\\\"MountName\\\" data-placeholder=\\\"mydav\\\"></gui-text>\\r\\n          </gui-vbox-container>\\r\\n\\r\\n          <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n            <gui-label>LBL_DESCRIPTION</gui-label>\\r\\n          </gui-vbox-container>\\r\\n          <gui-vbox-container data-expand=\\\"true\\\">\\r\\n            <gui-text data-id=\\\"MountDescription\\\" data-placeholder=\\\"My DAV\\\"></gui-text>\\r\\n          </gui-vbox-container>\\r\\n\\r\\n\\r\\n          <gui-vbox-container data-grow=\\\"1\\\">\\r\\n            <gui-expander data-label=\\\"LBL_SETTINGS\\\" data-expanded=\\\"false\\\">\\r\\n              <gui-vbox>\\r\\n                <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n                  <gui-label>LBL_HOST</gui-label>\\r\\n                </gui-vbox-container>\\r\\n                <gui-vbox-container data-expand=\\\"true\\\">\\r\\n                  <gui-text data-id=\\\"MountHost\\\" data-placeholder=\\\"http://127.0.0.1/remote.php/webdav/\\\"></gui-text>\\r\\n                </gui-vbox-container>\\r\\n\\r\\n                <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n                  <gui-label>LBL_NAMESPACE</gui-label>\\r\\n                </gui-vbox-container>\\r\\n                <gui-vbox-container data-expand=\\\"true\\\">\\r\\n                  <gui-text data-id=\\\"MountNamespace\\\" data-placeholder=\\\"DAV\\\"></gui-text>\\r\\n                </gui-vbox-container>\\r\\n\\r\\n                <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n                  <gui-label>LBL_USERNAME</gui-label>\\r\\n                </gui-vbox-container>\\r\\n                <gui-vbox-container data-expand=\\\"true\\\">\\r\\n                  <gui-text data-id=\\\"MountUsername\\\" data-placeholder=\\\"username\\\"></gui-text>\\r\\n                </gui-vbox-container>\\r\\n\\r\\n                <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n                  <gui-label>LBL_PASSWORD</gui-label>\\r\\n                </gui-vbox-container>\\r\\n                <gui-vbox-container data-expand=\\\"true\\\">\\r\\n                  <gui-password data-id=\\\"MountPassword\\\" data-placeholder=\\\"password\\\"></gui-password>\\r\\n                </gui-vbox-container>\\r\\n\\r\\n                <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n                  <gui-label>CORS Enabled</gui-label>\\r\\n                </gui-vbox-container>\\r\\n                <gui-vbox-container data-expand=\\\"true\\\">\\r\\n                  <gui-switch data-id=\\\"MountCORS\\\"></gui-switch>\\r\\n                </gui-vbox-container>\\r\\n              </gui-vbox>\\r\\n            </gui-expander>\\r\\n          </gui-vbox-container>\\r\\n\\r\\n        </gui-vbox>\\r\\n      </gui-scroll-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_SAVE</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonClose\\\">LBL_CLOSE</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n\\r\\n</application-window>\\r\\n\\r\\n<application-window data-id=\\\"SettingsUserWindow\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"1\\\" data-fill=\\\"true\\\">\\r\\n\\r\\n      <gui-scroll-view>\\r\\n        <gui-vbox>\\r\\n          <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n            <gui-label>LBL_USERNAME</gui-label>\\r\\n          </gui-vbox-container>\\r\\n          <gui-vbox-container data-expand=\\\"true\\\">\\r\\n            <gui-text data-id=\\\"UserUsername\\\" data-placeholder=\\\"johndoe\\\"></gui-text>\\r\\n          </gui-vbox-container>\\r\\n\\r\\n          <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n            <gui-label>LBL_NAME</gui-label>\\r\\n          </gui-vbox-container>\\r\\n          <gui-vbox-container data-expand=\\\"true\\\">\\r\\n            <gui-text data-id=\\\"UserName\\\" data-placeholder=\\\"John Doe\\\"></gui-text>\\r\\n          </gui-vbox-container>\\r\\n\\r\\n          <gui-vbox-container data-shrink=\\\"1\\\">\\r\\n            <gui-label>LBL_GROUPS</gui-label>\\r\\n          </gui-vbox-container>\\r\\n          <gui-vbox-container data-expand=\\\"true\\\">\\r\\n            <gui-text data-id=\\\"UserGroups\\\" data-placeholder=\\\"group1, group2, ...\\\"></gui-text>\\r\\n          </gui-vbox-container>\\r\\n\\r\\n        </gui-vbox>\\r\\n      </gui-scroll-view>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-button-bar>\\r\\n        <gui-button data-id=\\\"ButtonOK\\\">LBL_SAVE</gui-button>\\r\\n        <gui-button data-id=\\\"ButtonClose\\\">LBL_CLOSE</gui-button>\\r\\n      </gui-button-bar>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n\\r\\n</application-window>\\r\\n\"; });\ndefine('osjs-apps-settings/main',[\n    './locales',\n    './module-desktop',\n    './module-input',\n    './module-locale',\n    './module-panel',\n    './module-pm',\n    './module-search',\n    './module-sound',\n    './module-store',\n    './module-theme',\n    './module-user',\n    './module-users',\n    './module-vfs',\n    \"./scheme.html\"\n\n], function (Translations, ModuleDesktop, ModuleInput, ModuleLocale, ModulePanel, ModulePM, ModuleSearch, ModuleSounds, ModuleStore, ModuleTheme, ModuleUser, ModuleUsers, ModuleVFS,schemeHtml) {\n    'use strict';\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    const Window = OSjs.require('core/window');\n    const Events = OSjs.require('utils/events');\n    const Theme = OSjs.require('core/theme');\n    const Utils = OSjs.require('utils/misc');\n    const Menu = OSjs.require('gui/menu');\n    const SettingsManager = OSjs.require('core/settings-manager');\n    const WindowManager = OSjs.require('core/window-manager');\n    const Application = OSjs.require('core/application');\n    const _ = Locales.createLocalizer(Translations);\n    const DEFAULT_GROUP = 'misc';\n    const _groups = {\n        personal: { label: 'LBL_PERSONAL' },\n        system: { label: 'LBL_SYSTEM' },\n        user: { label: 'LBL_USER' },\n        misc: { label: 'LBL_OTHER' }\n    };\n    const categoryMap = {\n        'theme': 'Theme',\n        'desktop': 'Desktop',\n        'panel': 'Panel',\n        'user': 'User',\n        'fileview': 'VFS',\n        'search': 'Search'\n    };\n    class SettingsItemDialog extends Dialog {\n        constructor(app, metadata, scheme, callback) {\n            super('ApplicationSettingsGenericsWindow', {\n                icon: metadata.icon,\n                title: metadata.name,\n                width: 400,\n                height: 300,\n                translator: _\n            });\n            this.schemeRef = scheme;\n            this.callback = callback;\n            this.closed = false;\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            this.schemeRef.render(this, 'SettingsItemWindow');\n            this._find('ButtonItemOK').on('click', () => {\n                this.closed = true;\n                const selected = this._find('List').get('selected');\n                this.callback('ok', selected.length ? selected[0] : null);\n                this._close();\n            });\n            this._find('ButtonItemCancel').on('click', () => this._close());\n            return root;\n        }\n        _close() {\n            if (!this.closed) {\n                this.callback('cancel');\n            }\n            return super._close(...arguments);\n        }\n    }\n    class ApplicationSettingsWindow extends Window {\n        constructor(app, metadata, initialCategory) {\n            super('ApplicationSettingsWindow', {\n                icon: metadata.icon,\n                title: metadata.name,\n                width: 500,\n                height: 450,\n                allow_resize: true,\n                translator: _\n            }, app);\n            this.initialCategory = initialCategory;\n        }\n        init(wmRef, app) {\n            const root = super.init(...arguments);\n            const wm = WindowManager.instance;\n            this.scheme = this._render('SettingsWindow', schemeHtml);\n            this._find('ButtonOK').son('click', this, this.onButtonOK);\n            this._find('ButtonCancel').son('click', this, this.onButtonCancel);\n            const container = document.createElement('div');\n            container.className = 'ListView gui-generic-zebra-container gui-element';\n            let containers = {};\n            let tmpcontent = document.createDocumentFragment();\n            Object.keys(_groups).forEach(function (k) {\n                const c = document.createElement('ul');\n                const h = document.createElement('span');\n                const d = document.createElement('div');\n                d.className = 'gui-generic-double-padded';\n                h.appendChild(document.createTextNode(_(_groups[k].label)));\n                containers[k] = c;\n                d.appendChild(h);\n                d.appendChild(c);\n                container.appendChild(d);\n            });\n            app.modules.forEach(m => {\n                if (typeof m.compatible === 'function') {\n                    if (!m.compatible()) {\n                        return;\n                    }\n                }\n                if (containers[m.group]) {\n                    const i = document.createElement('img');\n                    i.setAttribute('src', Theme.getIcon(m.icon, '32x32'));\n                    i.setAttribute('title', m.name);\n                    const s = document.createElement('span');\n                    s.appendChild(document.createTextNode(_(m.label || m.name)));\n                    const c = document.createElement('li');\n                    c.className = 'gui-generic-hoverable';\n                    c.setAttribute('data-module', String(m.name));\n                    c.appendChild(i);\n                    c.appendChild(s);\n                    containers[m.group].appendChild(c);\n                    const found = root.querySelector('[data-module=\"' + m.name + '\"]');\n                    if (found) {\n                        found.className = 'gui-generic-padded';\n                    } else {\n                        console.warn('Not found', m.name);\n                    }\n                    const settings = Utils.cloneObject(wm.getSettings());\n                    try {\n                        m.render(this, this.scheme, tmpcontent, settings, wm);\n                    } catch (e) {\n                        console.warn(e, e.stack);\n                    }\n                    try {\n                        m.update(this, this.scheme, settings, wm);\n                    } catch (e) {\n                        console.warn(e, e.stack);\n                    }\n                    m._inited = true;\n                }\n            });\n            Object.keys(containers).forEach(k => {\n                if (!containers[k].children.length) {\n                    containers[k].parentNode.style.display = 'none';\n                }\n            });\n            Events.$bind(container, 'click', ev => {\n                const t = ev.isTrusted ? ev.target : ev.relatedTarget || ev.target;\n                Menu.blur();\n                if (t && t.tagName === 'LI' && t.hasAttribute('data-module')) {\n                    ev.preventDefault();\n                    const m = t.getAttribute('data-module');\n                    this.onModuleSelect(m);\n                }\n            }, true);\n            root.querySelector('[data-id=\"ContainerSelection\"]').appendChild(container);\n            containers = {};\n            tmpcontent = null;\n            if (this.initialCategory) {\n                this.onExternalAttention(this.initialCategory);\n            }\n            return root;\n        }\n        destroy() {\n            if (super.destroy(...arguments)) {\n                this.currentModule = null;\n                return true;\n            }\n            return false;\n        }\n        onModuleSelect(name) {\n            const wm = WindowManager.instance;\n            const root = this._$element;\n            function _d(d) {\n                root.querySelector('[data-id=\"ContainerSelection\"]').style.display = d ? 'block' : 'none';\n                root.querySelector('[data-id=\"ContainerContent\"]').style.display = d ? 'none' : 'block';\n                root.querySelector('[data-id=\"ContainerButtons\"]').style.display = d ? 'none' : 'block';\n            }\n            root.querySelectorAll('div[data-module]').forEach(function (mod) {\n                mod.style.display = 'none';\n            });\n            _d(true);\n            this._setTitle(null);\n            let found, settings;\n            if (name) {\n                this._app.modules.forEach(function (m) {\n                    if (!found && m.name === name) {\n                        found = m;\n                    }\n                });\n            }\n            if (found) {\n                const mod = root.querySelector('div[data-module=\"' + found.name + '\"]');\n                if (mod) {\n                    mod.style.display = 'block';\n                    settings = Utils.cloneObject(wm.getSettings());\n                    try {\n                        found.update(this, this.scheme, settings, wm, true);\n                    } catch (e) {\n                        console.warn(e, e.stack);\n                    }\n                    _d(false);\n                    this._setTitle(_(found.name), true);\n                    if (found.button === false) {\n                        this._find('ButtonOK').hide();\n                    } else {\n                        this._find('ButtonOK').show();\n                    }\n                }\n            } else {\n                if (!name) {\n                    settings = Utils.cloneObject(wm.getSettings());\n                    this._app.modules.forEach(m => {\n                        try {\n                            if (m._inited) {\n                                m.update(this, this.scheme, settings, wm);\n                            }\n                        } catch (e) {\n                            console.warn(e, e.stack);\n                        }\n                    });\n                }\n            }\n            this._app.setModule(found);\n        }\n        onButtonOK() {\n            const settings = {};\n            const wm = WindowManager.instance;\n            this._app.modules.forEach(m => {\n                if (m._inited) {\n                    const res = m.save(this, this.scheme, settings, wm);\n                    if (typeof res === 'function') {\n                        res();\n                    }\n                }\n            });\n            this._toggleLoading(true);\n            this._app.saveSettings(settings, () => {\n                this._toggleLoading(false);\n            });\n        }\n        onButtonCancel() {\n            this.onModuleSelect(null);\n        }\n        onExternalAttention(cat) {\n            this.onModuleSelect(categoryMap[cat] || cat);\n            this._focus();\n        }\n    }\n    class ApplicationSettings extends Application {\n        constructor(args, metadata) {\n            super('ApplicationSettings', args, metadata);\n            const registered = OSjs.Applications.ApplicationSettings.Modules;\n            this.watches = {};\n            this.currentModule = null;\n            this.modules = Object.keys(registered).map(function (name) {\n                const opts = Utils.argumentDefaults(registered[name], {\n                    _inited: false,\n                    name: name,\n                    group: DEFAULT_GROUP,\n                    icon: 'status/error.png',\n                    init: function () {\n                    },\n                    update: function () {\n                    },\n                    render: function () {\n                    },\n                    save: function () {\n                    }\n                });\n                if (Object.keys(_groups).indexOf(opts.group) === -1) {\n                    opts.group = DEFAULT_GROUP;\n                }\n                Object.keys(opts).forEach(function (k) {\n                    if (typeof opts[k] === 'function') {\n                        opts[k] = opts[k].bind(opts);\n                    }\n                });\n                return opts;\n            });\n            this.modules.forEach(m => {\n                m.init(this);\n                if (m.watch && m.watch instanceof Array) {\n                    m.watch.forEach(w => {\n                        this.watches[m.name] = SettingsManager.watch(w, () => {\n                            const win = this._getMainWindow();\n                            if (m && win) {\n                                if (this.currentModule && this.currentModule.name === m.name) {\n                                    win.onModuleSelect(m.name);\n                                }\n                            }\n                        });\n                    });\n                }\n            });\n        }\n        destroy() {\n            if (super.destroy(...arguments)) {\n                Object.keys(this.watches).forEach(k => {\n                    SettingsManager.unwatch(this.watches[k]);\n                });\n                this.watches = {};\n                return true;\n            }\n            return false;\n        }\n        init(settings, metadata) {\n            super.init(...arguments);\n            const category = this._getArgument('category') || settings.category;\n            const win = this._addWindow(new ApplicationSettingsWindow(this, metadata, category));\n            this._on('attention', function (args) {\n                if (win && args.category) {\n                    win.onExternalAttention(args.category);\n                }\n            });\n        }\n        saveSettings(settings, cb) {\n            const wm = WindowManager.instance;\n            wm.applySettings(settings, false, 1);\n            SettingsManager.save().then(res => cb(false, res)).catch(cb);\n        }\n        setModule(m) {\n            this.currentModule = m;\n        }\n        static get SettingsItemDialog() {\n            return SettingsItemDialog;\n        }\n        static get Modules() {\n            return {\n                Desktop: ModuleDesktop,\n                Input: ModuleInput,\n                Locale: ModuleLocale,\n                Panel: ModulePanel,\n                PM: ModulePM,\n                Search: ModuleSearch,\n                Sounds: ModuleSounds,\n                Store: ModuleStore,\n                Theme: ModuleTheme,\n                User: ModuleUser,\n                Users: ModuleUsers,\n                VFS: ModuleVFS\n            };\n        }\n    }\n    OSjs.Applications.ApplicationSettings = Object.seal(ApplicationSettings);\n});\ndefine('osjs-apps-settings', ['osjs-apps-settings/main'], function (main) { return main; });\n\n"]}