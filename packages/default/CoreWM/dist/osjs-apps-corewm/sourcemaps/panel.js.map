{"version":3,"sources":["panel.js"],"names":["define","Translations","PanelItem","_","OSjs","require","createLocalizer","DOM","Events","Menu","WindowManager","[object Object]","name","options","wm","this","_name","_$element","_$container","_items","_outtimeout","_intimeout","_options","mergeDefaults","position","console","debug","get","root","instance","document","createElement","setAttribute","$bind","ev","onMouseOver","onMouseOut","target","getAttribute","menu","title","onClick","showSettings","getSetting","push","applySettings","useTouchMenu","create","createMenu","onMouseLeave","appendChild","setTimeout","update","_clearTimeouts","$unbind","forEach","item","destroy","$remove","attrs","ontop","autohide","Object","keys","k","set","hide","clearTimeout","from","relatedTarget","toElement","nodeName","init","type","getItem","multiple","result","idx","pos","offsetHeight"],"mappings":"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","file":"../panel.js","sourcesContent":["define([\n    './locales',\n    './panelitem'\n], function (Translations, PanelItem) {\n    'use strict';\n    const _ = OSjs.require('core/locales').createLocalizer(Translations);\n    const DOM = OSjs.require('utils/dom');\n    const Events = OSjs.require('utils/events');\n    const Menu = OSjs.require('gui/menu');\n    const WindowManager = OSjs.require('core/window-manager');\n    const PANEL_SHOW_TIMEOUT = 150;\n    const PANEL_HIDE_TIMEOUT = 600;\n    return class Panel {\n        constructor(name, options, wm) {\n            options = options || {};\n            this._name = name;\n            this._$element = null;\n            this._$container = null;\n            this._items = [];\n            this._outtimeout = null;\n            this._intimeout = null;\n            this._options = options.mergeDefaults({ position: 'top' });\n            console.debug('Panel::construct()', this._name, this._options.get());\n        }\n        init(root) {\n            var wm = WindowManager.instance;\n            function createMenu(ev) {\n                var menu = [{\n                        title: _('Open Panel Settings'),\n                        onClick: function (ev) {\n                            wm.showSettings('panel');\n                        }\n                    }];\n                if (wm.getSetting('useTouchMenu') === true) {\n                    menu.push({\n                        title: _('Turn off TouchMenu'),\n                        onClick: function (ev) {\n                            wm.applySettings({ useTouchMenu: false }, false, true);\n                        }\n                    });\n                } else {\n                    menu.push({\n                        title: _('Turn on TouchMenu'),\n                        onClick: function (ev) {\n                            wm.applySettings({ useTouchMenu: true }, false, true);\n                        }\n                    });\n                }\n                Menu.create(menu, ev);\n            }\n            this._$container = document.createElement('corewm-panel-container');\n            this._$element = document.createElement('corewm-panel');\n            this._$element.setAttribute('data-orientation', 'horizontal');\n            this._$element.setAttribute('role', 'toolbar');\n            Events.$bind(this._$element, 'mouseover', ev => {\n                this.onMouseOver(ev);\n            });\n            Events.$bind(this._$element, 'mouseout', ev => {\n                this.onMouseOut(ev);\n            });\n            Events.$bind(this._$element, 'contextmenu', function (ev) {\n                if (!ev.target || ev.target.getAttribute('role') !== 'button') {\n                    createMenu(ev);\n                }\n            });\n            Events.$bind(document, 'mouseout:panelmouseleave', ev => {\n                this.onMouseLeave(ev);\n            }, false);\n            this._$element.appendChild(this._$container);\n            root.appendChild(this._$element);\n            setTimeout(() => this.update(), 0);\n        }\n        destroy() {\n            this._clearTimeouts();\n            Events.$unbind(document, 'mouseout:panelmouseleave');\n            Events.$unbind(this._$element);\n            this._items.forEach(function (item) {\n                item.destroy();\n            });\n            this._items = [];\n            this._$element = DOM.$remove(this._$element);\n            this._$container = null;\n        }\n        update(options) {\n            options = options || this._options.get();\n            var attrs = {\n                ontop: !!options.ontop,\n                position: options.position || 'bottom'\n            };\n            if (options.autohide) {\n                this.onMouseOut();\n            }\n            if (this._$element) {\n                Object.keys(attrs).forEach(k => {\n                    this._$element.setAttribute('data-' + k, typeof attrs[k] === 'boolean' ? attrs[k] ? 'true' : 'false' : attrs[k]);\n                });\n            }\n            this._options.set(null, options);\n        }\n        autohide(hide) {\n            if (!this._options.get('autohide') || !this._$element) {\n                return;\n            }\n            if (hide) {\n                this._$element.setAttribute('data-autohide', 'true');\n            } else {\n                this._$element.setAttribute('data-autohide', 'false');\n            }\n        }\n        _clearTimeouts() {\n            if (this._outtimeout) {\n                clearTimeout(this._outtimeout);\n                this._outtimeout = null;\n            }\n            if (this._intimeout) {\n                clearTimeout(this._intimeout);\n                this._intimeout = null;\n            }\n        }\n        onMouseLeave(ev) {\n            var from = ev.relatedTarget || ev.toElement;\n            if (!from || from.nodeName === 'HTML') {\n                this.onMouseOut(ev);\n            }\n        }\n        onMouseOver() {\n            this._clearTimeouts();\n            this._intimeout = setTimeout(() => {\n                this.autohide(false);\n            }, PANEL_SHOW_TIMEOUT);\n        }\n        onMouseOut() {\n            this._clearTimeouts();\n            this._outtimeout = setTimeout(() => {\n                this.autohide(true);\n            }, PANEL_HIDE_TIMEOUT);\n        }\n        addItem(item) {\n            if (!(item instanceof PanelItem)) {\n                throw 'Expected a PanelItem in Panel::addItem()';\n            }\n            this._items.push(item);\n            this._$container.appendChild(item.init());\n        }\n        isAutoHidden() {\n            if (this._$element) {\n                return this._$element.getAttribute('data-autohide') === 'true';\n            }\n            return false;\n        }\n        getItemByType(type) {\n            return this.getItem(type);\n        }\n        getItemsByType(type) {\n            return this.getItem(type, true);\n        }\n        getItem(type, multiple) {\n            var result = multiple ? [] : null;\n            this._items.forEach(function (item, idx) {\n                if (item instanceof type) {\n                    if (multiple) {\n                        result.push(item);\n                    } else {\n                        result = item;\n                        return false;\n                    }\n                }\n                return true;\n            });\n            return result;\n        }\n        getOntop() {\n            return this._options.get('ontop');\n        }\n        getPosition(pos) {\n            return pos ? this._options.get('position') === pos : this._options.get('position');\n        }\n        getAutohide() {\n            return this._options.get('autohide');\n        }\n        getRoot() {\n            return this._$element;\n        }\n        getHeight() {\n            return this._$element ? this._$element.offsetHeight : 0;\n        }\n    };\n});"]}