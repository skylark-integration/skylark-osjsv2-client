{"version":3,"sources":["panelitems/clock.js"],"names":["define","PanelItem","PanelDialog","DOM","OSjs","require","ExtendedDate","ClockSettingsDialog","[object Object]","panelItem","scheme","closeCallback","super","title","icon","width","height","_settings","wm","app","root","init","arguments","this","_find","set","get","String","parseInt","settings","utc","interval","format","tooltip","clockInterval","$clock","timeFmt","tooltipFmt","update","clock","now","Date","t","d","$empty","appendChild","document","createTextNode","setAttribute","clearInterval","setInterval","create","createElement","innerHTML","li","_$container","createInterval","openSettings","$remove","destroy"],"mappings":";;;;;;;AAAAA,QACI,eACA,sBACD,SAAUC,EAAWC,GACpB,aACA,MAAMC,EAAMC,KAAKC,QAAQ,aACnBC,EAAeF,KAAKC,QAAQ,sBAC5BE,UAA4BL,EAC9BM,YAAYC,EAAWC,EAAQC,GAC3BC,MAAM,uBACFC,MAAO,iBACPC,KAAM,8BACNC,MAAO,IACPC,OAAQ,KACTP,EAAUQ,UAAWP,EAAQC,GAEpCH,KAAKU,EAAIC,GACL,MAAMC,EAAOR,MAAMS,QAAQC,WAK3B,OAJAC,KAAKC,MAAM,eAAeC,IAAI,QAASF,KAAKN,UAAUS,IAAI,QAC1DH,KAAKC,MAAM,iBAAiBC,IAAI,QAASE,OAAOJ,KAAKN,UAAUS,IAAI,cACnEH,KAAKC,MAAM,yBAAyBC,IAAI,QAASF,KAAKN,UAAUS,IAAI,WACpEH,KAAKC,MAAM,4BAA4BC,IAAI,QAASF,KAAKN,UAAUS,IAAI,YAChEN,EAEXZ,gBACIe,KAAKN,UAAUQ,IAAI,MAAOF,KAAKC,MAAM,eAAeE,IAAI,UACxDH,KAAKN,UAAUQ,IAAI,WAAYG,SAASL,KAAKC,MAAM,iBAAiBE,IAAI,SAAU,KAClFH,KAAKN,UAAUQ,IAAI,SAAUF,KAAKC,MAAM,yBAAyBE,IAAI,UACrEH,KAAKN,UAAUQ,IAAI,UAAWF,KAAKC,MAAM,4BAA4BE,IAAI,UAAU,IAG3F,qBAAoCzB,EAChCO,YAAYqB,GACRjB,MAAM,oCAAqC,QAASiB,GAChDC,KAAK,EACLC,SAAU,IACVC,OAAQ,QACRC,QAAS,aAEbV,KAAKW,cAAgB,KACrBX,KAAKY,OAAS,KAElB3B,iBACI,MAAM4B,EAAUb,KAAKN,UAAUS,IAAI,UAC7BW,EAAad,KAAKN,UAAUS,IAAI,WAChCY,EAAS,KACX,IAAIC,EAAQhB,KAAKY,OACjB,GAAII,EAAO,CACP,MAAMC,EAAM,IAAIC,KACVC,EAAIpC,EAAa0B,OAAOQ,EAAKJ,GAC7BO,EAAIrC,EAAa0B,OAAOQ,EAAKH,GACnClC,EAAIyC,OAAOL,GACXA,EAAMM,YAAYC,SAASC,eAAeL,IAC1CH,EAAMS,aAAa,aAAcrB,OAAOe,IACxCH,EAAM1B,MAAQ8B,EAElBJ,EAAQ,MAEGR,CAAAA,IACXkB,cAAc1B,KAAKW,eACnBX,KAAKW,cAAgBe,cAAc1B,KAAKW,eACxCX,KAAKW,cAAgBgB,YAAY,IAAMZ,IAAUP,IAErDoB,CAAO5B,KAAKN,UAAUS,IAAI,aAC1BY,IAEJ9B,OACI,MAAMY,EAAOR,MAAMS,QAAQC,WAC3BC,KAAKY,OAASW,SAASM,cAAc,QACrC7B,KAAKY,OAAOkB,UAAY,WACxB9B,KAAKY,OAAOa,aAAa,OAAQ,UACjC,MAAMM,EAAKR,SAASM,cAAc,MAIlC,OAHAE,EAAGT,YAAYtB,KAAKY,QACpBZ,KAAKgC,YAAYV,YAAYS,GAC7B/B,KAAKiC,iBACEpC,EAEXZ,gBACIe,KAAKiC,iBAEThD,eACI,OAAOI,MAAM6C,aAAalD,MAE9BC,UAGI,OAFAe,KAAKW,cAAgBe,cAAc1B,KAAKW,eACxCX,KAAKY,OAAShC,EAAIuD,QAAQnC,KAAKY,QACxBvB,MAAM+C,WAAWrC","file":"../../panelitems/clock.js","sourcesContent":["define([\n    '../panelitem',\n    '../panelitemdialog'\n], function (PanelItem, PanelDialog) {\n    'use strict';\n    const DOM = OSjs.require('utils/dom');\n    const ExtendedDate = OSjs.require('helpers/date');\n    class ClockSettingsDialog extends PanelDialog {\n        constructor(panelItem, scheme, closeCallback) {\n            super('ClockSettingsDialog', {\n                title: 'Clock Settings',\n                icon: 'status/appointment-soon.png',\n                width: 400,\n                height: 280\n            }, panelItem._settings, scheme, closeCallback);\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            this._find('InputUseUTC').set('value', this._settings.get('utc'));\n            this._find('InputInterval').set('value', String(this._settings.get('interval')));\n            this._find('InputTimeFormatString').set('value', this._settings.get('format'));\n            this._find('InputTooltipFormatString').set('value', this._settings.get('tooltip'));\n            return root;\n        }\n        applySettings() {\n            this._settings.set('utc', this._find('InputUseUTC').get('value'));\n            this._settings.set('interval', parseInt(this._find('InputInterval').get('value'), 10));\n            this._settings.set('format', this._find('InputTimeFormatString').get('value'));\n            this._settings.set('tooltip', this._find('InputTooltipFormatString').get('value'), true);\n        }\n    }\n    return class PanelItemClock extends PanelItem {\n        constructor(settings) {\n            super('PanelItemClock corewm-panel-right', 'Clock', settings, {\n                utc: false,\n                interval: 1000,\n                format: 'H:i:s',\n                tooltip: 'l, j F Y'\n            });\n            this.clockInterval = null;\n            this.$clock = null;\n        }\n        createInterval() {\n            const timeFmt = this._settings.get('format');\n            const tooltipFmt = this._settings.get('tooltip');\n            const update = () => {\n                let clock = this.$clock;\n                if (clock) {\n                    const now = new Date();\n                    const t = ExtendedDate.format(now, timeFmt);\n                    const d = ExtendedDate.format(now, tooltipFmt);\n                    DOM.$empty(clock);\n                    clock.appendChild(document.createTextNode(t));\n                    clock.setAttribute('aria-label', String(t));\n                    clock.title = d;\n                }\n                clock = null;\n            };\n            const create = interval => {\n                clearInterval(this.clockInterval);\n                this.clockInterval = clearInterval(this.clockInterval);\n                this.clockInterval = setInterval(() => update(), interval);\n            };\n            create(this._settings.get('interval'));\n            update();\n        }\n        init() {\n            const root = super.init(...arguments);\n            this.$clock = document.createElement('span');\n            this.$clock.innerHTML = '00:00:00';\n            this.$clock.setAttribute('role', 'button');\n            const li = document.createElement('li');\n            li.appendChild(this.$clock);\n            this._$container.appendChild(li);\n            this.createInterval();\n            return root;\n        }\n        applySettings() {\n            this.createInterval();\n        }\n        openSettings() {\n            return super.openSettings(ClockSettingsDialog, {});\n        }\n        destroy() {\n            this.clockInterval = clearInterval(this.clockInterval);\n            this.$clock = DOM.$remove(this.$clock);\n            return super.destroy(...arguments);\n        }\n    };\n});"]}