{"version":3,"sources":["osjs-apps-corewm.js"],"names":["define","bg_BG","Killing this process will stop things from working!","Open settings","Your panel has no items. Go to settings to reset default or modify manually\n(This error may occur after upgrades of OS.js)","Create shortcut","Set as wallpaper","An error occured while creating PanelItem: {0}","Development","Education","Games","Graphics","Network","Multimedia","Office","System","Utilities","Other","de_DE","es_ES","fr_FR","Show Icons","Hide Icons","ar_DZ","it_IT","ko_KR","nl_NL","no_NO","Create in {0}","pl_PL","ru_RU","sk_SK","tr_TR","vi_VN","DOM","OSjs","require","[object Object]","this","$switcher","showing","index","winRef","_remove","parentNode","removeChild","ev","win","wm","getLastWindow","preventDefault","container","image","label","iter","height","items","$empty","document","createElement","i","_windows","length","src","_icon","innerHTML","_title","appendChild","_wid","push","element","body","style","marginTop","console","debug","className","_focus","Translations","_","createLocalizer","FS","Menu","GUI","VFS","Process","Theme","Dialog","FileMetadata","MountManager","GUIElement","WindowManager","createCreateDialog","title","dir","cb","create","value","message","button","result","pathJoin","dialog","$iconview","$element","setAttribute","id","shortcutCache","refreshTimeout","createDroppable","onOver","el","args","onDropOver","onLeave","onDropLeave","onDrop","onItemDropped","item","onDropItem","onFilesDropped","files","onDropFile","createFromNode","build","on","getCurrentWindow","_blur","detail","entries","forEach","entry","data","file","createFromFile","createContextMenu","_refresh","$remove","clearTimeout","destroy","cel","set","getRoot","s","getWindowSpace","top","left","width","desktopPath","instance","getSetting","shortcutPath","setTimeout","scandir","backlink","then","map","type","shortcut","niter","idx","__index","_type","icon","getFileIcon","filename","filter","path","clear","add","refresh","cache","mkdir","dirname","finally","write","JSON","stringify","values","o","Object","keys","k","_save","found","save","splice","menu","onClick","dest","f","catch","err","error","openShortcutEdit","m","getModuleFromPath","option","unlink","removeShortcut","_getContextMenu","_close","scheme","closeCallback","super","allow_maximize","allow_resize","allow_minimize","app","root","init","arguments","_render","_name","_find","applySettings","get","parse","_scheme","updateShortcut","addWindow","Events","SettingsFragment","name","description","hasoptions","itemName","settings","defaults","_$root","_$container","_className","_itemName","split","_settings","_settingsDialog","mergeDefaults","$bind","openSettings","$unbind","DialogRef","_restore","PanelItem","options","_$element","_items","_outtimeout","_intimeout","_options","position","onMouseOver","onMouseOut","target","getAttribute","showSettings","useTouchMenu","createMenu","onMouseLeave","update","_clearTimeouts","attrs","ontop","autohide","hide","from","relatedTarget","toElement","nodeName","getItem","multiple","pos","offsetHeight","Utils","TIMEOUT_SHOW_ENVELOPE","TIMEOUT_HIDE_ENVELOPE","DEFAULT_OPTIONS","aspect","minWidth","minHeight","maxHeight","maxWidth","right","bottom","locked","canvas","resizable","viewBox","frequency","custom","enabled","bindWidgetEvents","timeout","_getNormalizedPosition","dimension","_getDimension","start","x","y","_mouseDown","action","_locked","window","dx","dy","obj","_aspect","_getDimensionAspected","_onMouseMove","_onMouseUp","_windowWidth","innerWidth","_windowHeight","innerHeight","_onMouseDown","_$resize","stopPropagation","_showEnvelope","_hideEnvelope","_onContextMenu","validNumber","num","isNaN","mergeObject","cloneObject","_position","_dimension","_isManipulating","_requestId","_saveTimeout","_settingsWindow","_$canvas","_$context","getContext","_updatePosition","_updateDimension","_setLock","$addClass","fpsInterval","now","elapsed","onInited","onResize","animate","requestAnimationFrame","Date","onRender","fps","Math","min","cancelAnimationFrame","_setPosition","onMove","_setDimension","_resizeTimeout","$removeClass","_saveOptions","c","onContextMenu","Array","concat","_openSettings","tree","opts","Window","_on","onOpenSettings","render","stick","_isPastHalf","w","max","h","l","String","v","def","hleft","aleft","htop","atop","Widget","Locales","color","ctx","txt","getHours","getMinutes","getSeconds","join","fontSize","round","font","textBaseline","fillStyle","_getSetting","measureText","clearRect","fillText","btn","_setSetting","hex","radius","drawHand","beginPath","lineWidth","lineCap","moveTo","rotate","lineTo","stroke","ang","arc","PI","fill","textAlign","translate","toString","hour","minute","second","PackageManager","CategorizedApplicationMenu","apps","getPackages","cfgCategories","getDefaultSetting","createEvent","createDraggable","launch","clickEvent","cats","a","visible","cat","category","list","submenu","getIcon","tooltip","onCreated","ApplicationMenu","img","createTextNode","createEntry","querySelectorAll","showMenu","inst","clientX","clientY","rect","$position","panel","$parent","node","tagName","toLowerCase","prect","show","alt","sel","querySelector","Init","buttons","ghost","lastTarget","clearGhost","inner","renderButtons","counter","isUl","ul","insertBefore","createGhost","onEnter","newPosition","$hasClass","$index","moveButton","mime","appName","createButton","systemButtons","applications","exit","logout","clearButtons","removeButton","callback","system","addButton","to","undefined","pkg","getPackage","onStart","onEnd","_closeCallback","prototype","apply","_destroy","PanelDialog","ExtendedDate","ClockSettingsDialog","panelItem","parseInt","utc","interval","format","clockInterval","$clock","timeFmt","tooltipFmt","clock","t","d","clearInterval","setInterval","li","createInterval","_restartFix","notifications","fix","createNotification","$container","$image","onDestroy","_build","classNames","self","e","warn","stack","setImage","hasOwnProperty","Hooks","Keycodes","SearchEngine","$ul","$box","$input","$message","hookId","currentIndex","currentCount","input","guinput","keyEvents","DOWN","navigateDown","UP","navigateUp","ESC","ENTER","search","navigateOpen","addHook","keyCode","call","focus","removeHook","space","display","q","limit","recursive","renderResult","errors","application","child","children","updateSelection","Connection","navigator","geolocation","getCurrentPosition","updateWeather","busy","setWeather","weather","main","desc","temp","match","lat","coords","latitude","lon","longitude","url","request","response","wins","getWindows","_properties","allow_windowlist","getElementsByClassName","span","_onWindowIconClick","peeking","_onDndEvent","_state","focused","parentEl","cn","_change","els","replace","getElementsByTagName","event","WindowSwitcher","DesktopIconView","Panel","WidgetDigitalClock","WidgetAnalogClock","PanelItemAppMenu","PanelItemButtons","PanelItemClock","PanelItemNotificationArea","PanelItemSearch","PanelItemWeather","PanelItemWindowList","schemeHtml","GUIScheme","Config","Authenticator","Application","SettingsManager","Compability","Notification","Colors","ServiceNotificationIcon","PADDING_PANEL_AUTOHIDE","defaultSettings","compability","getCompability","cfg","animations","css","animation","touch","Applications","CoreWM","metadata","importSettings","_winGenericHotkey","hotkey","_onKeyEvent","panels","widgets","switcher","iconView","importedSettings","getConfig","fromString","generatedHotkeyMap","hotkeyMap","SEARCH","getPanel","pitem","getItemByType","PanelItems","Search","SWITCHER","WINDOW_MINIMIZE","_minimize","WINDOW_MAXIMIZE","_maximize","WINDOW_RESTORE","WINDOW_MOVE_LEFT","_moveTo","WINDOW_MOVE_RIGHT","WINDOW_MOVE_UP","WINDOW_MOVE_DOWN","SAVE","SAVEAS","OPEN","watch","msg","initSwitcher","initDesktop","initPanels","initWidgets","initIconView","user","getUser","displayMenu","toggleFullscreen","docElm","documentElement","notif","_isFullscreen","displayDevMenu","don","getProcesses","__label","__pid","reload","mnu","createIcon","username","initNotifications","Promise","resolve","force","confirm","destroyIcon","destroyPanels","destroyWidgets","background","p","ps","added","storedItem","panelSettings","itemSettings","ex","addItem","getOntop","getPosition","_move","resize","setStyles","Widgets","_inited","en","wasInited","margin","windows","_isResponsive","wrect","mx","my","moved","_getViewRect","mimimized","maximized","_restored","moveIntoView","_applyWallpaper","wallpaper","_createShortcut","addShortcut","_openMenu","dst","copy","upload","destination","openDesktopMenu","altKey","combination","some","keyCombination","WindowList","blur","NotificationArea","arg","enableIconView","_emit","triggerWatch","group","log","setIconView","language","setLocale","slice","groupEnd","styles","raw","opacity","foreground","mw","borderSize","theme","getStyleTheme","border","invertIconViewColor","backgroundColor","invertHEX","createStylesheet","noMargin","ph","getHeight","getAutohide","isAutoHidden","borders","getWindowPosition","val","DigitalClock","AnalogClock","AppMenu","Buttons","Clock","Weather"],"mappings":"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","file":"../osjs-apps-corewm.js","sourcesContent":["define('osjs-apps-corewm/locales',[],function () {\n    'use strict';\n    return {\n        bg_BG: {\n            'Killing this process will stop things from working!': 'Прекратяването на този процес ще спре някой приложения!',\n            'Open settings': 'Отвори настойки',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'Вашият панел няма обекти. Отидете в настойки за да върнете по подразбиране или да модифицирате ръчно\\n(Тази грешка може да се появи след актуализация на OS.js)',\n            'Create shortcut': 'Създай пряк път',\n            'Set as wallpaper': 'Направи изображение за фон',\n            'An error occured while creating PanelItem: {0}': 'Появи се грешка докато се създаваше панелен обект: {0}',\n            'Development': 'Разработка',\n            'Education': 'Образование',\n            'Games': 'Игри',\n            'Graphics': 'Графика',\n            'Network': 'Мрежа',\n            'Multimedia': 'Мултимедия',\n            'Office': 'Офис',\n            'System': 'Система',\n            'Utilities': 'Инструменти',\n            'Other': 'Други'\n        },\n        de_DE: {\n            'Killing this process will stop things from working!': 'Das Beenden dieses Prozesses wird Konsequenzen haben!',\n            'Open settings': 'Einstellungen öffnen',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'Ihr Panel enthält keine Items. Öffnen Sie die Einstellungen um die Panel-Einstellungen zurückzusetzen oder manuell zu ändern (Dieser Fehler kann nach einem Upgrade von OS.js entstehen)',\n            'Create shortcut': 'Verknüpfung erstellen',\n            'Set as wallpaper': 'Als Hintergrund verwenden',\n            'An error occured while creating PanelItem: {0}': 'Während des Erstellens eines Panel-Items ist folgender Fehler aufgetreten: {0}',\n            'Development': 'Entwicklung',\n            'Education': 'Bildung',\n            'Games': 'Spiele',\n            'Graphics': 'Grafik',\n            'Network': 'Netzwerk',\n            'Multimedia': 'Multimedia',\n            'Office': 'Büro',\n            'System': 'System',\n            'Utilities': 'Zubehör',\n            'Other': 'Andere'\n        },\n        es_ES: {\n            'Killing this process will stop things from working!': '\\xA1Forzar la terminación de este proceso hará que las cosas dejen de funcionar!',\n            'Open settings': 'Abrir preferencias',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'Tu panel no tiene elementos. Restablece los valores por defecto en las preferencias, o modifícalo manualmente\\n(Este error puede aparecer tras una actualización de OS.js)',\n            'Create shortcut': 'Crear acceso directo',\n            'Set as wallpaper': 'Seleccionar como fondo de pantalla',\n            'An error occured while creating PanelItem: {0}': 'Se produjo un error al crear el PanelItem: {0}',\n            'Development': 'Desarrollo',\n            'Education': 'Educación',\n            'Games': 'Juegos',\n            'Graphics': 'Gráficos',\n            'Network': 'Red',\n            'Multimedia': 'Multimedia',\n            'Office': 'Ofimática',\n            'System': 'Sistema',\n            'Utilities': 'Herramientas',\n            'Other': 'Otros'\n        },\n        fr_FR: {\n            'Killing this process will stop things from working!': \"Tuer ce processus va arrêter d'autres éléments de fonctionner !\",\n            'Open settings': 'Ouvrir les paramètres',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': \"Votre panneau n'a aucun objet. Rendez-vous dans les paramètres pour remettre à zéro ou modifier manuellement\\n(Cette erreur peut survenir après avori mis à jour OS.js)\",\n            'Create shortcut': 'Créer un raccourci',\n            'Set as wallpaper': \"Définir un fond d'écran\",\n            'An error occured while creating PanelItem: {0}': 'Une erreur est survenue pendant la création du PanelItem: {0}',\n            'Show Icons': 'Afficher les icônes',\n            'Hide Icons': 'Cacher les icônes',\n            'Development': 'Développement',\n            'Education': 'Éducation',\n            'Games': 'Jeux',\n            'Graphics': 'Graphique',\n            'Network': 'Réseau',\n            'Multimedia': 'Multimédia',\n            'Office': 'Bureautique',\n            'System': 'Système',\n            'Utilities': 'Utilitaires',\n            'Other': 'Autre'\n        },\n        ar_DZ: {\n            'Killing this process will stop things from working!': 'إنهاء هذا البرنامج سيوقف الأشياء عن العمل',\n            'Open settings': 'فتح الإعدادات',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'لايوجد أي شيء في لوحتك\\u060C إذهب إلى إعدادات وقم بإستعادة الأشياء إلى الحالة الإفتراضية أو غيرها يدويا (يحدث هذا أحيانا عند تحديث الـ OS.js)',\n            'Create shortcut': 'إنشاء إختصار',\n            'Set as wallpaper': 'وضع كخلفية سطح المكتب',\n            'An error occured while creating PanelItem: {0}': 'حدث خطأ أثناء إنشاء عنصر في اللوحة: {0}',\n            'Show Icons': 'إظهار الأيقونات',\n            'Hide Icons': 'إخفاء الأيقونات',\n            'Development': 'تطوير',\n            'Education': 'تعليم',\n            'Games': 'ألعاب',\n            'Graphics': 'رسومات',\n            'Network': 'شبكة',\n            'Multimedia': 'تعدد الوسائط',\n            'Office': 'مكتبيات',\n            'System': 'نظام',\n            'Utilities': 'أدوات',\n            'Other': 'أخرى'\n        },\n        it_IT: {\n            'Killing this process will stop things from working!': 'Terminare questo processo bloccherà altre funzionalità!',\n            'Open settings': 'Apri settaggi',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'Il tuo pannello non ha elementi. Vai nei settaggi per resettare ai valori predefiniti o modificarli manualmente\\n(Questo errore può accadere dopo un aggiornamento di OS.js)',\n            'Create shortcut': 'Crea colelgamento',\n            'Set as wallpaper': 'Imposta come sfondo desktop',\n            'An error occured while creating PanelItem: {0}': 'Si è verificato un errore nella creazione del PanelItem: {0}',\n            'Show Icons': 'Mostra icone',\n            'Hide Icons': 'Nascondi icone',\n            'Development': 'Sviluppo',\n            'Education': 'Educazione',\n            'Games': 'Giochi',\n            'Graphics': 'Grafica',\n            'Network': 'Reti',\n            'Multimedia': 'Multimedia',\n            'Office': 'Ufficio',\n            'System': 'Sistema',\n            'Utilities': 'Utilità',\n            'Other': 'Altro'\n        },\n        ko_KR: {\n            'Killing this process will stop things from working!': '이 프로세스를 종료 할 시 작업 중인 것들이 종료됩니다!',\n            'Open settings': '환경설정 열기',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': '패널에 항목이 없습니다. 환경설정에서 초기화하거나 직접 수정하여 주십시오.\\n(이 오류는 OS.js의 업그레이드 후 발생하는 문제일 수도 있습니다)',\n            'Create shortcut': '단축키 생성',\n            'Set as wallpaper': '바탕화면으로 지정',\n            'An error occured while creating PanelItem: {0}': '해당 패널 항목 생성 중 오류가 발생 하였습니다: {0}',\n            'Development': '개발',\n            'Education': '교육',\n            'Games': '게임',\n            'Graphics': '그래픽',\n            'Network': '네트워크',\n            'Multimedia': '멀티미디어',\n            'Office': '오피스',\n            'System': '시스템',\n            'Utilities': '유틸리티',\n            'Other': '기타'\n        },\n        nl_NL: {\n            'Killing this process will stop things from working!': 'Het stoppen van dit proces zal er voor zorgen dat dingen niet meer werken!',\n            'Open settings': 'Instellingen openen',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'Het paneel bevat geen items. Ga naar instellingen om te herstellen naar de standaard of om handmatig te wijzigen\\n(Deze fout kan het gevolg zijn van een update van OS.js)',\n            'Create shortcut': 'Maak een link',\n            'Set as wallpaper': 'Als achtergrond gebruiken',\n            'An error occured while creating PanelItem: {0}': 'Er is een fout opgetreden tijdens het maken van paneel item: {0}',\n            'Development': 'Ontwikkeling',\n            'Education': 'Educatie',\n            'Games': 'Spellen',\n            'Graphics': 'Grafisch',\n            'Network': 'Netwerk',\n            'Multimedia': 'Multimedia',\n            'Office': 'Kantoor',\n            'System': 'Systeem',\n            'Utilities': 'Toebehoren',\n            'Other': 'Overig'\n        },\n        no_NO: {\n            'Killing this process will stop things from working!': 'Dreping av denne prosessen vil få konsekvenser!',\n            'Open settings': 'Åpne instillinger',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'Ditt panel har ingen objekter. Gå til instillinger for å nullstille eller modifisere manuelt\\n(Denne feilen kan oppstå etter en oppdatering av OS.js)',\n            'Create shortcut': 'Lag snarvei',\n            'Set as wallpaper': 'Sett som bakgrunn',\n            'An error occured while creating PanelItem: {0}': 'En feil oppstod under lasting av PanelItem: {0}',\n            'Show Icons': 'Vis Ikoner',\n            'Hide Icons': 'Skjul Ikoner',\n            'Create in {0}': 'Opprett i {0}',\n            'Development': 'Utvikling',\n            'Education': 'Utdanning',\n            'Games': 'Spill',\n            'Graphics': 'Grafikk',\n            'Network': 'Nettverk',\n            'Multimedia': 'Multimedia',\n            'Office': 'Kontor',\n            'System': 'System',\n            'Utilities': 'Verktøy',\n            'Other': 'Andre'\n        },\n        pl_PL: {\n            'Killing this process will stop things from working!': 'Zabicie tego procesu zatrzyma wykonywanie działań!',\n            'Open settings': 'Otwórz ustawienia',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'Twój panel nie ma elementów. Idź do ustawień aby przywrócić domyślne lub zmień ręcznie\\n(Ten błąd może wystąpić po aktualizacji OS.js)',\n            'Create shortcut': 'Utwórz skrót',\n            'Set as wallpaper': 'Ustaw jako tapetę',\n            'An error occured while creating PanelItem: {0}': 'Wystąpił błąd podczas tworzenia PanelItem: {0}',\n            'Show Icons': 'Pokaż Ikony',\n            'Hide Icons': 'Ukryj Ikony',\n            'Development': 'Development',\n            'Education': 'Edukacja',\n            'Games': 'Gry',\n            'Graphics': 'Graficzne',\n            'Network': 'Sieć',\n            'Multimedia': 'Multimedia',\n            'Office': 'Biuro',\n            'System': 'System',\n            'Utilities': 'Użytkowe',\n            'Other': 'Inne'\n        },\n        ru_RU: {\n            'Killing this process will stop things from working!': 'Завершение этого процесса остановит работу системы!',\n            'Open settings': 'Открыть настройки',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'На вашей панели отсутствуют элементы. Откройте настройки для сброса панели к начальному состоянию или ручной настройки\\n(Эта ошибка может произойти после обновления OS.js)',\n            'Create shortcut': 'Создать ярлык',\n            'Set as wallpaper': 'Установить как обои',\n            'An error occured while creating PanelItem: {0}': 'Произошла обшибка при создании PanelItem: {0}',\n            'Development': 'Разработка',\n            'Education': 'Образование',\n            'Games': 'Игры',\n            'Graphics': 'Графика',\n            'Network': 'Интернет',\n            'Multimedia': 'Мультимедиа',\n            'Office': 'Офис',\n            'System': 'Система',\n            'Utilities': 'Утилиты',\n            'Other': 'Другое'\n        },\n        sk_SK: {\n            'Open settings': 'Otvor nastavenia',\n            'Create shortcut': 'Vytvor linku',\n            'Set as wallpaper': 'Nastav ako tapetu',\n            'An error occured while creating PanelItem: {0}': 'Chyba pri vytváraní položky: {0}',\n            'Development': 'Vývoj',\n            'Education': 'Vzdelávanie',\n            'Games': 'Hry',\n            'Graphics': 'Grafika',\n            'Network': 'Sieť',\n            'Multimedia': 'Multimédiá',\n            'Office': 'Kancelária',\n            'System': 'Systém',\n            'Utilities': 'Pomôcky',\n            'Other': 'Ostatné'\n        },\n        tr_TR: {\n            'Open settings': 'Ayarları Aç',\n            'Create shortcut': 'Kısayol Oluştur',\n            'Set as wallpaper': 'Arkaplan olarak ayarla',\n            'An error occured while creating PanelItem: {0}': '{0} oluşturulurken bir hata meydana geldi',\n            'Development': 'Geliştirici',\n            'Education': 'Eğitim',\n            'Games': 'Oyunlar',\n            'Graphics': 'Grafikler',\n            'Network': 'Ağ',\n            'Multimedia': 'Multimedia',\n            'Office': 'Ofis',\n            'System': 'Sistem',\n            'Utilities': 'Yan Gereksinimler',\n            'Other': 'Diğer'\n        },\n        vi_VN: {\n            'Killing this process will stop things from working!': 'Đóng quá trình này sẽ làm mọi thứ bị tắt!',\n            'Open settings': 'Mở cài đặt',\n            'Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)': 'Bảng điều khiển của bạn không có mục nào. Vào cài đặt để thiết lập lại mặc định hoặc sửa đổi bằng tay\\n(Lỗi này có thể xảy ra sau khi nâng cấp OS.js)',\n            'Create shortcut': 'Tạo lối tắt',\n            'Set as wallpaper': 'Đặt làm hình nền',\n            'An error occured while creating PanelItem: {0}': 'Có lỗi xảy ra trong khi tạo PanelItem: {0}',\n            'Show Icons': 'Hiện các biểu tượng',\n            'Hide Icons': 'Ẩn các biểu tượng',\n            'Create in {0}': 'Tạo trong {0}',\n            'Development': 'Phát triển',\n            'Education': 'Giáo dục',\n            'Games': 'Trò chơi',\n            'Graphics': 'Đồ họa',\n            'Network': 'Mạng',\n            'Multimedia': 'Đa phương tiện',\n            'Office': 'Văn phòng',\n            'System': 'Hệ thống',\n            'Utilities': 'Tiện ích',\n            'Other': 'Khác'\n        }\n    };\n});\ndefine('osjs-apps-corewm/windowswitcher',[],function () {\n    'use strict';\n    const DOM = OSjs.require('utils/dom');\n    return class WindowSwitcher {\n        constructor() {\n            this.$switcher = null;\n            this.showing = false;\n            this.index = -1;\n            this.winRef = null;\n        }\n        destroy() {\n            this._remove();\n        }\n        _remove() {\n            if (this.$switcher) {\n                if (this.$switcher.parentNode) {\n                    this.$switcher.parentNode.removeChild(this.$switcher);\n                }\n                this.$switcher = null;\n            }\n        }\n        show(ev, win, wm) {\n            win = win || wm.getLastWindow();\n            ev.preventDefault();\n            var height = 0;\n            var items = [];\n            var index = 0;\n            if (!this.$switcher) {\n                this.$switcher = document.createElement('corewm-window-switcher');\n            } else {\n                DOM.$empty(this.$switcher);\n            }\n            var container, image, label, iter;\n            for (var i = 0; i < wm._windows.length; i++) {\n                iter = wm._windows[i];\n                if (iter) {\n                    container = document.createElement('div');\n                    image = document.createElement('img');\n                    image.src = iter._icon;\n                    label = document.createElement('span');\n                    label.innerHTML = iter._title;\n                    container.appendChild(image);\n                    container.appendChild(label);\n                    this.$switcher.appendChild(container);\n                    height += 32;\n                    if (win && win._wid === iter._wid) {\n                        index = i;\n                    }\n                    items.push({\n                        element: container,\n                        win: iter\n                    });\n                }\n            }\n            if (!this.$switcher.parentNode) {\n                document.body.appendChild(this.$switcher);\n            }\n            this.$switcher.style.height = height + 'px';\n            this.$switcher.style.marginTop = (height ? -(height / 2 << 0) : 0) + 'px';\n            if (this.showing) {\n                this.index++;\n                if (this.index > items.length - 1) {\n                    this.index = -1;\n                }\n            } else {\n                this.index = index;\n                this.showing = true;\n            }\n            console.debug('WindowSwitcher::show()', this.index);\n            if (items[this.index]) {\n                items[this.index].element.className = 'Active';\n                this.winRef = items[this.index].win;\n            } else {\n                this.winRef = null;\n            }\n        }\n        hide(ev, win, wm) {\n            if (!this.showing) {\n                return;\n            }\n            ev.preventDefault();\n            this._remove();\n            win = this.winRef || win;\n            if (win) {\n                win._focus();\n            }\n            this.winRef = null;\n            this.index = -1;\n            this.showing = false;\n        }\n    };\n});\ndefine('osjs-apps-corewm/iconview',['./locales'], function (Translations) {\n    'use strict';\n    const _ = OSjs.require('core/locales').createLocalizer(Translations);\n    const FS = OSjs.require('utils/fs');\n    const Menu = OSjs.require('gui/menu');\n    const DOM = OSjs.require('utils/dom');\n    const GUI = OSjs.require('utils/gui');\n    const VFS = OSjs.require('vfs/fs');\n    const Process = OSjs.require('core/process');\n    const Theme = OSjs.require('core/theme');\n    const Dialog = OSjs.require('core/dialog');\n    const FileMetadata = OSjs.require('vfs/file');\n    const MountManager = OSjs.require('core/mount-manager');\n    const GUIElement = OSjs.require('gui/element');\n    const WindowManager = OSjs.require('core/window-manager');\n    function createCreateDialog(title, dir, cb) {\n        Dialog.create('Input', {\n            value: title,\n            message: _('Create in {0}', dir)\n        }, function (ev, button, result) {\n            if (result) {\n                cb(new FileMetadata(FS.pathJoin(dir, result)));\n            }\n        });\n    }\n    class IconViewShortcutDialog extends Dialog {\n        constructor(item, scheme, closeCallback) {\n            super('IconViewShortcutDialog', {\n                title: 'Edit Launcher',\n                icon: 'status/appointment-soon.png',\n                width: 400,\n                height: 220,\n                allow_maximize: false,\n                allow_resize: false,\n                allow_minimize: false\n            }, () => {\n            });\n            this.scheme = scheme;\n            this.values = {\n                path: item.path,\n                filename: item.filename,\n                args: item.args || {}\n            };\n            this.cb = closeCallback || function () {\n            };\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            this._render(this._name, this.scheme);\n            this._find('InputShortcutLaunch').set('value', this.values.path);\n            this._find('InputShortcutLabel').set('value', this.values.filename);\n            this._find('InputTooltipFormatString').set('value', JSON.stringify(this.values.args || {}));\n            this._find('ButtonApply').on('click', () => {\n                this.applySettings();\n                this._close('ok');\n            });\n            this._find('ButtonCancel').on('click', () => {\n                this._close();\n            });\n            return root;\n        }\n        applySettings() {\n            this.values.path = this._find('InputShortcutLaunch').get('value');\n            this.values.filename = this._find('InputShortcutLabel').get('value');\n            this.values.args = JSON.parse(this._find('InputTooltipFormatString').get('value') || {});\n        }\n        _close(button) {\n            this.cb(button, this.values);\n            return super._close(...arguments);\n        }\n    }\n    return class DesktopIconView {\n        constructor(wm) {\n            this.dialog = null;\n            this.$iconview = null;\n            this.$element = document.createElement('gui-icon-view');\n            this.$element.setAttribute('data-multiple', 'false');\n            this.$element.id = 'CoreWMDesktopIconView';\n            this.shortcutCache = [];\n            this.refreshTimeout = null;\n            GUI.createDroppable(this.$element, {\n                onOver: function (ev, el, args) {\n                    wm.onDropOver(ev, el, args);\n                },\n                onLeave: function () {\n                    wm.onDropLeave();\n                },\n                onDrop: function () {\n                    wm.onDrop();\n                },\n                onItemDropped: function (ev, el, item, args) {\n                    wm.onDropItem(ev, el, item, args);\n                },\n                onFilesDropped: function (ev, el, files, args) {\n                    wm.onDropFile(ev, el, files, args);\n                }\n            });\n            this.$iconview = GUIElement.createFromNode(this.$element);\n            this.$iconview.build();\n            this.$iconview.on('select', () => {\n                if (wm) {\n                    const win = wm.getCurrentWindow();\n                    if (win) {\n                        win._blur();\n                    }\n                }\n            }).on('activate', ev => {\n                if (ev && ev.detail) {\n                    ev.detail.entries.forEach(entry => {\n                        const item = entry.data;\n                        const file = new FileMetadata(item);\n                        Process.createFromFile(file, item.args);\n                    });\n                }\n            }).on('contextmenu', ev => {\n                if (ev && ev.detail && ev.detail.entries) {\n                    this.createContextMenu(ev.detail.entries[0], ev);\n                }\n            });\n            this._refresh();\n        }\n        destroy() {\n            DOM.$remove(this.$element);\n            this.refreshTimeout = clearTimeout(this.refreshTimeout);\n            this.$element = null;\n            this.$iconview = null;\n            if (this.dialog) {\n                this.dialog.destroy();\n            }\n            this.dialog = null;\n            this.shortcutCache = [];\n        }\n        blur() {\n            const cel = GUIElement.createFromNode(this.$element);\n            cel.set('value', null);\n        }\n        getRoot() {\n            return this.$element;\n        }\n        resize(wm) {\n            const el = this.getRoot();\n            const s = wm.getWindowSpace();\n            if (el) {\n                el.style.top = s.top + 'px';\n                el.style.left = s.left + 'px';\n                el.style.width = s.width + 'px';\n                el.style.height = s.height + 'px';\n            }\n        }\n        _refresh(wm) {\n            const desktopPath = WindowManager.instance.getSetting('desktopPath');\n            const shortcutPath = FS.pathJoin(desktopPath, '.shortcuts.json');\n            this.shortcutCache = [];\n            this.refreshTimeout = clearTimeout(this.refreshTimeout);\n            this.refreshTimeout = setTimeout(() => {\n                VFS.scandir(desktopPath, { backlink: false }).then(result => {\n                    if (this.$iconview) {\n                        const entries = result.map(iter => {\n                            if (iter.type === 'application' || iter.shortcut === true) {\n                                const niter = new FileMetadata(iter);\n                                niter.shortcut = true;\n                                const idx = this.shortcutCache.push(niter) - 1;\n                                const file = new FileMetadata(iter);\n                                file.__index = idx;\n                                return {\n                                    _type: iter.type,\n                                    icon: Theme.getFileIcon(iter, '32x32'),\n                                    label: iter.filename,\n                                    value: file,\n                                    args: iter.args || {}\n                                };\n                            }\n                            return {\n                                _type: 'vfs',\n                                icon: Theme.getFileIcon(iter, '32x32'),\n                                label: iter.filename,\n                                value: iter\n                            };\n                        }).filter(function (iter) {\n                            return iter.value.path !== shortcutPath;\n                        });\n                        this.$iconview.clear().add(entries);\n                    }\n                });\n            }, 150);\n        }\n        _save(refresh) {\n            const desktopPath = WindowManager.instance.getSetting('desktopPath');\n            const path = FS.pathJoin(desktopPath, '.shortcuts.json');\n            const cache = this.shortcutCache;\n            VFS.mkdir(FS.dirname(path)).finally(() => {\n                VFS.write(path, JSON.stringify(cache, null, 4)).then(() => {\n                    if (refresh) {\n                        this._refresh();\n                    }\n                });\n            });\n        }\n        updateShortcut(data, values) {\n            const o = this.shortcutCache[data.__index];\n            if (o.path === data.path) {\n                Object.keys(values).forEach(function (k) {\n                    o[k] = values[k];\n                });\n                this._save(true);\n            }\n        }\n        getShortcutByPath(path) {\n            let found = null;\n            let index = -1;\n            this.shortcutCache.forEach(function (i, idx) {\n                if (!found) {\n                    if (i.type !== 'application' && i.path === path) {\n                        found = i;\n                        index = idx;\n                    }\n                }\n            });\n            return {\n                item: found,\n                index: index\n            };\n        }\n        addShortcut(data, wm, save) {\n            ['icon'].forEach(function (k) {\n                if (data[k]) {\n                    delete data[k];\n                }\n            });\n            if (data.type === 'application') {\n                data.args = data.args || {};\n            }\n            data.shortcut = true;\n            this.shortcutCache.push(data);\n            this._save(true);\n        }\n        removeShortcut(data) {\n            const o = this.shortcutCache[data.__index];\n            if (o && o.path === data.path) {\n                this.shortcutCache.splice(data.__index, 1);\n                this._save(true);\n            }\n        }\n        _getContextMenu(item) {\n            const desktopPath = WindowManager.instance.getSetting('desktopPath');\n            const menu = [\n                {\n                    title: _('LBL_UPLOAD'),\n                    onClick: () => {\n                        Dialog.create('FileUpload', { dest: desktopPath }, () => {\n                            this._refresh();\n                        });\n                    }\n                },\n                {\n                    title: _('LBL_CREATE'),\n                    menu: [\n                        {\n                            title: _('LBL_FILE'),\n                            onClick: () => {\n                                createCreateDialog('New file', desktopPath, f => {\n                                    VFS.write(f, '').catch(err => {\n                                        OSjs.error('CoreWM', _('ERR_VFSMODULE_MKFILE'), err);\n                                    });\n                                });\n                            }\n                        },\n                        {\n                            title: _('LBL_DIRECTORY'),\n                            onClick: () => {\n                                createCreateDialog('New directory', desktopPath, f => {\n                                    VFS.mkdir(f).catch(err => {\n                                        OSjs.error('CoreWM', _('ERR_VFSMODULE_MKDIR'), err);\n                                    });\n                                });\n                            }\n                        }\n                    ]\n                }\n            ];\n            if (item && item.data) {\n                const file = item.data;\n                if (file.type === 'application') {\n                    menu.push({\n                        title: _('Edit shortcut'),\n                        onClick: () => this.openShortcutEdit(file)\n                    });\n                }\n                const m = MountManager.getModuleFromPath(file.path);\n                if (!m || m.option('root') !== desktopPath) {\n                    menu.push({\n                        title: _('Remove shortcut'),\n                        onClick: () => this.removeShortcut(file)\n                    });\n                } else {\n                    menu.push({\n                        title: _('LBL_DELETE'),\n                        onClick: () => VFS.unlink(file)\n                    });\n                }\n            }\n            return menu;\n        }\n        createContextMenu(item, ev) {\n            const wm = WindowManager.instance;\n            const menu = wm._getContextMenu(item);\n            Menu.create(menu, ev);\n        }\n        openShortcutEdit(item) {\n            if (this.dialog) {\n                this.dialog._close();\n            }\n            const wm = WindowManager.instance;\n            this.dialog = new IconViewShortcutDialog(item, wm._scheme, (button, values) => {\n                if (button === 'ok') {\n                    this.updateShortcut(item, values);\n                }\n                this.dialog = null;\n            });\n            wm.addWindow(this.dialog, true);\n        }\n    };\n});\ndefine('osjs-apps-corewm/panelitem',['./locales'], function (Translations) {\n    'use strict';\n    const _ = OSjs.require('core/locales').createLocalizer(Translations);\n    const Menu = OSjs.require('gui/menu');\n    const DOM = OSjs.require('utils/dom');\n    const Events = OSjs.require('utils/events');\n    const SettingsFragment = OSjs.require('helpers/settings-fragment');\n    const WindowManager = OSjs.require('core/window-manager');\n    return class PanelItem {\n        static metadata() {\n            return {\n                name: 'PanelItem',\n                description: 'PanelItem Description',\n                icon: 'actions/stock_about.png',\n                hasoptions: false\n            };\n        }\n        constructor(className, itemName, settings, defaults) {\n            this._$root = null;\n            this._$container = null;\n            this._className = className || 'Unknown';\n            this._itemName = itemName || className.split(' ')[0];\n            this._settings = null;\n            this._settingsDialog = null;\n            if (settings && settings instanceof SettingsFragment && defaults) {\n                this._settings = settings.mergeDefaults(defaults);\n            }\n        }\n        init() {\n            this._$root = document.createElement('corewm-panel-item');\n            this._$root.className = this._className;\n            this._$container = document.createElement('ul');\n            this._$container.setAttribute('role', 'toolbar');\n            this._$container.className = 'corewm-panel-buttons';\n            if (this._settings) {\n                var title = _('Open {0} Settings', _(this._itemName));\n                Events.$bind(this._$root, 'contextmenu', ev => {\n                    ev.preventDefault();\n                    Menu.create([{\n                            title: title,\n                            onClick: () => this.openSettings()\n                        }], ev);\n                });\n            }\n            this._$root.appendChild(this._$container);\n            return this._$root;\n        }\n        destroy() {\n            if (this._settingsDialog) {\n                this._settingsDialog.destroy();\n            }\n            Events.$unbind(this._$root, 'contextmenu');\n            this._settingsDialog = null;\n            this._$root = DOM.$remove(this._$root);\n            this._$container = DOM.$remove(this._$container);\n        }\n        applySettings() {\n        }\n        openSettings(DialogRef, args) {\n            if (this._settingsDialog) {\n                this._settingsDialog._restore();\n                return false;\n            }\n            var wm = WindowManager.instance;\n            if (DialogRef) {\n                this._settingsDialog = new DialogRef(this, wm._scheme, button => {\n                    if (button === 'ok') {\n                        this.applySettings();\n                    }\n                    this._settingsDialog = null;\n                });\n                wm.addWindow(this._settingsDialog, true);\n            }\n            return true;\n        }\n        getRoot() {\n            return this._$root;\n        }\n    };\n});\ndefine('osjs-apps-corewm/panel',[\n    './locales',\n    './panelitem'\n], function (Translations, PanelItem) {\n    'use strict';\n    const _ = OSjs.require('core/locales').createLocalizer(Translations);\n    const DOM = OSjs.require('utils/dom');\n    const Events = OSjs.require('utils/events');\n    const Menu = OSjs.require('gui/menu');\n    const WindowManager = OSjs.require('core/window-manager');\n    const PANEL_SHOW_TIMEOUT = 150;\n    const PANEL_HIDE_TIMEOUT = 600;\n    return class Panel {\n        constructor(name, options, wm) {\n            options = options || {};\n            this._name = name;\n            this._$element = null;\n            this._$container = null;\n            this._items = [];\n            this._outtimeout = null;\n            this._intimeout = null;\n            this._options = options.mergeDefaults({ position: 'top' });\n            console.debug('Panel::construct()', this._name, this._options.get());\n        }\n        init(root) {\n            var wm = WindowManager.instance;\n            function createMenu(ev) {\n                var menu = [{\n                        title: _('Open Panel Settings'),\n                        onClick: function (ev) {\n                            wm.showSettings('panel');\n                        }\n                    }];\n                if (wm.getSetting('useTouchMenu') === true) {\n                    menu.push({\n                        title: _('Turn off TouchMenu'),\n                        onClick: function (ev) {\n                            wm.applySettings({ useTouchMenu: false }, false, true);\n                        }\n                    });\n                } else {\n                    menu.push({\n                        title: _('Turn on TouchMenu'),\n                        onClick: function (ev) {\n                            wm.applySettings({ useTouchMenu: true }, false, true);\n                        }\n                    });\n                }\n                Menu.create(menu, ev);\n            }\n            this._$container = document.createElement('corewm-panel-container');\n            this._$element = document.createElement('corewm-panel');\n            this._$element.setAttribute('data-orientation', 'horizontal');\n            this._$element.setAttribute('role', 'toolbar');\n            Events.$bind(this._$element, 'mouseover', ev => {\n                this.onMouseOver(ev);\n            });\n            Events.$bind(this._$element, 'mouseout', ev => {\n                this.onMouseOut(ev);\n            });\n            Events.$bind(this._$element, 'contextmenu', function (ev) {\n                if (!ev.target || ev.target.getAttribute('role') !== 'button') {\n                    createMenu(ev);\n                }\n            });\n            Events.$bind(document, 'mouseout:panelmouseleave', ev => {\n                this.onMouseLeave(ev);\n            }, false);\n            this._$element.appendChild(this._$container);\n            root.appendChild(this._$element);\n            setTimeout(() => this.update(), 0);\n        }\n        destroy() {\n            this._clearTimeouts();\n            Events.$unbind(document, 'mouseout:panelmouseleave');\n            Events.$unbind(this._$element);\n            this._items.forEach(function (item) {\n                item.destroy();\n            });\n            this._items = [];\n            this._$element = DOM.$remove(this._$element);\n            this._$container = null;\n        }\n        update(options) {\n            options = options || this._options.get();\n            var attrs = {\n                ontop: !!options.ontop,\n                position: options.position || 'bottom'\n            };\n            if (options.autohide) {\n                this.onMouseOut();\n            }\n            if (this._$element) {\n                Object.keys(attrs).forEach(k => {\n                    this._$element.setAttribute('data-' + k, typeof attrs[k] === 'boolean' ? attrs[k] ? 'true' : 'false' : attrs[k]);\n                });\n            }\n            this._options.set(null, options);\n        }\n        autohide(hide) {\n            if (!this._options.get('autohide') || !this._$element) {\n                return;\n            }\n            if (hide) {\n                this._$element.setAttribute('data-autohide', 'true');\n            } else {\n                this._$element.setAttribute('data-autohide', 'false');\n            }\n        }\n        _clearTimeouts() {\n            if (this._outtimeout) {\n                clearTimeout(this._outtimeout);\n                this._outtimeout = null;\n            }\n            if (this._intimeout) {\n                clearTimeout(this._intimeout);\n                this._intimeout = null;\n            }\n        }\n        onMouseLeave(ev) {\n            var from = ev.relatedTarget || ev.toElement;\n            if (!from || from.nodeName === 'HTML') {\n                this.onMouseOut(ev);\n            }\n        }\n        onMouseOver() {\n            this._clearTimeouts();\n            this._intimeout = setTimeout(() => {\n                this.autohide(false);\n            }, PANEL_SHOW_TIMEOUT);\n        }\n        onMouseOut() {\n            this._clearTimeouts();\n            this._outtimeout = setTimeout(() => {\n                this.autohide(true);\n            }, PANEL_HIDE_TIMEOUT);\n        }\n        addItem(item) {\n            if (!(item instanceof PanelItem)) {\n                throw 'Expected a PanelItem in Panel::addItem()';\n            }\n            this._items.push(item);\n            this._$container.appendChild(item.init());\n        }\n        isAutoHidden() {\n            if (this._$element) {\n                return this._$element.getAttribute('data-autohide') === 'true';\n            }\n            return false;\n        }\n        getItemByType(type) {\n            return this.getItem(type);\n        }\n        getItemsByType(type) {\n            return this.getItem(type, true);\n        }\n        getItem(type, multiple) {\n            var result = multiple ? [] : null;\n            this._items.forEach(function (item, idx) {\n                if (item instanceof type) {\n                    if (multiple) {\n                        result.push(item);\n                    } else {\n                        result = item;\n                        return false;\n                    }\n                }\n                return true;\n            });\n            return result;\n        }\n        getOntop() {\n            return this._options.get('ontop');\n        }\n        getPosition(pos) {\n            return pos ? this._options.get('position') === pos : this._options.get('position');\n        }\n        getAutohide() {\n            return this._options.get('autohide');\n        }\n        getRoot() {\n            return this._$element;\n        }\n        getHeight() {\n            return this._$element ? this._$element.offsetHeight : 0;\n        }\n    };\n});\ndefine('osjs-apps-corewm/widget',['./locales'], function (Translations) {\n    'use strict';\n    const _ = OSjs.require('core/locales').createLocalizer(Translations);\n    const Menu = OSjs.require('gui/menu');\n    const DOM = OSjs.require('utils/dom');\n    const Utils = OSjs.require('utils/misc');\n    const Events = OSjs.require('utils/events');\n    const WindowManager = OSjs.require('core/window-manager');\n    const MIN_WIDTH = 64;\n    const MIN_HEIGHT = 64;\n    const TIMEOUT_SAVE = 500;\n    const TIMEOUT_SHOW_ENVELOPE = 3000;\n    const TIMEOUT_HIDE_ENVELOPE = 1000;\n    const DEFAULT_OPTIONS = {\n        aspect: false,\n        width: 100,\n        height: 100,\n        minWidth: MIN_WIDTH,\n        minHeight: MIN_HEIGHT,\n        maxHeight: 500,\n        maxWidth: 500,\n        left: 0,\n        right: null,\n        top: 0,\n        bottom: null,\n        locked: false,\n        canvas: false,\n        resizable: false,\n        viewBox: false,\n        frequency: 2,\n        custom: {},\n        settings: {\n            enabled: false,\n            name: 'CoreWMWidgetSettingsWindow',\n            title: _('LBL_SETTINGS'),\n            width: 300,\n            height: 300\n        }\n    };\n    function bindWidgetEvents(instance) {\n        var timeout = null;\n        var position = instance._getNormalizedPosition();\n        var dimension = instance._getDimension();\n        var start = {\n            x: 0,\n            y: 0\n        };\n        function _getDimensionAspected(dx, dy) {\n            if (instance._options.aspect === true) {\n                var width = dimension.width + dx;\n                var height = width / instance._aspect;\n                return {\n                    width: width,\n                    height: height\n                };\n            }\n            return {\n                width: dimension.width + dx,\n                height: dimension.height + dy\n            };\n        }\n        function _mouseDown(ev, pos, action) {\n            ev.preventDefault();\n            if (instance._locked) {\n                return;\n            }\n            timeout = clearTimeout(timeout);\n            start = pos;\n            position = instance._getNormalizedPosition();\n            dimension = instance._getDimension();\n            Events.$bind(window, 'mousemove:modifywidget', function (ev, pos) {\n                var dx = pos.x - start.x;\n                var dy = pos.y - start.y;\n                var obj = action === 'move' ? {\n                    left: position.left + dx,\n                    top: position.top + dy\n                } : _getDimensionAspected(dx, dy);\n                instance._onMouseMove(ev, obj, action);\n            });\n            Events.$bind(window, 'mouseup:modifywidget', function (ev, pos) {\n                Events.$unbind(window, 'mousemove:modifywidget');\n                Events.$unbind(window, 'mouseup:modifywidget');\n                instance._onMouseUp(ev, pos, action);\n            });\n            instance._windowWidth = window.innerWidth;\n            instance._windowHeight = window.innerHeight;\n            instance._onMouseDown(ev, pos, action);\n        }\n        Events.$bind(instance._$element, 'mousedown:movewidget', function (ev, pos) {\n            _mouseDown(ev, pos, 'move');\n        });\n        Events.$bind(instance._$resize, 'mousedown:resizewidget', function (ev, pos) {\n            ev.stopPropagation();\n            _mouseDown(ev, pos, 'resize');\n        });\n        Events.$bind(instance._$element, 'click:showenvelope', function (ev) {\n            timeout = clearTimeout(timeout);\n            instance._showEnvelope();\n        });\n        Events.$bind(instance._$element, 'mouseover:showenvelope', function () {\n            timeout = clearTimeout(timeout);\n            timeout = setTimeout(function () {\n                instance._showEnvelope();\n            }, TIMEOUT_SHOW_ENVELOPE);\n        });\n        Events.$bind(instance._$element, 'mouseout:hideenvelope', function (ev) {\n            timeout = clearTimeout(timeout);\n            timeout = setTimeout(function () {\n                instance._hideEnvelope();\n            }, TIMEOUT_HIDE_ENVELOPE);\n        });\n        Events.$bind(instance._$element, 'contextmenu:widgetcontext', function (ev) {\n            instance._onContextMenu(ev);\n        });\n    }\n    function validNumber(num) {\n        if (typeof num !== 'undefined' && num !== null) {\n            return !isNaN(num);\n        }\n        return false;\n    }\n    return class Widget {\n        constructor(name, options, settings) {\n            options = Utils.mergeObject(Utils.cloneObject(DEFAULT_OPTIONS), options || {});\n            this._aspect = options.aspect === true ? options.width / options.height : typeof options.aspect === 'number' ? options.aspect : 1;\n            if (options.aspect !== false) {\n                options.minHeight = options.width / this._aspect;\n                options.maxHeight = options.maxWidth / this._aspect;\n            }\n            if (options.viewBox) {\n                options.resizable = true;\n                if (options.viewBox === true) {\n                    options.viewBox = '0 0 ' + options.width + ' ' + options.height;\n                }\n            }\n            this._position = {\n                left: settings.get('left', options.left),\n                top: settings.get('top', options.top),\n                right: settings.get('right', options.right),\n                bottom: settings.get('bottom', options.bottom)\n            };\n            this._dimension = {\n                height: settings.get('height', options.height),\n                width: settings.get('width', options.width)\n            };\n            this._name = name;\n            this._settings = settings;\n            this._options = options;\n            this._isManipulating = false;\n            this._windowWidth = window.innerWidth;\n            this._windowHeight = window.innerHeight;\n            this._requestId = null;\n            this._saveTimeout = null;\n            this._settingsWindow = null;\n            this._locked = settings.get('locked', false);\n            this._$element = null;\n            this._$resize = null;\n            this._$canvas = null;\n            this._$context = null;\n            Utils.mergeObject(this._options.settings, settings.get('settings', {}));\n            console.debug('Widget::construct()', this._name, this._settings.get());\n        }\n        init(root) {\n            this._windowWidth = window.innerWidth;\n            this._windowHeight = window.innerHeight;\n            this._$element = document.createElement('corewm-widget');\n            this._$resize = document.createElement('corewm-widget-resize');\n            if (this._options.canvas) {\n                this._$canvas = document.createElement('canvas');\n                if (this._options.viewBox) {\n                    this._$canvas.setAttribute('viewBox', this._options.viewBox);\n                }\n                this._$context = this._$canvas.getContext('2d');\n                this._$element.appendChild(this._$canvas);\n            }\n            bindWidgetEvents(this);\n            this._updatePosition();\n            this._updateDimension();\n            this._setLock(this._locked);\n            DOM.$addClass(this._$element, 'Widget' + this._name);\n            this._$element.appendChild(this._$resize);\n            root.appendChild(this._$element);\n            return this._$element;\n        }\n        _inited() {\n            this.onInited();\n            this.onResize(this._dimension);\n            var fpsInterval, now, then, elapsed;\n            const animate = () => {\n                window.requestAnimationFrame(animate);\n                now = Date.now();\n                elapsed = now - then;\n                if (elapsed > fpsInterval) {\n                    then = now - elapsed % fpsInterval;\n                    this.onRender();\n                }\n            };\n            if (this._$canvas) {\n                var fps = Math.min(this._options.frequency, 1);\n                this._requestId = window.requestAnimationFrame(function () {\n                    fpsInterval = 1000 / fps;\n                    then = Date.now();\n                    animate();\n                });\n            }\n        }\n        destroy() {\n            Events.$unbind(window, 'mousemove:modifywidget');\n            Events.$unbind(window, 'mouseup:modifywidget');\n            Events.$unbind(this._$resize, 'mousedown:resizewidget');\n            Events.$unbind(this._$element, 'mousedown:movewidget');\n            Events.$unbind(this._$element, 'click:showenvelope');\n            Events.$unbind(this._$element, 'mouseover:showenvelope');\n            Events.$unbind(this._$element, 'mouseout:hideenvelope');\n            Events.$unbind(this._$element, 'contextmenu:widgetcontext');\n            this._saveTimeout = clearTimeout(this._saveTimeout);\n            if (this._requestId) {\n                window.cancelAnimationFrame(this._requestId);\n            }\n            this._requestId = null;\n            if (this._settingsWindow) {\n                this._settingsWindow.destroy();\n            }\n            this._settingsWindow = null;\n            this._$canvas = DOM.$remove(this._$canvas);\n            this._$resize = DOM.$remove(this._$resize);\n            this._$element = DOM.$remove(this._$element);\n            this._$context = null;\n        }\n        blur() {\n        }\n        _onMouseDown(ev, pos, action) {\n            this._saveTimeout = clearTimeout(this._saveTimeout);\n            DOM.$addClass(this._$element, 'corewm-widget-active');\n            if (action === 'resize') {\n                var obj = this._getNormalizedPosition();\n                this._setPosition(obj);\n            }\n        }\n        _onMouseMove(ev, obj, action) {\n            this._isManipulating = true;\n            if (action === 'move') {\n                this._setPosition(obj, true);\n                this.onMove(this._position);\n            } else {\n                this._setDimension(obj);\n                this.onResize(this._dimension);\n            }\n        }\n        _onMouseUp(ev, pos, action) {\n            this._isManipulating = false;\n            this._resizeTimeout = clearTimeout(this._resizeTimeout);\n            DOM.$removeClass(this._$element, 'corewm-widget-active');\n            this._hideEnvelope();\n            if (action === 'resize') {\n                this._setPosition(null, true);\n            }\n            this._saveTimeout = clearTimeout(this._saveTimeout);\n            this._saveTimeout = setTimeout(() => {\n                this._saveOptions();\n            }, TIMEOUT_SAVE);\n        }\n        _onContextMenu(ev) {\n            var c = this.onContextMenu(ev);\n            var menu = [{\n                    title: this._locked ? _('LBL_UNLOCK') : _('LBL_LOCK'),\n                    onClick: () => {\n                        this._setLock();\n                        this._saveOptions();\n                    }\n                }];\n            if (c !== true) {\n                if (c instanceof Array) {\n                    menu = c.concat(menu);\n                }\n                if (this._options.settings.enabled) {\n                    menu.push({\n                        title: _('Open {0} Settings', _(this._name)),\n                        onClick: ev => {\n                            this._openSettings(ev);\n                        }\n                    });\n                }\n            }\n            Menu.create(menu, ev);\n        }\n        _saveOptions(custom) {\n            if (typeof custom !== 'undefined') {\n                this._options.settings.tree = custom;\n            }\n            var opts = {\n                width: this._dimension.width,\n                height: this._dimension.height,\n                right: this._position.right,\n                left: validNumber(this._position.right) ? null : this._position.left,\n                bottom: this._position.bottom,\n                top: validNumber(this._position.bottom) ? null : this._position.top,\n                locked: this._locked,\n                settings: { tree: this._options.settings.tree }\n            };\n            this._settings.set(null, opts, true);\n        }\n        _openSettings(ev) {\n            if (this._settingsWindow) {\n                this._settingsWindow._focus();\n                return;\n            }\n            var wm = WindowManager.instance;\n            var win = new Window(this._options.settings.name, {\n                title: this._options.settings.title,\n                width: this._options.settings.width,\n                height: this._options.settings.height\n            }, null, wm._scheme);\n            win._on('init', (root, scheme) => {\n                var opts = this.onOpenSettings(root, scheme, ev);\n                win._render(opts.id);\n                win._find('ButtonOK').on('click', () => {\n                    var settings = opts.save(root, scheme, ev);\n                    this._saveOptions(settings);\n                });\n                opts.render(root, scheme, ev);\n            });\n            win._on('close', () => {\n                this._settingsWindow = null;\n            });\n            this._settingsWindow = wm.addWindow(win, true);\n        }\n        _showEnvelope() {\n            if (!this._$element) {\n                return;\n            }\n            DOM.$addClass(this._$element, 'corewm-widget-envelope');\n        }\n        _hideEnvelope() {\n            if (!this._$element || this._isManipulating) {\n                return;\n            }\n            DOM.$removeClass(this._$element, 'corewm-widget-envelope');\n        }\n        _setPosition(obj, stick) {\n            obj = obj || Utils.cloneObject(this._position);\n            this._position.top = obj.top;\n            this._position.left = obj.left;\n            this._position.bottom = null;\n            this._position.right = null;\n            if (stick) {\n                if (this._isPastHalf('vertical', obj)) {\n                    this._position.top = null;\n                    this._position.bottom = this._windowHeight - this._dimension.height - obj.top;\n                }\n                if (this._isPastHalf('horizontal', obj)) {\n                    this._position.left = null;\n                    this._position.right = this._windowWidth - this._dimension.width - obj.left;\n                }\n            }\n            this._updatePosition();\n        }\n        _setDimension(obj) {\n            var o = this._options;\n            var w = Math.min(Math.max(obj.width, o.minWidth), o.maxWidth);\n            var h = Math.min(Math.max(obj.height, o.minHeight), o.maxHeight);\n            if (this._options.aspect === true) {\n                h = w / this._aspect;\n            }\n            this._dimension.width = w;\n            this._dimension.height = h;\n            this._updateDimension();\n        }\n        _setLock(l) {\n            if (typeof l !== 'boolean') {\n                l = !this._locked;\n            }\n            this._locked = l;\n            if (this._$element) {\n                this._$element.setAttribute('data-locked', String(this._locked));\n            }\n        }\n        _updatePosition() {\n            if (this._$element) {\n                if (validNumber(this._position.right)) {\n                    this._$element.style.left = 'auto';\n                    this._$element.style.right = String(this._position.right) + 'px';\n                } else {\n                    this._$element.style.left = String(this._position.left) + 'px';\n                    this._$element.style.right = 'auto';\n                }\n                if (validNumber(this._position.bottom)) {\n                    this._$element.style.top = 'auto';\n                    this._$element.style.bottom = String(this._position.bottom) + 'px';\n                } else {\n                    this._$element.style.top = String(this._position.top) + 'px';\n                    this._$element.style.bottom = 'auto';\n                }\n            }\n        }\n        _updateDimension() {\n            if (this._$element) {\n                this._$element.style.width = String(this._dimension.width) + 'px';\n                this._$element.style.height = String(this._dimension.height) + 'px';\n            }\n            if (this._$canvas) {\n                this._$canvas.width = this._dimension.width || MIN_WIDTH;\n                this._$canvas.height = this._dimension.height || MIN_HEIGHT;\n            }\n        }\n        _getNormalizedPosition() {\n            var left = this._position.left;\n            if (validNumber(this._position.right)) {\n                left = this._windowWidth - this._position.right - this._dimension.width;\n            }\n            var top = this._position.top;\n            if (validNumber(this._position.bottom)) {\n                top = this._windowHeight - this._position.bottom - this._dimension.height;\n            }\n            return {\n                left: left,\n                top: top\n            };\n        }\n        _getDimension() {\n            return {\n                width: this._dimension.width,\n                height: this._dimension.height\n            };\n        }\n        _getPosition() {\n            return {\n                left: this._position.left,\n                top: this._position.top,\n                right: this._position.right,\n                bottom: this._position.bottom\n            };\n        }\n        _setSetting(k, v, save) {\n            this._options.settings.tree[k] = v;\n            if (save) {\n                this._saveOptions();\n            }\n        }\n        _getSetting(k, def) {\n            if (typeof this._options.settings === 'undefined' || typeof this._options.settings.tree === 'undefined') {\n                return def;\n            }\n            var value = this._options.settings.tree[k];\n            return typeof value === 'undefined' ? def : value;\n        }\n        _isPastHalf(dir, obj) {\n            obj = obj || this._position;\n            var hleft = this._windowWidth / 2;\n            var aleft = obj.left + this._dimension.width / 2;\n            if (dir === 'horizontal') {\n                return aleft >= hleft;\n            }\n            var htop = this._windowHeight / 2;\n            var atop = obj.top + this._dimension.height / 2;\n            return atop >= htop;\n        }\n        onMove() {\n        }\n        onResize() {\n        }\n        onRender() {\n        }\n        onInited() {\n        }\n        onContextMenu(ev) {\n        }\n        onOpenSettings(root, scheme, ev) {\n            return {\n                id: null,\n                save: function () {\n                    return {};\n                },\n                render: function () {\n                }\n            };\n        }\n    };\n});\ndefine('osjs-apps-corewm/widgets/digitalclock',['../widget'], function (Widget) {\n    'use strict';\n    const Locales = OSjs.require('core/locales');\n    const Dialog = OSjs.require('core/dialog');\n    return class WidgetDigitalClock extends Widget {\n        constructor(settings) {\n            super('DigitalClock', {\n                width: 300,\n                height: 100,\n                aspect: true,\n                top: 100,\n                right: 20,\n                canvas: true,\n                frequency: 1,\n                resizable: true,\n                viewBox: true,\n                settings: {\n                    enabled: false,\n                    tree: { color: '#ffffff' }\n                }\n            }, settings);\n        }\n        onRender() {\n            if (!this._$canvas) {\n                return;\n            }\n            const ctx = this._$context;\n            const now = new Date();\n            const txt = [\n                now.getHours(),\n                now.getMinutes(),\n                now.getSeconds()\n            ].map(function (i) {\n                return i < 10 ? '0' + String(i) : String(i);\n            }).join(':');\n            const ratio = 0.55;\n            const xOffset = -10;\n            const fontSize = Math.round(this._dimension.height * ratio);\n            ctx.font = String(fontSize) + 'px Digital-7Mono';\n            ctx.textBaseline = 'middle';\n            ctx.fillStyle = this._getSetting('color');\n            const x = Math.round(this._dimension.width / 2);\n            const y = Math.round(this._dimension.height / 2);\n            const m = ctx.measureText(txt).width;\n            ctx.clearRect(0, 0, this._dimension.width, this._dimension.height);\n            ctx.fillText(txt, x - m / 2 + xOffset, y);\n        }\n        onContextMenu(ev) {\n            const color = this._getSetting('color') || '#ffffff';\n            return [{\n                    title: Locales._('LBL_COLOR'),\n                    onClick: () => {\n                        Dialog.create('Color', { color: color }, (ev, btn, result) => {\n                            if (btn === 'ok') {\n                                this._setSetting('color', result.hex, true);\n                            }\n                        });\n                    }\n                }];\n        }\n    };\n});\ndefine('osjs-apps-corewm/widgets/analogclock',['../widget'], function (Widget) {\n    'use strict';\n    return class WidgetAnalogClock extends Widget {\n        constructor(settings) {\n            super('AnalogClock', {\n                width: 300,\n                height: 300,\n                aspect: true,\n                top: 100,\n                right: 20,\n                canvas: true,\n                frequency: 1,\n                resizable: true,\n                viewBox: true\n            }, settings);\n            this.radius = 300 / 2;\n        }\n        onRender() {\n            if (!this._$canvas) {\n                return;\n            }\n            const ctx = this._$context;\n            const radius = Math.round(this.radius * 0.95);\n            function drawHand(ctx, pos, length, width) {\n                ctx.beginPath();\n                ctx.lineWidth = width;\n                ctx.lineCap = 'round';\n                ctx.moveTo(0, 0);\n                ctx.rotate(pos);\n                ctx.lineTo(0, -length);\n                ctx.stroke();\n                ctx.rotate(-pos);\n            }\n            ctx.clearRect(0, 0, this.radius * 2, this.radius * 2);\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, 2 * Math.PI);\n            ctx.fillStyle = 'white';\n            ctx.fill();\n            ctx.lineWidth = radius * 0.04;\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.arc(0, 0, radius * 0.1, 0, 2 * Math.PI);\n            ctx.fillStyle = '#000';\n            ctx.fill();\n            ctx.font = radius * 0.15 + 'px arial';\n            ctx.textBaseline = 'middle';\n            ctx.textAlign = 'center';\n            let ang;\n            for (let num = 1; num < 13; num++) {\n                ang = num * Math.PI / 6;\n                ctx.rotate(ang);\n                ctx.translate(0, -radius * 0.85);\n                ctx.rotate(-ang);\n                ctx.fillText(num.toString(), 0, 0);\n                ctx.rotate(ang);\n                ctx.translate(0, radius * 0.85);\n                ctx.rotate(-ang);\n            }\n            const now = new Date();\n            let hour = now.getHours();\n            let minute = now.getMinutes();\n            let second = now.getSeconds();\n            hour = hour % 12;\n            hour = hour * Math.PI / 6 + minute * Math.PI / (6 * 60) + second * Math.PI / (360 * 60);\n            minute = minute * Math.PI / 30 + second * Math.PI / (30 * 60);\n            second = second * Math.PI / 30;\n            drawHand(ctx, hour, radius * 0.5, radius * 0.07);\n            drawHand(ctx, minute, radius * 0.8, radius * 0.07);\n            drawHand(ctx, second, radius * 0.9, radius * 0.02);\n        }\n        onResize(dimension) {\n            if (!this._$canvas || !this._$context) {\n                return;\n            }\n            this.radius = dimension.height / 2;\n            this._$context.translate(this.radius, this.radius);\n        }\n    };\n});\ndefine('osjs-apps-corewm/menu',['./locales'], function (Translations) {\n    'use strict';\n    const _ = OSjs.require('core/locales').createLocalizer(Translations);\n    const Menu = OSjs.require('gui/menu');\n    const GUI = OSjs.require('utils/gui');\n    const DOM = OSjs.require('utils/dom');\n    const Events = OSjs.require('utils/events');\n    const Process = OSjs.require('core/process');\n    const Theme = OSjs.require('core/theme');\n    const WindowManager = OSjs.require('core/window-manager');\n    const PackageManager = OSjs.require('core/package-manager');\n    class CategorizedApplicationMenu {\n        constructor() {\n            var apps = PackageManager.getPackages();\n            var wm = WindowManager.instance;\n            var cfgCategories = wm.getDefaultSetting('menu');\n            function createEvent(iter) {\n                return function (el) {\n                    GUI.createDraggable(el, {\n                        type: 'application',\n                        data: { launch: iter.name }\n                    });\n                };\n            }\n            function clickEvent(iter) {\n                return function () {\n                    Process.create(iter.name);\n                };\n            }\n            var cats = {};\n            Object.keys(cfgCategories).forEach(function (c) {\n                cats[c] = [];\n            });\n            Object.keys(apps).forEach(function (a) {\n                var iter = apps[a];\n                if (iter.type === 'application' && iter.visible !== false) {\n                    var cat = iter.category && cats[iter.category] ? iter.category : 'unknown';\n                    cats[cat].push({\n                        name: a,\n                        data: iter\n                    });\n                }\n            });\n            var list = [];\n            Object.keys(cats).forEach(function (c) {\n                var submenu = [];\n                for (var a = 0; a < cats[c].length; a++) {\n                    var iter = cats[c][a];\n                    submenu.push({\n                        title: iter.data.name,\n                        icon: Theme.getIcon(iter.data.icon, '16x16'),\n                        tooltip: iter.data.description,\n                        onCreated: createEvent(iter),\n                        onClick: clickEvent(iter)\n                    });\n                }\n                if (submenu.length) {\n                    list.push({\n                        title: _(cfgCategories[c].title),\n                        icon: Theme.getIcon(cfgCategories[c].icon, '16x16'),\n                        menu: submenu\n                    });\n                }\n            });\n            this.list = list;\n        }\n        show(ev) {\n            var m = Menu.create(this.list, ev);\n            if (m && m.$element) {\n                DOM.$addClass(m.$element, 'CoreWMDefaultApplicationMenu');\n            }\n        }\n    }\n    class ApplicationMenu {\n        constructor() {\n            var root = this.$element = document.createElement('gui-menu');\n            this.$element.id = 'CoreWMApplicationMenu';\n            var apps = PackageManager.getPackages();\n            function createEntry(a, iter) {\n                var entry = document.createElement('gui-menu-entry');\n                var img = document.createElement('img');\n                img.src = Theme.getIcon(iter.icon, '32x32');\n                var txt = document.createElement('div');\n                txt.appendChild(document.createTextNode(iter.name));\n                Events.$bind(entry, 'click', function (ev) {\n                    Process.create(a);\n                });\n                entry.appendChild(img);\n                entry.appendChild(txt);\n                root.appendChild(entry);\n            }\n            Object.keys(apps).forEach(function (a) {\n                var iter = apps[a];\n                if (iter.type === 'application' && iter.visible !== false) {\n                    createEntry(a, iter);\n                }\n            });\n        }\n        destroy() {\n            if (this.$element) {\n                this.$element.querySelectorAll('gui-menu-entry').forEach(function (el) {\n                    Events.$unbind(el, 'click');\n                });\n                DOM.$remove(this.$element);\n            }\n            this.$element = null;\n        }\n        show(pos) {\n            if (!this.$element) {\n                return;\n            }\n            if (!this.$element.parentNode) {\n                document.body.appendChild(this.$element);\n            }\n            DOM.$removeClass(this.$element, 'AtBottom');\n            DOM.$removeClass(this.$element, 'AtTop');\n            if (pos.y > window.innerHeight / 2) {\n                DOM.$addClass(this.$element, 'AtBottom');\n                this.$element.style.top = 'auto';\n                this.$element.style.bottom = '30px';\n            } else {\n                DOM.$addClass(this.$element, 'AtTop');\n                this.$element.style.bottom = 'auto';\n                this.$element.style.top = '30px';\n            }\n            this.$element.style.left = pos.x + 'px';\n        }\n        getRoot() {\n            return this.$element;\n        }\n    }\n    function showMenu(ev) {\n        const wm = WindowManager.instance;\n        let inst;\n        if (wm && wm.getSetting('useTouchMenu') === true) {\n            inst = new ApplicationMenu();\n            var pos = {\n                x: ev.clientX,\n                y: ev.clientY\n            };\n            if (ev.target) {\n                var rect = DOM.$position(ev.target, document.body);\n                if (rect.left && rect.top && rect.width && rect.height) {\n                    pos.x = rect.left - rect.width / 2;\n                    if (pos.x <= 16) {\n                        pos.x = 0;\n                    }\n                    var panel = DOM.$parent(ev.target, function (node) {\n                        return node.tagName.toLowerCase() === 'corewm-panel';\n                    });\n                    if (panel) {\n                        var prect = DOM.$position(panel);\n                        pos.y = prect.top + prect.height;\n                    } else {\n                        pos.y = rect.top + rect.height;\n                    }\n                }\n            }\n            Menu.create(null, pos, inst);\n        } else {\n            inst = new CategorizedApplicationMenu();\n            inst.show(ev);\n        }\n    }\n    return { showMenu: showMenu };\n});\ndefine('osjs-apps-corewm/panelitems/appmenu',[\n    '../panelitem',\n    '../menu'\n], function (PanelItem, a) {\n    'use strict';\n    const Theme = OSjs.require('core/theme');\n    const Events = OSjs.require('utils/events');\n    const Locales = OSjs.require('core/locales');\n    const WindowManager = OSjs.require('core/window-manager');\n    return class PanelItemAppMenu extends PanelItem {\n        constructor(settings) {\n            super('PanelItemAppMenu', 'AppMenu', settings, {});\n        }\n        init() {\n            const root = super.init(...arguments);\n            const wm = WindowManager.instance;\n            const img = document.createElement('img');\n            img.alt = '';\n            img.src = Theme.getIcon(wm.getSetting('icon') || 'osjs-white.png');\n            const sel = document.createElement('li');\n            sel.title = Locales._('LBL_APPLICATIONS');\n            sel.className = 'corewm-panel-button-centered';\n            sel.setAttribute('role', 'button');\n            sel.setAttribute('data-label', 'OS.js Application Menu');\n            sel.appendChild(img);\n            Events.$bind(sel, 'click', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                const wm = WindowManager.instance;\n                if (wm) {\n                    a.showMenu(ev);\n                }\n            });\n            this._$container.appendChild(sel);\n            return root;\n        }\n        destroy() {\n            if (this._$container) {\n                Events.$unbind(this._$container.querySelector('li'), 'click');\n            }\n            return super.destroy(...arguments);\n        }\n    };\n});\ndefine('osjs-apps-corewm/panelitems/buttons',['../panelitem'], function (PanelItem) {\n    'use strict';\n    const GUI = OSjs.require('utils/gui');\n    const Menu = OSjs.require('gui/menu');\n    const DOM = OSjs.require('utils/dom');\n    const Init = OSjs.require('core/init');\n    const Theme = OSjs.require('core/theme');\n    const Events = OSjs.require('utils/events');\n    const Locales = OSjs.require('core/locales');\n    const Process = OSjs.require('core/process');\n    const PackageManager = OSjs.require('core/package-manager');\n    const WindowManager = OSjs.require('core/window-manager');\n    return class PanelItemButtons extends PanelItem {\n        constructor(settings) {\n            if (settings) {\n                settings.set('buttons', settings.get('buttons', []).map(iter => {\n                    iter.title = Locales._(iter.title);\n                    return iter;\n                }));\n            }\n            super('PanelItemButtons', 'Buttons', settings, { buttons: [] });\n        }\n        init() {\n            const root = super.init(...arguments);\n            this.renderButtons();\n            let ghost, lastTarget;\n            function clearGhost(inner) {\n                ghost = DOM.$remove(ghost);\n                if (!inner) {\n                    lastTarget = null;\n                }\n            }\n            function createGhost(target) {\n                const isUl = target.tagName === 'UL';\n                if (!target || lastTarget === target || isUl) {\n                    return;\n                }\n                const ul = target.parentNode;\n                lastTarget = target;\n                clearGhost(true);\n                ghost = document.createElement('li');\n                ghost.className = 'Ghost';\n                ul.insertBefore(ghost, target);\n            }\n            let counter = 0;\n            GUI.createDroppable(this._$container, {\n                onOver: (ev, el, args) => {\n                    if (ev.target) {\n                        createGhost(ev.target);\n                    }\n                },\n                onEnter: ev => {\n                    ev.preventDefault();\n                    counter++;\n                },\n                onLeave: ev => {\n                    if (counter <= 0) {\n                        clearGhost();\n                    }\n                },\n                onDrop: () => {\n                    counter = 0;\n                    clearGhost();\n                },\n                onItemDropped: (ev, el, item, args) => {\n                    if (item && item.data) {\n                        let newPosition = 0;\n                        if (DOM.$hasClass(ev.target, 'Ghost')) {\n                            newPosition = DOM.$index(ev.target);\n                        }\n                        if (typeof item.data.position !== 'undefined') {\n                            this.moveButton(item.data.position, newPosition - 1);\n                        } else if (item.data.mime === 'osjs/application') {\n                            const appName = item.data.path.split('applications:///')[1];\n                            this.createButton(appName, newPosition);\n                        }\n                    }\n                }\n            });\n            return root;\n        }\n        clearButtons() {\n            DOM.$empty(this._$container);\n        }\n        renderButtons() {\n            const wm = WindowManager.instance;\n            const systemButtons = {\n                applications: ev => {\n                    wm.showMenu(ev);\n                },\n                settings: ev => {\n                    if (wm) {\n                        wm.showSettings();\n                    }\n                },\n                exit: ev => {\n                    Init.logout();\n                }\n            };\n            this.clearButtons();\n            (this._settings.get('buttons') || []).forEach((btn, idx) => {\n                let menu = [{\n                        title: 'Remove button',\n                        onClick: () => {\n                            this.removeButton(idx);\n                        }\n                    }];\n                let callback = () => {\n                    Process.create(btn.launch);\n                };\n                if (btn.system) {\n                    menu = null;\n                    callback = function (ev) {\n                        ev.stopPropagation();\n                        systemButtons[btn.system](ev);\n                    };\n                }\n                this.addButton(btn.title, btn.icon, menu, callback, idx);\n            });\n        }\n        removeButton(index) {\n            const buttons = this._settings.get('buttons');\n            buttons.splice(index, 1);\n            this.renderButtons();\n            this._settings.save();\n        }\n        moveButton(from, to) {\n            const buttons = this._settings.get('buttons');\n            if (from === to || buttons.length <= 1) {\n                return;\n            }\n            if (to >= buttons.length) {\n                let k = to - buttons.length;\n                while (k-- + 1) {\n                    buttons.push(window.undefined);\n                }\n            }\n            buttons.splice(to, 0, buttons.splice(from, 1)[0]);\n            this._settings.save(() => {\n                this.renderButtons();\n            });\n        }\n        createButton(appName, position) {\n            const pkg = PackageManager.getPackage(appName);\n            const buttons = this._settings.get('buttons');\n            const iter = {\n                title: appName,\n                icon: pkg.icon,\n                launch: appName\n            };\n            if (!buttons.length) {\n                buttons.push(iter);\n            } else {\n                buttons.splice(position, 0, iter);\n            }\n            this.renderButtons();\n            this._settings.save();\n        }\n        addButton(title, icon, menu, callback, idx) {\n            const img = document.createElement('img');\n            img.alt = '';\n            img.src = Theme.getIcon(icon);\n            const sel = document.createElement('li');\n            sel.title = title;\n            sel.setAttribute('role', 'button');\n            sel.setAttribute('aria-label', title);\n            sel.appendChild(img);\n            Events.$bind(sel, 'click', callback, true);\n            Events.$bind(sel, 'contextmenu', function (ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                if (menu) {\n                    Menu.create(menu, ev);\n                }\n            });\n            GUI.createDraggable(sel, {\n                data: { position: idx },\n                onStart: function (ev, el) {\n                    setTimeout(function () {\n                        DOM.$addClass(el, 'Ghosting');\n                    }, 1);\n                },\n                onEnd: function (ev, el) {\n                    DOM.$removeClass(el, 'Ghosting');\n                }\n            });\n            this._$container.appendChild(sel);\n        }\n    };\n});\ndefine('osjs-apps-corewm/panelitemdialog',[],function () {\n    'use strict';\n    const Window = OSjs.require('core/window');\n    return class PanelItemDialog extends Window {\n        constructor(name, args, settings, scheme, closeCallback) {\n            super(name, args, null);\n            this._closeCallback = closeCallback || function () {\n            };\n            this._settings = settings;\n            this._scheme = scheme;\n        }\n        init(wm, app) {\n            var root = Window.prototype.init.apply(this, arguments);\n            this._render(this._name, this._scheme);\n            this._find('ButtonApply').on('click', () => {\n                this.applySettings();\n                this._close('ok');\n            });\n            this._find('ButtonCancel').on('click', () => {\n                this._close();\n            });\n            return root;\n        }\n        applySettings() {\n        }\n        _close(button) {\n            this._closeCallback(button);\n            return super._close(...arguments);\n        }\n        _destroy() {\n            this._settings = null;\n            return super._destroy(...arguments);\n        }\n    };\n});\ndefine('osjs-apps-corewm/panelitems/clock',[\n    '../panelitem',\n    '../panelitemdialog'\n], function (PanelItem, PanelDialog) {\n    'use strict';\n    const DOM = OSjs.require('utils/dom');\n    const ExtendedDate = OSjs.require('helpers/date');\n    class ClockSettingsDialog extends PanelDialog {\n        constructor(panelItem, scheme, closeCallback) {\n            super('ClockSettingsDialog', {\n                title: 'Clock Settings',\n                icon: 'status/appointment-soon.png',\n                width: 400,\n                height: 280\n            }, panelItem._settings, scheme, closeCallback);\n        }\n        init(wm, app) {\n            const root = super.init(...arguments);\n            this._find('InputUseUTC').set('value', this._settings.get('utc'));\n            this._find('InputInterval').set('value', String(this._settings.get('interval')));\n            this._find('InputTimeFormatString').set('value', this._settings.get('format'));\n            this._find('InputTooltipFormatString').set('value', this._settings.get('tooltip'));\n            return root;\n        }\n        applySettings() {\n            this._settings.set('utc', this._find('InputUseUTC').get('value'));\n            this._settings.set('interval', parseInt(this._find('InputInterval').get('value'), 10));\n            this._settings.set('format', this._find('InputTimeFormatString').get('value'));\n            this._settings.set('tooltip', this._find('InputTooltipFormatString').get('value'), true);\n        }\n    }\n    return class PanelItemClock extends PanelItem {\n        constructor(settings) {\n            super('PanelItemClock corewm-panel-right', 'Clock', settings, {\n                utc: false,\n                interval: 1000,\n                format: 'H:i:s',\n                tooltip: 'l, j F Y'\n            });\n            this.clockInterval = null;\n            this.$clock = null;\n        }\n        createInterval() {\n            const timeFmt = this._settings.get('format');\n            const tooltipFmt = this._settings.get('tooltip');\n            const update = () => {\n                let clock = this.$clock;\n                if (clock) {\n                    const now = new Date();\n                    const t = ExtendedDate.format(now, timeFmt);\n                    const d = ExtendedDate.format(now, tooltipFmt);\n                    DOM.$empty(clock);\n                    clock.appendChild(document.createTextNode(t));\n                    clock.setAttribute('aria-label', String(t));\n                    clock.title = d;\n                }\n                clock = null;\n            };\n            const create = interval => {\n                clearInterval(this.clockInterval);\n                this.clockInterval = clearInterval(this.clockInterval);\n                this.clockInterval = setInterval(() => update(), interval);\n            };\n            create(this._settings.get('interval'));\n            update();\n        }\n        init() {\n            const root = super.init(...arguments);\n            this.$clock = document.createElement('span');\n            this.$clock.innerHTML = '00:00:00';\n            this.$clock.setAttribute('role', 'button');\n            const li = document.createElement('li');\n            li.appendChild(this.$clock);\n            this._$container.appendChild(li);\n            this.createInterval();\n            return root;\n        }\n        applySettings() {\n            this.createInterval();\n        }\n        openSettings() {\n            return super.openSettings(ClockSettingsDialog, {});\n        }\n        destroy() {\n            this.clockInterval = clearInterval(this.clockInterval);\n            this.$clock = DOM.$remove(this.$clock);\n            return super.destroy(...arguments);\n        }\n    };\n});\ndefine('osjs-apps-corewm/panelitems/notificationarea',['../panelitem'], function (PanelItem) {\n    'use strict';\n    const DOM = OSjs.require('utils/dom');\n    const Events = OSjs.require('utils/events');\n    let _restartFix = {};\n    class NotificationAreaItem {\n        constructor(name, opts) {\n            opts = opts || {};\n            this.name = name;\n            this.opts = opts;\n            this.$container = document.createElement('li');\n            this.$image = opts.image || opts.icon ? document.createElement('img') : null;\n            this.onCreated = opts.onCreated || function () {\n            };\n            this.onInited = opts.onInited || function () {\n            };\n            this.onDestroy = opts.onDestroy || function () {\n            };\n            this.onClick = opts.onClick || function () {\n            };\n            this.onContextMenu = opts.onContextMenu || function () {\n            };\n            this._build(name);\n            this.onCreated();\n        }\n        _build(name) {\n            const classNames = [\n                'NotificationArea',\n                'NotificationArea_' + name\n            ];\n            if (this.opts.className) {\n                classNames.push(this.opts.className);\n            }\n            this.$container.className = classNames.join(' ');\n            this.$container.setAttribute('role', 'button');\n            this.$container.setAttribute('aria-label', this.opts.title);\n            if (this.opts.tooltip) {\n                this.$container.title = this.opts.tooltip;\n            }\n            const self = this;\n            Events.$bind(this.$container, 'click', function (ev) {\n                self.onClick.apply(this, arguments);\n                return false;\n            });\n            Events.$bind(this.$container, 'contextmenu', function (ev) {\n                self.onContextMenu.apply(this, arguments);\n                return false;\n            });\n            if (this.$image) {\n                this.$image.title = this.opts.title || '';\n                this.$image.src = this.opts.image || this.opts.icon || 'about:blank';\n                this.$container.appendChild(this.$image);\n            }\n            const inner = document.createElement('div');\n            inner.appendChild(document.createElement('div'));\n            this.$container.appendChild(inner);\n        }\n        init(root) {\n            root.appendChild(this.$container);\n            try {\n                this.onInited(this.$container, this.$image);\n            } catch (e) {\n                console.warn('NotificationAreaItem', 'onInited error');\n                console.warn(e, e.stack);\n            }\n        }\n        setIcon(src) {\n            return this.setImage(src);\n        }\n        setImage(src) {\n            if (this.$image) {\n                this.$image.src = src;\n            }\n            this.opts.image = src;\n        }\n        setTitle(title) {\n            if (this.$image) {\n                this.$image.title = title;\n            }\n            this.opts.title = title;\n        }\n        destroy() {\n            if (this.$container) {\n                Events.$unbind(this.$container, 'click');\n                Events.$unbind(this.$container, 'mousedown');\n                Events.$unbind(this.$container, 'contextmenu');\n            }\n            this.onDestroy();\n            this.$image = DOM.$remove(this.$image);\n            this.$container = DOM.$remove(this.$container);\n        }\n    }\n    return class PanelItemNotificationArea extends PanelItem {\n        constructor() {\n            super('PanelItemNotificationArea corewm-panel-right');\n            this.notifications = {};\n        }\n        init() {\n            const root = super.init(...arguments);\n            root.setAttribute('role', 'toolbar');\n            const fix = Object.keys(_restartFix);\n            if (fix.length) {\n                fix.forEach(k => {\n                    this.createNotification(k, _restartFix[k]);\n                });\n            }\n            return root;\n        }\n        createNotification(name, opts) {\n            if (this._$root) {\n                if (!this.notifications[name]) {\n                    const item = new NotificationAreaItem(name, opts);\n                    item.init(this._$container);\n                    this.notifications[name] = item;\n                    _restartFix[name] = opts;\n                    return item;\n                }\n            }\n            return null;\n        }\n        removeNotification(name) {\n            if (this._$root) {\n                if (this.notifications[name]) {\n                    this.notifications[name].destroy();\n                    delete this.notifications[name];\n                    if (_restartFix[name]) {\n                        delete _restartFix[name];\n                    }\n                    return true;\n                }\n            }\n            return false;\n        }\n        getNotification(name) {\n            if (this._$root) {\n                if (this.notifications[name]) {\n                    return this.notifications[name];\n                }\n            }\n            return false;\n        }\n        destroy() {\n            for (let i in this.notifications) {\n                if (this.notifications.hasOwnProperty(i)) {\n                    if (this.notifications[i]) {\n                        this.notifications[i].destroy();\n                    }\n                    delete this.notifications[i];\n                }\n            }\n            return super.destroy(...arguments);\n        }\n    };\n});\ndefine('osjs-apps-corewm/panelitems/search',['../panelitem'], function (PanelItem) {\n    'use strict';\n    const DOM = OSjs.require('utils/dom');\n    const Hooks = OSjs.require('helpers/hooks');\n    const Theme = OSjs.require('core/theme');\n    const Events = OSjs.require('utils/events');\n    const Locales = OSjs.require('core/locales');\n    const Keycodes = OSjs.require('utils/keycodes');\n    const Process = OSjs.require('core/process');\n    const FileMetadata = OSjs.require('vfs/file');\n    const SearchEngine = OSjs.require('core/search-engine');\n    const WindowManager = OSjs.require('core/window-manager');\n    return class PanelItemSearch extends PanelItem {\n        constructor(settings) {\n            super('PanelItemSearch corewm-panel-right', 'Search', settings, {});\n            this.$ul = null;\n            this.$box = null;\n            this.$input = null;\n            this.$message = null;\n            this.visible = false;\n            this.hookId = -1;\n            this.currentIndex = -1;\n            this.currentCount = 0;\n        }\n        init() {\n            const root = super.init(...arguments);\n            const img = document.createElement('img');\n            img.src = Theme.getIcon('actions/system-search.png');\n            const input = document.createElement('input');\n            input.setAttribute('type', 'text');\n            const guinput = document.createElement('gui-text');\n            guinput.appendChild(input);\n            const ul = document.createElement('ul');\n            this.$message = document.createElement('div');\n            this.$message.appendChild(document.createTextNode(Locales._('SEARCH_LOADING')));\n            this.$box = document.createElement('corewm-search');\n            this.$box.className = 'custom-notification';\n            this.$box.appendChild(guinput);\n            this.$box.appendChild(this.$message);\n            this.$box.appendChild(ul);\n            const self = this;\n            const keyEvents = {};\n            keyEvents[Keycodes.DOWN] = () => this.navigateDown();\n            keyEvents[Keycodes.UP] = () => this.navigateUp();\n            keyEvents[Keycodes.ESC] = () => this.hide();\n            keyEvents[Keycodes.ENTER] = function (ev) {\n                if (this.value.length) {\n                    self.search(this.value);\n                    this.value = '';\n                } else {\n                    self.navigateOpen();\n                }\n            };\n            Hooks.addHook('menuBlur', () => this.hide());\n            Events.$bind(root, 'click', function (ev) {\n                ev.stopPropagation();\n                if (self.visible) {\n                    self.hide();\n                } else {\n                    self.show();\n                }\n            });\n            Events.$bind(input, 'mousedown', ev => ev.stopPropagation());\n            Events.$bind(input, 'keydown', function (ev) {\n                if (keyEvents[ev.keyCode]) {\n                    ev.preventDefault();\n                    ev.stopPropagation();\n                    keyEvents[ev.keyCode].call(this, ev);\n                }\n            });\n            Events.$bind(ul, 'mousedown', ev => ev.stopPropagation());\n            Events.$bind(ul, 'click', ev => {\n                const target = ev.target;\n                if (target.tagName === 'LI') {\n                    self.launch(target);\n                }\n            });\n            Events.$bind(this.$box, 'mousedown', () => {\n                if (input) {\n                    input.focus();\n                }\n            });\n            const li = document.createElement('li');\n            li.appendChild(img);\n            this.$ul = ul;\n            this.$input = input;\n            this._$container.appendChild(li);\n            document.body.appendChild(this.$box);\n            return root;\n        }\n        applySettings() {\n        }\n        openSettings() {\n            Process.create('ApplicationSettings', { category: 'search' });\n        }\n        destroy() {\n            if (this.hookId >= 0) {\n                Hooks.removeHook(this.hookId);\n            }\n            Events.$unbind(this._$root, 'click');\n            Events.$unbind(this.$input, 'mousedown');\n            Events.$unbind(this.$input, 'keydown');\n            Events.$unbind(this.$ul, 'mousedown');\n            Events.$unbind(this.$ul, 'click');\n            Events.$unbind(this.$box, 'mousedown');\n            this.$message = DOM.$remove(this.$message);\n            this.$input = DOM.$remove(this.$input);\n            this.$box = DOM.$remove(this.$box);\n            this.$ul = DOM.$remove(this.$ul);\n            return super.destroy(...arguments);\n        }\n        launch(target) {\n            const launch = target.getAttribute('data-launch');\n            const args = JSON.parse(target.getAttribute('data-args'));\n            const file = target.getAttribute('data-file');\n            const mime = target.getAttribute('data-mime');\n            const type = target.getAttribute('data-type');\n            if (file) {\n                if (type === 'dir') {\n                    Process.create('ApplicationFileManager', { path: file });\n                } else {\n                    Process.createFromFile(new FileMetadata(file, mime));\n                }\n            } else {\n                Process.create(launch, args);\n            }\n            this.hide();\n        }\n        show() {\n            if (!this.$box || this.visible) {\n                return;\n            }\n            const wm = WindowManager.instance;\n            const space = wm.getWindowSpace(true);\n            const input = this.$box.querySelector('input');\n            DOM.$empty(this.$box.querySelector('ul'));\n            this.$box.style.marginTop = String(space.top) + 'px';\n            this.$box.setAttribute('data-visible', String(true));\n            if (input) {\n                input.value = '';\n                input.focus();\n            }\n            this.visible = true;\n            this.$message.style.display = 'none';\n        }\n        hide() {\n            if (!this.$box || !this.visible) {\n                return;\n            }\n            this.$box.setAttribute('data-visible', String(false));\n            this.visible = false;\n        }\n        search(q) {\n            if (!this.$box) {\n                return;\n            }\n            this.currentIndex = -1;\n            this.currentCount = 0;\n            DOM.$empty(this.$message);\n            this.$message.appendChild(document.createTextNode(Locales._('SEARCH_LOADING')));\n            this.$message.style.display = 'block';\n            SearchEngine.search(q, {\n                limit: 10,\n                recursive: true\n            }).then(result => {\n                this.renderResult(result);\n            }).catch(errors => {\n                console.error('PanelItemSearch::search()', 'errors', errors);\n            });\n        }\n        renderResult(list) {\n            if (!this.$box) {\n                return;\n            }\n            const root = this.$box.querySelector('ul');\n            DOM.$empty(root);\n            this.currentCount = list.length;\n            if (this.currentCount) {\n                this.$message.style.display = 'none';\n            } else {\n                DOM.$empty(this.$message);\n                this.$message.appendChild(document.createTextNode(Locales._('SEARCH_NO_RESULTS')));\n                this.$message.style.display = 'block';\n            }\n            list.forEach(function (l) {\n                const img = document.createElement('img');\n                img.src = l.icon;\n                const title = document.createElement('div');\n                title.className = 'Title';\n                title.appendChild(document.createTextNode(l.title));\n                const description = document.createElement('div');\n                description.className = 'Message';\n                description.appendChild(document.createTextNode(l.description));\n                const node = document.createElement('li');\n                node.setAttribute('data-launch', l.launch.application);\n                node.setAttribute('data-args', JSON.stringify(l.launch.args));\n                if (l.launch.file) {\n                    node.setAttribute('data-file', l.launch.file.path);\n                    node.setAttribute('data-mime', l.launch.file.mime);\n                    node.setAttribute('data-type', l.launch.file.type);\n                }\n                node.appendChild(img);\n                node.appendChild(title);\n                node.appendChild(description);\n                root.appendChild(node);\n            });\n        }\n        updateSelection() {\n            const root = this.$box.querySelector('ul');\n            const child = root.children[this.currentIndex];\n            root.querySelectorAll('li').forEach(function (el) {\n                DOM.$removeClass(el, 'active');\n            });\n            DOM.$addClass(child, 'active');\n        }\n        navigateUp() {\n            if (!this.currentCount) {\n                return;\n            }\n            if (this.currentIndex > 0) {\n                this.currentIndex--;\n            } else {\n                this.currentIndex = this.currentCount - 1;\n            }\n            this.updateSelection();\n        }\n        navigateDown() {\n            if (!this.currentCount) {\n                return;\n            }\n            if (this.currentIndex < 0 || this.currentIndex >= this.currentCount - 1) {\n                this.currentIndex = 0;\n            } else {\n                this.currentIndex++;\n            }\n            this.updateSelection();\n        }\n        navigateOpen() {\n            if (this.currentIndex === -1 || !this.currentCount) {\n                return;\n            }\n            const root = this.$box.querySelector('ul');\n            const child = root.children[this.currentIndex];\n            if (child) {\n                this.launch(child);\n            }\n        }\n    };\n});\ndefine('osjs-apps-corewm/panelitems/weather',['../panelitem'], function (PanelItem) {\n    'use strict';\n    const DOM = OSjs.require('utils/dom');\n    const Utils = OSjs.require('utils/misc');\n    const Theme = OSjs.require('core/theme');\n    const Events = OSjs.require('utils/events');\n    const Connection = OSjs.require('core/connection');\n    return class PanelItemWeather extends PanelItem {\n        constructor() {\n            super('PanelItemWeather corewm-panel-right corewm-panel-dummy');\n            this.clockInterval = null;\n            this.position = null;\n            this.interval = null;\n            this.$element = null;\n            this.$image = null;\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(pos => {\n                    this.position = pos;\n                    setTimeout(() => this.updateWeather(), 100);\n                });\n            }\n        }\n        init() {\n            const root = super.init(...arguments);\n            this.$element = document.createElement('li');\n            this.$image = document.createElement('img');\n            this.$element.appendChild(this.$image);\n            this._$container.appendChild(this.$element);\n            this.updateWeather();\n            return root;\n        }\n        destroy() {\n            Events.$unbind(this._$root, 'click');\n            this.interval = clearInterval(this.interval);\n            this.$image = DOM.$remove(this.$image);\n            this.$element = DOM.$remove(this.$element);\n            return super.destroy(...arguments);\n        }\n        updateWeather() {\n            if (!this.$image) {\n                return;\n            }\n            this.$image.title = 'Not allowed or unavailable';\n            var busy = false;\n            const setImage = src => {\n                if (this.$image) {\n                    this.$image.src = src;\n                }\n            };\n            const setWeather = (name, weather, main) => {\n                if (!this.$image) {\n                    return;\n                }\n                name = name || '<unknown location>';\n                weather = weather || {};\n                main = main || {};\n                var desc = weather.description || '<unknown weather>';\n                var temp = main.temp || '<unknown temp>';\n                if (main.temp) {\n                    temp += 'C';\n                }\n                var icon = 'sunny.png';\n                switch (desc) {\n                case 'clear sky':\n                    if (weather.icon === '01n') {\n                        icon = 'weather-clear-night.png';\n                    } else {\n                        icon = 'weather-clear.png';\n                    }\n                    break;\n                case 'few clouds':\n                    if (weather.icon === '02n') {\n                        icon = 'weather-few-clouds-night.png';\n                    } else {\n                        icon = 'weather-few-clouds.png';\n                    }\n                    break;\n                case 'scattered clouds':\n                case 'broken clouds':\n                    icon = 'weather-overcast.png';\n                    break;\n                case 'shower rain':\n                    icon = 'weather-showers.png';\n                    break;\n                case 'rain':\n                    icon = 'weather-showers-scattered.png';\n                    break;\n                case 'thunderstorm':\n                    icon = 'stock_weather-storm.png';\n                    break;\n                case 'snow':\n                    icon = 'stock_weather-snow.png';\n                    break;\n                case 'mist':\n                    icon = 'stock_weather-fog.png';\n                    break;\n                default:\n                    if (desc.match(/rain$/)) {\n                        icon = 'weather-showers-scattered.png';\n                    }\n                    break;\n                }\n                var src = Theme.getIcon('status/' + icon);\n                this.$image.title = Utils.format('{0} - {1} - {2}', name, desc, temp);\n                setImage(src);\n            };\n            const updateWeather = () => {\n                if (busy || !this.position) {\n                    return;\n                }\n                busy = true;\n                var lat = this.position.coords.latitude;\n                var lon = this.position.coords.longitude;\n                var unt = 'metric';\n                var key = '4ea33327bcfa4ea0293b2d02b6fda385';\n                var url = Utils.format('http://api.openweathermap.org/data/2.5/weather?lat={0}&lon={1}&units={2}&APPID={3}', lat, lon, unt, key);\n                Connection.request('curl', { url: url }).then(response => {\n                    if (response) {\n                        var result = null;\n                        try {\n                            result = JSON.parse(response.body);\n                        } catch (e) {\n                        }\n                        if (result) {\n                            setWeather(result.name, result.weather ? result.weather[0] : null, result.main);\n                        }\n                    }\n                    busy = false;\n                }).catch(() => {\n                    busy = false;\n                });\n            };\n            setImage(Theme.getIcon('status/weather-severe-alert.png'));\n            this.interval = setInterval(function () {\n                updateWeather();\n            }, 60 * 60 * 1000);\n            Events.$bind(this._$root, 'click', () => updateWeather());\n            setTimeout(() => updateWeather(), 1000);\n        }\n    };\n});\ndefine('osjs-apps-corewm/panelitems/windowlist',['../panelitem'], function (PanelItem) {\n    'use strict';\n    const GUI = OSjs.require('utils/gui');\n    const DOM = OSjs.require('utils/dom');\n    const Events = OSjs.require('utils/events');\n    const WindowManager = OSjs.require('core/window-manager');\n    class WindowListEntry {\n        constructor(win, className) {\n            const el = document.createElement('li');\n            el.className = className;\n            el.title = win._title;\n            el.setAttribute('role', 'button');\n            el.setAttribute('aria-label', win._title);\n            const img = document.createElement('img');\n            img.alt = win._title;\n            img.src = win._icon;\n            const span = document.createElement('span');\n            span.appendChild(document.createTextNode(win._title));\n            el.appendChild(img);\n            el.appendChild(span);\n            Events.$bind(el, 'click', function () {\n                win._restore(false, true);\n            });\n            Events.$bind(el, 'contextmenu', function (ev) {\n                ev.preventDefault();\n                if (win) {\n                    win._onWindowIconClick(ev, this);\n                }\n                return false;\n            });\n            let peeking = false;\n            GUI.createDroppable(el, {\n                onDrop: function (ev, el) {\n                    if (win) {\n                        win._focus();\n                    }\n                },\n                onLeave: function () {\n                    if (peeking) {\n                        peeking = false;\n                    }\n                },\n                onEnter: function (ev, inst, args) {\n                    if (!peeking) {\n                        if (win) {\n                            win._focus();\n                        }\n                        peeking = true;\n                    }\n                },\n                onItemDropped: function (ev, el, item, args) {\n                    if (win) {\n                        return win._onDndEvent(ev, 'itemDrop', item, args);\n                    }\n                    return false;\n                },\n                onFilesDropped: function (ev, el, files, args) {\n                    if (win) {\n                        return win._onDndEvent(ev, 'filesDrop', files, args);\n                    }\n                    return false;\n                }\n            });\n            if (win._state.focused) {\n                el.className += ' Focused';\n            }\n            this.$element = el;\n            this.id = win._wid;\n        }\n        destroy() {\n            if (this.$element) {\n                Events.$unbind(this.$element, 'click');\n                Events.$unbind(this.$element, 'contextmenu');\n                this.$element = DOM.$remove(this.$element);\n            }\n        }\n        event(ev, win, parentEl) {\n            const cn = 'WindowList_Window_' + win._wid;\n            function _change(cn, callback) {\n                const els = parentEl.getElementsByClassName(cn);\n                if (els.length) {\n                    for (let i = 0, l = els.length; i < l; i++) {\n                        if (els[i] && els[i].parentNode) {\n                            callback(els[i]);\n                        }\n                    }\n                }\n            }\n            if (ev === 'focus') {\n                _change(cn, function (el) {\n                    el.className += ' Focused';\n                });\n            } else if (ev === 'blur') {\n                _change(cn, function (el) {\n                    el.className = el.className.replace(/\\s?Focused/, '');\n                });\n            } else if (ev === 'title') {\n                _change(cn, function (el) {\n                    el.setAttribute('aria-label', win._title);\n                    const span = el.getElementsByTagName('span')[0];\n                    if (span) {\n                        DOM.$empty(span);\n                        span.appendChild(document.createTextNode(win._title));\n                    }\n                    const img = el.getElementsByTagName('img')[0];\n                    if (img) {\n                        img.alt = win._title;\n                    }\n                });\n            } else if (ev === 'icon') {\n                _change(cn, function (el) {\n                    el.getElementsByTagName('img')[0].src = win._icon;\n                });\n            } else if (ev === 'attention_on') {\n                _change(cn, function (el) {\n                    if (!el.className.match(/Attention/)) {\n                        el.className += ' Attention';\n                    }\n                });\n            } else if (ev === 'attention_off') {\n                _change(cn, function (el) {\n                    if (!el.className.match(/Attention/)) {\n                        el.className = el.className.replace(/\\s?Attention/, '');\n                    }\n                });\n            } else if (ev === 'close') {\n                return false;\n            }\n            return true;\n        }\n    }\n    return class PanelItemWindowList extends PanelItem {\n        constructor() {\n            super('PanelItemWindowList corewm-panel-expand');\n            this.entries = [];\n        }\n        init() {\n            const root = super.init(...arguments);\n            const wm = WindowManager.instance;\n            if (wm) {\n                const wins = wm.getWindows();\n                for (let i = 0; i < wins.length; i++) {\n                    if (wins[i]) {\n                        this.update('create', wins[i]);\n                    }\n                }\n            }\n            return root;\n        }\n        destroy() {\n            this.entries.forEach(function (e) {\n                try {\n                    e.destroy();\n                } catch (e) {\n                }\n                e = null;\n            });\n            this.entries = [];\n            return super.destroy(...arguments);\n        }\n        update(ev, win) {\n            if (!this._$container || win && win._properties.allow_windowlist === false) {\n                return;\n            }\n            let entry = null;\n            if (ev === 'create') {\n                const className = 'corewm-panel-ellipsis WindowList_Window_' + win._wid;\n                if (this._$container.getElementsByClassName(className).length) {\n                    return;\n                }\n                entry = new WindowListEntry(win, className);\n                this.entries.push(entry);\n                this._$container.appendChild(entry.$element);\n            } else {\n                let found = -1;\n                this.entries.forEach(function (e, idx) {\n                    if (e.id === win._wid) {\n                        found = idx;\n                    }\n                    return found !== -1;\n                });\n                entry = this.entries[found];\n                if (entry) {\n                    if (entry.event(ev, win, this._$container) === false) {\n                        entry.destroy();\n                        this.entries.splice(found, 1);\n                    }\n                }\n            }\n        }\n    };\n});\ndefine('osjs-apps-corewm/scheme.html',[], function() { return \"<application-window data-id=\\\"ClockSettingsDialog\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\">\\r\\n      <gui-label>Time Format String:</gui-label>\\r\\n    </gui-vbox-container>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\" data-expand=\\\"true\\\">\\r\\n      <gui-text data-id=\\\"InputTimeFormatString\\\">H:i:s</gui-text>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\">\\r\\n      <gui-label>Tooltip Format String:</gui-label>\\r\\n    </gui-vbox-container>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\" data-expand=\\\"true\\\">\\r\\n      <gui-text data-id=\\\"InputTooltipFormatString\\\">l, j F Y</gui-text>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\">\\r\\n      <gui-label>Interval:</gui-label>\\r\\n    </gui-vbox-container>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\" data-expand=\\\"true\\\">\\r\\n      <gui-select data-id=\\\"InputInterval\\\">\\r\\n        <gui-select-option data-value=\\\"1000\\\">1 second</gui-select-option>\\r\\n        <gui-select-option data-value=\\\"60000\\\">1 minute</gui-select-option>\\r\\n        <gui-select-option data-value=\\\"3600000\\\">1 hour</gui-select-option>\\r\\n      </gui-select>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\">\\r\\n      <gui-label>UTC Time:</gui-label>\\r\\n    </gui-vbox-container>\\r\\n    <gui-vbox-container data-grow=\\\"1\\\" data-shrink=\\\"0\\\">\\r\\n      <gui-checkbox data-id=\\\"InputUseUTC\\\"></gui-checkbox>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\">\\r\\n          <gui-button data-id=\\\"ButtonApply\\\">Apply</gui-button>\\r\\n          <gui-button data-id=\\\"ButtonCancel\\\">Cancel</gui-button>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-window>\\r\\n\\r\\n<application-window data-id=\\\"IconViewShortcutDialog\\\">\\r\\n  <gui-vbox>\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"0\\\">\\r\\n      <gui-label>Launch:</gui-label>\\r\\n    </gui-vbox-container>\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"0\\\" data-expand=\\\"true\\\">\\r\\n      <gui-text data-id=\\\"InputShortcutLaunch\\\">ApplicationClassName</gui-text>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"0\\\">\\r\\n      <gui-label>Label:</gui-label>\\r\\n    </gui-vbox-container>\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"0\\\" data-expand=\\\"true\\\">\\r\\n      <gui-text data-id=\\\"InputShortcutLabel\\\"></gui-text>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"0\\\">\\r\\n      <gui-label>Launch arguments:</gui-label>\\r\\n    </gui-vbox-container>\\r\\n    <gui-vbox-container data-grow=\\\"0\\\" data-shrink=\\\"0\\\" data-expand=\\\"true\\\">\\r\\n      <gui-text data-id=\\\"InputTooltipFormatString\\\"></gui-text>\\r\\n    </gui-vbox-container>\\r\\n\\r\\n    <gui-vbox-container data-shrink=\\\"1\\\" data-align=\\\"end\\\">\\r\\n      <gui-hbox>\\r\\n        <gui-hbox-container data-grow=\\\"0\\\" data-shrink=\\\"1\\\">\\r\\n          <gui-button data-id=\\\"ButtonApply\\\">Apply</gui-button>\\r\\n          <gui-button data-id=\\\"ButtonCancel\\\">Cancel</gui-button>\\r\\n        </gui-hbox-container>\\r\\n      </gui-hbox>\\r\\n    </gui-vbox-container>\\r\\n  </gui-vbox>\\r\\n</application-window>\\r\\n\"; });\ndefine('osjs-apps-corewm/main',[\n    './locales',\n    './windowswitcher',\n    './iconview',\n    './panel',\n    './widgets/digitalclock',\n    './widgets/analogclock',\n    './panelitems/appmenu',\n    './panelitems/buttons',\n    './panelitems/clock',\n    './panelitems/notificationarea',\n    './panelitems/search',\n    './panelitems/weather',\n    './panelitems/windowlist',\n    './scheme.html'\n], function (Translations, WindowSwitcher, DesktopIconView, Panel, WidgetDigitalClock, WidgetAnalogClock, PanelItemAppMenu, PanelItemButtons, PanelItemClock, PanelItemNotificationArea, PanelItemSearch, PanelItemWeather, PanelItemWindowList, schemeHtml) {\n    'use strict';\n    const Menu = OSjs.require('gui/menu');\n    const Locales = OSjs.require('core/locales');\n    const GUIScheme = OSjs.require('gui/scheme');\n    const Config = OSjs.require('core/config');\n    const Authenticator = OSjs.require('core/authenticator');\n    const Application = OSjs.require('core/application');\n    const PackageManager = OSjs.require('core/package-manager');\n    const WindowManager = OSjs.require('core/window-manager');\n    const SettingsFragment = OSjs.require('helpers/settings-fragment');\n    const SettingsManager = OSjs.require('core/settings-manager');\n    const Events = OSjs.require('utils/events');\n    const Compability = OSjs.require('utils/compability');\n    const FileMetadata = OSjs.require('vfs/file');\n    const Notification = OSjs.require('gui/notification');\n    const Theme = OSjs.require('core/theme');\n    const DOM = OSjs.require('utils/dom');\n    const Colors = OSjs.require('utils/colors');\n    const Utils = OSjs.require('utils/misc');\n    const Init = OSjs.require('core/init');\n    const GUI = OSjs.require('utils/gui');\n    const VFS = OSjs.require('vfs/fs');\n    const FS = OSjs.require('utils/fs');\n    const ServiceNotificationIcon = OSjs.require('helpers/service-notification-icon');\n    const PADDING_PANEL_AUTOHIDE = 10;\n    function defaultSettings(defaults) {\n        const compability = Compability.getCompability();\n        let cfg = {\n            animations: compability.css.animation,\n            useTouchMenu: compability.touch\n        };\n        if (defaults) {\n            cfg = Utils.mergeObject(cfg, defaults);\n        }\n        return cfg;\n    }\n    const translate = Locales.createLocalizer(Translations);\n    class CoreWM extends WindowManager {\n        constructor(args, metadata) {\n            const importSettings = args.defaults || {};\n            super('CoreWM', args, metadata, defaultSettings(importSettings));\n            this.panels = [];\n            this.widgets = [];\n            this.switcher = null;\n            this.iconView = null;\n            this.importedSettings = Utils.mergeObject(Config.getConfig('SettingsManager.CoreWM'), importSettings);\n            this._scheme = GUIScheme.fromString(schemeHtml);\n            this.generatedHotkeyMap = {};\n            function _winGenericHotkey(ev, win, wm, hotkey) {\n                if (win) {\n                    win._onKeyEvent(ev, 'keydown', hotkey);\n                }\n            }\n            this.hotkeyMap = {\n                SEARCH: function (ev, win, wm) {\n                    if (wm) {\n                        const panel = wm.getPanel();\n                        if (panel) {\n                            const pitem = panel.getItemByType(OSjs.Applications.CoreWM.PanelItems.Search);\n                            if (pitem) {\n                                ev.preventDefault();\n                                pitem.show();\n                            }\n                        }\n                    }\n                },\n                SWITCHER: function (ev, win, wm) {\n                    if (wm.getSetting('enableSwitcher') && wm.switcher) {\n                        wm.switcher.show(ev, win, wm);\n                    }\n                },\n                WINDOW_MINIMIZE: function (ev, win) {\n                    if (win) {\n                        win._minimize();\n                    }\n                },\n                WINDOW_MAXIMIZE: function (ev, win) {\n                    if (win) {\n                        win._maximize();\n                    }\n                },\n                WINDOW_RESTORE: function (ev, win) {\n                    if (win) {\n                        win._restore();\n                    }\n                },\n                WINDOW_MOVE_LEFT: function (ev, win) {\n                    if (win) {\n                        win._moveTo('left');\n                    }\n                },\n                WINDOW_MOVE_RIGHT: function (ev, win) {\n                    if (win) {\n                        win._moveTo('right');\n                    }\n                },\n                WINDOW_MOVE_UP: function (ev, win) {\n                    if (win) {\n                        win._moveTo('top');\n                    }\n                },\n                WINDOW_MOVE_DOWN: function (ev, win) {\n                    if (win) {\n                        win._moveTo('bottom');\n                    }\n                },\n                SAVE: _winGenericHotkey,\n                SAVEAS: _winGenericHotkey,\n                OPEN: _winGenericHotkey\n            };\n            Theme.update(this.importedSettings);\n        }\n        setup() {\n            const initNotifications = () => {\n                ServiceNotificationIcon.init();\n                const user = Authenticator.instance.getUser();\n                const displayMenu = ev => {\n                    Menu.create([{\n                            title: Locales._('TITLE_SIGN_OUT'),\n                            onClick: function () {\n                                Init.logout();\n                            }\n                        }], ev);\n                    return false;\n                };\n                const toggleFullscreen = () => {\n                    const docElm = document.documentElement;\n                    const notif = Notification.getIcon('_FullscreenNotification');\n                    if (notif) {\n                        this.toggleFullscreen(notif.opts._isFullscreen ? document : docElm, !notif.opts._isFullscreen);\n                    }\n                };\n                const displayDevMenu = ev => {\n                    const don = DOM.$hasClass(document.body, 'debug');\n                    const apps = Application.getProcesses().filter(function (iter) {\n                        return iter !== null && iter instanceof Application;\n                    }).map(function (iter) {\n                        return {\n                            title: iter.__label + ' (pid:' + iter.__pid + ')',\n                            onClick: function () {\n                                Application.reload(iter.__pid);\n                            }\n                        };\n                    });\n                    const mnu = [\n                        {\n                            title: don ? 'Turn off debug overlay' : 'Turn on debug overlay',\n                            onClick: function () {\n                                if (don) {\n                                    DOM.$removeClass(document.body, 'debug');\n                                } else {\n                                    DOM.$addClass(document.body, 'debug');\n                                }\n                            }\n                        },\n                        {\n                            title: 'Reload manifest',\n                            onClick: function () {\n                                PackageManager.init();\n                            }\n                        },\n                        {\n                            title: 'Reload running application',\n                            menu: apps\n                        }\n                    ];\n                    Menu.create(mnu, ev);\n                };\n                if (Config.getConfig('Debug')) {\n                    Notification.createIcon('_DeveloperNotification', {\n                        icon: Theme.getIcon('categories/applications-development.png', '16x16'),\n                        title: 'Developer Tools',\n                        onContextMenu: displayDevMenu,\n                        onClick: displayDevMenu\n                    });\n                }\n                if (this.getSetting('fullscreen')) {\n                    Notification.createIcon('_FullscreenNotification', {\n                        icon: Theme.getIcon('actions/view-fullscreen.png', '16x16'),\n                        title: 'Enter fullscreen',\n                        onClick: toggleFullscreen,\n                        _isFullscreen: false\n                    });\n                }\n                Notification.createIcon('_HandlerUserNotification', {\n                    icon: Theme.getIcon('status/avatar-default.png', '16x16'),\n                    title: Locales._('TITLE_SIGNED_IN_AS_FMT', user.username),\n                    onContextMenu: displayMenu,\n                    onClick: displayMenu\n                });\n            };\n            this.applySettings(this._settings.get());\n            try {\n                VFS.watch(new FileMetadata(this.getSetting('desktopPath'), 'dir'), (msg, obj) => {\n                    if (!obj || msg.match(/^vfs:(un)?mount/)) {\n                        return;\n                    }\n                    if (this.iconView) {\n                        this.iconView._refresh();\n                    }\n                });\n            } catch (e) {\n                console.warn('Failed to apply CoreWM VFS watch', e, e.stack);\n            }\n            this.initSwitcher();\n            this.initDesktop();\n            this.initPanels();\n            this.initWidgets();\n            this.initIconView();\n            initNotifications();\n            return Promise.resolve();\n        }\n        destroy(force) {\n            if (!force && !window.confirm(translate('Killing this process will stop things from working!'))) {\n                return false;\n            }\n            ServiceNotificationIcon.destroy();\n            try {\n                Events.$unbind(document.body, 'dragenter, dragleave, dragover, drop');\n                Notification.destroyIcon('_HandlerUserNotification');\n                if (this.iconView) {\n                    this.iconView.destroy();\n                }\n                if (this.switcher) {\n                    this.switcher.destroy();\n                }\n                this.destroyPanels();\n                this.destroyWidgets();\n                const settings = this.importedSettings;\n                try {\n                    settings.background = 'color';\n                } catch (e) {\n                }\n            } catch (e) {\n                console.warn(e);\n                return false;\n            }\n            this.switcher = null;\n            this.iconView = null;\n            return super.destroy(...arguments);\n        }\n        destroyPanels() {\n            this.panels.forEach(function (p) {\n                p.destroy();\n            });\n            this.panels = [];\n        }\n        destroyWidgets() {\n            this.widgets.forEach(function (w) {\n                w.destroy();\n            });\n            this.widgets = [];\n        }\n        initSwitcher() {\n            this.switcher = new WindowSwitcher();\n        }\n        initDesktop() {\n            GUI.createDroppable(document.body, {\n                onOver: (ev, el, args) => this.onDropOver(ev, el, args),\n                onLeave: () => this.onDropLeave(),\n                onDrop: () => this.onDrop(),\n                onItemDropped: (ev, el, item, args) => this.onDropItem(ev, el, item, args),\n                onFilesDropped: (ev, el, files, args) => this.onDropFile(ev, el, files, args)\n            });\n        }\n        initPanels(applySettings) {\n            const ps = this.getSetting('panels');\n            let added = false;\n            if (ps === false) {\n                added = true;\n            } else {\n                this.destroyPanels();\n                (ps || []).forEach(storedItem => {\n                    if (!storedItem.options) {\n                        storedItem.options = {};\n                    }\n                    const panelSettings = new SettingsFragment(storedItem.options, 'CoreWM', SettingsManager);\n                    const p = new Panel('Default', panelSettings, this);\n                    p.init(document.body);\n                    (storedItem.items || []).forEach(iter => {\n                        try {\n                            if (typeof iter.settings === 'undefined' || iter.settings === null) {\n                                iter.settings = {};\n                            }\n                            let itemSettings = {};\n                            try {\n                                itemSettings = new SettingsFragment(iter.settings, 'CoreWM', SettingsManager);\n                            } catch (ex) {\n                                console.warn('An error occured while loading PanelItem settings', ex);\n                                console.warn('stack', ex.stack);\n                            }\n                            p.addItem(new OSjs.Applications.CoreWM.PanelItems[iter.name](itemSettings));\n                            added = true;\n                        } catch (e) {\n                            console.warn('An error occured while creating PanelItem', e);\n                            console.warn('stack', e.stack);\n                            Notification.create({\n                                icon: Theme.getIcon('status/dialog-warning.png', '32x32'),\n                                title: 'CoreWM',\n                                message: translate('An error occured while creating PanelItem: {0}', e)\n                            });\n                        }\n                    });\n                    this.panels.push(p);\n                });\n            }\n            if (!added) {\n                Notification.create({\n                    timeout: 0,\n                    icon: Theme.getIcon('status/dialog-warning.png', '32x32'),\n                    title: 'CoreWM',\n                    message: translate('Your panel has no items. Go to settings to reset default or modify manually\\n(This error may occur after upgrades of OS.js)')\n                });\n            }\n            if (applySettings) {\n                const p = this.panels[0];\n                if (p && p.getOntop() && p.getPosition('top')) {\n                    setTimeout(() => {\n                        const space = this.getWindowSpace();\n                        this._windows.forEach(function (iter) {\n                            if (iter && iter._position.y < space.top) {\n                                console.warn('CoreWM::initPanels()', 'I moved this window because it overlapped with a panel!', iter);\n                                iter._move(iter._position.x, space.top);\n                            }\n                        });\n                    }, 800);\n                }\n                if (this.iconView) {\n                    this.iconView.resize(this);\n                }\n            }\n            setTimeout(() => {\n                this.setStyles(this._settings.get());\n            }, 250);\n        }\n        initWidgets(applySettings) {\n            this.destroyWidgets();\n            const widgets = this.getSetting('widgets');\n            (widgets || []).forEach(item => {\n                if (!item.settings) {\n                    item.settings = {};\n                }\n                const settings = new SettingsFragment(item.settings, 'CoreWM', SettingsManager);\n                try {\n                    const w = new OSjs.Applications.CoreWM.Widgets[item.name](settings);\n                    w.init(document.body);\n                    this.widgets.push(w);\n                    w._inited();\n                } catch (e) {\n                    console.warn('CoreWM::initWidgets()', e, e.stack);\n                }\n            });\n        }\n        initIconView() {\n            const en = this.getSetting('enableIconView');\n            if (!en && this.iconView) {\n                this.iconView.destroy();\n                this.iconView = null;\n                return;\n            }\n            if (en && !this.iconView) {\n                this.iconView = new DesktopIconView(this);\n                document.body.appendChild(this.iconView.getRoot());\n            }\n            setTimeout(() => {\n                if (this.iconView) {\n                    this.iconView.resize(this);\n                }\n            }, 280);\n        }\n        resize(ev, rect, wasInited) {\n            super.resize(...arguments);\n            const space = this.getWindowSpace();\n            const margin = this.getSetting('desktopMargin');\n            const windows = this._windows;\n            function moveIntoView() {\n                let i = 0, l = windows.length, iter, wrect;\n                let mx, my, moved;\n                for (i; i < l; i++) {\n                    iter = windows[i];\n                    if (!iter) {\n                        continue;\n                    }\n                    wrect = iter._getViewRect();\n                    if (wrect === null || iter._state.mimimized) {\n                        continue;\n                    }\n                    mx = iter._position.x;\n                    my = iter._position.y;\n                    moved = false;\n                    if (wrect.left + margin > rect.width) {\n                        mx = space.width - iter._dimension.w;\n                        moved = true;\n                    }\n                    if (wrect.top + margin > rect.height) {\n                        my = space.height - iter._dimension.h;\n                        moved = true;\n                    }\n                    if (moved) {\n                        if (mx < space.left) {\n                            mx = space.left;\n                        }\n                        if (my < space.top) {\n                            my = space.top;\n                        }\n                        iter._move(mx, my);\n                    }\n                    if (iter._state.maximized && (wasInited ? iter._restored : true)) {\n                        iter._restore(true, false);\n                    }\n                }\n            }\n            if (!this._isResponsive) {\n                if (this.getSetting('moveOnResize')) {\n                    moveIntoView();\n                }\n            }\n        }\n        onDropLeave() {\n            document.body.setAttribute('data-attention', 'false');\n        }\n        onDropOver() {\n            document.body.setAttribute('data-attention', 'true');\n        }\n        onDrop() {\n            document.body.setAttribute('data-attention', 'false');\n        }\n        onDropItem(ev, el, item, args) {\n            document.body.setAttribute('data-attention', 'false');\n            const _applyWallpaper = data => {\n                this.applySettings({ wallpaper: data.path }, false, true);\n            };\n            const _createShortcut = data => {\n                if (this.iconView) {\n                    this.iconView.addShortcut(data, this, true);\n                }\n            };\n            const _openMenu = data => {\n                Menu.create([\n                    {\n                        title: translate('LBL_COPY'),\n                        onClick: () => {\n                            const dst = FS.pathJoin(this.getSetting('desktopPath'), data.filename);\n                            VFS.copy(data, dst);\n                        }\n                    },\n                    {\n                        title: translate('Set as wallpaper'),\n                        onClick: () => {\n                            _applyWallpaper(data);\n                        }\n                    }\n                ], ev);\n            };\n            if (item) {\n                const data = item.data;\n                if (item.type === 'file') {\n                    if (data && data.mime) {\n                        if (data.mime.match(/^image/)) {\n                            if (this.iconView) {\n                                _openMenu(data);\n                            } else {\n                                _applyWallpaper(data);\n                            }\n                        } else {\n                            _createShortcut(data);\n                        }\n                    }\n                } else if (item.type === 'application') {\n                    _createShortcut(data);\n                }\n            }\n        }\n        onDropFile(ev, el, files, args) {\n            VFS.upload({\n                destination: 'desktop:///',\n                files: files\n            });\n        }\n        onContextMenu(ev) {\n            if (ev.target === document.body) {\n                ev.preventDefault();\n                this.openDesktopMenu(ev);\n                return false;\n            }\n            return true;\n        }\n        onKeyUp(ev, win) {\n            if (!ev) {\n                return;\n            }\n            if (!ev.altKey) {\n                if (this.switcher) {\n                    this.switcher.hide(ev, win, this);\n                }\n            }\n        }\n        onKeyDown(ev, win) {\n            let combination = false;\n            if (ev) {\n                const map = this.generatedHotkeyMap;\n                Object.keys(map).some(i => {\n                    if (Events.keyCombination(ev, i)) {\n                        map[i](ev, win, this);\n                        combination = i;\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return combination;\n        }\n        showSettings(category) {\n            Application.create('ApplicationSettings', { category: category });\n        }\n        eventWindow(ev, win) {\n            this.panels.forEach(function (panel) {\n                if (panel) {\n                    const panelItem = panel.getItem(OSjs.Applications.CoreWM.PanelItems.WindowList);\n                    if (panelItem) {\n                        panelItem.update(ev, win);\n                    }\n                }\n            });\n            if (ev === 'focus') {\n                if (this.iconView) {\n                    this.iconView.blur();\n                    this.widgets.forEach(function (w) {\n                        w.blur();\n                    });\n                }\n            }\n        }\n        getNotificationArea() {\n            const panelId = 0;\n            const panel = this.panels[panelId];\n            if (panel) {\n                return panel.getItem(OSjs.Applications.CoreWM.PanelItems.NotificationArea);\n            }\n            return null;\n        }\n        _getContextMenu(arg) {\n            let menu = [];\n            if (this.iconView) {\n                menu = this.iconView._getContextMenu(arg);\n            }\n            menu.push({\n                title: translate('Open settings'),\n                onClick: () => this.showSettings()\n            });\n            if (this.getSetting('enableIconView') === true) {\n                menu.push({\n                    title: translate('Hide Icons'),\n                    onClick: ev => {\n                        this.applySettings({ enableIconView: false }, false, true);\n                    }\n                });\n            } else {\n                menu.push({\n                    title: translate('Show Icons'),\n                    onClick: ev => {\n                        this.applySettings({ enableIconView: true }, false, true);\n                    }\n                });\n            }\n            return menu;\n        }\n        openDesktopMenu(ev) {\n            if (this._emit('wm:contextmenu', [\n                    ev,\n                    this\n                ]) === false) {\n                return;\n            }\n            const menu = this._getContextMenu();\n            Menu.create(menu, ev);\n        }\n        applySettings(settings, force, save, triggerWatch) {\n            console.group('CoreWM::applySettings()');\n            settings = force ? settings : Utils.mergeObject(this._settings.get(), settings);\n            console.log(settings);\n            Theme.update(settings, true);\n            this.setIconView(settings);\n            this.setStyles(settings);\n            if (save) {\n                this.initPanels(true);\n                this.initWidgets(true);\n                if (settings && save === true) {\n                    if (settings.language) {\n                        SettingsManager.set('Core', 'Locale', settings.language, triggerWatch);\n                        Locales.setLocale(settings.language);\n                    }\n                    this._settings.set(null, settings, save, triggerWatch);\n                }\n            }\n            this.generatedHotkeyMap = {};\n            const keys = this._settings.get('hotkeys');\n            const self = this;\n            Object.keys(keys).forEach(k => {\n                this.generatedHotkeyMap[keys[k]] = function () {\n                    const args = Array.prototype.slice.call(arguments);\n                    args.push(k);\n                    return self.hotkeyMap[k].apply(this, args);\n                };\n            });\n            console.groupEnd();\n            return true;\n        }\n        setIconView(settings) {\n            if (settings.enableIconView) {\n                this.initIconView();\n            } else {\n                if (this.iconView) {\n                    this.iconView.destroy();\n                    this.iconView = null;\n                }\n            }\n        }\n        setStyles(settings) {\n            let styles = {};\n            let raw = '';\n            if (settings.panels) {\n                settings.panels.forEach(function (p, i) {\n                    styles['corewm-panel'] = {};\n                    styles['corewm-notification'] = {};\n                    styles['corewm-notification:before'] = { 'opacity': p.options.opacity / 100 };\n                    styles['corewm-panel:before'] = { 'opacity': p.options.opacity / 100 };\n                    styles['.custom-notification'] = {};\n                    styles['.custom-notification:before'] = { 'opacity': p.options.opacity / 100 };\n                    if (p.options.background) {\n                        styles['corewm-panel:before']['background-color'] = p.options.background;\n                        styles['corewm-notification:before']['background-color'] = p.options.background;\n                        styles['.custom-notification:before']['background-color'] = p.options.background;\n                    }\n                    if (p.options.foreground) {\n                        styles['corewm-panel']['color'] = p.options.foreground;\n                        styles['corewm-notification']['color'] = p.options.foreground;\n                        styles['.custom-notification']['color'] = p.options.foreground;\n                    }\n                });\n            }\n            let mw = this.getDefaultSetting('fullscreenTrigger') || 800;\n            raw += '@media all and (max-width: ' + String(mw) + 'px) {\\n';\n            raw += 'application-window {\\n';\n            let borderSize = 0;\n            const space = this.getWindowSpace(true);\n            const theme = Theme.getStyleTheme(true);\n            if (theme && theme.style && theme.style.window) {\n                borderSize = theme.style.window.border;\n            }\n            raw += 'top: calc(' + String(space.top) + 'px + ' + borderSize + ') !important;\\n';\n            raw += 'left: calc(' + String(space.left) + 'px + ' + borderSize + ') !important;\\n';\n            raw += 'right: calc(' + String(borderSize) + ') !important;\\n';\n            raw += 'bottom: calc(' + (space.bottom ? String(space.bottom) + 'px + ' : '') + borderSize + ') !important;\\n';\n            raw += '\\n}';\n            raw += '\\n}';\n            styles['#CoreWMDesktopIconView'] = {};\n            if (settings.invertIconViewColor && settings.backgroundColor) {\n                styles['#CoreWMDesktopIconView']['color'] = Colors.invertHEX(settings.backgroundColor);\n            }\n            if (Object.keys(styles).length) {\n                this.createStylesheet(styles, raw);\n            }\n        }\n        getWindowSpace(noMargin) {\n            const s = super.getWindowSpace(...arguments);\n            const d = this.getSetting('desktopMargin');\n            s.bottom = 0;\n            this.panels.forEach(function (p) {\n                if (p && p.getOntop()) {\n                    const ph = p.getHeight();\n                    if (p.getAutohide() && p.isAutoHidden()) {\n                        s.top += PADDING_PANEL_AUTOHIDE;\n                        s.height -= PADDING_PANEL_AUTOHIDE;\n                    } else if (p.getPosition('top')) {\n                        s.top += ph;\n                        s.height -= ph;\n                    } else {\n                        s.height -= ph;\n                    }\n                    if (p._options.get('position') === 'bottom') {\n                        s.bottom += ph;\n                    }\n                }\n            });\n            if (!noMargin) {\n                if (d > 0) {\n                    s.top += d;\n                    s.left += d;\n                    s.width -= d * 2;\n                    s.height -= d * 2;\n                }\n            }\n            return s;\n        }\n        getWindowPosition(borders) {\n            borders = typeof borders === 'undefined' || borders === true;\n            let pos = super.getWindowPosition(...arguments);\n            const m = borders ? this.getSetting('desktopMargin') : 0;\n            pos.x += m || 0;\n            pos.y += m || 0;\n            this.panels.forEach(function (p) {\n                if (p && p.getOntop() && p.getPosition('top')) {\n                    if (p.getAutohide()) {\n                        pos.y += PADDING_PANEL_AUTOHIDE;\n                    } else {\n                        pos.y += p.getHeight();\n                    }\n                }\n            });\n            return pos;\n        }\n        getSetting(k) {\n            const val = super.getSetting(...arguments);\n            if (typeof val === 'undefined' || val === null) {\n                return defaultSettings(this.importedSettings)[k];\n            }\n            return val;\n        }\n        getDefaultSetting(k) {\n            const settings = defaultSettings(this.importedSettings);\n            if (typeof k !== 'undefined') {\n                return settings[k];\n            }\n            return settings;\n        }\n        getPanels() {\n            return this.panels;\n        }\n        getPanel(idx) {\n            return this.panels[idx || 0];\n        }\n        static get Widgets() {\n            return {\n                DigitalClock: WidgetDigitalClock,\n                AnalogClock: WidgetAnalogClock\n            };\n        }\n        static get PanelItems() {\n            return {\n                AppMenu: PanelItemAppMenu,\n                Buttons: PanelItemButtons,\n                Clock: PanelItemClock,\n                NotificationArea: PanelItemNotificationArea,\n                Search: PanelItemSearch,\n                Weather: PanelItemWeather,\n                WindowList: PanelItemWindowList\n            };\n        }\n    }\n    OSjs.Applications.CoreWM = CoreWM;\n});\ndefine('osjs-apps-corewm', ['osjs-apps-corewm/main'], function (main) { return main; });\n\n"]}